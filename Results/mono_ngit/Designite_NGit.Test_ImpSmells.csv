Implementation smell,Namespace,Class,File,Method,Description
Long Method,NGit.Api,HugeFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\HugeFileTest.cs,TestAddHugeFile,The method has 130 lines of code.
Complex Method,NGit,RacyGitTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RacyGitTests.cs,TestIterator,Cyclomatic complexity of the method is 12
Complex Method,NGit,RepositoryTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RepositoryTestCase.cs,IndexState,Cyclomatic complexity of the method is 12
Complex Method,NGit.Junit,LocalDiskRepositoryTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\LocalDiskRepositoryTestCase.cs,RecursiveDelete,Cyclomatic complexity of the method is 9
Complex Method,NGit.Junit,TestRepository<R>,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRepository.cs,Fsck,Cyclomatic complexity of the method is 8
Complex Method,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestALot,Cyclomatic complexity of the method is 14
Long Parameter List,NGit.Api,AddCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\AddCommandTest.cs,AddEntryToBuilder,The method has 5 parameters. Parameters: path' file' newObjectInserter' builder' stage
Long Parameter List,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,CreateBranch,The method has 5 parameters. Parameters: actGit' name' force' startPoint' mode
Long Parameter List,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,MakeDiffHeaderModeChange,The method has 6 parameters. Parameters: pathA' pathB' aId' bId' modeA' modeB
Long Parameter List,NGit.Dircache,DirCacheCGitCompatabilityTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,AssertV3TreeEntry,The method has 5 parameters. Parameters: indexPosition' path' skipWorkTree' intentToAdd' dc
Long Parameter List,NGit.Fnmatch,FileNameMatcherTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Fnmatch\FileNameMatcherTest.cs,AssertFileNameMatch,The method has 5 parameters. Parameters: pattern' input' excludedCharacter' matchExpected' appendCanMatchExpected
Long Parameter List,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The method has 5 parameters. Parameters: len' a' b' c' d
Long Parameter List,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,B,The method has 8 parameters. Parameters: a' b' c' d' e' f' g' h
Long Parameter List,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The method has 9 parameters. Parameters: len' a' b' c' d' e' f' g' h
Long Identifier,NGit.Revplot,PlotCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revplot\PlotCommitListTest.cs,TestEgitHistory,The length of the parameter merge_changeset_implementation is 30.
Long Statement,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,Test009_readNamesInSection,The length of the statement  "			NUnit.Framework.Assert.IsTrue(names.Contains("repositoryFormatVersion")' "Core section should contain \"repositoryFormatVersion\""" is 130.
Long Statement,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,Test009_readNamesInSection,The length of the statement  "			NUnit.Framework.Assert.IsTrue(names.Contains("repositoryformatversion")' "Core section should contain \"repositoryformatversion\""" is 130.
Long Statement,NGit,DirCacheCheckoutTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\DirCacheCheckoutTest.cs,TestResetHard,The length of the statement  "			NUnit.Framework.Assert.AreEqual("[D/g' mode:100644' stage:1][D/g' mode:100644' stage:3][E/h' mode:100644][G/i' mode:100644][f' mode:100644' stage:1][f' mode:100644' stage:2][f' mode:100644' stage:3]"" is 199.
Long Statement,NGit,MergeHeadMsgTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\MergeHeadMsgTest.cs,TestReadWriteMergeHeads,The length of the statement  "			NUnit.Framework.Assert.AreEqual(Read(new FilePath(db.Directory' "MERGE_HEAD"))' "0000000000000000000000000000000000000000\n1c6db447abdbb291b25f07be38ea0b1bf94947c5\n"" is 166.
Long Statement,NGit,MergeHeadMsgTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\MergeHeadMsgTest.cs,TestReadWriteMergeHeads,The length of the statement  "				fos.Write(Sharpen.Runtime.GetBytesForString("0000000000000000000000000000000000000000\n1c6db447abdbb291b25f07be38ea0b1bf94947c5\n"" is 130.
Long Statement,NGit.Api,AddCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\AddCommandTest.cs,TestAddFolder,The length of the statement  "			NUnit.Framework.Assert.AreEqual("[sub/a.txt' mode:100644' content:content]" + "[sub/b.txt' mode:100644' content:content b]"" is 123.
Long Statement,NGit.Api,AddCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\AddCommandTest.cs,TestAddWholeRepo,The length of the statement  "			NUnit.Framework.Assert.AreEqual("[sub/a.txt' mode:100644' content:content]" + "[sub/b.txt' mode:100644' content:content b]"" is 123.
Long Statement,NGit.Api,AddCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\AddCommandTest.cs,TestAddWithoutParameterUpdate,The length of the statement  "			NUnit.Framework.Assert.AreEqual("[sub/a.txt' mode:100644' content:content]" + "[sub/b.txt' mode:100644' content:content b]"" is 123.
Long Statement,NGit.Api,AddCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\AddCommandTest.cs,TestAddWithParameterUpdate,The length of the statement  "			NUnit.Framework.Assert.AreEqual("[sub/a.txt' mode:100644' content:content]" + "[sub/b.txt' mode:100644' content:content b]"" is 123.
Long Statement,NGit.Api,AddCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\AddCommandTest.cs,TestAssumeUnchanged,The length of the statement  "			NUnit.Framework.Assert.AreEqual("[a.txt' mode:100644' content:content' " + "assume-unchanged:false][b.txt' mode:100644' "" is 121.
Long Statement,NGit.Api,AddCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\AddCommandTest.cs,TestAssumeUnchanged,The length of the statement  "			NUnit.Framework.Assert.AreEqual("[a.txt' mode:100644' content:more content'" + " assume-unchanged:false][b.txt' mode:100644'"" is 125.
Long Statement,NGit.Api,MergeCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\MergeCommandTest.cs,TestContentMerge,The length of the statement  "			NUnit.Framework.Assert.AreEqual("1\n<<<<<<< HEAD\na(main)\n=======\na(side)\n>>>>>>> 86503e7e397465588cc267b65d778538bffccb83\n3\n"" is 131.
Long Statement,NGit.Api,MergeCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\MergeCommandTest.cs,TestMergeNonVersionedPaths,The length of the statement  "			NUnit.Framework.Assert.AreEqual("1\n<<<<<<< HEAD\na(main)\n=======\na(side)\n>>>>>>> 86503e7e397465588cc267b65d778538bffccb83\n3\n"" is 131.
Long Statement,NGit.Api,MergeCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\MergeCommandTest.cs,TestDeletionAndConflict,The length of the statement  "			NUnit.Framework.Assert.AreEqual("1\na\n<<<<<<< HEAD\n3(main)\n=======\n3(side)\n>>>>>>> 54ffed45d62d252715fc20e41da92d44c48fb0ff\n"" is 131.
Long Statement,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestStopOnConflict,The length of the statement  "			CheckFile(FILE1' "<<<<<<< Upstream' based on master\n1master\n=======\n1topic"' ">>>>>>> e0d1dea change file1 in topic\n2\n3\ntopic4"" is 133.
Long Statement,NGit.Api,PullCommandWithRebaseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\PullCommandWithRebaseTest.cs,TestPullConflict,The length of the statement  "			string result = "<<<<<<< Upstream' based on branch 'master' of " + remoteUri + "\nSource change\n=======\nTarget change\n>>>>>>> 42453fd Target change in local\n";" is 163.
Long Statement,NGit.Api,HugeFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\HugeFileTest.cs,TestAddHugeFile,The length of the statement  "			NUnit.Framework.Assert.AreEqual("[a.txt' mode:100644' length:-865782272' sha1:59b3282f8f59f22d953df956ad3511bf2dc660fd]"" is 120.
Long Statement,NGit.Api,HugeFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\HugeFileTest.cs,TestAddHugeFile,The length of the statement  "			NUnit.Framework.Assert.AreEqual("[a.txt' mode:100644' length:-865782272' sha1:59b3282f8f59f22d953df956ad3511bf2dc660fd]"" is 120.
Long Statement,NGit.Dircache,DirCacheCGitCompatabilityTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,TestReadIndex_DirCacheTree,The length of the statement  "			AList<DirCacheCGitCompatabilityTest.CGitLsTreeRecord> subtrees = new AList<DirCacheCGitCompatabilityTest.CGitLsTreeRecord" is 121.
Long Statement,NGit.Merge,ResolveMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Merge\ResolveMergerTest.cs,CheckMergeConflictingTreesWithoutIndex,The length of the statement  "			NUnit.Framework.Assert.AreEqual("[d/1' mode:100644' stage:1' content:orig][d/1' mode:100644' stage:2' content:side][d/1' mode:100644' stage:3' content:master]"" is 159.
Long Statement,NGit.Merge,ResolveMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Merge\ResolveMergerTest.cs,CheckMergeConflictingNewTrees,The length of the statement  "			NUnit.Framework.Assert.AreEqual("[2' mode:100644' content:orig][d/1' mode:100644' stage:2' content:side][d/1' mode:100644' stage:3' content:master]"" is 148.
Long Statement,NGit.Merge,ResolveMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Merge\ResolveMergerTest.cs,CheckForCorrectIndex,The length of the statement  "				 + "[2' mode:100644' content:1master\n2\n3side\n]" + "[3' mode:100644' stage:1' content:orig][3' mode:100644' stage:2' content:side][3' mode:100644' stage:3' content:master]"" is 173.
Long Statement,NGit.Revwalk,RevCommitParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitParseTest.cs,TestParse_GitStyleMessage,The length of the statement  "			string body = "We do it with magic and pixie dust and stuff.\n" + "\n" + "Signed-off-by: A U. Thor <author@example.com>\n";" is 123.
Long Statement,NGit.Revwalk,RevTagParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevTagParseTest.cs,TestParse_GitStyleMessage,The length of the statement  "			string body = "We do it with magic and pixie dust and stuff.\n" + "\n" + "Signed-off-by: A U. Thor <author@example.com>\n";" is 123.
Long Statement,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestReadTwoLine,The length of the statement  "			NUnit.Framework.Assert.AreEqual("rebase finished: refs/heads/rr/renamebranch5 onto c6e3b9fe2da0293f11eae202ec35fb343191a82d"" is 124.
Long Statement,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestReadWhileAppendIsInProgress,The length of the statement  "			NUnit.Framework.Assert.AreEqual("rebase finished: refs/heads/rr/renamebranch5 onto c6e3b9fe2da0293f11eae202ec35fb343191a82d"" is 124.
Long Statement,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestSpecificEntryNumber,The length of the statement  "			NUnit.Framework.Assert.AreEqual("rebase finished: refs/heads/rr/renamebranch5 onto c6e3b9fe2da0293f11eae202ec35fb343191a82d"" is 124.
Long Statement,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test006_ReadUglyConfig,The length of the statement  "			string configStr = "  [core];comment\n\tfilemode = yes\n" + "[user]\n" + "  email = A U Thor <thor@example.com> # Just an example...\n"" is 135.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestHasChangeid,The length of the statement  "			NUnit.Framework.Assert.AreEqual("has changeid\n\nBug: 33\nmore text\nSigned-off-by: me@you.too\nChange-Id: I0123456789012345678901234567890123456789\nAnd then some\n"" is 166.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestHasChangeid,The length of the statement  "				' Call("has changeid\n\nBug: 33\nmore text\nSigned-off-by: me@you.too\nChange-Id: I0123456789012345678901234567890123456789\nAnd then some\n"" is 141.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestHasChangeidWithReplacement,The length of the statement  "			NUnit.Framework.Assert.AreEqual("has changeid\n\nBug: 33\nmore text\nSigned-off-by: me@you.too\nChange-Id: I988d2d7a6f2c0578fccabd4ebd3cec0768bc7f9f\nAnd then some\n"" is 166.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestHasChangeidWithReplacement,The length of the statement  "				' Call("has changeid\n\nBug: 33\nmore text\nSigned-off-by: me@you.too\nChange-Id: I0123456789012345678901234567890123456789\nAnd then some\n"" is 141.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestATwoLines,The length of the statement  "			NUnit.Framework.Assert.AreEqual("a two lines\nwith text withour break after subject line\n\nChange-Id: I549a0fed3d69b7876c54b4f5a35637135fd43fac\n"" is 147.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestRegularCommit,The length of the statement  "			NUnit.Framework.Assert.AreEqual("regular commit\n\nwith header and body\n\nChange-Id: I62d8749d3c3a888c11e3fadc3924220a19389766\n"" is 130.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestRegularCommitWithSob_ButNoBody,The length of the statement  "			NUnit.Framework.Assert.AreEqual("regular commit with sob' but no body\n\nChange-Id: I0f0b4307e9944ecbd5a9f6b9489e25cfaede43c4\nSigned-off-by: me@you.too\n"" is 155.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestACommitWithBug_SubButNoBody,The length of the statement  "			NUnit.Framework.Assert.AreEqual("a commit with bug' sub but no body\n\nBug: 33\nChange-Id: I337e264868613dab6d1e11a34f394db369487412\nSigned-off-by: me@you.too\n"" is 162.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestACommitWithSubject_NoBodySobAndBug,The length of the statement  "			NUnit.Framework.Assert.AreEqual("a commit with subject' no body sob and bug\n\nChange-Id: Ib3616d4bf77707a3215a6cb0602c004ee119a445\nSigned-off-by: me@you.too\nBug: 33\n"" is 170.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestACommitWithSubjectBug_NonFooterLineAndSob,The length of the statement  "			NUnit.Framework.Assert.AreEqual("a commit with subject bug' non-footer line and sob\n\nBug: 33\nmore text\nSigned-off-by: me@you.too\n\nChange-Id: Ia8500eab2304e6e5eac6ae488ff44d5d850d118a\n"" is 191.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestACommitWithSubject_NonFooterAndBugAndSob,The length of the statement  "			NUnit.Framework.Assert.AreEqual("a commit with subject' non-footer and bug and sob\n\nmore text (two empty lines after bug)\nBug: 33\n\n\nChange-Id: Idac75ccbad2ab6727b8612e344df5190d87891dd\nSigned-off-by: me@you.too\n"" is 220.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestACommitWithSubject_NonFooterAndBugAndSob,The length of the statement  "				' Call("a commit with subject' non-footer and bug and sob\n\nmore text (two empty lines after bug)\nBug: 33\n\n\nSigned-off-by: me@you.too\n"" is 141.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestACommitWithSubjectBodyBugBrackersAndSob,The length of the statement  "			NUnit.Framework.Assert.AreEqual("a commit with subject body' bug. brackers and sob\n\nText\n\nBug: 33\nChange-Id: I90ecb589bef766302532c3e00915e10114b00f62\n[bracket]\nSigned-off-by: me@you.too\n"" is 196.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestACommitWithSubjectBodyBugLineWithASpaceAndSob,The length of the statement  "			NUnit.Framework.Assert.AreEqual("a commit with subject body' bug. line with a space and sob\n\nText\n\nBug: 33\nChange-Id: I864e2218bdee033c8ce9a7f923af9e0d5dc16863\n \nSigned-off-by: me@you.too\n"" is 197.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestACommitWithSubjectBodyBugLineWithASpaceAndSob,The length of the statement  "				' Call("a commit with subject body' bug. line with a space and sob\n\nText\n\nBug: 33\n \nSigned-off-by: me@you.too\n\n"" is 120.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestACommitWithSubjectBodyBugEmptyLineAndSob,The length of the statement  "			NUnit.Framework.Assert.AreEqual("a commit with subject body' bug. empty line and sob\n\nText\n\nBug: 33\nChange-Id: I33f119f533313883e6ada3df600c4f0d4db23a76\n \nSigned-off-by: me@you.too\n"" is 190.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestChangeIdAlreadySetWithReplacement,The length of the statement  "			NUnit.Framework.Assert.AreEqual("fix-a-widget: this thing\n" + "\n" + "Change-Id: If0444e4d0cabcf41b3d3b46b7e9a7a64a82117af\n"" is 126.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestChangeIdAlreadySetWithReplacement,The length of the statement  "			NUnit.Framework.Assert.AreEqual("Fix-A-Widget: this thing\n" + "\n" + "Change-Id: I2573d47c62c42429fbe424d70cfba931f8f87848\n"" is 126.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestSingleLineMessages,The length of the statement  "			NUnit.Framework.Assert.AreEqual("fix-a-widget: this thing\n" + "\n" + "Change-Id: I1a1a0c751e4273d532e4046a501a612b9b8a775e\n"" is 126.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestSingleLineMessages,The length of the statement  "			NUnit.Framework.Assert.AreEqual("Fix-A-Widget: this thing\n" + "\n" + "Change-Id: I3e18d00cbda2ba1f73aeb63ed8c7d57d7fd16c76\n"" is 126.
Long Statement,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,TestMultiLineMessagesWithoutFooter,The length of the statement  "			NUnit.Framework.Assert.AreEqual("a\n" + "\n" + "b\nc\nd\ne\n" + "\n" + "Change-Id: I7d237b20058a0f46cc3f5fabc4a0476877289d75\n"" is 127.
Long Statement,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestUploadPack,The length of the statement  "			ReadConfig("[remote \"example\"]\n" + "url = user@example.com:egit.git\n" + "fetch = +refs/heads/*:refs/remotes/example/*\n"" is 124.
Long Statement,NGit.Transport,OpenSshConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\OpenSshConfigTest.cs,TestAlias_InheritPreferredAuthentications,The length of the statement  "			Config("Host orcz\n" + "\tHostName repo.or.cz\n" + "\n" + "Host *\n" + "\tPreferredAuthentications publickey' hostbased\n"" is 122.
Virtual Method Call from Constructor,NGit.Junit,MockSystemReader,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\MockSystemReader.cs,MockSystemReader,The constructor "MockSystemReader" calls a virtual method "SetCurrentPlatform".
Virtual Method Call from Constructor,NGit.Junit,TestRepository<R>,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRepository.cs,TestRepository,The constructor "TestRepository" calls a virtual method "NewObjectInserter".
Virtual Method Call from Constructor,NGit.Junit,CommitBuilder,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRepository.cs,CommitBuilder,The constructor "CommitBuilder" calls a virtual method "GetRef".
Virtual Method Call from Constructor,NGit.Junit,CommitBuilder,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRepository.cs,CommitBuilder,The constructor "CommitBuilder" calls a virtual method "Parent".
Virtual Method Call from Constructor,NGit.Junit,CommitBuilder,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRepository.cs,CommitBuilder,The constructor "CommitBuilder" calls a virtual method "ParseCommit".
Virtual Method Call from Constructor,NGit.Junit,CommitBuilder,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRepository.cs,CommitBuilder,The constructor "CommitBuilder" calls a virtual method "Builder".
Virtual Method Call from Constructor,NGit.Junit,CommitBuilder,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRepository.cs,CommitBuilder,The constructor "CommitBuilder" calls a virtual method "GetEntryCount".
Virtual Method Call from Constructor,NGit.Junit,CommitBuilder,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRepository.cs,CommitBuilder,The constructor "CommitBuilder" calls a virtual method "Add".
Virtual Method Call from Constructor,NGit.Junit,CommitBuilder,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRepository.cs,CommitBuilder,The constructor "CommitBuilder" calls a virtual method "GetEntry".
Virtual Method Call from Constructor,NGit.Junit,CommitBuilder,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRepository.cs,CommitBuilder,The constructor "CommitBuilder" calls a virtual method "Create".
Virtual Method Call from Constructor,NGit.Treewalk,FakeTreeIterator,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,FakeTreeIterator,The constructor "FakeTreeIterator" calls a virtual method "Get".
Virtual Method Call from Constructor,NGit.Treewalk,FakeTreeIterator,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,FakeTreeIterator,The constructor "FakeTreeIterator" calls a virtual method "GetBits".
Virtual Method Call from Constructor,NGit.Treewalk,FakeTreeIterator,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,FakeTreeIterator,The constructor "FakeTreeIterator" calls a virtual method "EnsurePathCapacity".
Virtual Method Call from Constructor,NGit.Treewalk,FileTreeIteratorWithTimeControl,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\FileTreeIteratorWithTimeControl.cs,FileTreeIteratorWithTimeControl,The constructor "FileTreeIteratorWithTimeControl" calls a virtual method "Get".
Virtual Method Call from Constructor,NGit.Util.IO,FullPipeInputStream,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutOutputStreamTest.cs,FullPipeInputStream,The constructor "FullPipeInputStream" calls a virtual method "Write".
Virtual Method Call from Constructor,NGit.Transport,MockPushConnection,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PushProcessTest.cs,MockPushConnection,The constructor "MockPushConnection" calls a virtual method "Available".
Empty Catch Block,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLargeObjectLoader,The method has an empty catch block.
Empty Catch Block,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLargeObjectLoader,The method has an empty catch block.
Empty Catch Block,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLargeObjectLoader,The method has an empty catch block.
Empty Catch Block,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLimitedGetCachedBytes,The method has an empty catch block.
Empty Catch Block,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLimitedGetCachedBytesExceedsJavaLimits,The method has an empty catch block.
Empty Catch Block,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLimitedGetCachedBytesExceedsJavaLimits,The method has an empty catch block.
Empty Catch Block,NGit,RepositoryResolveTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RepositoryResolveTest.cs,TestParseGitDescribeOutput,The method has an empty catch block.
Empty Catch Block,NGit,RepositoryResolveTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RepositoryResolveTest.cs,AssertUnparseable,The method has an empty catch block.
Empty Catch Block,NGit,_Runnable_64,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,Run,The method has an empty catch block.
Empty Catch Block,NGit,_Runnable_64,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,Run,The method has an empty catch block.
Empty Catch Block,NGit,_Runnable_64,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,Run,The method has an empty catch block.
Empty Catch Block,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestIterator,The method has an empty catch block.
Empty Catch Block,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestIterator,The method has an empty catch block.
Empty Catch Block,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,TestIterator,The method has an empty catch block.
Empty Catch Block,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,TestIterator,The method has an empty catch block.
Empty Catch Block,NGit,ReflogResolveTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ReflogResolveTest.cs,ResolvePreviousBranch,The method has an empty catch block.
Empty Catch Block,NGit.Api,AddCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\AddCommandTest.cs,TestAddNothing,The method has an empty catch block.
Empty Catch Block,NGit.Api,CommitAndLogCommandTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitAndLogCommandTests.cs,TestWrongParams,The method has an empty catch block.
Empty Catch Block,NGit.Api,CommitAndLogCommandTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitAndLogCommandTests.cs,TestMultipleInvocations,The method has an empty catch block.
Empty Catch Block,NGit.Api,CommitAndLogCommandTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitAndLogCommandTests.cs,TestMultipleInvocations,The method has an empty catch block.
Empty Catch Block,NGit.Api,MergeCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\MergeCommandTest.cs,TestMultipleHeads,The method has an empty catch block.
Empty Catch Block,NGit.Api,TagCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\TagCommandTest.cs,TestEmptyTagName,The method has an empty catch block.
Empty Catch Block,NGit.Api,TagCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\TagCommandTest.cs,TestInvalidTagName,The method has an empty catch block.
Empty Catch Block,NGit.Api,TagCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\TagCommandTest.cs,TestFailureOnSignedTags,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestCreateAndList,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestCreateAndList,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestCreateFromCommit,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestCreateForce,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestCreateForce,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestDelete,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestDelete,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestDelete,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestDelete,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestRenameLocalBranch,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestRenameLocalBranch,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestRenameLocalBranch,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestRenameLocalBranch,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestRenameLocalBranch,The method has an empty catch block.
Empty Catch Block,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestRenameLocalBranch,The method has an empty catch block.
Empty Catch Block,NGit.Api,PushCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\PushCommandTest.cs,TestPush,The method has an empty catch block.
Empty Catch Block,NGit.Api,CheckoutCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CheckoutCommandTest.cs,TestCheckoutToNonExistingBranch,The method has an empty catch block.
Empty Catch Block,NGit.Api,CheckoutCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CheckoutCommandTest.cs,TestCheckoutWithNonDeletedFiles,The method has an empty catch block.
Empty Catch Block,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestRebaseFailsCantCherryPickMergeCommits,The method has an empty catch block.
Empty Catch Block,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestUnknownUpstream,The method has an empty catch block.
Empty Catch Block,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestStopOnConflict,The method has an empty catch block.
Empty Catch Block,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestStopOnConflictAndContinue,The method has an empty catch block.
Empty Catch Block,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestStopOnConflictAndContinueWithNoDeltaToMaster,The method has an empty catch block.
Empty Catch Block,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestStopOnConflictCommitAndContinue,The method has an empty catch block.
Empty Catch Block,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestRepositoryStateChecks,The method has an empty catch block.
Empty Catch Block,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestRepositoryStateChecks,The method has an empty catch block.
Empty Catch Block,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestRepositoryStateChecks,The method has an empty catch block.
Empty Catch Block,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,CountPicks,The method has an empty catch block.
Empty Catch Block,NGit.Api,ResetCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ResetCommandTest.cs,TestResetToNonexistingHEAD,The method has an empty catch block.
Empty Catch Block,NGit.Api,GitConstructionTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\GitConstructionTest.cs,TestWrap,The method has an empty catch block.
Empty Catch Block,NGit.Api,GitConstructionTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\GitConstructionTest.cs,TestOpen,The method has an empty catch block.
Empty Catch Block,NGit.Diff,DiffFormatterReflowTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterReflowTest.cs,TestNegativeContextFails,The method has an empty catch block.
Empty Catch Block,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestSetRenameScore_IllegalArgs,The method has an empty catch block.
Empty Catch Block,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestSetRenameScore_IllegalArgs,The method has an empty catch block.
Empty Catch Block,NGit.Fnmatch,FileNameMatcherTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Fnmatch\FileNameMatcherTest.cs,TestSpecialGroupCase9,The method has an empty catch block.
Empty Catch Block,NGit.Revwalk,AlwaysEmptyRevQueueTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\AlwaysEmptyRevQueueTest.cs,TestAddFails,The method has an empty catch block.
Empty Catch Block,NGit.Revwalk,RevWalkMergeBaseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkMergeBaseTest.cs,TestDisallowTreeFilter,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,ConcurrentRepackTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ConcurrentRepackTest.cs,Touch,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,ConcurrentRepackTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ConcurrentRepackTest.cs,WriteBlob,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,PackIndexTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackIndexTestCase.cs,TestIteratorMethodsContract,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,PackIndexTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackIndexTestCase.cs,TestIteratorMethodsContract,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,PackIndexV1Test,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackIndexV1Test.cs,TestCRC32,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,PackReverseIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackReverseIndexTest.cs,TestFindNextOffsetWrongOffset,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,PackWriterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackWriterTest.cs,TestNotIgnoreNonExistingObjects,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,PackWriterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackWriterTest.cs,VerifyOpenPack,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,RepositorySetupWorkDirTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RepositorySetupWorkDirTest.cs,TestExceptionThrown_BareRepoGetWorkDir,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,RepositorySetupWorkDirTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RepositorySetupWorkDirTest.cs,TestExceptionThrown_BareRepoGetIndex,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,RepositorySetupWorkDirTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RepositorySetupWorkDirTest.cs,TestExceptionThrown_BareRepoGetIndexFile,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,WindowCacheReconfigureTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheReconfigureTest.cs,TestConfigureCache_PackedGitLimit_0,The method has an empty catch block.
Empty Catch Block,NGit.Storage.File,_T187790690,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,Call,The method has an empty catch block.
Empty Catch Block,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,AssertNotHex,The method has an empty catch block.
Empty Catch Block,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt16,The method has an empty catch block.
Empty Catch Block,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt16,The method has an empty catch block.
Empty Catch Block,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt16,The method has an empty catch block.
Empty Catch Block,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt32,The method has an empty catch block.
Empty Catch Block,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt32,The method has an empty catch block.
Empty Catch Block,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt32,The method has an empty catch block.
Empty Catch Block,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt32,The method has an empty catch block.
Empty Catch Block,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestEmpty,The method has an empty catch block.
Empty Catch Block,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestEmptyBuilder,The method has an empty catch block.
Empty Catch Block,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestIterable,The method has an empty catch block.
Empty Catch Block,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestIterable,The method has an empty catch block.
Empty Catch Block,NGit.Util,RefMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefMapTest.cs,TestIterator_RefusesRemove,The method has an empty catch block.
Empty Catch Block,NGit.Util,RefMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefMapTest.cs,TestIterator_FailsAtEnd,The method has an empty catch block.
Empty Catch Block,NGit.Util,RefMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefMapTest.cs,TestIterator_MissingUnresolvedSymbolicRefIsBug,The method has an empty catch block.
Empty Catch Block,NGit.Util,RefMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefMapTest.cs,TestPut_KeyMustMatchName_NoPrefix,The method has an empty catch block.
Empty Catch Block,NGit.Util,RefMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefMapTest.cs,TestPut_KeyMustMatchName_WithPrefix,The method has an empty catch block.
Empty Catch Block,NGit.Util,Base64Test,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\Base64Test.cs,TestDecodeFail_NonBase64Character,The method has an empty catch block.
Empty Catch Block,NGit.Util,FileUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\FileUtilTest.cs,TestDeleteFile,The method has an empty catch block.
Empty Catch Block,NGit.Util,FileUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\FileUtilTest.cs,TestDeleteRecursive,The method has an empty catch block.
Empty Catch Block,NGit.Util,FileUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\FileUtilTest.cs,TestMkdir,The method has an empty catch block.
Empty Catch Block,NGit.Util,FileUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\FileUtilTest.cs,TestMkdir,The method has an empty catch block.
Empty Catch Block,NGit.Util,FileUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\FileUtilTest.cs,TestMkdirs,The method has an empty catch block.
Empty Catch Block,NGit.Util,FileUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\FileUtilTest.cs,TestMkdirs,The method has an empty catch block.
Empty Catch Block,NGit.Util,FileUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\FileUtilTest.cs,TestCreateNewFile,The method has an empty catch block.
Empty Catch Block,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,TestTimeout_readByte_Timeout,The method has an empty catch block.
Empty Catch Block,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,TestTimeout_readBuffer_Timeout,The method has an empty catch block.
Empty Catch Block,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,TestTimeout_skip_Timeout,The method has an empty catch block.
Empty Catch Block,NGit.Util.IO,TimeoutOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutOutputStreamTest.cs,TestTimeout_writeByte_Timeout,The method has an empty catch block.
Empty Catch Block,NGit.Util.IO,TimeoutOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutOutputStreamTest.cs,TestTimeout_writeBuffer_Timeout,The method has an empty catch block.
Empty Catch Block,NGit.Util.IO,TimeoutOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutOutputStreamTest.cs,TestTimeout_flush_Timeout,The method has an empty catch block.
Empty Catch Block,NGit.Util.IO,TimeoutOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutOutputStreamTest.cs,TestTimeout_close_Timeout,The method has an empty catch block.
Empty Catch Block,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestNonNotesWithNonNoteConflict,The method has an empty catch block.
Empty Catch Block,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,ShouldRaiseErrorOnEmptyURI,The method has an empty catch block.
Empty Catch Block,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,ShouldRaiseErrorOnNullURI,The method has an empty catch block.
Empty Catch Block,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestGetNullHumanishName,The method has an empty catch block.
Empty Catch Block,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestGetEmptyHumanishName,The method has an empty catch block.
Empty Catch Block,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestGetAbsEmptyHumanishName,The method has an empty catch block.
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,Test002_ReadWithSubsection,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' c.GetInt("foo"' "zap"' "n"' 4));
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,Test002_ReadWithSubsection,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' c.GetInt("foo"' "zap"' "n"' 4));
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,Test002_ReadWithSubsection,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' c.GetInt("foo"' "zap"' "m"' 4));
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,Test002_ReadWithSubsection,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' c.GetInt("foo"' "zap"' "m"' 4));
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,TestReadLong,The following statement contains a magic number: AssertReadLong(4L * 1024 * 1024 * 1024' "4g");
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,TestReadLong,The following statement contains a magic number: AssertReadLong(4L * 1024 * 1024 * 1024' "4g");
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,TestReadLong,The following statement contains a magic number: AssertReadLong(4L * 1024 * 1024 * 1024' "4g");
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,TestReadLong,The following statement contains a magic number: AssertReadLong(4L * 1024 * 1024 * 1024' "4g");
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,TestReadLong,The following statement contains a magic number: AssertReadLong(3L * 1024 * 1024' "3 m");
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,TestReadLong,The following statement contains a magic number: AssertReadLong(3L * 1024 * 1024' "3 m");
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,TestReadLong,The following statement contains a magic number: AssertReadLong(3L * 1024 * 1024' "3 m");
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,TestReadLong,The following statement contains a magic number: AssertReadLong(8L * 1024' "8 k");
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,TestReadLong,The following statement contains a magic number: AssertReadLong(8L * 1024' "8 k");
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,Test009_readNamesInSection,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' names.Count' "Core section size");
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,Test010_readNamesInSubSection,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' names.Count' "Subsection size");
Magic Number,NGit,ConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConfigTest.cs,Test010_readNamesInSubSection,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' names.Count' "Subsection size");
Magic Number,NGit,ConstantsEncodingTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ConstantsEncodingTest.cs,TestEncodeASCII_Number13,The following statement contains a magic number: long src = 13;
Magic Number,NGit,DirCacheCheckoutTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\DirCacheCheckoutTest.cs,Mkmap,The following statement contains a magic number: (args.Length % 2) > 0
Magic Number,NGit,IndexDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\IndexDiffTest.cs,TestAdded,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' diff.GetAdded().Count);
Magic Number,NGit,IndexDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\IndexDiffTest.cs,TestRemoved,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' tree.MemberCount());
Magic Number,NGit,IndexDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\IndexDiffTest.cs,TestRemoved,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' diff.GetRemoved().Count);
Magic Number,NGit,IndexDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\IndexDiffTest.cs,TestModified,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' tree.MemberCount());
Magic Number,NGit,IndexDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\IndexDiffTest.cs,TestModified,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' diff.GetChanged().Count);
Magic Number,NGit,MergeHeadMsgTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\MergeHeadMsgTest.cs,TestReadWriteMergeHeads,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(db.ReadMergeHeads().Count' 2);
Magic Number,NGit,MergeHeadMsgTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\MergeHeadMsgTest.cs,TestReadWriteMergeHeads,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(db.ReadMergeHeads().Count' 2);
Magic Number,NGit,ObjectCheckerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectCheckerTest.cs,TestValidCommit128Parent,The following statement contains a magic number: i < 128
Magic Number,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestSmallObjectLoader,The following statement contains a magic number: byte[] act = GetRng().NextBytes(512);
Magic Number,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLargeObjectLoader,The following statement contains a magic number: byte[] act = GetRng().NextBytes(512);
Magic Number,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLargeObjectLoader,The following statement contains a magic number: ldr.GetCachedBytes(64);
Magic Number,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLargeObjectLoader,The following statement contains a magic number: byte[] copy = ldr.GetCachedBytes(1024);
Magic Number,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLimitedGetCachedBytes,The following statement contains a magic number: byte[] act = GetRng().NextBytes(512);
Magic Number,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLimitedGetCachedBytes,The following statement contains a magic number: ldr.GetCachedBytes(10);
Magic Number,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLimitedGetCachedBytes,The following statement contains a magic number: byte[] copy = ldr.GetCachedBytes(512);
Magic Number,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLimitedGetCachedBytes,The following statement contains a magic number: copy = ldr.GetCachedBytes(1024);
Magic Number,NGit,ObjectLoaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectLoaderTest.cs,TestLimitedGetCachedBytesExceedsJavaLimits,The following statement contains a magic number: ldr.GetCachedBytes(10);
Magic Number,NGit,RacyGitTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RacyGitTests.cs,TestIterator,The following statement contains a magic number: i == 5
Magic Number,NGit,RacyGitTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RacyGitTests.cs,TestIterator,The following statement contains a magic number: i < 10
Magic Number,NGit,RacyGitTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RacyGitTests.cs,TestIterator,The following statement contains a magic number: i_1 < 10
Magic Number,NGit,RacyGitTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RacyGitTests.cs,TestIterator,The following statement contains a magic number: i_2 % 4 == 0
Magic Number,NGit,RacyGitTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RacyGitTests.cs,TestIterator,The following statement contains a magic number: i_2 < 10
Magic Number,NGit,RacyGitTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RacyGitTests.cs,TestIterator,The following statement contains a magic number: i_3 < 10
Magic Number,NGit,RacyGitTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RacyGitTests.cs,TestIterator,The following statement contains a magic number: i_4 < 10
Magic Number,NGit,RacyGitTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RacyGitTests.cs,TestIterator,The following statement contains a magic number: i_5 < 10
Magic Number,NGit,ReflogConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ReflogConfigTest.cs,TestlogAllRefUpdates,The following statement contains a magic number: long commitTime = 1154236443000L;
Magic Number,NGit,ReflogConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ReflogConfigTest.cs,TestlogAllRefUpdates,The following statement contains a magic number: int tz = -4 * 60;
Magic Number,NGit,ReflogConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ReflogConfigTest.cs,TestlogAllRefUpdates,The following statement contains a magic number: int tz = -4 * 60;
Magic Number,NGit,ReflogConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ReflogConfigTest.cs,TestlogAllRefUpdates,The following statement contains a magic number: commitTime += 60 * 1000;
Magic Number,NGit,ReflogConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ReflogConfigTest.cs,TestlogAllRefUpdates,The following statement contains a magic number: commitTime += 60 * 1000;
Magic Number,NGit,ReflogConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ReflogConfigTest.cs,TestlogAllRefUpdates,The following statement contains a magic number: commitTime += 60 * 1000;
Magic Number,NGit,ReflogConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ReflogConfigTest.cs,TestlogAllRefUpdates,The following statement contains a magic number: commitTime += 60 * 1000;
Magic Number,NGit,ReflogConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ReflogConfigTest.cs,TestlogAllRefUpdates,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(db.GetReflogReader(Constants.HEAD).GetReverseEntries 				().Count == 2' "Reflog for HEAD should contain two entries");
Magic Number,NGit,RepositoryCacheTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RepositoryCacheTest.cs,TestBareFileKey,The following statement contains a magic number: name = Sharpen.Runtime.Substring(name' 0' name.Length - 4);
Magic Number,NGit,RepositoryTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RepositoryTestCase.cs,CopyFile,The following statement contains a magic number: byte[] buf = new byte[4096];
Magic Number,NGit,RepositoryTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\RepositoryTestCase.cs,FsTick,The following statement contains a magic number: sleepTime *= 5;
Magic Number,NGit,ObjectIdTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdTest.cs,TestGetByte,The following statement contains a magic number: byte[] raw = new byte[20];
Magic Number,NGit,ObjectIdTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdTest.cs,TestGetByte,The following statement contains a magic number: i < 20
Magic Number,NGit,ObjectIdTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdTest.cs,TestGetByte,The following statement contains a magic number: i_1 < 20
Magic Number,NGit,ObjectIdTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdTest.cs,TestSetByte,The following statement contains a magic number: byte[] exp = new byte[20];
Magic Number,NGit,ObjectIdTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdTest.cs,TestSetByte,The following statement contains a magic number: i < 20
Magic Number,NGit,ObjectIdTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdTest.cs,TestSetByte,The following statement contains a magic number: p < 20
Magic Number,NGit,ObjectIdTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdTest.cs,TestSetByte,The following statement contains a magic number: p_1 < 20
Magic Number,NGit,T0001_PersonIdentTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\T0001_PersonIdentTest.cs,Test001_NewIdent,The following statement contains a magic number: PersonIdent p = new PersonIdent("A U Thor"' "author@example.com"' Sharpen.Extensions.CreateDate 				(1142878501000L)' Sharpen.Extensions.GetTimeZone("EST"));
Magic Number,NGit,T0001_PersonIdentTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\T0001_PersonIdentTest.cs,Test001_NewIdent,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1142878501000L' p.GetWhen().GetTime());
Magic Number,NGit,T0001_PersonIdentTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\T0001_PersonIdentTest.cs,Test002_NewIdent,The following statement contains a magic number: PersonIdent p = new PersonIdent("A U Thor"' "author@example.com"' Sharpen.Extensions.CreateDate 				(1142878501000L)' Sharpen.Extensions.GetTimeZone("GMT+0230"));
Magic Number,NGit,T0001_PersonIdentTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\T0001_PersonIdentTest.cs,Test002_NewIdent,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1142878501000L' p.GetWhen().GetTime());
Magic Number,NGit,T0002_TreeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\T0002_TreeTest.cs,Test007_manyFileLookup,The following statement contains a magic number: IList<FileTreeEntry> files = new AList<FileTreeEntry>(26 * 26);
Magic Number,NGit,T0002_TreeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\T0002_TreeTest.cs,Test007_manyFileLookup,The following statement contains a magic number: IList<FileTreeEntry> files = new AList<FileTreeEntry>(26 * 26);
Magic Number,NGit,T0002_TreeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\T0002_TreeTest.cs,Test008_SubtreeInternalSorting,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(e3' ents[2]);
Magic Number,NGit,T0002_TreeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\T0002_TreeTest.cs,Test008_SubtreeInternalSorting,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(e4' ents[3]);
Magic Number,NGit,T0002_TreeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\T0002_TreeTest.cs,Test008_SubtreeInternalSorting,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(e2' ents[4]);
Magic Number,NGit,ThreadSafeProgressMonitorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,TestMethodsOkOnMainThread,The following statement contains a magic number: pm.BeginTask("title"' 42);
Magic Number,NGit,ThreadSafeProgressMonitorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,TestMethodsOkOnMainThread,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(42' mock.value);
Magic Number,NGit,ThreadSafeProgressMonitorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,TestMethodsOkOnMainThread,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(43' mock.value);
Magic Number,NGit,ThreadSafeProgressMonitorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,TestMethodsOkOnMainThread,The following statement contains a magic number: pm.Update(2);
Magic Number,NGit,ThreadSafeProgressMonitorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,TestMethodsOkOnMainThread,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(45' mock.value);
Magic Number,NGit,ThreadSafeProgressMonitorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,TestUpdateOnBackgroundThreads,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' mock.value);
Magic Number,NGit,ThreadSafeProgressMonitorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,TestUpdateOnBackgroundThreads,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' mock.value);
Magic Number,NGit,ThreadSafeProgressMonitorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,Await,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cdl.Await(1000' TimeUnit.MILLISECONDS)' "latch released" 					);
Magic Number,NGit,ThreadSafeProgressMonitorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,RunOnThread,The following statement contains a magic number: t.Join(1000);
Magic Number,NGit,_Thread_128,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ThreadSafeProgressMonitorTest.cs,Run,The following statement contains a magic number: pm.Update(2);
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,Init,The following statement contains a magic number: id_2 = new ObjectIdSubclassMapTest.SubId(Id(2));
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,Init,The following statement contains a magic number: id_3 = new ObjectIdSubclassMapTest.SubId(Id(3));
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,Init,The following statement contains a magic number: id_a31 = new ObjectIdSubclassMapTest.SubId(Id(31));
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,Init,The following statement contains a magic number: id_b31 = new ObjectIdSubclassMapTest.SubId(Id((1 << 8) + 31));
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,Init,The following statement contains a magic number: id_b31 = new ObjectIdSubclassMapTest.SubId(Id((1 << 8) + 31));
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddGetAndContains,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' m.Size());
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddGetAndContains,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(id_2' m.Get(Id(2).Copy()));
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddGetAndContains,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(id_3' m.Get(Id(3).Copy()));
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddGetAndContains,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(id_a31' m.Get(Id(31).Copy()));
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddIfAbsent,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' m.Size());
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddIfAbsent,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' m.Size());
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddGrowsWithObjects,The following statement contains a magic number: i < 8000
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddGrowsWithObjects,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8000 - 32 + 1' m.Size());
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddGrowsWithObjects,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8000 - 32 + 1' m.Size());
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddGrowsWithObjects,The following statement contains a magic number: i_1 < 8000
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddIfAbsentGrowsWithObjects,The following statement contains a magic number: i < 8000
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddIfAbsentGrowsWithObjects,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8000 - 32 + 1' m.Size());
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddIfAbsentGrowsWithObjects,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8000 - 32 + 1' m.Size());
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,TestAddIfAbsentGrowsWithObjects,The following statement contains a magic number: i_1 < 8000
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,Id,The following statement contains a magic number: idBuf.SetByte(2' ((int)(((uint)val) >> 8)) & unchecked((int)(0xff)));
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,Id,The following statement contains a magic number: idBuf.SetByte(2' ((int)(((uint)val) >> 8)) & unchecked((int)(0xff)));
Magic Number,NGit,ObjectIdSubclassMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdSubclassMapTest.cs,Id,The following statement contains a magic number: idBuf.SetByte(3' val & unchecked((int)(0xff)));
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,Init,The following statement contains a magic number: id_2 = new ObjectIdOwnerMapTest.SubId(Id(2));
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,Init,The following statement contains a magic number: id_3 = new ObjectIdOwnerMapTest.SubId(Id(3));
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,Init,The following statement contains a magic number: id_a31 = new ObjectIdOwnerMapTest.SubId(Id(31));
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,Init,The following statement contains a magic number: id_b31 = new ObjectIdOwnerMapTest.SubId(Id((1 << 8) + 31));
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,Init,The following statement contains a magic number: id_b31 = new ObjectIdOwnerMapTest.SubId(Id((1 << 8) + 31));
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,TestAddGetAndContains,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' m.Size());
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,TestAddGetAndContains,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(id_2' m.Get(Id(2).Copy()));
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,TestAddGetAndContains,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(id_3' m.Get(Id(3).Copy()));
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,TestAddGetAndContains,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(id_a31' m.Get(Id(31).Copy()));
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,TestAddIfAbsent,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' m.Size());
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,TestAddIfAbsent,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' m.Size());
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,TestAddGrowsWithObjects,The following statement contains a magic number: int n = 16384;
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,TestAddGrowsWithObjects,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(n - 32 + 1' m.Size());
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,TestAddIfAbsentGrowsWithObjects,The following statement contains a magic number: int n = 16384;
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,TestAddIfAbsentGrowsWithObjects,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(n - 32 + 1' m.Size());
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,Id,The following statement contains a magic number: idBuf.SetByte(3' ((int)(((uint)val) >> 8)) & unchecked((int)(0xff)));
Magic Number,NGit,ObjectIdOwnerMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\ObjectIdOwnerMapTest.cs,Id,The following statement contains a magic number: idBuf.SetByte(3' ((int)(((uint)val) >> 8)) & unchecked((int)(0xff)));
Magic Number,NGit,BranchTrackingStatusTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\BranchTrackingStatusTest.cs,ShouldWorkInNormalCase,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' status.GetAheadCount());
Magic Number,NGit,IndexModificationTimesTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\IndexModificationTimesTest.cs,TestModify,The following statement contains a magic number: Sharpen.Thread.Sleep(10);
Magic Number,NGit,IndexModificationTimesTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit\IndexModificationTimesTest.cs,TestModify,The following statement contains a magic number: Sharpen.Thread.Sleep(2000);
Magic Number,NGit.Api,AddCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\AddCommandTest.cs,TestAddExistingSingleMediumSizeFileWithNewLine,The following statement contains a magic number: i < 1000
Magic Number,NGit.Api,AddCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\AddCommandTest.cs,TestAddWithConflicts,The following statement contains a magic number: AddEntryToBuilder("a.txt"' file' newObjectInserter' builder' 3);
Magic Number,NGit.Api,AddCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\AddCommandTest.cs,TestAddWithConflicts,The following statement contains a magic number: AddEntryToBuilder("a.txt"' file' newObjectInserter' builder' 2).GetObjectId();
Magic Number,NGit.Api,CommitAndLogCommandTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitAndLogCommandTests.cs,TestLogWithFilter,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' count);
Magic Number,NGit.Api,CommitAndLogCommandTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitAndLogCommandTests.cs,TestMergeEmptyBranches,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' parents.Length);
Magic Number,NGit.Api,CommitAndLogCommandTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitAndLogCommandTests.cs,TestInsertChangeId,The following statement contains a magic number: int lastLineBegin = RawParseUtils.PrevLF(chars' chars.Length - 2);
Magic Number,NGit.Api,CommitAndLogCommandTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitAndLogCommandTests.cs,TestInsertChangeId,The following statement contains a magic number: i < 4
Magic Number,NGit.Api,CommitAndLogCommandTests,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitAndLogCommandTests.cs,TestInsertChangeId,The following statement contains a magic number: i_1 < 4
Magic Number,NGit.Api,MergeCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\MergeCommandTest.cs,TestContentMerge,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' result.GetConflicts().Get("a")[0].Length);
Magic Number,NGit.Api,MergeCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\MergeCommandTest.cs,TestMergeNonVersionedPaths,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' result.GetConflicts().Get("a")[0].Length);
Magic Number,NGit.Api,MergeCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\MergeCommandTest.cs,TestSuccessfulContentMerge,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' result.GetMergedCommits().Length);
Magic Number,NGit.Api,MergeCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\MergeCommandTest.cs,TestSuccessfulContentMerge,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' newHead.ParentCount);
Magic Number,NGit.Api,MergeCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\MergeCommandTest.cs,TestSuccessfulContentMergeAndDirtyworkingTree,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' result.GetMergedCommits().Length);
Magic Number,NGit.Api,MergeCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\MergeCommandTest.cs,TestSuccessfulContentMergeAndDirtyworkingTree,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' newHead.ParentCount);
Magic Number,NGit.Api,MergeCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\MergeCommandTest.cs,TestDeletionOnSideConflict,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' result.GetConflicts().Get("a")[0].Length);
Magic Number,NGit.Api,MergeCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\MergeCommandTest.cs,TestModifiedAndRenamed,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' d2Merge.GetConflicts().Get("x")[0].Length);
Magic Number,NGit.Api,TagCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\TagCommandTest.cs,TestDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' db.GetTags().Count);
Magic Number,NGit.Api,TagCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\TagCommandTest.cs,TestDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' deleted.Count);
Magic Number,NGit.Api,TagCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\TagCommandTest.cs,TestListAllTagsInRepositoryInOrder,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' list.Count);
Magic Number,NGit.Api,TagCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\TagCommandTest.cs,TestListAllTagsInRepositoryInOrder,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual("refs/tags/v3"' list[2].GetName());
Magic Number,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestCreateAndList,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' git.BranchList().Call().Count - localBefore);
Magic Number,NGit.Api,BranchCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BranchCommandTest.cs,TestCreateAndList,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' git.BranchList().SetListMode(ListBranchCommand.ListMode 				.ALL).Call().Count - allBefore);
Magic Number,NGit.Api,PullCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\PullCommandTest.cs,AssertFileContentsEqual,The following statement contains a magic number: byte[] buffer = new byte[100];
Magic Number,NGit.Api,PushCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\PushCommandTest.cs,TestPushRefUpdate,The following statement contains a magic number: i < 6
Magic Number,NGit.Api,CheckoutCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CheckoutCommandTest.cs,TestUpdateSmudgedEntries,The following statement contains a magic number: long mTime = file.LastModified() - 5000L;
Magic Number,NGit.Api,CheckoutCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CheckoutCommandTest.cs,TestUpdateSmudgedEntries,The following statement contains a magic number: db.GetIndexFile().SetLastModified(db.GetIndexFile().LastModified() - 5000);
Magic Number,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestAuthorScriptConverter,The following statement contains a magic number: PersonIdent ident = new PersonIdent("Author name"' "a.mail@some.com"' 123456789123L 				' -60);
Magic Number,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestAuthorScriptConverter,The following statement contains a magic number: PersonIdent ident = new PersonIdent("Author name"' "a.mail@some.com"' 123456789123L 				' -60);
Magic Number,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestAuthorScriptConverter,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual("GIT_AUTHOR_DATE='@123456789 -0100'"' lines[2]);
Magic Number,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestAuthorScriptConverter,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(123456789000L' parsedIdent.GetWhen().GetTime());
Magic Number,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestAuthorScriptConverter,The following statement contains a magic number: ident = new PersonIdent("Author name"' "a.mail@some.com"' 123456789123L' +570);
Magic Number,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestAuthorScriptConverter,The following statement contains a magic number: ident = new PersonIdent("Author name"' "a.mail@some.com"' 123456789123L' +570);
Magic Number,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestAuthorScriptConverter,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual("GIT_AUTHOR_DATE='@123456789 +0930'"' lines[2]);
Magic Number,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestAuthorScriptConverter,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(123456789000L' parsedIdent.GetWhen().GetTime());
Magic Number,NGit.Api,RebaseCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\RebaseCommandTest.cs,TestRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' steps.Count);
Magic Number,NGit.Api,CloneCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CloneCommandTest.cs,TestCloneRepository,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' git2.BranchList().SetListMode(ListBranchCommand.ListMode 				.REMOTE).Call().Count);
Magic Number,NGit.Api,PullCommandWithRebaseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\PullCommandWithRebaseTest.cs,AssertFileContentsEqual,The following statement contains a magic number: byte[] buffer = new byte[100];
Magic Number,NGit.Api,ResetCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ResetCommandTest.cs,TestMixedResetRetainsSizeAndModifiedTime,The following statement contains a magic number: WriteTrashFile("a.txt"' "a").SetLastModified(Runtime.CurrentTimeMillis() - 60 * 1000 				);
Magic Number,NGit.Api,ResetCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ResetCommandTest.cs,TestMixedResetRetainsSizeAndModifiedTime,The following statement contains a magic number: WriteTrashFile("a.txt"' "a").SetLastModified(Runtime.CurrentTimeMillis() - 60 * 1000 				);
Magic Number,NGit.Api,ResetCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ResetCommandTest.cs,TestMixedResetRetainsSizeAndModifiedTime,The following statement contains a magic number: WriteTrashFile("b.txt"' "b").SetLastModified(Runtime.CurrentTimeMillis() - 60 * 1000 				);
Magic Number,NGit.Api,ResetCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ResetCommandTest.cs,TestMixedResetRetainsSizeAndModifiedTime,The following statement contains a magic number: WriteTrashFile("b.txt"' "b").SetLastModified(Runtime.CurrentTimeMillis() - 60 * 1000 				);
Magic Number,NGit.Api,ResetCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ResetCommandTest.cs,TestMixedResetWithUnmerged,The following statement contains a magic number: builder.Add(CreateEntry(file' FileMode.REGULAR_FILE' 2' string.Empty));
Magic Number,NGit.Api,ResetCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ResetCommandTest.cs,TestMixedResetWithUnmerged,The following statement contains a magic number: builder.Add(CreateEntry(file' FileMode.REGULAR_FILE' 3' string.Empty));
Magic Number,NGit.Api,ResetCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ResetCommandTest.cs,TestPathsResetWithUnmerged,The following statement contains a magic number: builder.Add(CreateEntry(file' FileMode.REGULAR_FILE' 2' string.Empty));
Magic Number,NGit.Api,ResetCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ResetCommandTest.cs,TestPathsResetWithUnmerged,The following statement contains a magic number: builder.Add(CreateEntry(file' FileMode.REGULAR_FILE' 3' string.Empty));
Magic Number,NGit.Api,CommitOnlyTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitOnlyTest.cs,Prepare_f3_f2_14,The following statement contains a magic number: state >= 2
Magic Number,NGit.Api,CommitOnlyTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitOnlyTest.cs,Prepare_f3_f2_14,The following statement contains a magic number: state >= 3
Magic Number,NGit.Api,CommitOnlyTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitOnlyTest.cs,Prepare_f3_f2_14,The following statement contains a magic number: state == 4
Magic Number,NGit.Api,CommitOnlyTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitOnlyTest.cs,Expected_f3_head,The following statement contains a magic number: switch (state) 			{ 				case 0: 				case 1: 				{ 					return string.Empty; 				}  				case 2: 				case 3: 				case 4: 				{ 					return "c3"; 				} 			}
Magic Number,NGit.Api,CommitOnlyTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitOnlyTest.cs,Expected_f3_head,The following statement contains a magic number: switch (state) 			{ 				case 0: 				case 1: 				{ 					return string.Empty; 				}  				case 2: 				case 3: 				case 4: 				{ 					return "c3"; 				} 			}
Magic Number,NGit.Api,CommitOnlyTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitOnlyTest.cs,Expected_f3_head,The following statement contains a magic number: switch (state) 			{ 				case 0: 				case 1: 				{ 					return string.Empty; 				}  				case 2: 				case 3: 				case 4: 				{ 					return "c3"; 				} 			}
Magic Number,NGit.Api,CommitOnlyTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitOnlyTest.cs,Expected_f3_idx,The following statement contains a magic number: switch (state) 			{ 				case 0: 				case 3: 				{ 					return string.Empty; 				}  				case 1: 				case 2: 				{ 					return "[f3.txt' mode:100644' content:c3]"; 				}  				case 4: 				{ 					return "[f3.txt' mode:100644' content:c3']"; 				} 			}
Magic Number,NGit.Api,CommitOnlyTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitOnlyTest.cs,Expected_f3_idx,The following statement contains a magic number: switch (state) 			{ 				case 0: 				case 3: 				{ 					return string.Empty; 				}  				case 1: 				case 2: 				{ 					return "[f3.txt' mode:100644' content:c3]"; 				}  				case 4: 				{ 					return "[f3.txt' mode:100644' content:c3']"; 				} 			}
Magic Number,NGit.Api,CommitOnlyTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitOnlyTest.cs,Expected_f3_idx,The following statement contains a magic number: switch (state) 			{ 				case 0: 				case 3: 				{ 					return string.Empty; 				}  				case 1: 				case 2: 				{ 					return "[f3.txt' mode:100644' content:c3]"; 				}  				case 4: 				{ 					return "[f3.txt' mode:100644' content:c3']"; 				} 			}
Magic Number,NGit.Api,LsRemoteCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\LsRemoteCommandTest.cs,TestLsRemote,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' refs.Count);
Magic Number,NGit.Api,LsRemoteCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\LsRemoteCommandTest.cs,TestLsRemoteWithTags,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' refs.Count);
Magic Number,NGit.Api,LsRemoteCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\LsRemoteCommandTest.cs,TestLsRemoteWithHeads,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' refs.Count);
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestSingleRevision,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' lines.GetResultContents().Size());
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestSingleRevision,The following statement contains a magic number: i < 3
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestTwoRevisions,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' lines.GetResultContents().Size());
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestTwoRevisions,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(commit2' lines.GetSourceCommit(2));
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestTwoRevisions,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' lines.GetSourceLine(2));
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestTwoRevisions,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' lines.GetSourceLine(2));
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestRename,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(commit3' lines.GetSourceCommit(2));
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestRename,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' lines.GetSourceLine(2));
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestRename,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' lines.GetSourceLine(2));
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestRename,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(destPath' lines.GetSourcePath(2));
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestDeleteMiddleLines,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(commit1' lines.GetSourceCommit(2));
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestDeleteMiddleLines,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' lines.GetSourceLine(2));
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestDeleteMiddleLines,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' lines.GetSourceLine(2));
Magic Number,NGit.Api,BlameCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\BlameCommandTest.cs,TestMiddleClearAllLines,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(commit3' lines.GetSourceCommit(2));
Magic Number,NGit.Api,CleanCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CleanCommandTest.cs,TestCleanWithDryRun,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' files.Count);
Magic Number,NGit.Api,CommitCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitCommandTest.cs,CommitUpdatesSmudgedEntries,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(file1.SetLastModified(file1.LastModified() - 5000));
Magic Number,NGit.Api,CommitCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitCommandTest.cs,CommitUpdatesSmudgedEntries,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(file2.SetLastModified(file2.LastModified() - 5000));
Magic Number,NGit.Api,CommitCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitCommandTest.cs,CommitUpdatesSmudgedEntries,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(file3.SetLastModified(file3.LastModified() - 5000));
Magic Number,NGit.Api,CommitCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitCommandTest.cs,CommitUpdatesSmudgedEntries,The following statement contains a magic number: db.GetIndexFile().SetLastModified(indexTime - 5000);
Magic Number,NGit.Api,CommitCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitCommandTest.cs,CommitUpdatesSmudgedEntries,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(file1.SetLastModified(file1.LastModified() + 2500));
Magic Number,NGit.Api,CommitCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitCommandTest.cs,CommitIgnoresSmudgedEntryWithDifferentId,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(file1.SetLastModified(file1.LastModified() - 5000));
Magic Number,NGit.Api,CommitCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitCommandTest.cs,CommitIgnoresSmudgedEntryWithDifferentId,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(file2.SetLastModified(file2.LastModified() - 5000));
Magic Number,NGit.Api,CommitCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitCommandTest.cs,CommitIgnoresSmudgedEntryWithDifferentId,The following statement contains a magic number: db.GetIndexFile().SetLastModified(indexTime - 5000);
Magic Number,NGit.Api,CommitCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitCommandTest.cs,CommitIgnoresSmudgedEntryWithDifferentId,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(file1.SetLastModified(file1.LastModified() + 1000));
Magic Number,NGit.Api,CommitCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitCommandTest.cs,CommitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime,The following statement contains a magic number: DateTime authorDate = Sharpen.Extensions.CreateDate(1349621117000L);
Magic Number,NGit.Api,DiffCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\DiffCommandTest.cs,TestNoOutputStreamSet,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(file.SetLastModified(file.LastModified() - 5000));
Magic Number,NGit.Api,LogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\LogCommandTest.cs,LogAllCommitsWithMaxCount,The following statement contains a magic number: Iterator<RevCommit> log = git.Log().All().SetMaxCount(2).Call().Iterator();
Magic Number,NGit.Api,ReflogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ReflogCommandTest.cs,TestHeadReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' reflog.Count);
Magic Number,NGit.Api,ReflogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ReflogCommandTest.cs,TestHeadReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(reflogs[2].GetComment()' "commit: Initial commit" 				);
Magic Number,NGit.Api,ReflogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ReflogCommandTest.cs,TestHeadReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(reflogs[2].GetNewId()' commit1.Id);
Magic Number,NGit.Api,ReflogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ReflogCommandTest.cs,TestHeadReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(reflogs[2].GetOldId()' ObjectId.ZeroId);
Magic Number,NGit.Api,ReflogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ReflogCommandTest.cs,TestBranchReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' reflog.Count);
Magic Number,NGit.Api,ReflogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ReflogCommandTest.cs,TestAmendReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' reflog.Count);
Magic Number,NGit.Api,ReflogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ReflogCommandTest.cs,TestAmendReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(reflogs[3].GetComment()' "commit: Initial commit" 				);
Magic Number,NGit.Api,ReflogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ReflogCommandTest.cs,TestAmendReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(reflogs[3].GetNewId()' commit1.Id);
Magic Number,NGit.Api,ReflogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ReflogCommandTest.cs,TestAmendReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(reflogs[3].GetOldId()' ObjectId.ZeroId);
Magic Number,NGit.Api,ReflogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ReflogCommandTest.cs,TestAmendReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(reflogs[2].GetComment()' "checkout: moving from master to b1" 				);
Magic Number,NGit.Api,ReflogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ReflogCommandTest.cs,TestAmendReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(reflogs[2].GetNewId()' commit1.Id);
Magic Number,NGit.Api,ReflogCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ReflogCommandTest.cs,TestAmendReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(reflogs[2].GetOldId()' commit1.Id);
Magic Number,NGit.Api,StashListCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\StashListCommandTest.cs,MultipleStashedCommits,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' stashed.Count);
Magic Number,NGit.Api,HugeFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\HugeFileTest.cs,Measure,The following statement contains a magic number: System.Console.Out.WriteLine(name + "' dt=" + (c - lastt) / 1000.0 + "s");
Magic Number,NGit.Api,HugeFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\HugeFileTest.cs,TestAddHugeFile,The following statement contains a magic number: rf.SetLength(4429185024L);
Magic Number,NGit.Api,HugeFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\HugeFileTest.cs,TestAddHugeFile,The following statement contains a magic number: rf.SetLength(134217728L);
Magic Number,NGit.Api,HugeFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\HugeFileTest.cs,TestAddHugeFile,The following statement contains a magic number: rf.SetLength(3429185024L);
Magic Number,NGit.Api,ApplyCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\ApplyCommandTest.cs,ReadFile,The following statement contains a magic number: byte[] buf = new byte[1024];
Magic Number,NGit.Api,StashCreateCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\StashCreateCommandTest.cs,ValidateStashedCommit,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' commit.ParentCount);
Magic Number,NGit.Api,StashCreateCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\StashCreateCommandTest.cs,MultipleEdits,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' diffs.Count);
Magic Number,NGit.Api,StashDropCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\StashDropCommandTest.cs,DropWithInvalidLogIndex,The following statement contains a magic number: NUnit.Framework.Assert.IsNull(git.StashDrop().SetStashRef(100).Call());
Magic Number,NGit.Api,StashDropCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\StashDropCommandTest.cs,DropMiddleStashCommit,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Api,StashDropCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\StashDropCommandTest.cs,DropBoundaryStashedCommits,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(thirdStash' git.StashDrop().SetStashRef(2).Call() 				);
Magic Number,NGit.Api,StashDropCommandTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\StashDropCommandTest.cs,DropBoundaryStashedCommits,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Diff,DiffFormatterReflowTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterReflowTest.cs,TestContext3,The following statement contains a magic number: fmt.SetContext(3);
Magic Number,NGit.Diff,DiffFormatterReflowTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterReflowTest.cs,TestContext5,The following statement contains a magic number: fmt.SetContext(5);
Magic Number,NGit.Diff,DiffFormatterReflowTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterReflowTest.cs,TestContext10,The following statement contains a magic number: fmt.SetContext(10);
Magic Number,NGit.Diff,DiffFormatterReflowTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterReflowTest.cs,TestContext100,The following statement contains a magic number: fmt.SetContext(100);
Magic Number,NGit.Diff,DiffFormatterReflowTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterReflowTest.cs,ReadFile,The following statement contains a magic number: byte[] buf = new byte[1024];
Magic Number,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,SetUp,The following statement contains a magic number: df.SetAbbreviationLength(8);
Magic Number,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,TestCreateFileHeader_Add,The following statement contains a magic number: string diffHeader = "diff --git a/FOO b/FOO\n" + "new file mode " + REGULAR_FILE  				+ "\n" + "index " + ObjectId.ZeroId.Abbreviate(8).Name + ".." + adId.Abbreviate( 				8).Name + "\n" + "--- /dev/null\n" + "+++ b/FOO\n";
Magic Number,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,TestCreateFileHeader_Add,The following statement contains a magic number: string diffHeader = "diff --git a/FOO b/FOO\n" + "new file mode " + REGULAR_FILE  				+ "\n" + "index " + ObjectId.ZeroId.Abbreviate(8).Name + ".." + adId.Abbreviate( 				8).Name + "\n" + "--- /dev/null\n" + "+++ b/FOO\n";
Magic Number,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,TestCreateFileHeader_Add,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' e.GetEndB());
Magic Number,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,TestCreateFileHeader_Delete,The following statement contains a magic number: string diffHeader = "diff --git a/FOO b/FOO\n" + "deleted file mode " + REGULAR_FILE 				 + "\n" + "index " + adId.Abbreviate(8).Name + ".." + ObjectId.ZeroId.Abbreviate 				(8).Name + "\n" + "--- a/FOO\n" + "+++ /dev/null\n";
Magic Number,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,TestCreateFileHeader_Delete,The following statement contains a magic number: string diffHeader = "diff --git a/FOO b/FOO\n" + "deleted file mode " + REGULAR_FILE 				 + "\n" + "index " + adId.Abbreviate(8).Name + ".." + ObjectId.ZeroId.Abbreviate 				(8).Name + "\n" + "--- a/FOO\n" + "+++ /dev/null\n";
Magic Number,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,TestCreateFileHeader_Delete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' e.GetEndA());
Magic Number,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,TestCreateFileHeader_Modify,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' e.GetEndB());
Magic Number,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,MakeDiffHeader,The following statement contains a magic number: string a = aId.Abbreviate(8).Name;
Magic Number,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,MakeDiffHeader,The following statement contains a magic number: string b = bId.Abbreviate(8).Name;
Magic Number,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,MakeDiffHeaderModeChange,The following statement contains a magic number: string a = aId.Abbreviate(8).Name;
Magic Number,NGit.Diff,DiffFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffFormatterTest.cs,MakeDiffHeaderModeChange,The following statement contains a magic number: string b = bId.Abbreviate(8).Name;
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestAddOne,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 1);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestAddTwo,The following statement contains a magic number: Edit e1 = new Edit(1' 2' 1' 1);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestAddTwo,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestAddTwo,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestAddTwo,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestAddTwo,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestAddTwo,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' l.Count);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestSet,The following statement contains a magic number: Edit e1 = new Edit(1' 2' 1' 1);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestSet,The following statement contains a magic number: Edit e2 = new Edit(3' 4' 3' 3);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestSet,The following statement contains a magic number: Edit e2 = new Edit(3' 4' 3' 3);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestSet,The following statement contains a magic number: Edit e2 = new Edit(3' 4' 3' 3);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestSet,The following statement contains a magic number: Edit e2 = new Edit(3' 4' 3' 3);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestRemove,The following statement contains a magic number: Edit e1 = new Edit(1' 2' 1' 1);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestRemove,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestRemove,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestRemove,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,NGit.Diff,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditListTest.cs,TestRemove,The following statement contains a magic number: Edit e2 = new Edit(8' 8' 8' 12);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestCreate,The following statement contains a magic number: Edit e = new Edit(1' 2' 3' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestCreate,The following statement contains a magic number: Edit e = new Edit(1' 2' 3' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestCreate,The following statement contains a magic number: Edit e = new Edit(1' 2' 3' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestCreate,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' e.GetEndA());
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestCreate,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' e.GetBeginB());
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestCreate,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' e.GetEndB());
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestCreateEmpty,The following statement contains a magic number: Edit e = new Edit(1' 3);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestCreateEmpty,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' e.GetBeginB());
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestCreateEmpty,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' e.GetEndB());
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestSwap,The following statement contains a magic number: Edit e = new Edit(1' 2' 3' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestSwap,The following statement contains a magic number: Edit e = new Edit(1' 2' 3' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestSwap,The following statement contains a magic number: Edit e = new Edit(1' 2' 3' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestSwap,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' e.GetBeginA());
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestSwap,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' e.GetEndA());
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestSwap,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' e.GetEndB());
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestType_Insert,The following statement contains a magic number: Edit e = new Edit(1' 1' 1' 2);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestType_Delete,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 1);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestType_Replace,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestType_Replace,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestType_Replace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' e.GetLengthB());
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestType_Empty,The following statement contains a magic number: Edit e = new Edit(1' 1' 2' 2);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestType_Empty,The following statement contains a magic number: Edit e = new Edit(1' 1' 2' 2);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestType_Empty,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(Edit.Type.EMPTY' new Edit(1' 2).GetType());
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestToString,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestToString,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestEquals1,The following statement contains a magic number: Edit e1 = new Edit(1' 2' 3' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestEquals1,The following statement contains a magic number: Edit e1 = new Edit(1' 2' 3' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestEquals1,The following statement contains a magic number: Edit e1 = new Edit(1' 2' 3' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestEquals1,The following statement contains a magic number: Edit e2 = new Edit(1' 2' 3' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestEquals1,The following statement contains a magic number: Edit e2 = new Edit(1' 2' 3' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestEquals1,The following statement contains a magic number: Edit e2 = new Edit(1' 2' 3' 4);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals1,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(0' 2' 3' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals1,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(0' 2' 3' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals1,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(0' 2' 3' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals1,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(0' 2' 3' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals1,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(0' 2' 3' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals1,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(0' 2' 3' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals2,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 0' 3' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals2,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 0' 3' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals2,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 0' 3' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals2,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 0' 3' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals2,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 0' 3' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals3,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 0' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals3,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 0' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals3,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 0' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals3,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 0' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals3,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 0' 4)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals4,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 3' 0)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals4,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 3' 0)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals4,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 3' 0)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals4,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 3' 0)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestNotEquals4,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(new Edit(1' 2' 3' 4).Equals(new Edit(1' 2' 3' 0)));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestExtendA,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 1);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestExtendA,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 3' 1' 1)' e);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestExtendA,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 4' 1' 1)' e);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestExtendB,The following statement contains a magic number: Edit e = new Edit(1' 2' 1' 1);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestExtendB,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 2' 1' 2)' e);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestExtendB,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 2' 1' 2)' e);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestExtendB,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 2' 1' 3)' e);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestExtendB,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 2' 1' 3)' e);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: Edit whole = new Edit(1' 8' 2' 9);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: Edit whole = new Edit(1' 8' 2' 9);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: Edit whole = new Edit(1' 8' 2' 9);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: Edit mid = new Edit(4' 5' 3' 6);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: Edit mid = new Edit(4' 5' 3' 6);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: Edit mid = new Edit(4' 5' 3' 6);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: Edit mid = new Edit(4' 5' 3' 6);
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 4' 2' 3)' whole.Before(mid));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 4' 2' 3)' whole.Before(mid));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 4' 2' 3)' whole.Before(mid));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(5' 8' 6' 9)' whole.After(mid));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(5' 8' 6' 9)' whole.After(mid));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(5' 8' 6' 9)' whole.After(mid));
Magic Number,NGit.Diff,EditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\EditTest.cs,TestBeforeAfterCuts,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(5' 8' 6' 9)' whole.After(mid));
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' a.Size());
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' b.Size());
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(a' 3' b' 3));
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(a' 3' b' 3));
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(b' 3' a' 3));
Magic Number,NGit.Diff,RawTextIgnoreAllWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreAllWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(b' 3' a' 3));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' a.Size());
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' b.Size());
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(a' 3' b' 3));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(a' 3' b' 3));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(b' 3' a' 3));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(b' 3' a' 3));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 4' b' 4));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 4' b' 4));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 4' a' 4));
Magic Number,NGit.Diff,RawTextIgnoreLeadingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreLeadingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 4' a' 4));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' a.Size());
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' b.Size());
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(a' 3' b' 3));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(a' 3' b' 3));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(b' 3' a' 3));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(b' 3' a' 3));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 4' b' 4));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 4' b' 4));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 4' a' 4));
Magic Number,NGit.Diff,RawTextIgnoreTrailingWhitespaceTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreTrailingWhitespaceTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 4' a' 4));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' a.Size());
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' b.Size());
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithoutWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 2' b' 2));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 2' a' 2));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(a' 3' b' 3));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(a' 3' b' 3));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(b' 3' a' 3));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(b' 3' a' 3));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 4' b' 4));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(a' 4' b' 4));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 4' a' 4));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(cmp.Equals(b' 4' a' 4));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(a' 5' b' 5));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(a' 5' b' 5));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(b' 5' a' 5));
Magic Number,NGit.Diff,RawTextIgnoreWhitespaceChangeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextIgnoreWhitespaceChangeTest.cs,TestEqualsWithWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(cmp.Equals(b' 5' a' 5));
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestEquals,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' a.Size());
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestEquals,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' b.Size());
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: e = c.ReduceCommonStartEnd(T("axB")' T("axC")' new Edit(0' 3' 0' 3));
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: e = c.ReduceCommonStartEnd(T("axB")' T("axC")' new Edit(0' 3' 0' 3));
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 3)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 3)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 3)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 3)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: e = c.ReduceCommonStartEnd(T("Bxy")' T("Cxy")' new Edit(0' 3' 0' 3));
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: e = c.ReduceCommonStartEnd(T("Bxy")' T("Cxy")' new Edit(0' 3' 0' 3));
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: e = c.ReduceCommonStartEnd(T("bc")' T("Abc")' new Edit(0' 2' 0' 3));
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: e = c.ReduceCommonStartEnd(T("bc")' T("Abc")' new Edit(0' 2' 0' 3));
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: e = new Edit(0' 5' 0' 5);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: e = new Edit(0' 5' 0' 5);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 3)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 3)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 3)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 3)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: e = new Edit(0' 4' 0' 4);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: e = new Edit(0' 4' 0' 4);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 3)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 3)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 3)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 3)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd_EmptyLine,The following statement contains a magic number: e = new Edit(0' 2' 0' 3);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd_EmptyLine,The following statement contains a magic number: e = new Edit(0' 2' 0' 3);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd_EmptyLine,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(0' 1' 0' 2)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd_EmptyLine,The following statement contains a magic number: e = new Edit(0' 3' 0' 2);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd_EmptyLine,The following statement contains a magic number: e = new Edit(0' 3' 0' 2);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartEnd_EmptyLine,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(0' 2' 0' 1)' e);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartButLastLineNoEol_2,The following statement contains a magic number: e = new Edit(0' 1' 0' 2);
Magic Number,NGit.Diff,RawTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RawTextTest.cs,TestComparatorReduceCommonStartButLastLineNoEol_2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(0' 1' 0' 2)' e);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_OneRename,The following statement contains a magic number: AssertRename(b' a' 100' entries[0]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_DifferentObjects,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_DifferentObjects,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(q' entries[2]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_OneRenameOneModify,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_OneRenameOneModify,The following statement contains a magic number: AssertRename(b' a' 100' entries[0]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_ManyRenames,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_ManyRenames,The following statement contains a magic number: AssertRename(b' a' 100' entries[0]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_ManyRenames,The following statement contains a magic number: AssertRename(d' c' 100' entries[1]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_MultipleIdenticalDeletes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_MultipleIdenticalDeletes,The following statement contains a magic number: AssertRename(a' d' 100' entries[2]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_MultipleIdenticalDeletes,The following statement contains a magic number: AssertRename(a' d' 100' entries[2]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_PathBreaksTie,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_PathBreaksTie,The following statement contains a magic number: AssertRename(d' c' 100' entries[0]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_PathBreaksTie,The following statement contains a magic number: AssertRename(b' a' 100' entries[1]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_PathBreaksTie,The following statement contains a magic number: AssertCopy(d' e' 100' entries[2]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_PathBreaksTie,The following statement contains a magic number: AssertCopy(d' e' 100' entries[2]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_OneDeleteManyAdds,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_OneDeleteManyAdds,The following statement contains a magic number: AssertRename(d' c' 100' entries[0]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_OneDeleteManyAdds,The following statement contains a magic number: AssertCopy(d' a' 100' entries[1]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_OneDeleteManyAdds,The following statement contains a magic number: AssertCopy(d' b' 100' entries[2]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestExactRename_OneDeleteManyAdds,The following statement contains a magic number: AssertCopy(d' b' 100' entries[2]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestInexactRename_OnePair,The following statement contains a magic number: AssertRename(b' a' 66' entries[0]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestInexactRename_OneRenameTwoUnrelatedFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestInexactRename_OneRenameTwoUnrelatedFiles,The following statement contains a magic number: AssertRename(b' a' 66' entries[0]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestInexactRename_OneRenameTwoUnrelatedFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(d' entries[2]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestInexactRename_LastByteDifferent,The following statement contains a magic number: AssertRename(b' a' 88' entries[0]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestInexactRename_NewlinesOnly,The following statement contains a magic number: AssertRename(b' a' 74' entries[0]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestInexactRename_SameContentMultipleTimes,The following statement contains a magic number: AssertRename(b' a' 74' entries[0]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestInexactRenames_OnePair2,The following statement contains a magic number: rd.SetRenameScore(50);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestInexactRenames_OnePair2,The following statement contains a magic number: AssertRename(b' a' 57' entries[0]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestNoRenames_SingleByteFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestNoRenames_EmptyFile2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestNoRenames_SymlinkAndFile,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestNoRenames_GitlinkAndFile,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestNoRenames_SymlinkAndFileSamePath,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestBreakModify_BreakAll,The following statement contains a magic number: rd.SetBreakScore(101);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestBreakModify_BreakAll,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestBreakModify_BreakAll,The following statement contains a magic number: AssertRename(DiffEntry.BreakModify(m)[0]' a' 100' entries[1]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestBreakModify_BreakNone,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestBreakModify_BreakBelowScore,The following statement contains a magic number: rd.SetBreakScore(20);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestBreakModify_BreakBelowScore,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestBreakModify_BreakBelowScore,The following statement contains a magic number: AssertRename(DiffEntry.BreakModify(m)[0]' a' 100' entries[1]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestBreakModify_DontBreakAboveScore,The following statement contains a magic number: rd.SetBreakScore(20);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestBreakModify_DontBreakAboveScore,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestBreakModify_RejoinIfUnpaired,The following statement contains a magic number: rd.SetBreakScore(101);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestSetRenameScore_IllegalArgs,The following statement contains a magic number: rd.SetRenameScore(101);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestRenameLimit,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' entries.Count);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestRenameLimit,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(c' entries[2]);
Magic Number,NGit.Diff,RenameDetectorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\RenameDetectorTest.cs,TestRenameLimit,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(d' entries[3]);
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestIndexingSmallObject,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' si.Size());
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestIndexingSmallObject,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' si.Count(si.FindIndex(key_A)));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestIndexingSmallObject,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' si.Count(si.FindIndex(key_B)));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestIndexingSmallObject,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' si.Count(si.FindIndex(key_D)));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestIndexingLargeObject,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' si.Size());
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestCommonScore_SameFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' src.Common(dst));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestCommonScore_SameFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' dst.Common(src));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestCommonScore_SameFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(100' src.Score(dst' 100));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestCommonScore_SameFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(100' src.Score(dst' 100));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestCommonScore_SameFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(100' dst.Score(src' 100));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestCommonScore_SameFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(100' dst.Score(src' 100));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestCommonScore_SimiliarBy75,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' src.Common(dst));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestCommonScore_SimiliarBy75,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' dst.Common(src));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestCommonScore_SimiliarBy75,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(75' src.Score(dst' 100));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestCommonScore_SimiliarBy75,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(75' src.Score(dst' 100));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestCommonScore_SimiliarBy75,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(75' dst.Score(src' 100));
Magic Number,NGit.Diff,SimilarityIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\SimilarityIndexTest.cs,TestCommonScore_SimiliarBy75,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(75' dst.Score(src' 100));
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestCreateFile,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(0' 0' 0' 2)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDeleteFile,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(0' 2' 0' 0)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_InsertMiddle,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 1' 1' 2)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_DeleteMiddle,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 2' 1' 1)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_ReplaceMiddle,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 2' 1' 2)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_ReplaceMiddle,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 2' 1' 2)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_InsertsIntoMidPosition,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_InsertsIntoMidPosition,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_InsertsIntoMidPosition,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_InsertsIntoMidPosition,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_InsertEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_InsertEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_InsertEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_InsertEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_DeleteEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 2)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_DeleteEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 2)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_DeleteEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 2)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestDegenerate_DeleteEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 2)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_ReplaceCommonDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' r.Count);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_ReplaceCommonDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 2)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_ReplaceCommonDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 2)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_ReplaceCommonDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 2)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_ReplaceCommonDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 3' 2' 2)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_CommonReplaceCommonDeleteCommon,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' r.Count);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_CommonReplaceCommonDeleteCommon,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 2' 1' 2)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_CommonReplaceCommonDeleteCommon,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 2' 1' 2)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_CommonReplaceCommonDeleteCommon,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(3' 4' 3' 3)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_CommonReplaceCommonDeleteCommon,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(3' 4' 3' 3)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_CommonReplaceCommonDeleteCommon,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(3' 4' 3' 3)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_CommonReplaceCommonDeleteCommon,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(3' 4' 3' 3)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_MoveBlock,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' r.Count);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_MoveBlock,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 3' 1' 1)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_MoveBlock,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 6' 4' 6)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_MoveBlock,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 6' 4' 6)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_MoveBlock,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 6' 4' 6)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_MoveBlock,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 6' 4' 6)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InvertBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' r.Count);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InvertBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 3' 1' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InvertBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 3' 1' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InvertBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 8' 6' 8)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InvertBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 8' 6' 8)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InvertBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 8' 6' 8)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InvertBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 8' 6' 8)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_UniqueCommonLargerThanMatchPoint,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' r.Count);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_UniqueCommonLargerThanMatchPoint,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4' 5' 4' 6)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_UniqueCommonLargerThanMatchPoint,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4' 5' 4' 6)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_UniqueCommonLargerThanMatchPoint,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4' 5' 4' 6)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_UniqueCommonLargerThanMatchPoint,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4' 5' 4' 6)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_CommonGrowsPrefixAndSuffix,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' r.Count);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_CommonGrowsPrefixAndSuffix,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 7' 6' 7)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_CommonGrowsPrefixAndSuffix,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 7' 6' 7)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_CommonGrowsPrefixAndSuffix,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 7' 6' 7)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_CommonGrowsPrefixAndSuffix,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 7' 6' 7)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_DuplicateAButCommonUniqueInB,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' r.Count);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_DuplicateAButCommonUniqueInB,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(0' 2' 0' 1)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_DuplicateAButCommonUniqueInB,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4' 5' 3' 4)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_DuplicateAButCommonUniqueInB,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4' 5' 3' 4)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_DuplicateAButCommonUniqueInB,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4' 5' 3' 4)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_DuplicateAButCommonUniqueInB,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4' 5' 3' 4)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InsertNearCommonTail,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 1' 1' 2)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InsertNearCommonTail,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4' 4' 5' 8)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InsertNearCommonTail,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4' 4' 5' 8)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InsertNearCommonTail,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4' 4' 5' 8)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InsertNearCommonTail,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4' 4' 5' 8)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_InsertNearCommonTail,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' r.Count);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_LinuxBug,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_LinuxBug,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_LinuxBug,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_LinuxBug,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 3)' r[0]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_LinuxBug,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 6' 7' 8)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_LinuxBug,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 6' 7' 8)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_LinuxBug,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 6' 7' 8)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_LinuxBug,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(6' 6' 7' 8)' r[1]);
Magic Number,NGit.Diff,AbstractDiffTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\AbstractDiffTestCase.cs,TestEdit_LinuxBug,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' r.Count);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_FlipBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' r.Count);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_FlipBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 3' 1' 1)' r[0]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_FlipBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(5' 5' 3' 5)' r[1]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_FlipBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(5' 5' 3' 5)' r[1]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_FlipBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(5' 5' 3' 5)' r[1]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_FlipBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(5' 5' 3' 5)' r[1]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_Insert2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 4)' r[0]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_Insert2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 4)' r[0]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_Insert2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 4)' r[0]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_Insert2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(2' 2' 2' 4)' r[0]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_FlipAndExpand,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' r.Count);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_FlipAndExpand,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(1' 2' 1' 1)' r[0]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_FlipAndExpand,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(3' 3' 2' 5)' r[1]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_FlipAndExpand,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(3' 3' 2' 5)' r[1]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_FlipAndExpand,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(3' 3' 2' 5)' r[1]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_NoUniqueMiddleSide_FlipAndExpand,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(3' 3' 2' 5)' r[1]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_LcsContainsUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(9' 9' 10' 13)' r[1]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_LcsContainsUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(9' 9' 10' 13)' r[1]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_LcsContainsUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(9' 9' 10' 13)' r[1]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_LcsContainsUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(9' 9' 10' 13)' r[1]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_LcsContainsUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(10' 10' 14' 15)' r[2]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_LcsContainsUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(10' 10' 14' 15)' r[2]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_LcsContainsUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(10' 10' 14' 15)' r[2]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_LcsContainsUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(10' 10' 14' 15)' r[2]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_LcsContainsUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(10' 10' 14' 15)' r[2]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestEdit_LcsContainsUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' r.Count);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestExceedsChainLength_DuringScanOfA,The following statement contains a magic number: hd.SetMaxChainLength(3);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestExceedsChainLength_DuringScanOfA,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(0' 4' 0' 4)' r[0]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestExceedsChainLength_DuringScanOfA,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(0' 4' 0' 4)' r[0]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestExceedsChainLength_DuringScanOfB,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(0' 4' 0' 4)' r[0]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestExceedsChainLength_DuringScanOfB,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(0' 4' 0' 4)' r[0]);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestFallbackToMyersDiff,The following statement contains a magic number: hd.SetMaxChainLength(4);
Magic Number,NGit.Diff,HistogramDiffTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\HistogramDiffTest.cs,TestFallbackToMyersDiff,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' r.Count);
Magic Number,NGit.Diff,DiffEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffEntryTest.cs,ShouldListModificationInDirWithModifiedTrees,The following statement contains a magic number: Assert.AreEqual(3' result.Count);
Magic Number,NGit.Diff,DiffEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Diff\DiffEntryTest.cs,ShouldListModificationInDirWithModifiedTrees,The following statement contains a magic number: entry = result[2];
Magic Number,NGit.Dircache,DirCacheBasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBasicTest.cs,TestWriteEmptyUnlock_RealIndex,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(12 + 20' lck.Length());
Magic Number,NGit.Dircache,DirCacheBasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBasicTest.cs,TestWriteEmptyUnlock_RealIndex,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(12 + 20' lck.Length());
Magic Number,NGit.Dircache,DirCacheBasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBasicTest.cs,TestWriteEmptyCommit_RealIndex,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(12 + 20' lck.Length());
Magic Number,NGit.Dircache,DirCacheBasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBasicTest.cs,TestWriteEmptyCommit_RealIndex,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(12 + 20' lck.Length());
Magic Number,NGit.Dircache,DirCacheBasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBasicTest.cs,TestWriteEmptyCommit_RealIndex,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(12 + 20' idx.Length());
Magic Number,NGit.Dircache,DirCacheBasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBasicTest.cs,TestWriteEmptyCommit_RealIndex,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(12 + 20' idx.Length());
Magic Number,NGit.Dircache,DirCacheBasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBasicTest.cs,TestDetectUnmergedPaths,The following statement contains a magic number: DirCacheEntry[] ents = new DirCacheEntry[3];
Magic Number,NGit.Dircache,DirCacheBasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBasicTest.cs,TestDetectUnmergedPaths,The following statement contains a magic number: ents[1] = new DirCacheEntry("a"' 2);
Magic Number,NGit.Dircache,DirCacheBasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBasicTest.cs,TestDetectUnmergedPaths,The following statement contains a magic number: ents[2] = new DirCacheEntry("a"' 3);
Magic Number,NGit.Dircache,DirCacheBasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBasicTest.cs,TestDetectUnmergedPaths,The following statement contains a magic number: ents[2] = new DirCacheEntry("a"' 3);
Magic Number,NGit.Dircache,DirCacheBasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBasicTest.cs,TestDetectUnmergedPaths,The following statement contains a magic number: ents[2].FileMode = FileMode.REGULAR_FILE;
Magic Number,NGit.Dircache,DirCacheBuilderIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBuilderIteratorTest.cs,TestPathFilterGroup_DoesNotSkipTail,The following statement contains a magic number: int expIdx = 2;
Magic Number,NGit.Dircache,DirCacheBuilderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBuilderTest.cs,TestBuildOneFile_FinishWriteCommit,The following statement contains a magic number: long lastModified = 1218123387057L;
Magic Number,NGit.Dircache,DirCacheBuilderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBuilderTest.cs,TestBuildOneFile_FinishWriteCommit,The following statement contains a magic number: int length = 1342;
Magic Number,NGit.Dircache,DirCacheBuilderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBuilderTest.cs,TestBuildOneFile_Commit,The following statement contains a magic number: long lastModified = 1218123387057L;
Magic Number,NGit.Dircache,DirCacheBuilderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBuilderTest.cs,TestBuildOneFile_Commit,The following statement contains a magic number: int length = 1342;
Magic Number,NGit.Dircache,DirCacheBuilderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBuilderTest.cs,TestBuildOneFile_Commit_IndexChangedEvent,The following statement contains a magic number: long lastModified = 1218123387057L;
Magic Number,NGit.Dircache,DirCacheBuilderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBuilderTest.cs,TestBuildOneFile_Commit_IndexChangedEvent,The following statement contains a magic number: int length = 1342;
Magic Number,NGit.Dircache,DirCacheBuilderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheBuilderTest.cs,TestFindSingleFile,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(-2' dc.FindEntry("a-zoo"));
Magic Number,NGit.Dircache,DirCacheCGitCompatabilityTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,TestReadWriteV3,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(10' dc.GetEntryCount());
Magic Number,NGit.Dircache,DirCacheCGitCompatabilityTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,TestReadWriteV3,The following statement contains a magic number: AssertV3TreeEntry(2' "dir3/file3.txt"' false' false' dc);
Magic Number,NGit.Dircache,DirCacheCGitCompatabilityTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,TestReadWriteV3,The following statement contains a magic number: AssertV3TreeEntry(3' "dir3/file3a.txt"' true' false' dc);
Magic Number,NGit.Dircache,DirCacheCGitCompatabilityTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,TestReadWriteV3,The following statement contains a magic number: AssertV3TreeEntry(4' "dir4/file4.txt"' true' false' dc);
Magic Number,NGit.Dircache,DirCacheCGitCompatabilityTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,TestReadWriteV3,The following statement contains a magic number: AssertV3TreeEntry(5' "dir4/file4a.txt"' false' false' dc);
Magic Number,NGit.Dircache,DirCacheCGitCompatabilityTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,TestReadWriteV3,The following statement contains a magic number: AssertV3TreeEntry(6' "file.txt"' true' false' dc);
Magic Number,NGit.Dircache,DirCacheCGitCompatabilityTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,TestReadWriteV3,The following statement contains a magic number: AssertV3TreeEntry(7' "newdir1/newfile1.txt"' false' true' dc);
Magic Number,NGit.Dircache,DirCacheCGitCompatabilityTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,TestReadWriteV3,The following statement contains a magic number: AssertV3TreeEntry(8' "newdir1/newfile2.txt"' false' true' dc);
Magic Number,NGit.Dircache,DirCacheCGitCompatabilityTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,TestReadWriteV3,The following statement contains a magic number: AssertV3TreeEntry(9' "newfile.txt"' false' true' dc);
Magic Number,NGit.Dircache,CGitIndexRecord,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,CGitIndexRecord,The following statement contains a magic number: mode = System.Convert.ToInt32(Sharpen.Runtime.Substring(line' 0' sp1)' 8);
Magic Number,NGit.Dircache,CGitLsTreeRecord,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheCGitCompatabilityTest.cs,CGitLsTreeRecord,The following statement contains a magic number: mode = System.Convert.ToInt32(Sharpen.Runtime.Substring(line' 0' sp1)' 8);
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,TestCreate_ByStringPathAndStage,The following statement contains a magic number: e = new DirCacheEntry("a/c"' 2);
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,TestCreate_ByStringPathAndStage,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' e.Stage);
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,TestCreate_ByStringPathAndStage,The following statement contains a magic number: e = new DirCacheEntry("a/d"' 3);
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,TestCreate_ByStringPathAndStage,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' e.Stage);
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,TestCreate_ByStringPathAndStage,The following statement contains a magic number: new DirCacheEntry("a"' -11);
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,TestCreate_ByStringPathAndStage,The following statement contains a magic number: new DirCacheEntry("a"' 4);
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,CopyMetaDataHelper,The following statement contains a magic number: e.SetCreationTime(2L);
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,CopyMetaDataHelper,The following statement contains a magic number: e.LastModified = 3L;
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,CopyMetaDataHelper,The following statement contains a magic number: e.SetLength(100L);
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,CopyMetaDataHelper,The following statement contains a magic number: f.SetCreationTime(10L);
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,CopyMetaDataHelper,The following statement contains a magic number: f.LastModified = 20L;
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,CopyMetaDataHelper,The following statement contains a magic number: f.SetLength(100000000L);
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,CopyMetaDataHelper,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(10L' e.GetCreationTime());
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,CopyMetaDataHelper,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(20L' e.LastModified);
Magic Number,NGit.Dircache,DirCacheEntryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheEntryTest.cs,CopyMetaDataHelper,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(100000000L' e.Length);
Magic Number,NGit.Dircache,DirCacheFindTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheFindTest.cs,TestEntriesWithin,The following statement contains a magic number: int aLast = 3;
Magic Number,NGit.Dircache,DirCacheIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheIteratorTest.cs,TestSingleSubtree_NoRecursion,The following statement contains a magic number: int[] expPos = new int[] { 0' -1' 4 };
Magic Number,NGit.Dircache,DirCacheIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheIteratorTest.cs,TestRemovedSubtree,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' dc.GetEntryCount());
Magic Number,NGit.Dircache,DirCacheLargePathTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheLargePathTest.cs,TestPath_4090,The following statement contains a magic number: TestLongPath(4090);
Magic Number,NGit.Dircache,DirCacheLargePathTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheLargePathTest.cs,TestPath_4094,The following statement contains a magic number: TestLongPath(4094);
Magic Number,NGit.Dircache,DirCacheLargePathTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheLargePathTest.cs,TestPath_4095,The following statement contains a magic number: TestLongPath(4095);
Magic Number,NGit.Dircache,DirCacheLargePathTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheLargePathTest.cs,TestPath_4096,The following statement contains a magic number: TestLongPath(4096);
Magic Number,NGit.Dircache,DirCacheLargePathTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheLargePathTest.cs,TestPath_16384,The following statement contains a magic number: TestLongPath(16384);
Magic Number,NGit.Dircache,DirCacheLargePathTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheLargePathTest.cs,TestLongPath,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' dc1.GetEntryCount());
Magic Number,NGit.Dircache,DirCacheLargePathTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheLargePathTest.cs,TestLongPath,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' dc2.GetEntryCount());
Magic Number,NGit.Dircache,DirCacheLargePathTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheLargePathTest.cs,MakeLongPath,The following statement contains a magic number: r.Append('a' + (i % 26));
Magic Number,NGit.Dircache,DirCacheTreeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheTreeTest.cs,TestSingleSubtree,The following statement contains a magic number: int aLast = 3;
Magic Number,NGit.Dircache,DirCacheTreeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheTreeTest.cs,TestTwoLevelSubtree,The following statement contains a magic number: int aLast = 4;
Magic Number,NGit.Dircache,DirCacheTreeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheTreeTest.cs,TestTwoLevelSubtree,The following statement contains a magic number: int acFirst = 2;
Magic Number,NGit.Dircache,DirCacheTreeTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCacheTreeTest.cs,TestTwoLevelSubtree,The following statement contains a magic number: int acLast = 3;
Magic Number,NGit.Dircache,DirCachePathEditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCachePathEditTest.cs,TestAddDeletePathAndTreeNormalNames,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' dc.GetEntryCount());
Magic Number,NGit.Dircache,DirCachePathEditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCachePathEditTest.cs,TestAddDeletePathAndTreeNormalNames,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual("c/d"' dc.GetEntry(2).PathString);
Magic Number,NGit.Dircache,DirCachePathEditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCachePathEditTest.cs,TestAddDeletePathAndTreeNormalNames,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' dc.GetEntryCount());
Magic Number,NGit.Dircache,DirCachePathEditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCachePathEditTest.cs,TestAddDeleteTrickyNames,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' dc.GetEntryCount());
Magic Number,NGit.Dircache,DirCachePathEditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCachePathEditTest.cs,TestAddDeleteTrickyNames,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual("ab"' dc.GetEntry(2).PathString);
Magic Number,NGit.Dircache,DirCachePathEditTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Dircache\DirCachePathEditTest.cs,TestAddDeleteTrickyNames,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' dc.GetEntryCount());
Magic Number,NGit.Fnmatch,FileNameMatcherTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Fnmatch\FileNameMatcherTest.cs,TestCntrlGroupCase1,The following statement contains a magic number: AssertMatch("[[:cntrl:]]"' ((char)7).ToString()' true' false);
Magic Number,NGit.Junit,LocalDiskRepositoryTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\LocalDiskRepositoryTestCase.cs,SetUp,The following statement contains a magic number: c.SetPackedGitLimit(128 * WindowCacheConfig.KB);
Magic Number,NGit.Junit,LocalDiskRepositoryTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\LocalDiskRepositoryTestCase.cs,SetUp,The following statement contains a magic number: c.SetPackedGitWindowSize(8 * WindowCacheConfig.KB);
Magic Number,NGit.Junit,LocalDiskRepositoryTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\LocalDiskRepositoryTestCase.cs,SetUp,The following statement contains a magic number: c.SetDeltaBaseCacheLimit(8 * WindowCacheConfig.KB);
Magic Number,NGit.Junit,LocalDiskRepositoryTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\LocalDiskRepositoryTestCase.cs,Tick,The following statement contains a magic number: long delta = TimeUnit.MILLISECONDS.Convert(5 * 60' TimeUnit.SECONDS);
Magic Number,NGit.Junit,LocalDiskRepositoryTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\LocalDiskRepositoryTestCase.cs,Tick,The following statement contains a magic number: long delta = TimeUnit.MILLISECONDS.Convert(5 * 60' TimeUnit.SECONDS);
Magic Number,NGit.Junit,LocalDiskRepositoryTestCase,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\LocalDiskRepositoryTestCase.cs,PutPersonIdent,The following statement contains a magic number: string date = Sharpen.Runtime.Substring(ident' ident.IndexOf("> ") + 2);
Magic Number,NGit.Junit,MockSystemReader,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\MockSystemReader.cs,GetCurrentTime,The following statement contains a magic number: return 1250379778668L;
Magic Number,NGit.Junit,MockSystemReader,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\MockSystemReader.cs,GetTimezone,The following statement contains a magic number: return GetTimeZone().GetOffset(when) / (60 * 1000);
Magic Number,NGit.Junit,MockSystemReader,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\MockSystemReader.cs,GetTimezone,The following statement contains a magic number: return GetTimeZone().GetOffset(when) / (60 * 1000);
Magic Number,NGit.Junit,TestRepository<R>,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRepository.cs,TestRepository,The following statement contains a magic number: this.now = 1236977987000L;
Magic Number,NGit.Junit,TestRepository<R>,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRepository.cs,Tick,The following statement contains a magic number: now += secDelta * 1000L;
Magic Number,NGit.Junit,TestRng,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRng.cs,TestRng,The following statement contains a magic number: next = next * 11 + seed[i];
Magic Number,NGit.Junit,TestRng,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRng.cs,NextInt,The following statement contains a magic number: next = next * 1103515245 + 12345;
Magic Number,NGit.Junit,TestRng,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Junit\TestRng.cs,NextInt,The following statement contains a magic number: next = next * 1103515245 + 12345;
Magic Number,NGit.Merge,MergeAlgorithmTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Merge\MergeAlgorithmTest.cs,Merge,The following statement contains a magic number: ByteArrayOutputStream bo = new ByteArrayOutputStream(50);
Magic Number,NGit.Nls,NLSTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Nls\NLSTest.cs,TestParallelThreadsWithDifferentLocales,The following statement contains a magic number: CyclicBarrier barrier = new CyclicBarrier(2);
Magic Number,NGit.Nls,NLSTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Nls\NLSTest.cs,TestParallelThreadsWithDifferentLocales,The following statement contains a magic number: ExecutorService pool = Executors.NewFixedThreadPool(2);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestHunkHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' list0[0]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestHunkHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' list0[0]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestHunkHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' list0[0]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestHunkHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' list0[0]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestHunkHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' list1[0 				]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestHunkHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' list1[0 				]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestHunkHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' list1[0 				]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestHunkHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' list1[0 				]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestFileHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' e.Count);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestFileHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' e[0]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestFileHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' e[0]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestFileHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' e[0]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestFileHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(4 - 1' 5 - 1' 4 - 1' 5 - 1)' e[0]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestFileHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' e[1]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestFileHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' e[1]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestFileHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' e[1]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestFileHeader,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(16 - 1' 17 - 1' 16 - 1' 17 - 1)' e[1]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' e.Count);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(3 - 1' 3 - 1' 3 - 1' 4 - 1)' e[0]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(3 - 1' 3 - 1' 3 - 1' 4 - 1)' e[0]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(3 - 1' 3 - 1' 3 - 1' 4 - 1)' e[0]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(3 - 1' 3 - 1' 3 - 1' 4 - 1)' e[0]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(17 - 1' 19 - 1' 18 - 1' 18 - 1)' e[1]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(17 - 1' 19 - 1' 18 - 1' 18 - 1)' e[1]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(17 - 1' 19 - 1' 18 - 1' 18 - 1)' e[1]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(17 - 1' 19 - 1' 18 - 1' 18 - 1)' e[1]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(23 - 1' 25 - 1' 22 - 1' 28 - 1)' e[2]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(23 - 1' 25 - 1' 22 - 1' 28 - 1)' e[2]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(23 - 1' 25 - 1' 22 - 1' 28 - 1)' e[2]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(23 - 1' 25 - 1' 22 - 1' 28 - 1)' e[2]);
Magic Number,NGit.Patch,EditListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\EditListTest.cs,TestTypes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new Edit(23 - 1' 25 - 1' 22 - 1' 28 - 1)' e[2]);
Magic Number,NGit.Patch,FileHeaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\FileHeaderTest.cs,TestParseRename100_NewStyle,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(100' fh.GetScore());
Magic Number,NGit.Patch,FileHeaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\FileHeaderTest.cs,TestParseRename100_OldStyle,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(100' fh.GetScore());
Magic Number,NGit.Patch,FileHeaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\FileHeaderTest.cs,TestParseCopy100,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(100' fh.GetScore());
Magic Number,NGit.Patch,FileHeaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\FileHeaderTest.cs,TestParseAbbrIndexLine_WithMode,The following statement contains a magic number: int a = 7;
Magic Number,NGit.Patch,FileHeaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\FileHeaderTest.cs,TestParseAbbrIndexLine_NoMode,The following statement contains a magic number: int a = 7;
Magic Number,NGit.Patch,GetTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\GetTextTest.cs,TestGetText_BothISO88591,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' fh.GetHunks().Count);
Magic Number,NGit.Patch,GetTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\GetTextTest.cs,TestGetText_Convert,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' fh.GetHunks().Count);
Magic Number,NGit.Patch,GetTextTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\GetTextTest.cs,ReadTestPatchFile,The following statement contains a magic number: char[] tmp = new char[2048];
Magic Number,NGit.Patch,PatchCcErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcErrorTest.cs,TestError_CcTruncatedOld,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' p.GetErrors().Count);
Magic Number,NGit.Patch,PatchCcErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcErrorTest.cs,TestError_CcTruncatedOld,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(346' e.GetOffset());
Magic Number,NGit.Patch,PatchCcErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcErrorTest.cs,TestError_CcTruncatedOld,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(MessageFormat.Format(JGitText.Get().truncatedHunkLinesMissingForAncestor 					' Sharpen.Extensions.ValueOf(2)' Sharpen.Extensions.ValueOf(2))' e.GetMessage());
Magic Number,NGit.Patch,PatchCcErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcErrorTest.cs,TestError_CcTruncatedOld,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(MessageFormat.Format(JGitText.Get().truncatedHunkLinesMissingForAncestor 					' Sharpen.Extensions.ValueOf(2)' Sharpen.Extensions.ValueOf(2))' e.GetMessage());
Magic Number,NGit.Patch,PatchCcErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcErrorTest.cs,TestError_CcTruncatedOld,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(346' e.GetOffset());
Magic Number,NGit.Patch,PatchCcErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcErrorTest.cs,TestError_CcTruncatedOld,The following statement contains a magic number: FormatError e = p.GetErrors()[2];
Magic Number,NGit.Patch,PatchCcErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcErrorTest.cs,TestError_CcTruncatedOld,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(346' e.GetOffset());
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(98' cfh.startOffset);
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' cfh.GetParentCount());
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(346' h.startOffset);
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(764' h.endOffset);
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(55' h.GetOldImage(0).GetStartLine());
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(12' h.GetOldImage(0).GetLineCount());
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' h.GetOldImage(0).GetLinesAdded());
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(163' h.GetOldImage(1).GetStartLine());
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(13' h.GetOldImage(1).GetLineCount());
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' h.GetOldImage(1).GetLinesAdded());
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(163' h.GetNewStartLine());
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(15' h.GetNewLineCount());
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_OneFileCc,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(10' h.GetLinesContext());
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_CcNewFile,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(187' cfh.startOffset);
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_CcNewFile,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' cfh.GetParentCount());
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_CcNewFile,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(273' h.startOffset);
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_CcNewFile,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(300' h.endOffset);
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_CcDeleteFile,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(187' cfh.startOffset);
Magic Number,NGit.Patch,PatchCcTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchCcTest.cs,TestParse_CcDeleteFile,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' cfh.GetParentCount());
Magic Number,NGit.Patch,PatchErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchErrorTest.cs,TestError_DisconnectedHunk,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(18' e.GetOffset());
Magic Number,NGit.Patch,PatchErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchErrorTest.cs,TestError_TruncatedOld,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(313' e.GetOffset());
Magic Number,NGit.Patch,PatchErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchErrorTest.cs,TestError_TruncatedNew,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(313' e.GetOffset());
Magic Number,NGit.Patch,PatchErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchErrorTest.cs,TestError_BodyTooLong,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(349' e.GetOffset());
Magic Number,NGit.Patch,PatchErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchErrorTest.cs,TestError_GarbageBetweenFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' p.GetFiles().Count);
Magic Number,NGit.Patch,PatchErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchErrorTest.cs,TestError_GarbageBetweenFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(926' e.GetOffset());
Magic Number,NGit.Patch,PatchErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchErrorTest.cs,TestError_GitBinaryNoForwardHunk,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' p.GetFiles().Count);
Magic Number,NGit.Patch,PatchErrorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchErrorTest.cs,TestError_GitBinaryNoForwardHunk,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(297' e.GetOffset());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' p.GetFiles().Count);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(572' fRepositoryConfigTest.startOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1490' fRepositoryConfig.startOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(921' h.startOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(109' h.GetOldImage().GetStartLine());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' h.GetOldImage().GetLineCount());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(109' h.GetNewStartLine());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(11' h.GetNewLineCount());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' h.GetLinesContext());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(7' h.GetOldImage().GetLinesAdded());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1490' h.endOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' fRepositoryConfig.GetHunks().Count);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1803' h.startOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(236' h.GetOldImage().GetStartLine());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(9' h.GetOldImage().GetLineCount());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(236' h.GetNewStartLine());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(9' h.GetNewLineCount());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(7' h.GetLinesContext());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' h.GetOldImage().GetLinesAdded());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' h.GetOldImage().GetLinesDeleted());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2434' h.endOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2434' h.startOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(300' h.GetOldImage().GetStartLine());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(7' h.GetOldImage().GetLineCount());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(300' h.GetNewStartLine());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(7' h.GetNewLineCount());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' h.GetLinesContext());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2816' h.endOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: HunkHeader h = fRepositoryConfig.GetHunks()[2];
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2816' h.startOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(954' h.GetOldImage().GetStartLine());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(7' h.GetOldImage().GetLineCount());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(954' h.GetNewStartLine());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(7' h.GetNewLineCount());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' h.GetLinesContext());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_ConfigCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3035' h.endOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_NoBinary,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' p.GetFiles().Count);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_NoBinary,The following statement contains a magic number: i < 4
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_NoBinary,The following statement contains a magic number: FileHeader fh_1 = p.GetFiles()[4];
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_NoBinary,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(272' fh_1.GetHunks()[0].GetOldImage().GetStartLine 				());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_GitBinaryLiteral,The following statement contains a magic number: int[] binsizes = new int[] { 359' 393' 372' 404 };
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_GitBinaryLiteral,The following statement contains a magic number: int[] binsizes = new int[] { 359' 393' 372' 404 };
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_GitBinaryLiteral,The following statement contains a magic number: int[] binsizes = new int[] { 359' 393' 372' 404 };
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_GitBinaryLiteral,The following statement contains a magic number: int[] binsizes = new int[] { 359' 393' 372' 404 };
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_GitBinaryLiteral,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' p.GetFiles().Count);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_GitBinaryLiteral,The following statement contains a magic number: i < 4
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_GitBinaryLiteral,The following statement contains a magic number: FileHeader fh_1 = p.GetFiles()[4];
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_GitBinaryLiteral,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(272' fh_1.GetHunks()[0].GetOldImage().GetStartLine 				());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_GitBinaryDelta,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(12' fwd.GetSize());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_GitBinaryDelta,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(11' rev.GetSize());
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_GitBinaryDelta,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(496' fh.endOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_FixNoNewline,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(252' f.startOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_FixNoNewline,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(317' h.startOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_FixNoNewline,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(363' h.endOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_AddNoNewline,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(256' f.startOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_AddNoNewline,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(321' h.startOffset);
Magic Number,NGit.Patch,PatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Patch\PatchTest.cs,TestParse_AddNoNewline,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(367' h.endOffset);
Magic Number,NGit.Revwalk,DateRevQueueTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\DateRevQueueTest.cs,TestInsertOutOfOrder,The following statement contains a magic number: RevCommit b = ParseBody(Commit(10' a));
Magic Number,NGit.Revwalk,DateRevQueueTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\DateRevQueueTest.cs,TestInsertOutOfOrder,The following statement contains a magic number: RevCommit c1 = ParseBody(Commit(5' b));
Magic Number,NGit.Revwalk,DateRevQueueTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\DateRevQueueTest.cs,TestInsertOutOfOrder,The following statement contains a magic number: RevCommit c2 = ParseBody(Commit(-50' b));
Magic Number,NGit.Revwalk,DateRevQueueTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\DateRevQueueTest.cs,TestCloneFIFO,The following statement contains a magic number: RevCommit b = ParseBody(Commit(200' a));
Magic Number,NGit.Revwalk,DateRevQueueTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\DateRevQueueTest.cs,TestCloneFIFO,The following statement contains a magic number: RevCommit c = ParseBody(Commit(200' b));
Magic Number,NGit.Revwalk,FIFORevQueueTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\FIFORevQueueTest.cs,TestAddLargeBlocks,The following statement contains a magic number: i < 3 * BlockRevQueue.Block.BLOCK_SIZE
Magic Number,NGit.Revwalk,FooterLineTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\FooterLineTest.cs,TestSignedOffBy_ManyUsers,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' footers.Count);
Magic Number,NGit.Revwalk,FooterLineTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\FooterLineTest.cs,TestSignedOffBy_ManyUsers,The following statement contains a magic number: f = footers[2];
Magic Number,NGit.Revwalk,FooterLineTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\FooterLineTest.cs,TestSignedOffBy_ManyUsers,The following statement contains a magic number: f = footers[3];
Magic Number,NGit.Revwalk,FooterLineTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\FooterLineTest.cs,TestSignedOffBy_SkipNonFooter,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' footers.Count);
Magic Number,NGit.Revwalk,FooterLineTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\FooterLineTest.cs,TestSignedOffBy_SkipNonFooter,The following statement contains a magic number: f = footers[2];
Magic Number,NGit.Revwalk,FooterLineTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\FooterLineTest.cs,TestSignedOffBy_SkipNonFooter,The following statement contains a magic number: f = footers[3];
Magic Number,NGit.Revwalk,FooterLineTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\FooterLineTest.cs,TestFilterFootersIgnoreCase,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' footers.Count);
Magic Number,NGit.Revwalk,LIFORevQueueTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\LIFORevQueueTest.cs,TestAddLargeBlocks,The following statement contains a magic number: i < 3 * BlockRevQueue.Block.BLOCK_SIZE
Magic Number,NGit.Revwalk,RevCommitParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitParseTest.cs,TestParse_NoParents,The following statement contains a magic number: int authorTime = 1218123387;
Magic Number,NGit.Revwalk,RevCommitParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitParseTest.cs,TestParse_NoParents,The following statement contains a magic number: int committerTime = 1218123390;
Magic Number,NGit.Revwalk,RevCommitParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitParseTest.cs,TestParse_NoParents,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual((long)authorTime * 1000' cAuthor.GetWhen().GetTime 				());
Magic Number,NGit.Revwalk,RevCommitParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitParseTest.cs,TestParse_NoParents,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual((long)committerTime * 1000' cCommitter.GetWhen(). 				GetTime());
Magic Number,NGit.Revwalk,RevCommitParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitParseTest.cs,TestParse_incompleteAuthorAndCommitter,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(string.Empty' "a_u_thor@example.com" 				' 1218123387000l' 7)' c.GetAuthorIdent());
Magic Number,NGit.Revwalk,RevCommitParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitParseTest.cs,TestParse_incompleteAuthorAndCommitter,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(string.Empty' "a_u_thor@example.com" 				' 1218123387000l' 7)' c.GetAuthorIdent());
Magic Number,NGit.Revwalk,RevCommitParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitParseTest.cs,TestParse_incompleteAuthorAndCommitter,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(string.Empty' string.Empty' 1218123390000l 				' -5)' c.GetCommitterIdent());
Magic Number,NGit.Revwalk,RevCommitParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitParseTest.cs,TestParse_incompleteAuthorAndCommitter,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(string.Empty' string.Empty' 1218123390000l 				' -5)' c.GetCommitterIdent());
Magic Number,NGit.Revwalk,RevFlagSetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevFlagSetTest.cs,TestAddTwo,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' set.Count);
Magic Number,NGit.Revwalk,RevTagParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevTagParseTest.cs,TestParseAllFields,The following statement contains a magic number: int taggerTime = 1218123387;
Magic Number,NGit.Revwalk,RevWalkCullTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkCullTest.cs,TestProperlyCullAllAncestors1,The following statement contains a magic number: RevCommit b = Commit(-2400' a);
Magic Number,NGit.Revwalk,RevWalkCullTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkCullTest.cs,TestProperlyCullAllAncestors2,The following statement contains a magic number: RevCommit c1 = Commit(-5' b);
Magic Number,NGit.Revwalk,RevWalkCullTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkCullTest.cs,TestProperlyCullAllAncestors2,The following statement contains a magic number: RevCommit c2 = Commit(10' b);
Magic Number,NGit.Revwalk,RevWalkCullTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkCullTest.cs,TestProperlyCullAllAncestors_LongHistory,The following statement contains a magic number: (i & 2) == 0
Magic Number,NGit.Revwalk,RevWalkCullTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkCullTest.cs,TestProperlyCullAllAncestors_LongHistory,The following statement contains a magic number: i < 24
Magic Number,NGit.Revwalk,RevWalkFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkFilterTest.cs,TestCommitTimeRevFilter,The following statement contains a magic number: Tick(100);
Magic Number,NGit.Revwalk,RevWalkFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkFilterTest.cs,TestCommitTimeRevFilter,The following statement contains a magic number: Tick(100);
Magic Number,NGit.Revwalk,RevWalkFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkFilterTest.cs,TestCommitTimeRevFilter,The following statement contains a magic number: Tick(100);
Magic Number,NGit.Revwalk,RevWalkFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkFilterTest.cs,TestCommitTimeRevFilter,The following statement contains a magic number: Tick(100);
Magic Number,NGit.Revwalk,RevWalkFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkFilterTest.cs,TestCommitTimeRevFilter,The following statement contains a magic number: Tick(100);
Magic Number,NGit.Revwalk,RevWalkSortTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkSortTest.cs,TestSort_COMMIT_TIME_DESC_OutOfOrder1,The following statement contains a magic number: RevCommit c = Commit(-5' b);
Magic Number,NGit.Revwalk,RevWalkSortTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkSortTest.cs,TestSort_COMMIT_TIME_DESC_OutOfOrder1,The following statement contains a magic number: RevCommit d = Commit(10' c);
Magic Number,NGit.Revwalk,RevWalkSortTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkSortTest.cs,TestSort_COMMIT_TIME_DESC_OutOfOrder2,The following statement contains a magic number: RevCommit c1 = Commit(-5' b);
Magic Number,NGit.Revwalk,RevWalkSortTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkSortTest.cs,TestSort_COMMIT_TIME_DESC_OutOfOrder2,The following statement contains a magic number: RevCommit c2 = Commit(10' b);
Magic Number,NGit.Revwalk,RevWalkSortTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkSortTest.cs,TestSort_TOPO,The following statement contains a magic number: RevCommit c1 = Commit(-5' b);
Magic Number,NGit.Revwalk,RevWalkSortTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkSortTest.cs,TestSort_TOPO,The following statement contains a magic number: RevCommit c2 = Commit(10' b);
Magic Number,NGit.Revwalk,RevWalkSortTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkSortTest.cs,TestSort_TOPO_REVERSE,The following statement contains a magic number: RevCommit c1 = Commit(-5' b);
Magic Number,NGit.Revwalk,RevWalkSortTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkSortTest.cs,TestSort_TOPO_REVERSE,The following statement contains a magic number: RevCommit c2 = Commit(10' b);
Magic Number,NGit.Revwalk,MaxCountRevFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\MaxCountRevFilterTest.cs,TestMaxCountRevFilter,The following statement contains a magic number: rw.SetRevFilter(MaxCountRevFilter.Create(3));
Magic Number,NGit.Revwalk,RevWalkFollowFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkFollowFilterTest.cs,AssertRenames,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' split.Length);
Magic Number,NGit.Revwalk,RevWalkUtilsCountTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkUtilsCountTest.cs,ShouldWorkWithMerges,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' Count(c' a));
Magic Number,NGit.Revwalk,RevWalkUtilsCountTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkUtilsCountTest.cs,ShouldWorkWithoutCommonAncestor,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' Count(b' a2));
Magic Number,NGit.Revwalk,RevWalkUtilsCountTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevWalkUtilsCountTest.cs,ShouldWorkWithZeroAsEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' Count(c' null));
Magic Number,NGit.Revwalk,SkipRevFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\SkipRevFilterTest.cs,TestSkipRevFilter,The following statement contains a magic number: rw.SetRevFilter(SkipRevFilter.Create(3));
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMark2,The following statement contains a magic number: Setup(3);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMark2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' list.Count);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMark2,The following statement contains a magic number: NUnit.Framework.Assert.IsNull(list[2]' "commit 0 shouldn't be loaded");
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMarkAll,The following statement contains a magic number: Setup(3);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMarkAll,The following statement contains a magic number: list.FillTo(2);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMarkAll,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' list.Count);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMarkAll,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual("commit 0"' list[2].GetFullMessage());
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMark4,The following statement contains a magic number: Setup(3);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMark4,The following statement contains a magic number: list.FillTo(3);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMark4,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' list.Count);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMark4,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual("commit 0"' list[2].GetFullMessage());
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMark4,The following statement contains a magic number: NUnit.Framework.Assert.IsNull(list[3]' "commit 3 can't be loaded");
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMarkMulitpleBlocks,The following statement contains a magic number: Setup(258);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMarkMulitpleBlocks,The following statement contains a magic number: list.FillTo(257);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToHighMarkMulitpleBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(258' list.Count);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToCommit,The following statement contains a magic number: Setup(3);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToCommit,The following statement contains a magic number: list.FillTo(c' 5);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToCommit,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' list.Count);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToCommit,The following statement contains a magic number: NUnit.Framework.Assert.IsNull(list[3]);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToUnknownCommit,The following statement contains a magic number: Setup(258);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToUnknownCommit,The following statement contains a magic number: list.FillTo(c' 300);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToUnknownCommit,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(258' list.Count' "loading to unknown commit should load all commits" 				);
Magic Number,NGit.Revwalk,RevCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revwalk\RevCommitListTest.cs,TestFillToNullCommit,The following statement contains a magic number: Setup(3);
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateOnEmptyRepository,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(2)' reader.Abbreviate(id' 2));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateOnEmptyRepository,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(2)' reader.Abbreviate(id' 2));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateOnEmptyRepository,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(7)' reader.Abbreviate(id' 7));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateOnEmptyRepository,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(7)' reader.Abbreviate(id' 7));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateOnEmptyRepository,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(8)' reader.Abbreviate(id' 8));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateOnEmptyRepository,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(8)' reader.Abbreviate(id' 8));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateOnEmptyRepository,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(10)' reader.Abbreviate(id' 10));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateOnEmptyRepository,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(10)' reader.Abbreviate(id' 10));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateOnEmptyRepository,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(16)' reader.Abbreviate(id' 16));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateOnEmptyRepository,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(16)' reader.Abbreviate(id' 16));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateOnEmptyRepository,The following statement contains a magic number: matches = reader.Resolve(reader.Abbreviate(id' 8));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateLooseBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(2)' reader.Abbreviate(id' 2));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateLooseBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(2)' reader.Abbreviate(id' 2));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateLooseBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(7)' reader.Abbreviate(id' 7));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateLooseBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(7)' reader.Abbreviate(id' 7));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateLooseBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(8)' reader.Abbreviate(id' 8));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateLooseBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(8)' reader.Abbreviate(id' 8));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateLooseBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(10)' reader.Abbreviate(id' 10));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateLooseBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(10)' reader.Abbreviate(id' 10));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateLooseBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(16)' reader.Abbreviate(id' 16));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateLooseBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(16)' reader.Abbreviate(id' 16));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateLooseBlob,The following statement contains a magic number: ICollection<ObjectId> matches = reader.Resolve(reader.Abbreviate(id' 8));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateLooseBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id' db.Resolve(reader.Abbreviate(id' 8).Name));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviatePackedBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(7)' reader.Abbreviate(id' 7));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviatePackedBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(7)' reader.Abbreviate(id' 7));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviatePackedBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(8)' reader.Abbreviate(id' 8));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviatePackedBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(8)' reader.Abbreviate(id' 8));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviatePackedBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(10)' reader.Abbreviate(id' 10));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviatePackedBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(10)' reader.Abbreviate(id' 10));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviatePackedBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(16)' reader.Abbreviate(id' 16));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviatePackedBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(16)' reader.Abbreviate(id' 16));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviatePackedBlob,The following statement contains a magic number: ICollection<ObjectId> matches = reader.Resolve(reader.Abbreviate(id' 8));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviatePackedBlob,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id' db.Resolve(reader.Abbreviate(id' 8).Name));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateIsActuallyUnique,The following statement contains a magic number: idBuf[9] = unchecked((byte)i);
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateIsActuallyUnique,The following statement contains a magic number: i < 256
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateIsActuallyUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(20)' reader.Abbreviate(id' 2));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateIsActuallyUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id.Abbreviate(20)' reader.Abbreviate(id' 2));
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateIsActuallyUnique,The following statement contains a magic number: AbbreviatedObjectId abbrev8 = id.Abbreviate(8);
Magic Number,NGit.Storage.File,AbbreviationTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\AbbreviationTest.cs,TestAbbreviateIsActuallyUnique,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(id' db.Resolve(id.Abbreviate(20).Name));
Magic Number,NGit.Storage.File,ConcurrentRepackTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ConcurrentRepackTest.cs,Touch,The following statement contains a magic number: Sharpen.Thread.Sleep(25);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,TestWhole_SmallObject,The following statement contains a magic number: byte[] data = GetRng().NextBytes(300);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,TestWhole_LargeObject,The following statement contains a magic number: byte[] data = GetRng().NextBytes(streamThreshold + 5);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,TestDelta_SmallObjectChain,The following statement contains a magic number: byte[] data0 = new byte[512];
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,TestDelta_SmallObjectChain,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(64 * 1024);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,TestDelta_SmallObjectChain,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(64 * 1024);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,TestDelta_SmallObjectChain,The following statement contains a magic number: PackHeader(pack' 4);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,TestDelta_LargeObjectChain,The following statement contains a magic number: byte[] data0 = new byte[streamThreshold + 5];
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,TestDelta_LargeObjectChain,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(64 * 1024);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,TestDelta_LargeObjectChain,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(64 * 1024);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,TestDelta_LargeObjectChain,The following statement contains a magic number: PackHeader(pack' 4);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,PackHeader,The following statement contains a magic number: byte[] hdr = new byte[8];
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,PackHeader,The following statement contains a magic number: NB.EncodeInt32(hdr' 0' 2);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,PackHeader,The following statement contains a magic number: NB.EncodeInt32(hdr' 4' cnt);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,PackHeader,The following statement contains a magic number: pack.Write(hdr' 0' 8);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,ObjectHeader,The following statement contains a magic number: byte[] buf = new byte[8];
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,ObjectHeader,The following statement contains a magic number: int nextLength = (int)(((uint)sz) >> 4);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,ObjectHeader,The following statement contains a magic number: buf[0] = unchecked((byte)((nextLength > 0 ? unchecked((int)(0x80)) : unchecked((int 				)(0x00))) | (type << 4) | (sz & unchecked((int)(0x0F)))));
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,ObjectHeader,The following statement contains a magic number: nextLength = (int)(((uint)nextLength) >> 7);
Magic Number,NGit.Storage.File,PackFileTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackFileTest.cs,Deflate,The following statement contains a magic number: byte[] buf = new byte[128];
Magic Number,NGit.Storage.File,PackWriterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackWriterTest.cs,TestWriteIndex,The following statement contains a magic number: config.SetIndexVersion(2);
Magic Number,NGit.Storage.File,PackWriterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackWriterTest.cs,WriteVerifyPack2,The following statement contains a magic number: ObjectId temp = expectedOrder[4];
Magic Number,NGit.Storage.File,PackWriterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackWriterTest.cs,WriteVerifyPack2,The following statement contains a magic number: expectedOrder[4] = expectedOrder[5];
Magic Number,NGit.Storage.File,PackWriterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackWriterTest.cs,WriteVerifyPack2,The following statement contains a magic number: expectedOrder[4] = expectedOrder[5];
Magic Number,NGit.Storage.File,PackWriterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackWriterTest.cs,WriteVerifyPack2,The following statement contains a magic number: expectedOrder[5] = temp;
Magic Number,NGit.Storage.File,PackWriterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackWriterTest.cs,WriteVerifyPack4,The following statement contains a magic number: expectedObjects = new ObjectId[4];
Magic Number,NGit.Storage.File,PackWriterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackWriterTest.cs,WriteVerifyPack4,The following statement contains a magic number: expectedObjects[3] = ObjectId.FromString("6ff87c4664981e4397625791c8ea3bbb5f2279a3" 					);
Magic Number,NGit.Storage.File,PackWriterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\PackWriterTest.cs,VerifyOpenPack,The following statement contains a magic number: p_1.SetIndexVersion(2);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestCreate,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' new FilePath(d' "refs").List().Length);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_HeadOnOneBranch,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' all.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DeatchedHead2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' all.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_HeadBranchNotBorn,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' all.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_IgnoresGarbageRef4,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' heads.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_IgnoresGarbageRef4,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' heads.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_HeadsOnly_AllLoose,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' heads.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_HeadsOnly_SymrefToPacked,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' heads.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_HeadsOnly_Mixed,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' heads.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_LooseSortedCorrectly,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' refs.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_LooseSorting_Bug_348834,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' refs.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DiscoversNewLoose1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' orig.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DiscoversNewLoose1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' next.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DiscoversNewLoose2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' next.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DiscoversDeletedLoose1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' orig.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DiscoversDeletedLoose1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' next.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DiscoversDeletedLoose2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' orig.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DiscoversDeletedLoose2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' next.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DiscoversDeletedLoose3,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' orig.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DiscoversDeletedLoose3,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' next.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DiscoversDeletedLoose4,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' orig.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DiscoversDeletedLoose5,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' orig.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_DiscoversDeletedLoose5,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' next.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_SkipsLockFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' all.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_PackedNotPeeled_Sorted,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' all.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,TestGetRefs_PackedWithPeeled,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' all.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,Test_repack,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' all.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,Test_repack,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' all.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,Test_repack,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' all.Count);
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,WritePackedRefs,The following statement contains a magic number: int oneHourAgo = 3600 * 1000;
Magic Number,NGit.Storage.File,RefDirectoryTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefDirectoryTest.cs,WritePackedRefs,The following statement contains a magic number: int oneHourAgo = 3600 * 1000;
Magic Number,NGit.Storage.File,RefUpdateTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefUpdateTest.cs,TestUpdateRefDetached,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1250379778000L' e.GetWho().GetWhen().GetTime());
Magic Number,NGit.Storage.File,RefUpdateTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefUpdateTest.cs,TestUpdateRefDetachedUnbornHead,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1250379778000L' e.GetWho().GetWhen().GetTime());
Magic Number,NGit.Storage.File,RefUpdateTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefUpdateTest.cs,TestRenameBranchHasPreviousLog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' db.GetReflogReader("new/name").GetReverseEntries 				().Count);
Magic Number,NGit.Storage.File,RefUpdateTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefUpdateTest.cs,TestRenameCurrentBranch,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' db.GetReflogReader("new/name").GetReverseEntries 				().Count);
Magic Number,NGit.Storage.File,RefUpdateTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefUpdateTest.cs,TestRenameBranchAlsoInPack,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' db.GetReflogReader("refs/heads/new/name").GetReverseEntries 				().Count);
Magic Number,NGit.Storage.File,RefUpdateTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefUpdateTest.cs,TestRenameRefNameColission1avoided,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' db.GetReflogReader("a/b").GetReverseEntries(). 				Count);
Magic Number,NGit.Storage.File,RefUpdateTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefUpdateTest.cs,TestRenameRefNameColission1avoided,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual("Setup"' db.GetReflogReader("a/b").GetReverseEntries 				()[2].GetComment());
Magic Number,NGit.Storage.File,RefUpdateTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefUpdateTest.cs,TestRenameRefNameColission2avoided,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' db.GetReflogReader("prefix").GetReverseEntries 				().Count);
Magic Number,NGit.Storage.File,RefUpdateTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\RefUpdateTest.cs,TestRenameRefNameColission2avoided,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual("Setup"' db.GetReflogReader("prefix").GetReverseEntries 				()[2].GetComment());
Magic Number,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestReadOneLine,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(120' e.GetWho().GetTimeZoneOffset());
Magic Number,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestReadTwoLine,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' reverseEntries.Count);
Magic Number,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestReadTwoLine,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(60' e.GetWho().GetTimeZoneOffset());
Magic Number,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestReadTwoLine,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(-60' e.GetWho().GetTimeZoneOffset());
Magic Number,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestReadWhileAppendIsInProgress,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' reverseEntries.Count);
Magic Number,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestReadWhileAppendIsInProgress,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(60' e.GetWho().GetTimeZoneOffset());
Magic Number,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestReadLineWithMissingComment,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(120' e.GetWho().GetTimeZoneOffset());
Magic Number,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestSpecificEntryNumber,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(60' e.GetWho().GetTimeZoneOffset());
Magic Number,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestSpecificEntryNumber,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(-60' e.GetWho().GetTimeZoneOffset());
Magic Number,NGit.Storage.File,ReflogReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\ReflogReaderTest.cs,TestSpecificEntryNumber,The following statement contains a magic number: NUnit.Framework.Assert.IsNull(reader.GetReverseEntry(3));
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestStandardFormat_SmallObject,The following statement contains a magic number: byte[] data = GetRng().NextBytes(300);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestStandardFormat_LargeObject,The following statement contains a magic number: byte[] data = GetRng().NextBytes(streamThreshold + 5);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestStandardFormat_NegativeSize,The following statement contains a magic number: byte[] data = GetRng().NextBytes(300);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestStandardFormat_InvalidType,The following statement contains a magic number: byte[] data = GetRng().NextBytes(300);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestStandardFormat_GarbageAfterSize,The following statement contains a magic number: byte[] data = GetRng().NextBytes(300);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestStandardFormat_SmallObject_CorruptZLibStream,The following statement contains a magic number: byte[] data = GetRng().NextBytes(300);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestStandardFormat_SmallObject_TruncatedZLibStream,The following statement contains a magic number: byte[] data = GetRng().NextBytes(300);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestStandardFormat_SmallObject_TrailingGarbage,The following statement contains a magic number: byte[] data = GetRng().NextBytes(300);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestStandardFormat_LargeObject_CorruptZLibStream,The following statement contains a magic number: byte[] data = GetRng().NextBytes(streamThreshold + 5);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestStandardFormat_LargeObject_CorruptZLibStream,The following statement contains a magic number: gz[gz.Length - 2] = 0;
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestStandardFormat_LargeObject_TruncatedZLibStream,The following statement contains a magic number: byte[] data = GetRng().NextBytes(streamThreshold + 5);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestStandardFormat_LargeObject_TrailingGarbage,The following statement contains a magic number: byte[] data = GetRng().NextBytes(streamThreshold + 5);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestPackFormat_SmallObject,The following statement contains a magic number: byte[] data = GetRng().NextBytes(300);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestPackFormat_LargeObject,The following statement contains a magic number: byte[] data = GetRng().NextBytes(streamThreshold + 5);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,TestPackFormat_DeltaNotAllowed,The following statement contains a magic number: byte[] data = GetRng().NextBytes(300);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,CompressPackFormat,The following statement contains a magic number: byte[] hdr = new byte[64];
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,CompressPackFormat,The following statement contains a magic number: int nextLength = (int)(((uint)rawLength) >> 4);
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,CompressPackFormat,The following statement contains a magic number: hdr[0] = unchecked((byte)((nextLength > 0 ? unchecked((int)(0x80)) : unchecked((int 				)(0x00))) | (type << 4) | (rawLength & unchecked((int)(0x0F)))));
Magic Number,NGit.Storage.File,UnpackedObjectTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\UnpackedObjectTest.cs,CompressPackFormat,The following statement contains a magic number: nextLength = (int)(((uint)nextLength) >> 7);
Magic Number,NGit.Storage.File,WindowCacheGetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheGetTest.cs,SetUp,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(96' toLoad.Count);
Magic Number,NGit.Storage.File,WindowCacheGetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheGetTest.cs,TestCache_Defaults,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' cache.GetOpenFiles());
Magic Number,NGit.Storage.File,WindowCacheGetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheGetTest.cs,TestCache_Defaults,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(17346' cache.GetOpenBytes());
Magic Number,NGit.Storage.File,WindowCacheGetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheGetTest.cs,TestCache_TooFewFiles,The following statement contains a magic number: cfg.SetPackedGitOpenFiles(2);
Magic Number,NGit.Storage.File,WindowCacheGetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheGetTest.cs,TestCache_TooSmallLimit,The following statement contains a magic number: cfg.SetPackedGitWindowSize(4096);
Magic Number,NGit.Storage.File,WindowCacheGetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheGetTest.cs,TestCache_TooSmallLimit,The following statement contains a magic number: cfg.SetPackedGitLimit(4096);
Magic Number,NGit.Storage.File,WindowCacheReconfigureTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheReconfigureTest.cs,TestConfigureCache_PackedGitWindowSize_512,The following statement contains a magic number: cfg.SetPackedGitWindowSize(512);
Magic Number,NGit.Storage.File,WindowCacheReconfigureTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheReconfigureTest.cs,TestConfigureCache_PackedGitWindowSize_4097,The following statement contains a magic number: cfg.SetPackedGitWindowSize(4097);
Magic Number,NGit.Storage.File,WindowCacheReconfigureTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheReconfigureTest.cs,TestConfigureCache_PackedGitWindowSizeAbovePackedGitLimit,The following statement contains a magic number: cfg.SetPackedGitLimit(1024);
Magic Number,NGit.Storage.File,WindowCacheReconfigureTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheReconfigureTest.cs,TestConfigureCache_PackedGitWindowSizeAbovePackedGitLimit,The following statement contains a magic number: cfg.SetPackedGitWindowSize(8192);
Magic Number,NGit.Storage.File,WindowCacheReconfigureTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheReconfigureTest.cs,TestConfigureCache_Limits1,The following statement contains a magic number: cfg.SetPackedGitLimit(6 * 4096 / 5);
Magic Number,NGit.Storage.File,WindowCacheReconfigureTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheReconfigureTest.cs,TestConfigureCache_Limits1,The following statement contains a magic number: cfg.SetPackedGitLimit(6 * 4096 / 5);
Magic Number,NGit.Storage.File,WindowCacheReconfigureTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheReconfigureTest.cs,TestConfigureCache_Limits1,The following statement contains a magic number: cfg.SetPackedGitLimit(6 * 4096 / 5);
Magic Number,NGit.Storage.File,WindowCacheReconfigureTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\WindowCacheReconfigureTest.cs,TestConfigureCache_Limits1,The following statement contains a magic number: cfg.SetPackedGitWindowSize(4096);
Magic Number,NGit.Storage.File,XInputStream,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\XInputStream.cs,ReadUInt32,The following statement contains a magic number: ReadFully(intbuf' 0' 4);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test001_Initalize,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2L' objects.ListFiles().Length);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test001_Initalize,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(23' HEAD.Length());
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test009_CreateCommitOldFormat,The following statement contains a magic number: c.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test009_CreateCommitOldFormat,The following statement contains a magic number: c.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test009_CreateCommitOldFormat,The following statement contains a magic number: c.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test009_CreateCommitOldFormat,The following statement contains a magic number: c.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test009_CreateCommitOldFormat,The following statement contains a magic number: c.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test009_CreateCommitOldFormat,The following statement contains a magic number: c.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test009_CreateCommitOldFormat,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(0' unchecked((int)(0x789c)) % 31);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test020_createBlobTag,The following statement contains a magic number: t.SetTagger(new PersonIdent(author' 1154236443000L' -4 * 60));
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test020_createBlobTag,The following statement contains a magic number: t.SetTagger(new PersonIdent(author' 1154236443000L' -4 * 60));
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test020_createBlobTag,The following statement contains a magic number: t.SetTagger(new PersonIdent(author' 1154236443000L' -4 * 60));
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test020_createBlobTag,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)'  				mapTag.GetTaggerIdent());
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test020_createBlobTag,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)'  				mapTag.GetTaggerIdent());
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test020_createBlobTag,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)'  				mapTag.GetTaggerIdent());
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test021_createTreeTag,The following statement contains a magic number: t.SetTagger(new PersonIdent(author' 1154236443000L' -4 * 60));
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test021_createTreeTag,The following statement contains a magic number: t.SetTagger(new PersonIdent(author' 1154236443000L' -4 * 60));
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test021_createTreeTag,The following statement contains a magic number: t.SetTagger(new PersonIdent(author' 1154236443000L' -4 * 60));
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test021_createTreeTag,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)'  				mapTag.GetTaggerIdent());
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test021_createTreeTag,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)'  				mapTag.GetTaggerIdent());
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test021_createTreeTag,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)'  				mapTag.GetTaggerIdent());
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test022_createCommitTag,The following statement contains a magic number: almostEmptyCommit.Author = new PersonIdent(author' 1154236443000L' -2 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test022_createCommitTag,The following statement contains a magic number: almostEmptyCommit.Author = new PersonIdent(author' 1154236443000L' -2 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test022_createCommitTag,The following statement contains a magic number: almostEmptyCommit.Author = new PersonIdent(author' 1154236443000L' -2 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test022_createCommitTag,The following statement contains a magic number: almostEmptyCommit.Committer = new PersonIdent(author' 1154236443000L' -2 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test022_createCommitTag,The following statement contains a magic number: almostEmptyCommit.Committer = new PersonIdent(author' 1154236443000L' -2 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test022_createCommitTag,The following statement contains a magic number: almostEmptyCommit.Committer = new PersonIdent(author' 1154236443000L' -2 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test022_createCommitTag,The following statement contains a magic number: t.SetTagger(new PersonIdent(author' 1154236443000L' -4 * 60));
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test022_createCommitTag,The following statement contains a magic number: t.SetTagger(new PersonIdent(author' 1154236443000L' -4 * 60));
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test022_createCommitTag,The following statement contains a magic number: t.SetTagger(new PersonIdent(author' 1154236443000L' -4 * 60));
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test022_createCommitTag,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)'  				mapTag.GetTaggerIdent());
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test022_createCommitTag,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)'  				mapTag.GetTaggerIdent());
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test022_createCommitTag,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(new PersonIdent(author' 1154236443000L' -4 * 60)'  				mapTag.GetTaggerIdent());
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test023_createCommitNonAnullii,The following statement contains a magic number: commit.Author = new PersonIdent("Joe H\u00e4cker"' "joe@example.com"' 4294967295000L 				' 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test023_createCommitNonAnullii,The following statement contains a magic number: commit.Author = new PersonIdent("Joe H\u00e4cker"' "joe@example.com"' 4294967295000L 				' 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test023_createCommitNonAnullii,The following statement contains a magic number: commit.Committer = new PersonIdent("Joe Hacker"' "joe2@example.com"' 4294967295000L 				' 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test023_createCommitNonAnullii,The following statement contains a magic number: commit.Committer = new PersonIdent("Joe Hacker"' "joe2@example.com"' 4294967295000L 				' 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test024_createCommitNonAscii,The following statement contains a magic number: commit.Author = new PersonIdent("Joe H\u00e4cker"' "joe@example.com"' 4294967295000L 				' 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test024_createCommitNonAscii,The following statement contains a magic number: commit.Author = new PersonIdent("Joe H\u00e4cker"' "joe@example.com"' 4294967295000L 				' 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test024_createCommitNonAscii,The following statement contains a magic number: commit.Committer = new PersonIdent("Joe Hacker"' "joe2@example.com"' 4294967295000L 				' 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test024_createCommitNonAscii,The following statement contains a magic number: commit.Committer = new PersonIdent("Joe Hacker"' "joe2@example.com"' 4294967295000L 				' 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c1.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c1.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c1.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c1.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c1.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c1.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c2.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c2.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c2.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c2.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c2.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c2.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c3.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c3.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c3.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c3.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c3.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c3.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' rm3.ParentCount);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c4.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c4.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c4.Author = new PersonIdent(author' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c4.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c4.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: c4.Committer = new PersonIdent(committer' 1154236443000L' -4 * 60);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' rm4.ParentCount);
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,Test026_CreateCommitMultipleparents,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(actid3' rm4.GetParent(2));
Magic Number,NGit.Storage.File,T0003_BasicTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0003_BasicTest.cs,BUG_WorkAroundRacyGitIssues,The following statement contains a magic number: long set = 1250379778668L;
Magic Number,NGit.Storage.File,T0004_PackReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0004_PackReaderTest.cs,Test003_lookupCompressedObject,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(35' or.GetSize());
Magic Number,NGit.Storage.File,T0004_PackReaderTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\T0004_PackReaderTest.cs,Test004_lookupDeltifiedObject,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(18009' or.GetSize());
Magic Number,NGit.Storage.File,FileSnapshotTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\FileSnapshotTest.cs,TestOldFile,The following statement contains a magic number: Sharpen.Thread.Sleep(3500);
Magic Number,NGit.Storage.File,FileSnapshotTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\FileSnapshotTest.cs,TestNewFileWithWait,The following statement contains a magic number: Sharpen.Thread.Sleep(1500);
Magic Number,NGit.Storage.File,FileSnapshotTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\FileSnapshotTest.cs,TestNewFileNoWait,The following statement contains a magic number: Sharpen.Thread.Sleep(1500);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,ConcurrentPackRefs_onlyOneWritesPackedRefs,The following statement contains a magic number: CyclicBarrier syncPoint = new CyclicBarrier(2);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,ConcurrentPackRefs_onlyOneWritesPackedRefs,The following statement contains a magic number: ExecutorService pool = Executors.NewFixedThreadPool(2);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,PackRefsWhileRefUpdated_refUpdateSucceeds,The following statement contains a magic number: CyclicBarrier refUpdateLockedRef = new CyclicBarrier(2);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,PackRefsWhileRefUpdated_refUpdateSucceeds,The following statement contains a magic number: CyclicBarrier packRefsDone = new CyclicBarrier(2);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,PackRefsWhileRefUpdated_refUpdateSucceeds,The following statement contains a magic number: ExecutorService pool = Executors.NewFixedThreadPool(2);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,ConcurrentRepack,The following statement contains a magic number: ExecutorService pool = Executors.NewFixedThreadPool(2);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,Branch_historyNotPruned,The following statement contains a magic number: RevCommit tip = CommitChain(10);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,DeleteBranch_historyPruned,The following statement contains a magic number: RevCommit tip = CommitChain(10);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackAllObjectsInOnePack,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackAllObjectsInOnePack,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' stats.numberOfPackedObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestKeepFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestKeepFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' stats.numberOfPackedObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestKeepFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestKeepFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' stats.numberOfPackedObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestKeepFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfPackedObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestKeepFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' stats.numberOfPackFiles);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestKeepFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' ind1.GetObjectCount());
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestKeepFiles,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' ind2.GetObjectCount());
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackRepoWithNoRefs,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackRepoWithNoRefs,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPack2Commits,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPack2Commits,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfPackedObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackCommitsAndLooseOne,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackCommitsAndLooseOne,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfPackedObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackCommitsAndLooseOne,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' stats.numberOfPackFiles);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestNotPackTwice,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(11' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestNotPackTwice,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' pIt.Next().GetObjectCount());
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestNotPackTwice,The following statement contains a magic number: c == 9
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackCommitsAndLooseOneNoReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackCommitsAndLooseOneNoReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackCommitsAndLooseOneNoReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' stats.numberOfPackedObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackCommitsAndLooseOneWithPruneNow,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackCommitsAndLooseOneWithPruneNow,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfPackedObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackCommitsAndLooseOneWithPruneNow,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' stats.numberOfPackFiles);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackCommitsAndLooseOneWithPruneNowNoReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPackCommitsAndLooseOneWithPruneNowNoReflog,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' stats.numberOfPackedObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestIndexSavesObjects,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(9' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestIndexSavesObjects,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfPackedObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestIndexSavesObjectsWithPruneNow,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(9' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestIndexSavesObjectsWithPruneNow,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfPackedObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPruneNone,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPruneNone,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPruneNone,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(9' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.File,GCTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.File\GCTest.cs,TestPruneNone,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' stats.numberOfLooseObjects);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestInsertWholeObject_Length12,The following statement contains a magic number: src = GetRng().NextBytes(12);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestCopyWholeObject_Length128,The following statement contains a magic number: src = GetRng().NextBytes(128);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestCopyWholeObject_Length128,The following statement contains a magic number: Copy(0' 128);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestCopyWholeObject_Length123,The following statement contains a magic number: src = GetRng().NextBytes(123);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestCopyWholeObject_Length123,The following statement contains a magic number: Copy(0' 123);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestCopyZeros_Length128,The following statement contains a magic number: src = new byte[2048];
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestCopyZeros_Length128,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2636' new DeltaIndex(src).GetIndexSize());
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestShuffleSegments,The following statement contains a magic number: src = GetRng().NextBytes(128);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestShuffleSegments,The following statement contains a magic number: Copy(64' 64);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestShuffleSegments,The following statement contains a magic number: Copy(64' 64);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestShuffleSegments,The following statement contains a magic number: Copy(0' 64);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestInsertHeadMiddle,The following statement contains a magic number: src = GetRng().NextBytes(1024);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestInsertHeadMiddle,The following statement contains a magic number: Copy(0' 512);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestInsertHeadMiddle,The following statement contains a magic number: Copy(0' 512);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestInsertTail,The following statement contains a magic number: src = GetRng().NextBytes(1024);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestInsertTail,The following statement contains a magic number: Copy(0' 512);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestIndexSize,The following statement contains a magic number: src = GetRng().NextBytes(1024);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestIndexSize,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1860' di.GetIndexSize());
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_Length12InsertFails,The following statement contains a magic number: src = GetRng().NextBytes(12);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_Length130InsertFails,The following statement contains a magic number: src = GetRng().NextBytes(130);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_Length130InsertFails,The following statement contains a magic number: dst = GetRng().NextBytes(130);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_Length130CopyOk,The following statement contains a magic number: src = GetRng().NextBytes(130);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_Length130CopyOk,The following statement contains a magic number: Copy(0' 130);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_Length130CopyFails,The following statement contains a magic number: src = GetRng().NextBytes(130);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_Length130CopyFails,The following statement contains a magic number: Copy(0' 130);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_Length130CopyFails,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(di.Encode(actDeltaBuf' dst' 5));
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_Length130CopyFails,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' actDeltaBuf.Size());
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_InsertFrontFails,The following statement contains a magic number: src = GetRng().NextBytes(130);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_InsertFrontFails,The following statement contains a magic number: Copy(0' 130);
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_InsertFrontFails,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(di.Encode(actDeltaBuf' dst' 5));
Magic Number,NGit.Storage.Pack,DeltaIndexTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaIndexTest.cs,TestLimitObjectSize_InsertFrontFails,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' actDeltaBuf.Size());
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_SingleOp,The following statement contains a magic number: Init((1 << 16) + 1' (1 << 8) + 1);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_SingleOp,The following statement contains a magic number: Init((1 << 16) + 1' (1 << 8) + 1);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_MaxSize,The following statement contains a magic number: int max = (unchecked((int)(0xff)) << 16) + (unchecked((int)(0xff)) << 8) + unchecked( 				(int)(0xff));
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_MaxSize,The following statement contains a magic number: int max = (unchecked((int)(0xff)) << 16) + (unchecked((int)(0xff)) << 8) + unchecked( 				(int)(0xff));
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_64k,The following statement contains a magic number: Init(unchecked((int)(0x10000)) + 2' unchecked((int)(0x10000)) + 1);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_Gap,The following statement contains a magic number: Init(256' 8);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_Gap,The following statement contains a magic number: Init(256' 8);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_Gap,The following statement contains a magic number: Copy(4' 4);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_Gap,The following statement contains a magic number: Copy(4' 4);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_Gap,The following statement contains a magic number: Copy(128' 4);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_Gap,The following statement contains a magic number: Copy(128' 4);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_OutOfOrder,The following statement contains a magic number: Init((1 << 16) + 1' (1 << 16) + 1);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_OutOfOrder,The following statement contains a magic number: Init((1 << 16) + 1' (1 << 16) + 1);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_OutOfOrder,The following statement contains a magic number: Copy(1 << 8' 1 << 8);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestCopy_OutOfOrder,The following statement contains a magic number: Copy(1 << 8' 1 << 8);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestInsert_SingleOp,The following statement contains a magic number: Init((1 << 16) + 1' 2);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestInsert_SingleOp,The following statement contains a magic number: Init((1 << 16) + 1' 2);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestInsertAndCopy,The following statement contains a magic number: Init(8' 512);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestInsertAndCopy,The following statement contains a magic number: Init(8' 512);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestInsertAndCopy,The following statement contains a magic number: Insert(new byte[127]);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestInsertAndCopy,The following statement contains a magic number: Insert(new byte[127]);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestInsertAndCopy,The following statement contains a magic number: Insert(new byte[127]);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestInsertAndCopy,The following statement contains a magic number: Insert(new byte[125]);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestInsertAndCopy,The following statement contains a magic number: Copy(2' 6);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestInsertAndCopy,The following statement contains a magic number: Copy(2' 6);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestSkip,The following statement contains a magic number: Init(32' 15);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestSkip,The following statement contains a magic number: Init(32' 15);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestSkip,The following statement contains a magic number: Copy(2' 2);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestSkip,The following statement contains a magic number: Copy(2' 2);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestSkip,The following statement contains a magic number: Copy(4' 4);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestSkip,The following statement contains a magic number: Copy(4' 4);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestSkip,The following statement contains a magic number: Copy(0' 2);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestSkip,The following statement contains a magic number: IOUtil.SkipFully(in_1' 7);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestSkip,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(data[7]' in_1.Read());
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestIncorrectBaseSize,The following statement contains a magic number: Init(4' 4);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestIncorrectBaseSize,The following statement contains a magic number: Init(4' 4);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestIncorrectBaseSize,The following statement contains a magic number: Copy(0' 4);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestIncorrectBaseSize,The following statement contains a magic number: @in.Read(new byte[4]);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,TestIncorrectBaseSize,The following statement contains a magic number: @in.Read(new byte[4]);
Magic Number,NGit.Storage.Pack,DeltaStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,AssertValidState,The following statement contains a magic number: int n = @in.Read(act' read' 128);
Magic Number,NGit.Storage.Pack,_DeltaStream_204,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,GetBaseSize,The following statement contains a magic number: return 128;
Magic Number,NGit.Storage.Pack,_DeltaStream_222,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\DeltaStreamTest.cs,GetBaseSize,The following statement contains a magic number: return 4;
Magic Number,NGit.Storage.Pack,IntSetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\IntSetTest.cs,TestAdd,The following statement contains a magic number: i < 64
Magic Number,NGit.Storage.Pack,IntSetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\IntSetTest.cs,TestAdd,The following statement contains a magic number: i_1 < 64
Magic Number,NGit.Storage.Pack,IntSetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\IntSetTest.cs,TestAdd,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(s.Add(-2));
Magic Number,NGit.Storage.Pack,IntSetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\IntSetTest.cs,TestAdd,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(s.Add(-2));
Magic Number,NGit.Storage.Pack,IntSetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\IntSetTest.cs,TestAdd,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(s.Add(128));
Magic Number,NGit.Storage.Pack,IntSetTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Storage.Pack\IntSetTest.cs,TestAdd,The following statement contains a magic number: NUnit.Framework.Assert.IsFalse(s.Add(128));
Magic Number,NGit.Treewalk,AbstractTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,TestGrowPath,The following statement contains a magic number: i.GrowPath(2);
Magic Number,NGit.Treewalk,AbstractTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,TestGrowPath,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(origpath.Length * 2' i.path.Length);
Magic Number,NGit.Treewalk,AbstractTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,TestEnsurePathCapacityFastCase,The following statement contains a magic number: int want = 50;
Magic Number,NGit.Treewalk,AbstractTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,TestEnsurePathCapacityFastCase,The following statement contains a magic number: i.EnsurePathCapacity(want' 2);
Magic Number,NGit.Treewalk,AbstractTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,TestEnsurePathCapacityGrows,The following statement contains a magic number: int want = 384;
Magic Number,NGit.Treewalk,AbstractTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,TestEnsurePathCapacityGrows,The following statement contains a magic number: i.EnsurePathCapacity(want' 2);
Magic Number,NGit.Treewalk,AbstractTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,TestEnsurePathCapacityGrows,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(512' i.path.Length);
Magic Number,NGit.Treewalk,AbstractTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,TestEntryPath,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' i.NameLength);
Magic Number,NGit.Treewalk,AbstractTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,TestEntryPath,The following statement contains a magic number: byte[] b = new byte[3];
Magic Number,NGit.Treewalk,AbstractTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\AbstractTreeIteratorTest.cs,TestEntryPath,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual('d'' b[2]);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestTwoEntries_Seek2IsEOF,The following statement contains a magic number: ctp.Next(2);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestThreeEntries_Seek3IsEOF,The following statement contains a magic number: ctp.Next(3);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestThreeEntries_Seek2,The following statement contains a magic number: ctp.Next(2);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestTwoEntries_BackwardsOneAtATime,The following statement contains a magic number: ctp.Next(2);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestTwoEntries_BackwardsTwo,The following statement contains a magic number: ctp.Next(2);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestTwoEntries_BackwardsTwo,The following statement contains a magic number: ctp.Back(2);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestThreeEntries_BackwardsTwo,The following statement contains a magic number: ctp.Next(3);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestThreeEntries_BackwardsTwo,The following statement contains a magic number: ctp.Back(2);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestBackwards_ConfusingPathName,The following statement contains a magic number: ctp.Next(3);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestBackwards_ConfusingPathName,The following statement contains a magic number: ctp.Back(2);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestBackwords_Prebuilts1,The following statement contains a magic number: ctp.Next(3);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestBackwords_Prebuilts2,The following statement contains a magic number: ctp.Next(3);
Magic Number,NGit.Treewalk,CanonicalTreeParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\CanonicalTreeParserTest.cs,TestFreakingHugePathName,The following statement contains a magic number: int n = AbstractTreeIterator.DEFAULT_PATH_SIZE * 4;
Magic Number,NGit.Treewalk,FileTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\FileTreeIteratorTest.cs,TestSimpleIterate,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(paths[2]' NameOf(sub));
Magic Number,NGit.Treewalk,FileTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\FileTreeIteratorTest.cs,TestSimpleIterate,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(paths[2].Length' subfti.GetEntryLength());
Magic Number,NGit.Treewalk,FileTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\FileTreeIteratorTest.cs,TestSimpleIterate,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(mtime[2]' subfti.GetEntryLastModified());
Magic Number,NGit.Treewalk,FileTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\FileTreeIteratorTest.cs,TestSimpleIterate,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(paths[3]' NameOf(top));
Magic Number,NGit.Treewalk,FileTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\FileTreeIteratorTest.cs,TestSimpleIterate,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(paths[3].Length' top.GetEntryLength());
Magic Number,NGit.Treewalk,FileTreeIteratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\FileTreeIteratorTest.cs,TestSimpleIterate,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(mtime[3]' top.GetEntryLastModified());
Magic Number,NGit.Treewalk,NameConflictTreeWalkTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\NameConflictTreeWalkTest.cs,TestNoDF_NoGap,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' tree0.GetEntryCount());
Magic Number,NGit.Treewalk,NameConflictTreeWalkTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\NameConflictTreeWalkTest.cs,TestDF_NoGap,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' tree0.GetEntryCount());
Magic Number,NGit.Treewalk,NameConflictTreeWalkTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\NameConflictTreeWalkTest.cs,TestDF_GapByOne,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' tree0.GetEntryCount());
Magic Number,NGit.Treewalk,NameConflictTreeWalkTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\NameConflictTreeWalkTest.cs,TestDF_GapByOne,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' tree1.GetEntryCount());
Magic Number,NGit.Treewalk,NameConflictTreeWalkTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\NameConflictTreeWalkTest.cs,TestDF_SkipsSeenSubtree,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' tree0.GetEntryCount());
Magic Number,NGit.Treewalk,NameConflictTreeWalkTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\NameConflictTreeWalkTest.cs,TestDF_SkipsSeenSubtree,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' tree1.GetEntryCount());
Magic Number,NGit.Treewalk,NameConflictTreeWalkTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\NameConflictTreeWalkTest.cs,TestDF_DetectConflict,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' tree0.GetEntryCount());
Magic Number,NGit.Treewalk,NameConflictTreeWalkTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\NameConflictTreeWalkTest.cs,TestDF_DetectConflict,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' tree1.GetEntryCount());
Magic Number,NGit.Treewalk,PostOrderTreeWalkTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\PostOrderTreeWalkTest.cs,TestNoPostOrder,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' tree.GetEntryCount());
Magic Number,NGit.Treewalk,PostOrderTreeWalkTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\PostOrderTreeWalkTest.cs,TestWithPostOrder_EnterSubtree,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' tree.GetEntryCount());
Magic Number,NGit.Treewalk,PostOrderTreeWalkTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\PostOrderTreeWalkTest.cs,TestWithPostOrder_NoEnterSubtree,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' tree.GetEntryCount());
Magic Number,NGit.Treewalk,ForPathTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk\ForPathTest.cs,TestFindObjects,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' tree0.GetEntryCount());
Magic Number,NGit.Treewalk.Filter,IndexDiffFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Treewalk.Filter\IndexDiffFilterTest.cs,CreateTreeWalk,The following statement contains a magic number: treeWalk.Filter = new IndexDiffFilter(1' 2' honorIgnores);
Magic Number,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,Tick,The following statement contains a magic number: long delta = TimeUnit.MILLISECONDS.Convert(5 * 60' TimeUnit.SECONDS);
Magic Number,NGit.Util,ChangeIdUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\ChangeIdUtilTest.cs,Tick,The following statement contains a magic number: long delta = TimeUnit.MILLISECONDS.Convert(5 * 60' TimeUnit.SECONDS);
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestEmpty_SpecificCapacity,The following statement contains a magic number: IntList i = new IntList(5);
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestAdd_SmallGroup,The following statement contains a magic number: int n = 5;
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestAdd_SmallGroup,The following statement contains a magic number: i.Add(10 + v);
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestAdd_SmallGroup,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(10 + v_1' i.Get(v_1));
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestAdd_LargeGroup,The following statement contains a magic number: int n = 500;
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestAdd_LargeGroup,The following statement contains a magic number: i.Add(10 + v);
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestAdd_LargeGroup,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(10 + v_1' i.Get(v_1));
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestFillTo100,The following statement contains a magic number: i.FillTo(100' int.MinValue);
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestFillTo100,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(100' i.Size());
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestFillTo100,The following statement contains a magic number: i.Add(3);
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestFillTo100,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(int.MinValue' i.Get(99));
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestFillTo100,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' i.Get(100));
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestFillTo100,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' i.Get(100));
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestClear,The following statement contains a magic number: int n = 5;
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestClear,The following statement contains a magic number: i.Add(10 + v);
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestSet,The following statement contains a magic number: i.Set(0' 5);
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestSet,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' i.Get(0));
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestSet,The following statement contains a magic number: i.Set(5' 5);
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestSet,The following statement contains a magic number: i.Set(5' 5);
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestSet,The following statement contains a magic number: i.Set(1' 2);
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestSet,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' i.Size());
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestSet,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' i.Get(1));
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestToString,The following statement contains a magic number: i.Add(13);
Magic Number,NGit.Util,IntListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\IntListTest.cs,TestToString,The following statement contains a magic number: i.Add(5);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(0' NB.DecodeUInt16(Padb(3' 0' 0)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(0' NB.DecodeUInt16(Padb(3' 0' 0)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' NB.DecodeUInt16(B(0' 3)' 0));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' NB.DecodeUInt16(B(0' 3)' 0));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' NB.DecodeUInt16(Padb(3' 0' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' NB.DecodeUInt16(Padb(3' 0' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' NB.DecodeUInt16(Padb(3' 0' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' NB.DecodeUInt16(Padb(3' 0' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0xde03))' NB.DecodeUInt16(B(unchecked( 				(int)(0xde))' 3)' 0));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0xde03))' NB.DecodeUInt16(Padb(3'  				unchecked((int)(0xde))' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0xde03))' NB.DecodeUInt16(Padb(3'  				unchecked((int)(0xde))' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0xde03))' NB.DecodeUInt16(Padb(3'  				unchecked((int)(0xde))' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0x03de))' NB.DecodeUInt16(B(3' unchecked( 				(int)(0xde)))' 0));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0x03de))' NB.DecodeUInt16(Padb(3'  				3' unchecked((int)(0xde)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0x03de))' NB.DecodeUInt16(Padb(3'  				3' unchecked((int)(0xde)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0x03de))' NB.DecodeUInt16(Padb(3'  				3' unchecked((int)(0xde)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0xffff))' NB.DecodeUInt16(Padb(3'  				unchecked((int)(0xff))' unchecked((int)(0xff)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt16,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0xffff))' NB.DecodeUInt16(Padb(3'  				unchecked((int)(0xff))' unchecked((int)(0xff)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(0' NB.DecodeInt32(Padb(3' 0' 0' 0' 0)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(0' NB.DecodeInt32(Padb(3' 0' 0' 0' 0)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' NB.DecodeInt32(B(0' 0' 0' 3)' 0));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' NB.DecodeInt32(B(0' 0' 0' 3)' 0));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' NB.DecodeInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' NB.DecodeInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' NB.DecodeInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' NB.DecodeInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0xdeadbeef))' NB.DecodeInt32(Padb 				(3' unchecked((int)(0xde))' unchecked((int)(0xad))' unchecked((int)(0xbe))' unchecked( 				(int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0xdeadbeef))' NB.DecodeInt32(Padb 				(3' unchecked((int)(0xde))' unchecked((int)(0xad))' unchecked((int)(0xbe))' unchecked( 				(int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0x0310adef))' NB.DecodeInt32(Padb 				(3' unchecked((int)(0x03))' unchecked((int)(0x10))' unchecked((int)(0xad))' unchecked( 				(int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0x0310adef))' NB.DecodeInt32(Padb 				(3' unchecked((int)(0x03))' unchecked((int)(0x10))' unchecked((int)(0xad))' unchecked( 				(int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0xffffffff))' NB.DecodeInt32(Padb 				(3' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked( 				(int)(0xff)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((int)(0xffffffff))' NB.DecodeInt32(Padb 				(3' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked( 				(int)(0xff)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(0L' NB.DecodeUInt32(Padb(3' 0' 0' 0' 0)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(0L' NB.DecodeUInt32(Padb(3' 0' 0' 0' 0)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3L' NB.DecodeUInt32(B(0' 0' 0' 3)' 0));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3L' NB.DecodeUInt32(B(0' 0' 0' 3)' 0));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3L' NB.DecodeUInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3L' NB.DecodeUInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3L' NB.DecodeUInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3L' NB.DecodeUInt32(Padb(3' 0' 0' 0' 3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0xdeadbeefL))' NB.DecodeUInt32(Padb 				(3' unchecked((int)(0xde))' unchecked((int)(0xad))' unchecked((int)(0xbe))' unchecked( 				(int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0xdeadbeefL))' NB.DecodeUInt32(Padb 				(3' unchecked((int)(0xde))' unchecked((int)(0xad))' unchecked((int)(0xbe))' unchecked( 				(int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0x0310adefL))' NB.DecodeUInt32(Padb 				(3' unchecked((int)(0x03))' unchecked((int)(0x10))' unchecked((int)(0xad))' unchecked( 				(int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0x0310adefL))' NB.DecodeUInt32(Padb 				(3' unchecked((int)(0x03))' unchecked((int)(0x10))' unchecked((int)(0xad))' unchecked( 				(int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0xffffffffL))' NB.DecodeUInt32(Padb 				(3' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked( 				(int)(0xff)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt32,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0xffffffffL))' NB.DecodeUInt32(Padb 				(3' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked( 				(int)(0xff)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(0L' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0' 0' 0'  				0)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(0L' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0' 0' 0'  				0)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3L' NB.DecodeUInt64(B(0' 0' 0' 0' 0' 0' 0' 3)' 0) 				);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3L' NB.DecodeUInt64(B(0' 0' 0' 0' 0' 0' 0' 3)' 0) 				);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3L' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0' 0' 0'  				3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3L' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0' 0' 0'  				3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3L' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0' 0' 0'  				3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3L' NB.DecodeUInt64(Padb(3' 0' 0' 0' 0' 0' 0' 0'  				3)' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0xdeadbeefL))' NB.DecodeUInt64(Padb 				(3' 0' 0' 0' 0' unchecked((int)(0xde))' unchecked((int)(0xad))' unchecked((int)( 				0xbe))' unchecked((int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0xdeadbeefL))' NB.DecodeUInt64(Padb 				(3' 0' 0' 0' 0' unchecked((int)(0xde))' unchecked((int)(0xad))' unchecked((int)( 				0xbe))' unchecked((int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0x0310adefL))' NB.DecodeUInt64(Padb 				(3' 0' 0' 0' 0' unchecked((int)(0x03))' unchecked((int)(0x10))' unchecked((int)( 				0xad))' unchecked((int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0x0310adefL))' NB.DecodeUInt64(Padb 				(3' 0' 0' 0' 0' unchecked((int)(0x03))' unchecked((int)(0x10))' unchecked((int)( 				0xad))' unchecked((int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0xc0ffee78deadbeefL))' NB.DecodeUInt64 				(Padb(3' unchecked((int)(0xc0))' unchecked((int)(0xff))' unchecked((int)(0xee))'  				unchecked((int)(0x78))' unchecked((int)(0xde))' unchecked((int)(0xad))' unchecked( 				(int)(0xbe))' unchecked((int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0xc0ffee78deadbeefL))' NB.DecodeUInt64 				(Padb(3' unchecked((int)(0xc0))' unchecked((int)(0xff))' unchecked((int)(0xee))'  				unchecked((int)(0x78))' unchecked((int)(0xde))' unchecked((int)(0xad))' unchecked( 				(int)(0xbe))' unchecked((int)(0xef)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0x00000000ffffffffL))' NB.DecodeUInt64 				(Padb(3' 0' 0' 0' 0' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked(( 				int)(0xff))' unchecked((int)(0xff)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0x00000000ffffffffL))' NB.DecodeUInt64 				(Padb(3' 0' 0' 0' 0' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked(( 				int)(0xff))' unchecked((int)(0xff)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0xffffffffffffffffL))' NB.DecodeUInt64 				(Padb(3' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked((int)(0xff))'  				unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked( 				(int)(0xff))' unchecked((int)(0xff)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestDecodeUInt64,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(unchecked((long)(0xffffffffffffffffL))' NB.DecodeUInt64 				(Padb(3' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked((int)(0xff))'  				unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked( 				(int)(0xff))' unchecked((int)(0xff)))' 3));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: byte[] @out = new byte[16];
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: NB.EncodeInt16(@out' 3' 0);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: AssertOutput(B(0' 0)' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: NB.EncodeInt16(@out' 0' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: AssertOutput(B(0' 3)' @out' 0);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: NB.EncodeInt16(@out' 3' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: NB.EncodeInt16(@out' 3' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: AssertOutput(B(0' 3)' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: AssertOutput(B(0' 3)' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: NB.EncodeInt16(@out' 3' unchecked((int)(0xdeac)));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: AssertOutput(B(unchecked((int)(0xde))' unchecked((int)(0xac)))' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: NB.EncodeInt16(@out' 3' -1);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt16,The following statement contains a magic number: AssertOutput(B(unchecked((int)(0xff))' unchecked((int)(0xff)))' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: byte[] @out = new byte[16];
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: NB.EncodeInt32(@out' 3' 0);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: AssertOutput(B(0' 0' 0' 0)' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: NB.EncodeInt32(@out' 0' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: AssertOutput(B(0' 0' 0' 3)' @out' 0);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: NB.EncodeInt32(@out' 3' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: NB.EncodeInt32(@out' 3' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: AssertOutput(B(0' 0' 0' 3)' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: AssertOutput(B(0' 0' 0' 3)' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: NB.EncodeInt32(@out' 3' unchecked((int)(0xdeac)));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: AssertOutput(B(0' 0' unchecked((int)(0xde))' unchecked((int)(0xac)))' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: NB.EncodeInt32(@out' 3' unchecked((int)(0xdeac9853)));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: AssertOutput(B(unchecked((int)(0xde))' unchecked((int)(0xac))' unchecked((int)(0x98 				))' unchecked((int)(0x53)))' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: NB.EncodeInt32(@out' 3' -1);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt32,The following statement contains a magic number: AssertOutput(B(unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked((int)(0xff 				))' unchecked((int)(0xff)))' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: byte[] @out = new byte[16];
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: NB.EncodeInt64(@out' 3' 0L);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: AssertOutput(B(0' 0' 0' 0' 0' 0' 0' 0)' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: NB.EncodeInt64(@out' 0' 3L);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: AssertOutput(B(0' 0' 0' 0' 0' 0' 0' 3)' @out' 0);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: NB.EncodeInt64(@out' 3' 3L);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: NB.EncodeInt64(@out' 3' 3L);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: AssertOutput(B(0' 0' 0' 0' 0' 0' 0' 3)' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: AssertOutput(B(0' 0' 0' 0' 0' 0' 0' 3)' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: NB.EncodeInt64(@out' 3' unchecked((long)(0xdeacL)));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: AssertOutput(B(0' 0' 0' 0' 0' 0' unchecked((int)(0xde))' unchecked((int)(0xac)))'  				@out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: NB.EncodeInt64(@out' 3' unchecked((long)(0xdeac9853L)));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: AssertOutput(B(0' 0' 0' 0' unchecked((int)(0xde))' unchecked((int)(0xac))' unchecked( 				(int)(0x98))' unchecked((int)(0x53)))' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: NB.EncodeInt64(@out' 3' unchecked((long)(0xac431242deac9853L)));
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: AssertOutput(B(unchecked((int)(0xac))' unchecked((int)(0x43))' unchecked((int)(0x12 				))' unchecked((int)(0x42))' unchecked((int)(0xde))' unchecked((int)(0xac))' unchecked( 				(int)(0x98))' unchecked((int)(0x53)))' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: NB.EncodeInt64(@out' 3' -1L);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,TestEncodeInt64,The following statement contains a magic number: AssertOutput(B(unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked((int)(0xff 				))' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked((int)(0xff))' unchecked( 				(int)(0xff))' unchecked((int)(0xff)))' @out' 3);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The following statement contains a magic number: byte[] r = new byte[len + 2];
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The following statement contains a magic number: byte[] r = new byte[len + 4];
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The following statement contains a magic number: r[len + 2] = unchecked((byte)c);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The following statement contains a magic number: r[len + 3] = unchecked((byte)d);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The following statement contains a magic number: byte[] r = new byte[len + 8];
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The following statement contains a magic number: r[len + 2] = unchecked((byte)c);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The following statement contains a magic number: r[len + 3] = unchecked((byte)d);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The following statement contains a magic number: r[len + 4] = unchecked((byte)e);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The following statement contains a magic number: r[len + 5] = unchecked((byte)f);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The following statement contains a magic number: r[len + 6] = unchecked((byte)g);
Magic Number,NGit.Util,NBTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\NBTest.cs,Padb,The following statement contains a magic number: r[len + 7] = unchecked((byte)h);
Magic Number,NGit.Util,QuotedStringBourneStyleTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\QuotedStringBourneStyleTest.cs,TestDequote_Empty2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(string.Empty' QuotedString.BOURNE.Dequote(new byte 				[] { (byte)('\'')' (byte)('\'') }' 0' 2));
Magic Number,NGit.Util,QuotedStringBourneStyleTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\QuotedStringBourneStyleTest.cs,TestDequote_BareABCZ_OnlyBC,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual("bc"' QuotedString.BOURNE.Dequote(b' p' p + 2));
Magic Number,NGit.Util,QuotedStringBourneUserPathStyleTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\QuotedStringBourneUserPathStyleTest.cs,TestDequote_Empty2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(string.Empty' QuotedString.BOURNE_USER_PATH.Dequote 				(new byte[] { (byte)('\'')' (byte)('\'') }' 0' 2));
Magic Number,NGit.Util,QuotedStringBourneUserPathStyleTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\QuotedStringBourneUserPathStyleTest.cs,TestDequote_BareABCZ_OnlyBC,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual("bc"' QuotedString.BOURNE_USER_PATH.Dequote(b' p'  				p + 2));
Magic Number,NGit.Util,QuotedStringGitPathStyleTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\QuotedStringGitPathStyleTest.cs,TestDequote_Empty2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(string.Empty' QuotedString.GIT_PATH.Dequote(new byte 				[] { (byte)('"')' (byte)('"') }' 0' 2));
Magic Number,NGit.Util,QuotedStringGitPathStyleTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\QuotedStringGitPathStyleTest.cs,TestDequote_BareABCZ_OnlyBC,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual("bc"' QuotedString.GIT_PATH.Dequote(b' p' p + 2));
Magic Number,NGit.Util,QuotedStringGitPathStyleTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\QuotedStringGitPathStyleTest.cs,TestDequote_OctalAll,The following statement contains a magic number: i < 127
Magic Number,NGit.Util,QuotedStringGitPathStyleTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\QuotedStringGitPathStyleTest.cs,TestDequote_OctalAll,The following statement contains a magic number: int f = unchecked((int)(0xC0)) | (i_1 >> 6);
Magic Number,NGit.Util,QuotedStringGitPathStyleTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\QuotedStringGitPathStyleTest.cs,TestDequote_OctalAll,The following statement contains a magic number: i_1 < 256
Magic Number,NGit.Util,QuotedStringGitPathStyleTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\QuotedStringGitPathStyleTest.cs,OctalEscape,The following statement contains a magic number: s.Length < 3
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestIsWhitespace,The following statement contains a magic number: ((sbyte)c) < 127
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimTrailingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1' RawCharUtil.TrimTrailingWhitespace(Sharpen.Runtime.GetBytesForString 				("a "' "US-ASCII")' 0' 2));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimTrailingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' RawCharUtil.TrimTrailingWhitespace(Sharpen.Runtime.GetBytesForString 				(" a "' "US-ASCII")' 0' 3));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimTrailingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' RawCharUtil.TrimTrailingWhitespace(Sharpen.Runtime.GetBytesForString 				(" a "' "US-ASCII")' 0' 3));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimTrailingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' RawCharUtil.TrimTrailingWhitespace(Sharpen.Runtime.GetBytesForString 				("  a"' "US-ASCII")' 0' 3));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimTrailingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' RawCharUtil.TrimTrailingWhitespace(Sharpen.Runtime.GetBytesForString 				("  a"' "US-ASCII")' 0' 3));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimTrailingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' RawCharUtil.TrimTrailingWhitespace(Sharpen.Runtime.GetBytesForString 				("  test   "' "US-ASCII")' 2' 9));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimTrailingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' RawCharUtil.TrimTrailingWhitespace(Sharpen.Runtime.GetBytesForString 				("  test   "' "US-ASCII")' 2' 9));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimTrailingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' RawCharUtil.TrimTrailingWhitespace(Sharpen.Runtime.GetBytesForString 				("  test   "' "US-ASCII")' 2' 9));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimLeadingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(0' RawCharUtil.TrimLeadingWhitespace(Sharpen.Runtime.GetBytesForString 				("a "' "US-ASCII")' 0' 2));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimLeadingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1' RawCharUtil.TrimLeadingWhitespace(Sharpen.Runtime.GetBytesForString 				(" a "' "US-ASCII")' 0' 3));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimLeadingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' RawCharUtil.TrimLeadingWhitespace(Sharpen.Runtime.GetBytesForString 				("  a"' "US-ASCII")' 0' 3));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimLeadingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' RawCharUtil.TrimLeadingWhitespace(Sharpen.Runtime.GetBytesForString 				("  a"' "US-ASCII")' 0' 3));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimLeadingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' RawCharUtil.TrimLeadingWhitespace(Sharpen.Runtime.GetBytesForString 				("  test   "' "US-ASCII")' 2' 9));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimLeadingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' RawCharUtil.TrimLeadingWhitespace(Sharpen.Runtime.GetBytesForString 				("  test   "' "US-ASCII")' 2' 9));
Magic Number,NGit.Util,RawCharUtilTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawCharUtilTest.cs,TestTrimLeadingWhitespace,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' RawCharUtil.TrimLeadingWhitespace(Sharpen.Runtime.GetBytesForString 				("  test   "' "US-ASCII")' 2' 9));
Magic Number,NGit.Util,RawParseUtils_FormatTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_FormatTest.cs,TestFormatBase10,The following statement contains a magic number: byte[] b = new byte[64];
Magic Number,NGit.Util,RawParseUtils_FormatTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_FormatTest.cs,TestFormatBase10,The following statement contains a magic number: p = RawParseUtils.FormatBase10(b' b.Length' 42);
Magic Number,NGit.Util,RawParseUtils_FormatTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_FormatTest.cs,TestFormatBase10,The following statement contains a magic number: p = RawParseUtils.FormatBase10(b' b.Length' 1234);
Magic Number,NGit.Util,RawParseUtils_FormatTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_FormatTest.cs,TestFormatBase10,The following statement contains a magic number: p = RawParseUtils.FormatBase10(b' b.Length' -9876);
Magic Number,NGit.Util,RawParseUtils_FormatTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_FormatTest.cs,TestFormatBase10,The following statement contains a magic number: p = RawParseUtils.FormatBase10(b' b.Length' 123456789);
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' RawParseUtils.ParseHexInt4(unchecked((byte)'2' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' RawParseUtils.ParseHexInt4(unchecked((byte)'3' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' RawParseUtils.ParseHexInt4(unchecked((byte)'4' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' RawParseUtils.ParseHexInt4(unchecked((byte)'5' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' RawParseUtils.ParseHexInt4(unchecked((byte)'6' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(7' RawParseUtils.ParseHexInt4(unchecked((byte)'7' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(8' RawParseUtils.ParseHexInt4(unchecked((byte)'8' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(9' RawParseUtils.ParseHexInt4(unchecked((byte)'9' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(10' RawParseUtils.ParseHexInt4(unchecked((byte)'a' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(11' RawParseUtils.ParseHexInt4(unchecked((byte)'b' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(12' RawParseUtils.ParseHexInt4(unchecked((byte)'c' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(13' RawParseUtils.ParseHexInt4(unchecked((byte)'d' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(14' RawParseUtils.ParseHexInt4(unchecked((byte)'e' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(15' RawParseUtils.ParseHexInt4(unchecked((byte)'f' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(10' RawParseUtils.ParseHexInt4(unchecked((byte)'A' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(11' RawParseUtils.ParseHexInt4(unchecked((byte)'B' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(12' RawParseUtils.ParseHexInt4(unchecked((byte)'C' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(13' RawParseUtils.ParseHexInt4(unchecked((byte)'D' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(14' RawParseUtils.ParseHexInt4(unchecked((byte)'E' 				)));
Magic Number,NGit.Util,RawParseUtils_HexParseTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_HexParseTest.cs,TestInt4_1,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(15' RawParseUtils.ParseHexInt4(unchecked((byte)'F' 				)));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestEmpty,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' map.Size());
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestOneBlankLine,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' map.Size());
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestOneBlankLine,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1' map.Get(2));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestTwoLineFooBar,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' map.Size());
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestTwoLineFooBar,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' map.Get(2));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestTwoLineFooBar,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' map.Get(2));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestTwoLineFooBar,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(buf.Length' map.Get(3));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestTwoLineNoLF,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' map.Size());
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestTwoLineNoLF,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' map.Get(2));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestTwoLineNoLF,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' map.Get(2));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestTwoLineNoLF,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(buf.Length' map.Get(3));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestFourLineBlanks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' map.Size());
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestFourLineBlanks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' map.Get(2));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestFourLineBlanks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' map.Get(2));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestFourLineBlanks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' map.Get(3));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestFourLineBlanks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' map.Get(3));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestFourLineBlanks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' map.Get(4));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestFourLineBlanks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6' map.Get(4));
Magic Number,NGit.Util,RawParseUtils_LineMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_LineMapTest.cs,TestFourLineBlanks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(buf.Length' map.Get(5));
Magic Number,NGit.Util,RawParseUtils_MatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_MatchTest.cs,TestMatch_Equal,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(RawParseUtils.Match(dst' 3' src) == 3 + src.Length);
Magic Number,NGit.Util,RawParseUtils_MatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_MatchTest.cs,TestMatch_Equal,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(RawParseUtils.Match(dst' 3' src) == 3 + src.Length);
Magic Number,NGit.Util,RawParseUtils_MatchTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_MatchTest.cs,TestMatch_NotEqual,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(RawParseUtils.Match(dst' 2' src) < 0);
Magic Number,NGit.Util,RawParseUtils_ParsePersonIdentTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_ParsePersonIdentTest.cs,TestParsePersonIdent_legalCases,The following statement contains a magic number: DateTime when = Sharpen.Extensions.CreateDate(1234567890000l);
Magic Number,NGit.Util,RawParseUtils_ParsePersonIdentTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_ParsePersonIdentTest.cs,TestParsePersonIdent_fuzzyCases,The following statement contains a magic number: DateTime when = Sharpen.Extensions.CreateDate(1234567890000l);
Magic Number,NGit.Util,RawParseUtils_ParsePersonIdentTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RawParseUtils_ParsePersonIdentTest.cs,TestParsePersonIdent_incompleteCases,The following statement contains a magic number: DateTime when = Sharpen.Extensions.CreateDate(1234567890000l);
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestEmptyBuilder,The following statement contains a magic number: NUnit.Framework.Assert.IsNull(list.Get(16 - 1));
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestEmptyBuilder,The following statement contains a magic number: list.Get(16);
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestBuilder_AddThenSort,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' list.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestBuilder_AddThenSort,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' list.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestBuilder_AddAll,The following statement contains a magic number: builder.AddAll(src' 1' 2);
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestBuilder_AddAll,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' list.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestBuilder_Set,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' builder.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestBuilder_Set,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' list.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestBuilder_Set,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' list.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestSet,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' one.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestSet,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' two.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestAddToFrontOfList,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' two.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestAddToEndOfList,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' two.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestAddToMiddleOfListByInsertionPosition,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(-2' one.Find(REF_B.GetName()));
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestAddToMiddleOfListByInsertionPosition,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' one.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestAddToMiddleOfListByInsertionPosition,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' two.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestAddToMiddleOfListByInsertionPosition,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(REF_c' two.Get(2));
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestPutNewEntry,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' one.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestPutNewEntry,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' two.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestPutNewEntry,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(REF_c' two.Get(2));
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestPutReplaceEntry,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' one.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestPutReplaceEntry,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' two.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestRemoveFrontOfList,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' one.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestRemoveFrontOfList,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(REF_c' one.Get(2));
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestRemoveFrontOfList,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' two.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestRemoveMiddleOfList,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' one.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestRemoveMiddleOfList,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(REF_c' one.Get(2));
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestRemoveMiddleOfList,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' two.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestRemoveEndOfList,The following statement contains a magic number: RefList<Ref> two = one.Remove(2);
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestRemoveEndOfList,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' one.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestRemoveEndOfList,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(REF_c' one.Get(2));
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestRemoveEndOfList,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' two.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestFindContainsGet,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' list.Find("c"));
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestFindContainsGet,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(-2' list.Find("AB"));
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestFindContainsGet,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(-3' list.Find("a"));
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestFindContainsGet,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(-4' list.Find("z"));
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestIterable,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' idx);
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestCopyLeadingPrefix,The following statement contains a magic number: RefList<Ref> two = one.Copy(2).ToRefList();
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestCopyLeadingPrefix,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' one.Size());
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestCopyLeadingPrefix,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(REF_c' one.Get(2));
Magic Number,NGit.Util,RefListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefListTest.cs,TestCopyLeadingPrefix,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' two.Size());
Magic Number,NGit.Util,RefMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefMapTest.cs,TestMerge_HeadMaster,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' map.Count);
Magic Number,NGit.Util,RefMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefMapTest.cs,TestMerge_PackedLooseLoose,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' map.Count);
Magic Number,NGit.Util,RefMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RefMapTest.cs,TestMerge_WithPrefix,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' map.Count);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlock_BulkWrite,The following statement contains a magic number: b.Write(test' 0' 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlock_BulkWrite,The following statement contains a magic number: b.Write(test' 2' 4);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlock_BulkWrite,The following statement contains a magic number: b.Write(test' 2' 4);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlock_BulkWrite,The following statement contains a magic number: b.Write(test' 6' test.Length - 6 - 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlock_BulkWrite,The following statement contains a magic number: b.Write(test' 6' test.Length - 6 - 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlock_BulkWrite,The following statement contains a magic number: b.Write(test' 6' test.Length - 6 - 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlock_BulkWrite,The following statement contains a magic number: b.Write(test' test.Length - 2' 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlock_BulkWrite,The following statement contains a magic number: b.Write(test' test.Length - 2' 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_BulkWrite,The following statement contains a magic number: byte[] test = new TestRng(Sharpen.Extensions.GetTestName()).NextBytes(TemporaryBuffer.Block 				.SZ * 3 / 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_BulkWrite,The following statement contains a magic number: byte[] test = new TestRng(Sharpen.Extensions.GetTestName()).NextBytes(TemporaryBuffer.Block 				.SZ * 3 / 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.Write(test' 0' 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.Write(test' 2' 4);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.Write(test' 2' 4);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.Write(test' 6' test.Length - 6 - 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.Write(test' 6' test.Length - 6 - 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.Write(test' 6' test.Length - 6 - 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.Write(test' test.Length - 2' 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_BulkWrite,The following statement contains a magic number: b.Write(test' test.Length - 2' 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_SingleWrite,The following statement contains a magic number: byte[] test = new TestRng(Sharpen.Extensions.GetTestName()).NextBytes(TemporaryBuffer.Block 				.SZ * 3 / 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_SingleWrite,The following statement contains a magic number: byte[] test = new TestRng(Sharpen.Extensions.GetTestName()).NextBytes(TemporaryBuffer.Block 				.SZ * 3 / 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_Copy,The following statement contains a magic number: byte[] test = new TestRng(Sharpen.Extensions.GetTestName()).NextBytes(TemporaryBuffer.Block 				.SZ * 3 / 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestOneBlockAndHalf_Copy,The following statement contains a magic number: byte[] test = new TestRng(Sharpen.Extensions.GetTestName()).NextBytes(TemporaryBuffer.Block 				.SZ * 3 / 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestLarge_SingleWrite,The following statement contains a magic number: byte[] test = new TestRng(Sharpen.Extensions.GetTestName()).NextBytes(TemporaryBuffer 				.DEFAULT_IN_CORE_LIMIT * 3);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestInCoreInputStream,The following statement contains a magic number: int cnt = 256;
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestInCoreInputStream,The following statement contains a magic number: TemporaryBuffer.Heap b = new TemporaryBuffer.Heap(cnt + 4);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestInCoreLimit_SwitchBeforeAppendByte,The following statement contains a magic number: byte[] test = new TestRng(Sharpen.Extensions.GetTestName()).NextBytes(TemporaryBuffer 				.DEFAULT_IN_CORE_LIMIT * 3);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestInCoreLimit_SwitchOnCopy,The following statement contains a magic number: byte[] test = new TestRng(Sharpen.Extensions.GetTestName()).NextBytes(TemporaryBuffer 				.DEFAULT_IN_CORE_LIMIT * 2);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestDestroyWhileOpen,The following statement contains a magic number: b.Write(new TestRng(Sharpen.Extensions.GetTestName()).NextBytes(TemporaryBuffer.DEFAULT_IN_CORE_LIMIT 					 * 2));
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestRandomWrites,The following statement contains a magic number: int max = TemporaryBuffer.DEFAULT_IN_CORE_LIMIT * 2;
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestHeap,The following statement contains a magic number: TemporaryBuffer b = new TemporaryBuffer.Heap(2 * 8 * 1024);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestHeap,The following statement contains a magic number: TemporaryBuffer b = new TemporaryBuffer.Heap(2 * 8 * 1024);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestHeap,The following statement contains a magic number: TemporaryBuffer b = new TemporaryBuffer.Heap(2 * 8 * 1024);
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestHeap,The following statement contains a magic number: byte[] r = new byte[8 * 1024];
Magic Number,NGit.Util,TemporaryBufferTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\TemporaryBufferTest.cs,TestHeap,The following statement contains a magic number: byte[] r = new byte[8 * 1024];
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestEmptyList,The following statement contains a magic number: empty = new BlockList<string>(64);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestGet,The following statement contains a magic number: BlockList<string> list = new BlockList<string>(4);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestGet,The following statement contains a magic number: b = list[4];
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestGet,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(foobarStr' list[2]);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestGet,The following statement contains a magic number: b = list[3];
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestSet,The following statement contains a magic number: BlockList<string> list = new BlockList<string>(4);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestSet,The following statement contains a magic number: list.Set(4' "foo");
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestSet,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(foobarStr' list[2]);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestSet,The following statement contains a magic number: list.Set(3' "bar");
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddToEnd,The following statement contains a magic number: BlockList<int> list = new BlockList<int>(4);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddToEnd,The following statement contains a magic number: int cnt = BlockList<int>.BLOCK_SIZE * 3;
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddToEnd,The following statement contains a magic number: list.AddItem(Sharpen.Extensions.ValueOf(42 + i));
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddToEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(Sharpen.Extensions.ValueOf(42 + i_1)' list[i_1]);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddToEnd,The following statement contains a magic number: list.Add(i_2' Sharpen.Extensions.ValueOf(42 + i_2));
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddToEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(Sharpen.Extensions.ValueOf(42 + i_3)' list[i_3]);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddSlowPath,The following statement contains a magic number: BlockList<string> list = new BlockList<string>(4);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddSlowPath,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' list.Count);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddSlowPath,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' list.Count);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddSlowPath,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(barStr' list[2]);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddSlowPath,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(foobarStr' list[3]);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddSlowPath,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' list.Count);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddSlowPath,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(firstStr' list[2]);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddSlowPath,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(barStr' list[3]);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddSlowPath,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(foobarStr' list[4]);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestRemoveFromEnd,The following statement contains a magic number: BlockList<string> list = new BlockList<string>(4);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestRemoveFromEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(foobarStr' list.Remove(2));
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestRemoveFromEnd,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' list.Count);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestRemoveSlowPath,The following statement contains a magic number: BlockList<string> list = new BlockList<string>(4);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestRemoveSlowPath,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' list.Count);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddAllFromOtherList,The following statement contains a magic number: BlockList<int> src = new BlockList<int>(4);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddAllFromOtherList,The following statement contains a magic number: int cnt = BlockList<int>.BLOCK_SIZE * 2;
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddAllFromOtherList,The following statement contains a magic number: src.AddItem(Sharpen.Extensions.ValueOf(42 + i));
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddAllFromOtherList,The following statement contains a magic number: BlockList<int> dst = new BlockList<int>(4);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddAllFromOtherList,The following statement contains a magic number: dst.AddItem(Sharpen.Extensions.ValueOf(255));
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddAllFromOtherList,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(cnt + 2' dst.Count);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddAllFromOtherList,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(Sharpen.Extensions.ValueOf(42 + i_1)' dst[i_1 + 1 					]);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestFastIterator,The following statement contains a magic number: BlockList<int> list = new BlockList<int>(4);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestFastIterator,The following statement contains a magic number: int cnt = BlockList<int>.BLOCK_SIZE * 3;
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestFastIterator,The following statement contains a magic number: list.AddItem(Sharpen.Extensions.ValueOf(42 + i));
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestFastIterator,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(Sharpen.Extensions.ValueOf(42 + i_1)' itr.Next());
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddRejectsBadIndexes,The following statement contains a magic number: BlockList<int> list = new BlockList<int>(4);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddRejectsBadIndexes,The following statement contains a magic number: list.AddItem(Sharpen.Extensions.ValueOf(41));
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddRejectsBadIndexes,The following statement contains a magic number: list.Add(-1' Sharpen.Extensions.ValueOf(42));
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddRejectsBadIndexes,The following statement contains a magic number: list.Add(4' Sharpen.Extensions.ValueOf(42));
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestAddRejectsBadIndexes,The following statement contains a magic number: list.Add(4' Sharpen.Extensions.ValueOf(42));
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestRemoveRejectsBadIndexes,The following statement contains a magic number: BlockList<int> list = new BlockList<int>(4);
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestRemoveRejectsBadIndexes,The following statement contains a magic number: list.AddItem(Sharpen.Extensions.ValueOf(41));
Magic Number,NGit.Util,BlockListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\BlockListTest.cs,TestRemoveRejectsBadIndexes,The following statement contains a magic number: list.Remove(4);
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFuture,The following statement contains a magic number: AssertFormat(-100' RelativeDateFormatter.YEAR_IN_MILLIS' "in the future");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatSeconds,The following statement contains a magic number: AssertFormat(89' RelativeDateFormatter.SECOND_IN_MILLIS' "89 seconds ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatMinutes,The following statement contains a magic number: AssertFormat(90' RelativeDateFormatter.SECOND_IN_MILLIS' "2 minutes ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatMinutes,The following statement contains a magic number: AssertFormat(3' RelativeDateFormatter.MINUTE_IN_MILLIS' "3 minutes ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatMinutes,The following statement contains a magic number: AssertFormat(60' RelativeDateFormatter.MINUTE_IN_MILLIS' "60 minutes ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatMinutes,The following statement contains a magic number: AssertFormat(89' RelativeDateFormatter.MINUTE_IN_MILLIS' "89 minutes ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatHours,The following statement contains a magic number: AssertFormat(90' RelativeDateFormatter.MINUTE_IN_MILLIS' "2 hours ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatHours,The following statement contains a magic number: AssertFormat(149' RelativeDateFormatter.MINUTE_IN_MILLIS' "2 hours ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatHours,The following statement contains a magic number: AssertFormat(35' RelativeDateFormatter.HOUR_IN_MILLIS' "35 hours ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatDays,The following statement contains a magic number: AssertFormat(36' RelativeDateFormatter.HOUR_IN_MILLIS' "2 days ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatDays,The following statement contains a magic number: AssertFormat(13' RelativeDateFormatter.DAY_IN_MILLIS' "13 days ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatWeeks,The following statement contains a magic number: AssertFormat(14' RelativeDateFormatter.DAY_IN_MILLIS' "2 weeks ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatWeeks,The following statement contains a magic number: AssertFormat(69' RelativeDateFormatter.DAY_IN_MILLIS' "10 weeks ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatMonths,The following statement contains a magic number: AssertFormat(70' RelativeDateFormatter.DAY_IN_MILLIS' "2 months ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatMonths,The following statement contains a magic number: AssertFormat(75' RelativeDateFormatter.DAY_IN_MILLIS' "3 months ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatMonths,The following statement contains a magic number: AssertFormat(364' RelativeDateFormatter.DAY_IN_MILLIS' "12 months ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatYearsMonths,The following statement contains a magic number: AssertFormat(366' RelativeDateFormatter.DAY_IN_MILLIS' "1 year ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatYearsMonths,The following statement contains a magic number: AssertFormat(380' RelativeDateFormatter.DAY_IN_MILLIS' "1 year' 1 month ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatYearsMonths,The following statement contains a magic number: AssertFormat(410' RelativeDateFormatter.DAY_IN_MILLIS' "1 year' 2 months ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatYearsMonths,The following statement contains a magic number: AssertFormat(2' RelativeDateFormatter.YEAR_IN_MILLIS' "2 years ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatYearsMonths,The following statement contains a magic number: AssertFormat(1824' RelativeDateFormatter.DAY_IN_MILLIS' "4 years' 12 months ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatYears,The following statement contains a magic number: AssertFormat(5' RelativeDateFormatter.YEAR_IN_MILLIS' "5 years ago");
Magic Number,NGit.Util,RelativeDateFormatterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\RelativeDateFormatterTest.cs,TestFormatYears,The following statement contains a magic number: AssertFormat(60' RelativeDateFormatter.YEAR_IN_MILLIS' "60 years ago");
Magic Number,NGit.Util,_MockSystemReader_62,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util\GitDateFormatterTest.cs,GetCurrentTime,The following statement contains a magic number: return 1318125997291L;
Magic Number,NGit.Util.IO,EolCanonicalizingInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\EolCanonicalizingInputStreamTest.cs,Test,The following statement contains a magic number: bufferSize < 10
Magic Number,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,TestTimeout_readByte_Success2,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(exp[2]' @is.Read());
Magic Number,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,TestTimeout_readBuffer_Success2,The following statement contains a magic number: IOUtil.ReadFully(@is' act' 2' 1);
Magic Number,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,TestTimeout_readBuffer_Timeout,The following statement contains a magic number: IOUtil.ReadFully(@is' new byte[512]' 0' 512);
Magic Number,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,TestTimeout_readBuffer_Timeout,The following statement contains a magic number: IOUtil.ReadFully(@is' new byte[512]' 0' 512);
Magic Number,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,TestTimeout_skip_Success,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' @is.Skip(2));
Magic Number,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,TestTimeout_skip_Success,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' @is.Skip(2));
Magic Number,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,TestTimeout_skip_Timeout,The following statement contains a magic number: @is.Skip(1024);
Magic Number,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,AssertTimeout,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(timeout - wait < 50' "waited only " + wait + " ms");
Magic Number,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,Active,The following statement contains a magic number: Sharpen.Thread[] all = new Sharpen.Thread[16];
Magic Number,NGit.Util.IO,TimeoutInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutInputStreamTest.cs,Active,The following statement contains a magic number: all = new Sharpen.Thread[all.Length * 2];
Magic Number,NGit.Util.IO,TimeoutOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutOutputStreamTest.cs,TestTimeout_writeByte_Success2,The following statement contains a magic number: os.Write(exp[2]);
Magic Number,NGit.Util.IO,TimeoutOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutOutputStreamTest.cs,TestTimeout_writeBuffer_Timeout,The following statement contains a magic number: os.Write(new byte[512]);
Magic Number,NGit.Util.IO,TimeoutOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutOutputStreamTest.cs,AssertTimeout,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(timeout - wait < 50' "waited only " + wait + " ms");
Magic Number,NGit.Util.IO,TimeoutOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutOutputStreamTest.cs,Active,The following statement contains a magic number: Sharpen.Thread[] all = new Sharpen.Thread[16];
Magic Number,NGit.Util.IO,TimeoutOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutOutputStreamTest.cs,Active,The following statement contains a magic number: all = new Sharpen.Thread[all.Length * 2];
Magic Number,NGit.Util.IO,_OutputStream_172,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutOutputStreamTest.cs,Flush,The following statement contains a magic number: Sharpen.Thread.Sleep(1000);
Magic Number,NGit.Util.IO,_OutputStream_225,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\TimeoutOutputStreamTest.cs,Close,The following statement contains a magic number: Sharpen.Thread.Sleep(1000);
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadSingleBytes,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 1' 0' 2 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadSingleBytes,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 3 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadSingleBytes,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 4' 5 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadSingleBytes,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 4' 5 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadSingleBytes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' u.Available());
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadSingleBytes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' u.Read());
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadSingleBytes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' u.Read());
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadSingleBytes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4' u.Read());
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadSingleBytes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(5' u.Read());
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadSingleBytes,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { unchecked((byte)255) }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadSingleBytes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(255' u.Read());
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 1' 0' 2 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 3 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 4' 5 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 4' 5 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: byte[] r = new byte[5];
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' u.Read(r' 0' 5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' u.Read(r' 0' 5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 1' 0' 2 }' Slice(r' 3)));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 1' 0' 2 }' Slice(r' 3)));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1' u.Read(r' 0' 5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' r[0]);
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' u.Read(r' 0' 5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' u.Read(r' 0' 5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 4' 5 }' Slice(r' 2)));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 4' 5 }' Slice(r' 2)));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 4' 5 }' Slice(r' 2)));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestReadByteBlocks,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(-1' u.Read(r' 0' 5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: UnionInputStream u = new UnionInputStream(new ByteArrayInputStream(new byte[] { 1 				' 0' 2 })' new ByteArrayInputStream(new byte[] { 3 })' new ByteArrayInputStream( 				new byte[] { 4' 5 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: UnionInputStream u = new UnionInputStream(new ByteArrayInputStream(new byte[] { 1 				' 0' 2 })' new ByteArrayInputStream(new byte[] { 3 })' new ByteArrayInputStream( 				new byte[] { 4' 5 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: UnionInputStream u = new UnionInputStream(new ByteArrayInputStream(new byte[] { 1 				' 0' 2 })' new ByteArrayInputStream(new byte[] { 3 })' new ByteArrayInputStream( 				new byte[] { 4' 5 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: UnionInputStream u = new UnionInputStream(new ByteArrayInputStream(new byte[] { 1 				' 0' 2 })' new ByteArrayInputStream(new byte[] { 3 })' new ByteArrayInputStream( 				new byte[] { 4' 5 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: byte[] r = new byte[5];
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' u.Read(r' 0' 5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' u.Read(r' 0' 5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 1' 0' 2 }' Slice(r' 3)));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 1' 0' 2 }' Slice(r' 3)));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1' u.Read(r' 0' 5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' r[0]);
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' u.Read(r' 0' 5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' u.Read(r' 0' 5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 4' 5 }' Slice(r' 2)));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 4' 5 }' Slice(r' 2)));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 4' 5 }' Slice(r' 2)));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestArrayConstructor,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(-1' u.Read(r' 0' 5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestMarkSupported,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 1' 0' 2 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 1' 0' 2 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 3 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 4' 5 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: u.Add(new ByteArrayInputStream(new byte[] { 4' 5 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' u.Skip(3));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' u.Skip(3));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' u.Read());
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' u.Skip(5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' u.Skip(5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(0' u.Skip(5));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: u.Add(new _ByteArrayInputStream_168(new byte[] { 20' 30 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: u.Add(new _ByteArrayInputStream_168(new byte[] { 20' 30 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' u.Skip(8));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestSkip,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' u.Skip(8));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestAutoCloseDuringRead,The following statement contains a magic number: bool[] closed = new bool[2];
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestAutoCloseDuringRead,The following statement contains a magic number: u.Add(new _ByteArrayInputStream_187(closed' new byte[] { 2 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestAutoCloseDuringRead,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' u.Read());
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestCloseDuringClose,The following statement contains a magic number: bool[] closed = new bool[2];
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestCloseDuringClose,The following statement contains a magic number: u.Add(new _ByteArrayInputStream_218(closed' new byte[] { 2 }));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestNonBlockingPartialRead,The following statement contains a magic number: UnionInputStream u = new UnionInputStream(new ByteArrayInputStream(new byte[] { 1 				' 2' 3 })' errorReadStream);
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestNonBlockingPartialRead,The following statement contains a magic number: UnionInputStream u = new UnionInputStream(new ByteArrayInputStream(new byte[] { 1 				' 2' 3 })' errorReadStream);
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestNonBlockingPartialRead,The following statement contains a magic number: byte[] buf = new byte[10];
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestNonBlockingPartialRead,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' u.Read(buf' 0' 10));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestNonBlockingPartialRead,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' u.Read(buf' 0' 10));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestNonBlockingPartialRead,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 1' 2' 3 }' Slice(buf' 3) 				));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestNonBlockingPartialRead,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 1' 2' 3 }' Slice(buf' 3) 				));
Magic Number,NGit.Util.IO,UnionInputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\UnionInputStreamTest.cs,TestNonBlockingPartialRead,The following statement contains a magic number: NUnit.Framework.Assert.IsTrue(Arrays.Equals(new byte[] { 1' 2' 3 }' Slice(buf' 3) 				));
Magic Number,NGit.Util.IO,AutoCRLFOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\AutoCRLFOutputStreamTest.cs,AssertNoCrLfHelper,The following statement contains a magic number: i < 5
Magic Number,NGit.Util.IO,AutoCRLFOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Util.IO\AutoCRLFOutputStreamTest.cs,Encode,The following statement contains a magic number: ((sbyte)b) < 32
Magic Number,NGit.Revplot,PlotCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revplot\PlotCommitListTest.cs,TestEgitHistory,The following statement contains a magic number: test.Commit(merge_resolve_handler).Parents(clone_operation' resolve_handler).LanePos 				(2);
Magic Number,NGit.Revplot,PlotCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revplot\PlotCommitListTest.cs,TestEgitHistory,The following statement contains a magic number: test.Commit(update_eclipse).Parents(add_Maven).LanePos(3);
Magic Number,NGit.Revplot,PlotCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revplot\PlotCommitListTest.cs,TestEgitHistory,The following statement contains a magic number: test.Commit(changeset_implementation).Parents(clear_repositorycache).LanePos(2);
Magic Number,NGit.Revplot,PlotCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revplot\PlotCommitListTest.cs,TestEgitHistory,The following statement contains a magic number: test.Commit(add_Maven).Parents(clear_repositorycache).LanePos(3);
Magic Number,NGit.Revplot,PlotCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revplot\PlotCommitListTest.cs,TestEgitHistory,The following statement contains a magic number: test.Commit(clear_repositorycache).Parents(merge_remove).LanePos(2);
Magic Number,NGit.Revplot,PlotCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revplot\PlotCommitListTest.cs,TestEgitHistory,The following statement contains a magic number: test.Commit(resolve_handler).Parents(merge_fix).LanePos(4);
Magic Number,NGit.Revplot,PlotCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revplot\PlotCommitListTest.cs,TestEgitHistory,The following statement contains a magic number: test.Commit(merge_remove).Parents(add_simple' remove_unused).LanePos(2);
Magic Number,NGit.Revplot,PlotCommitListTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Revplot\PlotCommitListTest.cs,TestEgitHistory,The following statement contains a magic number: test.Commit(merge_fix).Parents().LanePos(3);
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestReadFanout2_38,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(2' a.Name)' data1).Add(Fanout(2' b.Name)' data2 				).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestReadFanout2_38,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(2' a.Name)' data1).Add(Fanout(2' b.Name)' data2 				).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestReadFanout2_2_36,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(4' a.Name)' data1).Add(Fanout(4' b.Name)' data2 				).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestReadFanout2_2_36,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(4' a.Name)' data1).Add(Fanout(4' b.Name)' data2 				).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestReadFullyFannedOut,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(38' a.Name)' data1).Add(Fanout(38' b.Name)'  				data2).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestReadFullyFannedOut,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(38' a.Name)' data1).Add(Fanout(38' b.Name)'  				data2).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestGetCachedBytes,The following statement contains a magic number: byte[] act = map.GetCachedBytes(a' exp.Length * 4);
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestWriteUnchangedFanout2_38,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(2' a.Name)' data1).Add(Fanout(2' b.Name)' data2 				).Add(".gitignore"' string.Empty).Add("zoo-animals.txt"' string.Empty).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestWriteUnchangedFanout2_38,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(2' a.Name)' data1).Add(Fanout(2' b.Name)' data2 				).Add(".gitignore"' string.Empty).Add("zoo-animals.txt"' string.Empty).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestEditFanout2_38,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(2' a.Name)' data1).Add(Fanout(2' b.Name)' data2 				).Add(".gitignore"' string.Empty).Add("zoo-animals.txt"' b).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestEditFanout2_38,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(2' a.Name)' data1).Add(Fanout(2' b.Name)' data2 				).Add(".gitignore"' string.Empty).Add("zoo-animals.txt"' b).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestLeafSplitsWhenFull,The following statement contains a magic number: i < 254
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestLeafSplitsWhenFull,The following statement contains a magic number: i_1 < 256
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestLeafSplitsWhenFull,The following statement contains a magic number: idBuf.SetByte(Constants.OBJECT_ID_LENGTH - 2' 1);
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestLeafSplitsWhenFull,The following statement contains a magic number: string path = Fanout(38' idBuf.Name);
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestLeafSplitsWhenFull,The following statement contains a magic number: path = Fanout(2' data1.Name);
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestRemoveDeletesTreeFanout2_38,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(2' a.Name)' data1).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestIteratorFlatTree,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' Count(it));
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestIteratorFanoutTree2_38,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(2' a.Name)' data1).Add(Fanout(2' b.Name)' data2 				).Add("nonNote"' nonNote).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestIteratorFanoutTree2_38,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(2' a.Name)' data1).Add(Fanout(2' b.Name)' data2 				).Add("nonNote"' nonNote).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestIteratorFanoutTree2_38,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' Count(it));
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestIteratorFanoutTree2_2_36,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(4' a.Name)' data1).Add(Fanout(4' b.Name)' data2 				).Add("nonNote"' nonNote).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestIteratorFanoutTree2_2_36,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(4' a.Name)' data1).Add(Fanout(4' b.Name)' data2 				).Add("nonNote"' nonNote).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestIteratorFanoutTree2_2_36,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' Count(it));
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestIteratorFullyFannedOut,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(38' a.Name)' data1).Add(Fanout(38' b.Name)'  				data2).Add("nonNote"' nonNote).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestIteratorFullyFannedOut,The following statement contains a magic number: RevCommit r = tr.Commit().Add(Fanout(38' a.Name)' data1).Add(Fanout(38' b.Name)'  				data2).Add("nonNote"' nonNote).Create();
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,TestIteratorFullyFannedOut,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' Count(it));
Magic Number,NGit.Notes,NoteMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapTest.cs,CommitNoteMap,The following statement contains a magic number: tr.Tick(600);
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestOursEqualsTheirs,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' CountNotes(result));
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestBaseEqualsOurs,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' CountNotes(result));
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestBaseEqualsTheirs,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' CountNotes(result));
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestAddDifferentNotes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' CountNotes(result));
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestAddSameNoteDifferentContent,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' CountNotes(result));
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestEditDifferentNotes,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' CountNotes(result));
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestEditDeleteConflict,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' CountNotes(result));
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestLargeTreesWithoutConflict,The following statement contains a magic number: NoteMap map1 = CreateLargeNoteMap("note_1_"' "content_1_"' 300' 0);
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestLargeTreesWithoutConflict,The following statement contains a magic number: NoteMap map2 = CreateLargeNoteMap("note_2_"' "content_2_"' 300' 0);
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestLargeTreesWithoutConflict,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(600' CountNotes(result));
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestLargeTreesWithConflict,The following statement contains a magic number: NoteMap largeTree1 = CreateLargeNoteMap("note_1_"' "content_1_"' 300' 0);
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestLargeTreesWithConflict,The following statement contains a magic number: NoteMap largeTree2 = CreateLargeNoteMap("note_1_"' "content_2_"' 300' 0);
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestLargeTreesWithConflict,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(300' CountNotes(result));
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestFanoutAndLeafWithoutConflict,The following statement contains a magic number: NoteMap largeTree = CreateLargeNoteMap("note_1_"' "content_1_"' 300' 0);
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestFanoutAndLeafWithoutConflict,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(301' CountNotes(result));
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestFanoutAndLeafWitConflict,The following statement contains a magic number: NoteMap largeTree_b1 = CreateLargeNoteMap("note_1_"' "content_1_"' 300' 0);
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestFanoutAndLeafWitConflict,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(301' CountNotes(result));
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestCollapseFanoutAfterMerge,The following statement contains a magic number: NoteMap largeTree = CreateLargeNoteMap("note_"' "content_"' 257' 0);
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestCollapseFanoutAfterMerge,The following statement contains a magic number: NoteMap deleteFirstHundredNotes = CreateLargeNoteMap("note_"' "content_"' 157' 100 				);
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestCollapseFanoutAfterMerge,The following statement contains a magic number: NoteMap deleteFirstHundredNotes = CreateLargeNoteMap("note_"' "content_"' 157' 100 				);
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestCollapseFanoutAfterMerge,The following statement contains a magic number: NoteMap deleteLastHundredNotes = CreateLargeNoteMap("note_"' "content_"' 157' 0);
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestCollapseFanoutAfterMerge,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(57' CountNotes(result));
Magic Number,NGit.Notes,NoteMapMergerTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Notes\NoteMapMergerTest.cs,TestNonNotesWithoutNonNoteConflict,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' CountNonNotes(result));
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestGitProtoUnixPort,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(333' u.GetPort());
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestGitProtoWindowsPort,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(338' u.GetPort());
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestSshProtoWithUserAndPort,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(33' u.GetPort());
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestSshProtoWithUserPassAndPort,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(33' u.GetPort());
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestSshProtoWithADUserPassAndPort,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(33' u.GetPort());
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestSshProtoWithEscapedADUserPassAndPort,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(33' u.GetPort());
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestURIEncodeDecode,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(33' u.GetPort());
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestGetSet,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(33' u.GetPort());
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestUserPasswordAndPort,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(80' u.GetPort());
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestUserPasswordAndPort,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(80' u.GetPort());
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestPathSeparator,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(80' u.GetPort());
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestALot,The following statement contains a magic number: k < 10
Magic Number,NGit.Transport,URIishTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\URIishTest.cs,TestALot,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(expect[2]' urIish.GetUser()' url);
Magic Number,NGit.Transport,TransportTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\TransportTest.cs,TestFindRemoteRefUpdatesWildcardNoTracking,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(12' result.Count);
Magic Number,NGit.Transport,TransportTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\TransportTest.cs,TestFindRemoteRefUpdatesTwoRefSpecs,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' result.Count);
Magic Number,NGit.Transport,SideBandOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\SideBandOutputStreamTest.cs,TestWrite_SmallBlocks1,The following statement contains a magic number: SideBandOutputStream @out = new SideBandOutputStream(SideBandOutputStream.CH_DATA 				' 6' rawOut);
Magic Number,NGit.Transport,SideBandOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\SideBandOutputStreamTest.cs,TestWrite_SmallBlocks2,The following statement contains a magic number: SideBandOutputStream @out = new SideBandOutputStream(SideBandOutputStream.CH_DATA 				' 6' rawOut);
Magic Number,NGit.Transport,SideBandOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\SideBandOutputStreamTest.cs,TestWrite_SmallBlocks3,The following statement contains a magic number: SideBandOutputStream @out = new SideBandOutputStream(SideBandOutputStream.CH_DATA 				' 7' rawOut);
Magic Number,NGit.Transport,SideBandOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\SideBandOutputStreamTest.cs,TestWrite_Large,The following statement contains a magic number: string explen = Sharpen.Extensions.ToString(buf.Length + SideBandOutputStream.HDR_SIZE 				' 16);
Magic Number,NGit.Transport,SideBandOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\SideBandOutputStreamTest.cs,TestWrite_Large,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(Sharpen.Runtime.GetStringForBytes(act' 0' 4' "UTF-8" 				)' explen);
Magic Number,NGit.Transport,SideBandOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\SideBandOutputStreamTest.cs,TestWrite_Large,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(1' act[4]);
Magic Number,NGit.Transport,SideBandOutputStreamTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\SideBandOutputStreamTest.cs,TestConstructor_RejectsBadChannel,The following statement contains a magic number: new SideBandOutputStream(256' SideBandOutputStream.MAX_BUF' rawOut);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestMirror,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' rc.FetchRefSpecs.Count);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestBackup,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' allURIs.Count);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestBackup,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' rc.PushRefSpecs.Count);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestRemoveFirstURI,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' rc.URIs.Count);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestRemoveFirstURI,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(c' rc.URIs[2]);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestRemoveFirstURI,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' rc.URIs.Count);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestRemoveMiddleURI,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' rc.URIs.Count);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestRemoveMiddleURI,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(c' rc.URIs[2]);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestRemoveMiddleURI,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' rc.URIs.Count);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestRemoveLastURI,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' rc.URIs.Count);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestRemoveLastURI,The following statement contains a magic number: NUnit.Framework.Assert.AreSame(c' rc.URIs[2]);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestRemoveLastURI,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' rc.URIs.Count);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestSaveAddURI,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' rc.URIs.Count);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestSaveRemoveLastURI,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' rc.URIs.Count);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestSaveRemoveFirstURI,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' rc.URIs.Count);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestSimpleTimeout,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(12' rc.Timeout);
Magic Number,NGit.Transport,RemoteConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\RemoteConfigTest.cs,TestSaveTimeout,The following statement contains a magic number: rc.Timeout = 60;
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestSuccess,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestSuccess,The following statement contains a magic number: PackHeader(pack' 2);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestSuccess,The following statement contains a magic number: pack.Write((Constants.OBJ_BLOB) << 4 | 1);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestSuccess,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestSuccess,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestCreateBranchAtHiddenCommitFails,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(64);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestCreateBranchAtHiddenCommitFails,The following statement contains a magic number: TemporaryBuffer.Heap inBuf = new TemporaryBuffer.Heap(256);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestCreateBranchAtHiddenCommitFails,The following statement contains a magic number: TemporaryBuffer.Heap outBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingHiddenDeltaBaseFails,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingHiddenDeltaBaseFails,The following statement contains a magic number: PackHeader(pack' 3);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingHiddenDeltaBaseFails,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingHiddenDeltaBaseFails,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingHiddenDeltaBaseFails,The following statement contains a magic number: TemporaryBuffer.Heap inBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingHiddenDeltaBaseFails,The following statement contains a magic number: TemporaryBuffer.Heap outBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingHiddenCommonBlobFails,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingHiddenCommonBlobFails,The following statement contains a magic number: PackHeader(pack' 2);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingHiddenCommonBlobFails,The following statement contains a magic number: TemporaryBuffer.Heap inBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingHiddenCommonBlobFails,The following statement contains a magic number: TemporaryBuffer.Heap outBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingUnknownBlobFails,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingUnknownBlobFails,The following statement contains a magic number: PackHeader(pack' 2);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingUnknownBlobFails,The following statement contains a magic number: TemporaryBuffer.Heap inBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingUnknownBlobFails,The following statement contains a magic number: TemporaryBuffer.Heap outBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingUnknownTreeFails,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingUnknownTreeFails,The following statement contains a magic number: TemporaryBuffer.Heap inBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,TestUsingUnknownTreeFails,The following statement contains a magic number: TemporaryBuffer.Heap outBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,PackHeader,The following statement contains a magic number: byte[] hdr = new byte[8];
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,PackHeader,The following statement contains a magic number: NB.EncodeInt32(hdr' 0' 2);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,PackHeader,The following statement contains a magic number: NB.EncodeInt32(hdr' 4' cnt);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,PackHeader,The following statement contains a magic number: tinyPack.Write(hdr' 0' 8);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,Copy,The following statement contains a magic number: byte[] buf = new byte[64];
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,Copy,The following statement contains a magic number: int nextLength = (int)(((uint)dataLength) >> 4);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,Copy,The following statement contains a magic number: buf[size++] = unchecked((byte)((nextLength > 0 ? unchecked((int)(0x80)) : unchecked( 				(int)(0x00))) | (ldr.GetType() << 4) | (dataLength & unchecked((int)(0x0F)))));
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,Copy,The following statement contains a magic number: nextLength = (int)(((uint)nextLength) >> 7);
Magic Number,NGit.Transport,ReceivePackRefFilterTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackRefFilterTest.cs,Deflate,The following statement contains a magic number: byte[] buf = new byte[128];
Magic Number,NGit.Transport,PacketLineOutTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PacketLineOutTest.cs,TestWritePacket3,The following statement contains a magic number: int buflen = SideBandOutputStream.MAX_BUF - 5;
Magic Number,NGit.Transport,PacketLineOutTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PacketLineOutTest.cs,TestWritePacket3,The following statement contains a magic number: string explen = Sharpen.Extensions.ToString(buf.Length + 4' 16);
Magic Number,NGit.Transport,PacketLineOutTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PacketLineOutTest.cs,TestWritePacket3,The following statement contains a magic number: string explen = Sharpen.Extensions.ToString(buf.Length + 4' 16);
Magic Number,NGit.Transport,PacketLineOutTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PacketLineOutTest.cs,TestWritePacket3,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(4 + buf.Length' act.Length);
Magic Number,NGit.Transport,PacketLineOutTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PacketLineOutTest.cs,TestWritePacket3,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(Sharpen.Runtime.GetStringForBytes(act' 0' 4' "UTF-8" 				)' explen);
Magic Number,NGit.Transport,LongMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\LongMapTest.cs,TestSmallMap,The following statement contains a magic number: long start = 12;
Magic Number,NGit.Transport,LongMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\LongMapTest.cs,TestSmallMap,The following statement contains a magic number: long n = 8;
Magic Number,NGit.Transport,LongMapTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\LongMapTest.cs,TestLargeMap,The following statement contains a magic number: long n = 100000;
Magic Number,NGit.Transport,OpenSshConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\OpenSshConfigTest.cs,TestNoConfig,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(22' h.GetPort());
Magic Number,NGit.Transport,OpenSshConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\OpenSshConfigTest.cs,TestQuoteParsing,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(6007' osc.Lookup("good").GetPort());
Magic Number,NGit.Transport,OpenSshConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\OpenSshConfigTest.cs,TestQuoteParsing,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2222' osc.Lookup("multiple").GetPort());
Magic Number,NGit.Transport,OpenSshConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\OpenSshConfigTest.cs,TestQuoteParsing,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2222' osc.Lookup("quoted").GetPort());
Magic Number,NGit.Transport,OpenSshConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\OpenSshConfigTest.cs,TestQuoteParsing,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2222' osc.Lookup("and").GetPort());
Magic Number,NGit.Transport,OpenSshConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\OpenSshConfigTest.cs,TestQuoteParsing,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2222' osc.Lookup("unquoted").GetPort());
Magic Number,NGit.Transport,OpenSshConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\OpenSshConfigTest.cs,TestQuoteParsing,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2222' osc.Lookup("hosts").GetPort());
Magic Number,NGit.Transport,OpenSshConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\OpenSshConfigTest.cs,TestAlias_DoesNotMatch,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(22' h.GetPort());
Magic Number,NGit.Transport,OpenSshConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\OpenSshConfigTest.cs,TestAlias_OptionsSet,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2222' h.GetPort());
Magic Number,NGit.Transport,OpenSshConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\OpenSshConfigTest.cs,TestAlias_OptionsKeywordCaseInsensitive,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2222' h.GetPort());
Magic Number,NGit.Transport,OpenSshConfigTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\OpenSshConfigTest.cs,TestAlias_OptionsInherit,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2222' h.GetPort());
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestTinyThinPack,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestTinyThinPack,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestTinyThinPack,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestPackWithDuplicateBlob,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestPackWithDuplicateBlob,The following statement contains a magic number: pack.Write((Constants.OBJ_BLOB) << 4 | unchecked((int)(0x80)) | 1);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestPackWithTrailingGarbage,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestPackWithTrailingGarbage,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestPackWithTrailingGarbage,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeFullBlob,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeFullBlob,The following statement contains a magic number: pack.Write((Constants.OBJ_BLOB) << 4 | 10);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeFullBlob,The following statement contains a magic number: pack.Write((Constants.OBJ_BLOB) << 4 | 10);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeFullBlob,The following statement contains a magic number: p.SetMaxObjectSizeLimit(11);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeFullBlob,The following statement contains a magic number: p.SetMaxObjectSizeLimit(10);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeFullBlob,The following statement contains a magic number: p.SetMaxObjectSizeLimit(9);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaBlock,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaBlock,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 14);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaBlock,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 14);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaBlock,The following statement contains a magic number: Deflate(pack' new byte[] { 1' 11' 11' (byte)('a')' (byte)('0')' (byte)('1')' (byte 				)('2')' (byte)('3')' (byte)('4')' (byte)('5')' (byte)('6')' (byte)('7')' (byte)( 				'8')' (byte)('9') });
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaBlock,The following statement contains a magic number: Deflate(pack' new byte[] { 1' 11' 11' (byte)('a')' (byte)('0')' (byte)('1')' (byte 				)('2')' (byte)('3')' (byte)('4')' (byte)('5')' (byte)('6')' (byte)('7')' (byte)( 				'8')' (byte)('9') });
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaBlock,The following statement contains a magic number: p.SetMaxObjectSizeLimit(14);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaBlock,The following statement contains a magic number: p.SetMaxObjectSizeLimit(13);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaResultSize,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaResultSize,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaResultSize,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaResultSize,The following statement contains a magic number: Deflate(pack' new byte[] { 10' 11' 1' (byte)('a') });
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaResultSize,The following statement contains a magic number: Deflate(pack' new byte[] { 10' 11' 1' (byte)('a') });
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaResultSize,The following statement contains a magic number: p.SetMaxObjectSizeLimit(11);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestMaxObjectSizeDeltaResultSize,The following statement contains a magic number: p.SetMaxObjectSizeLimit(10);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestNonMarkingInputStream,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestNonMarkingInputStream,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestNonMarkingInputStream,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSingleRead,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(32 * 1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSingleRead,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(32 * 1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSingleRead,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSingleRead,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitObjectRead,The following statement contains a magic number: int objects = 900;
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitObjectRead,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(32 * 1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitObjectRead,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(32 * 1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitObjectRead,The following statement contains a magic number: pack.Write((Constants.OBJ_BLOB) << 4 | 10);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitObjectRead,The following statement contains a magic number: pack.Write((Constants.OBJ_BLOB) << 4 | 10);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitHeaderRead,The following statement contains a magic number: int objects = 248;
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitHeaderRead,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(32 * 1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitHeaderRead,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(32 * 1024);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitHeaderRead,The following statement contains a magic number: int offset = 13;
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitHeaderRead,The following statement contains a magic number: int lenByte = (Constants.OBJ_BLOB) << 4 | (offset & unchecked((int)(0x0F)));
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitHeaderRead,The following statement contains a magic number: offset >>= 4;
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitHeaderRead,The following statement contains a magic number: lenByte |= 1 << 7;
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitHeaderRead,The following statement contains a magic number: offset >>= 6;
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitHeaderRead,The following statement contains a magic number: lenByte |= 1 << 7;
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitHeaderRead,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,TestDataAfterPackFooterSplitHeaderRead,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,PackHeader,The following statement contains a magic number: byte[] hdr = new byte[8];
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,PackHeader,The following statement contains a magic number: NB.EncodeInt32(hdr' 0' 2);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,PackHeader,The following statement contains a magic number: NB.EncodeInt32(hdr' 4' cnt);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,PackHeader,The following statement contains a magic number: tinyPack.Write(hdr' 0' 8);
Magic Number,NGit.Transport,PackParserTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\PackParserTest.cs,Deflate,The following statement contains a magic number: byte[] buf = new byte[128];
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestSuccess,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestSuccess,The following statement contains a magic number: PackHeader(pack' 2);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestSuccess,The following statement contains a magic number: pack.Write((Constants.OBJ_BLOB) << 4 | 1);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestSuccess,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestSuccess,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestCreateBranchAtHiddenCommitFails,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(64);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestCreateBranchAtHiddenCommitFails,The following statement contains a magic number: TemporaryBuffer.Heap inBuf = new TemporaryBuffer.Heap(256);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestCreateBranchAtHiddenCommitFails,The following statement contains a magic number: TemporaryBuffer.Heap outBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingHiddenDeltaBaseFails,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingHiddenDeltaBaseFails,The following statement contains a magic number: PackHeader(pack' 3);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingHiddenDeltaBaseFails,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingHiddenDeltaBaseFails,The following statement contains a magic number: pack.Write((Constants.OBJ_REF_DELTA) << 4 | 4);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingHiddenDeltaBaseFails,The following statement contains a magic number: TemporaryBuffer.Heap inBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingHiddenDeltaBaseFails,The following statement contains a magic number: TemporaryBuffer.Heap outBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingHiddenCommonBlobFails,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingHiddenCommonBlobFails,The following statement contains a magic number: PackHeader(pack' 2);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingHiddenCommonBlobFails,The following statement contains a magic number: TemporaryBuffer.Heap inBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingHiddenCommonBlobFails,The following statement contains a magic number: TemporaryBuffer.Heap outBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingUnknownBlobFails,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingUnknownBlobFails,The following statement contains a magic number: PackHeader(pack' 2);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingUnknownBlobFails,The following statement contains a magic number: TemporaryBuffer.Heap inBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingUnknownBlobFails,The following statement contains a magic number: TemporaryBuffer.Heap outBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingUnknownTreeFails,The following statement contains a magic number: TemporaryBuffer.Heap pack = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingUnknownTreeFails,The following statement contains a magic number: TemporaryBuffer.Heap inBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,TestUsingUnknownTreeFails,The following statement contains a magic number: TemporaryBuffer.Heap outBuf = new TemporaryBuffer.Heap(1024);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,PackHeader,The following statement contains a magic number: byte[] hdr = new byte[8];
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,PackHeader,The following statement contains a magic number: NB.EncodeInt32(hdr' 0' 2);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,PackHeader,The following statement contains a magic number: NB.EncodeInt32(hdr' 4' cnt);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,PackHeader,The following statement contains a magic number: tinyPack.Write(hdr' 0' 8);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,Copy,The following statement contains a magic number: byte[] buf = new byte[64];
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,Copy,The following statement contains a magic number: int nextLength = (int)(((uint)dataLength) >> 4);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,Copy,The following statement contains a magic number: buf[size++] = unchecked((byte)((nextLength > 0 ? unchecked((int)(0x80)) : unchecked( 				(int)(0x00))) | (ldr.GetType() << 4) | (dataLength & unchecked((int)(0x0F)))));
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,Copy,The following statement contains a magic number: nextLength = (int)(((uint)nextLength) >> 7);
Magic Number,NGit.Transport,ReceivePackAdvertiseRefsHookTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Transport\ReceivePackAdvertiseRefsHookTest.cs,Deflate,The following statement contains a magic number: byte[] buf = new byte[128];
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestBoundLineDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' generator.GetResultContents().Size());
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestBoundLineDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' generator.GetRegionLength());
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestBoundLineDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' generator.GetResultEnd());
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestBoundLineDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' generator.GetSourceEnd());
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestRenamedBoundLineDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' generator.GetResultContents().Size());
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestRenamedBoundLineDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' generator.GetRegionLength());
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestRenamedBoundLineDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' generator.GetResultEnd());
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestRenamedBoundLineDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(2' generator.GetSourceEnd());
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestRenamedBoundLineDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' result.GetResultContents().Size());
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestRenamedBoundLineDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(c1' result.GetSourceCommit(2));
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestRenamedBoundLineDelete,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(FILENAME_1' result.GetSourcePath(2));
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestLinesAllDeletedShortenedWalk,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' generator.GetResultContents().Size());
Magic Number,NGit.Api.Blame,BlameGeneratorTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api.Blame\BlameGeneratorTest.cs,TestLinesAllDeletedShortenedWalk,The following statement contains a magic number: NUnit.Framework.Assert.AreEqual(3' generator.GetResultEnd());
Missing Default,NGit.Api,CommitOnlyTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitOnlyTest.cs,Expected_f3_head,The following switch statement is missing a default case: switch (state) 			{ 				case 0: 				case 1: 				{ 					return string.Empty; 				}  				case 2: 				case 3: 				case 4: 				{ 					return "c3"; 				} 			}
Missing Default,NGit.Api,CommitOnlyTest,C:\research\architectureSmells\repos\mono_ngit\NGit.Test\NGit.Api\CommitOnlyTest.cs,Expected_f3_idx,The following switch statement is missing a default case: switch (state) 			{ 				case 0: 				case 3: 				{ 					return string.Empty; 				}  				case 1: 				case 2: 				{ 					return "[f3.txt' mode:100644' content:c3]"; 				}  				case 4: 				{ 					return "[f3.txt' mode:100644' content:c3']"; 				} 			}
