Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,CreateAdviceSelector,Cyclomatic complexity of the method is 8
Complex Method,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WriteDelegateProceeder,Cyclomatic complexity of the method is 18
Complex Method,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInterface,Cyclomatic complexity of the method is 8
Complex Method,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdind,Cyclomatic complexity of the method is 11
Complex Method,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitStind,Cyclomatic complexity of the method is 8
Long Parameter List,ArxOne.MrAdvice.Utility,TypeDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\TypeDefinitionExtensions.cs,AddPublicAutoProperty,The method has 5 parameters. Parameters: typeDefinition' name' typeReference' moduleDefinition' typeResolver
Long Parameter List,ArxOne.MrAdvice.Utility,ModuleDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\ModuleDefinitionExtensions.cs,GetSelfAndReferences,The method has 6 parameters. Parameters: moduleDefinition' assemblyResolver' ignoreSystem' maximumDepth' logging' isMainModule
Long Parameter List,ArxOne.MrAdvice.Utility,ModuleDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\ModuleDefinitionExtensions.cs,GetReferencedModules,The method has 5 parameters. Parameters: moduleDefinition' assemblyResolver' ignoreSystem' logging' isMainModule
Long Parameter List,ArxOne.MrAdvice.Utility,ModuleDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\ModuleDefinitionExtensions.cs,TryResolve,The method has 5 parameters. Parameters: assemblyResolver' assemblyNameReference' source' logging' directReference
Long Parameter List,ArxOne.MrAdvice.Utility,ModuleDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\ModuleDefinitionExtensions.cs,TryLoad,The method has 5 parameters. Parameters: assemblyResolver' assemblyNameReference' source' logging' directReference
Long Parameter List,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,IntroduceMember,The method has 7 parameters. Parameters: moduleDefinition' memberName' memberType' isStatic' adviceType' advisedType' markerAttribute
Long Parameter List,ArxOne.MrAdvice.Weaver,WeaverMethodWeavingContext,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\WeaverMethodWeavingContext.cs,WeaverMethodWeavingContext,The method has 6 parameters. Parameters: typeDefinition' type' targetMethodName' context' typeResolver' logging
Long Identifier,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,IsIntroduction,The length of the parameter genericAdviceMemberTypeReference is 32.
Long Identifier,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInfoAdvices,The length of the parameter proceedRuntimeInitializersReference is 35.
Long Statement,ArxOne.MrAdvice,MrAdviceStitcher,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\MrAdviceStitcher.cs,AlreadyProcessed,The length of the statement  "                        "This file is a marker for Mr.Advice to ensure the assembly wan't processed twice (in which case it would be as bad as crossing the streams)."); " is 144.
Long Statement,ArxOne.MrAdvice.Reflection.Groups,MethodReflectionNode,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Reflection\Groups\MethodReflectionNode.cs,LoadParent,The length of the statement  "                _propertyDefinition = declaringType.Properties.Single(p => p.GetMethod == _methodDefinition || p.SetMethod == _methodDefinition); " is 129.
Long Statement,ArxOne.MrAdvice.Reflection.Groups,MethodReflectionNode,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Reflection\Groups\MethodReflectionNode.cs,LoadParent,The length of the statement  "                _eventDefinition = declaringType.Events.Single(p => p.AddMethod == _methodDefinition || p.RemoveMethod == _methodDefinition); " is 125.
Long Statement,ArxOne.MrAdvice.Utility,TypeDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\TypeDefinitionExtensions.cs,AddPublicAutoProperty,The length of the statement  "            var backingFieldDefinition = new FieldDefUser($"<{name}>k__BackingField"' new FieldSig(typeReference.ToTypeSig())' FieldAttributes.Private); " is 140.
Long Statement,ArxOne.MrAdvice.Utility,TypeDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\TypeDefinitionExtensions.cs,AddPublicAutoProperty,The length of the statement  "            backingFieldDefinition.CustomAttributes.Add(moduleDefinition.CreateCustomAttribute(compilerGeneratedAttribute' typeResolver)); " is 126.
Long Statement,ArxOne.MrAdvice.Utility,TypeDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\TypeDefinitionExtensions.cs,AddPublicAutoProperty,The length of the statement  "            propertyDefinition.SetMethod = CreatePropertyMethod("set_" + name' moduleDefinition.CorLibTypes.Void' Tuple.Create(typeReference.ToTypeSig()' "value")); " is 152.
Long Statement,ArxOne.MrAdvice.Utility,TypeDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\TypeDefinitionExtensions.cs,AddPublicAutoProperty,The length of the statement  "            propertyDefinition.SetMethod.CustomAttributes.Add(moduleDefinition.CreateCustomAttribute(compilerGeneratedAttribute' typeResolver)); " is 132.
Long Statement,ArxOne.MrAdvice.Utility,TypeDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\TypeDefinitionExtensions.cs,AddPublicAutoProperty,The length of the statement  "            propertyDefinition.GetMethod.CustomAttributes.Add(moduleDefinition.CreateCustomAttribute(compilerGeneratedAttribute' typeResolver)); " is 132.
Long Statement,ArxOne.MrAdvice.Utility,TypeDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\TypeDefinitionExtensions.cs,CreatePropertyMethod,The length of the statement  "            const MethodAttributes methodAttributes = MethodAttributes.Public | MethodAttributes.SpecialName | MethodAttributes.HideBySig; " is 126.
Long Statement,ArxOne.MrAdvice.Utility,ModuleDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\ModuleDefinitionExtensions.cs,GetSelfAndReferences,The length of the statement  "                    foreach (var referencedModule in thisModule.GetReferencedModules(assemblyResolver' ignoreSystem' logging' isMainModule)) " is 120.
Long Statement,ArxOne.MrAdvice.Utility,ModuleDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\ModuleDefinitionExtensions.cs,TryResolve,The length of the statement  "                ResolutionCache[assemblyNameReference] = assemblyDefinition = TryLoad(assemblyResolver' assemblyNameReference' source' logging' directReference); " is 145.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,CreateAdviceSelector,The length of the statement  "                var excludeAdviceAttributes = node.CustomAttributes.Where(ca => ca.AttributeType.SafeEquivalent(context.ExcludeAdviceAttributeType)); " is 133.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,CreatePointcutSelector,The length of the statement  "                pointcutSelector.IncludeRules.AddRange(CreatePointcutSelectorRule(customAttribute' context.IncludePointcutAttributeType)); " is 122.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,CreatePointcutSelector,The length of the statement  "                pointcutSelector.ExcludeRules.AddRange(CreatePointcutSelectorRule(customAttribute' context.ExcludePointcutAttributeType)); " is 122.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,Weave,The length of the statement  "                var weavingAdvicesMethods = GetMarkedMethods(moduleDefinition' context.WeavingAdviceInterfaceType' context).Where(isWeavable).ToArray(); " is 136.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,Weave,The length of the statement  "                var weavableMethods = GetMarkedMethods(moduleDefinition' context.AdviceInterfaceType' context).Where(isWeavable).ToArray(); " is 123.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,Weave,The length of the statement  "                    moduleDefinition.Assembly.FullName' (int)report.Sum(r => r.Value.TotalMilliseconds)' targetFramework.ToString()' Product.Version); " is 130.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,CreateWeavingContext,The length of the statement  "                ExecutionPointAttributeDefaultCtor = moduleDefinition.Import(TypeResolver.Resolve(moduleDefinition' typeof(ExecutionPointAttribute))?.FindDefaultConstructor())' " is 160.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,GetTargetFramework,The length of the statement  "            var targetFrameworkAttribute = moduleDefinition.Assembly.CustomAttributes.SingleOrDefault(a => a.AttributeType.SafeEquivalent(targetFrameworkAttributeType)); " is 157.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,IsIntroduction,The length of the statement  "            if (genericAdviceMemberTypeReference == null || genericAdviceMemberTypeReference.GenericType.FullName != typeof(IntroducedField<>).FullName) " is 140.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,GetAdviceHandledInterfaces,The length of the statement  "            var adviceHandleMethod = adviceExtensionsType.Methods.Single(m => m.IsPublic && m.HasGenericParameters && m.Name == nameof(AdviceExtensions.Handle)); " is 149.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,GetAdviceHandledInterfaces,The length of the statement  "                            Logging.WriteError("Can not identify {0} as valid weavable interface. If you feel this is unfair --> https://github.com/ArxOne/MrAdvice/issues/new"' t.Item1.ToString()); " is 169.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,GetAdviceHandledInterfaces,The length of the statement  "                            Logging.WriteError("Only interfaces can be weaved with Handle<>() extension method and {0} it not an interface (but I'm glad you asked)"' interfaceDef.FullName); " is 161.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,GetAdviceHandledInterfaces,The length of the statement  "                if (instruction.OpCode == OpCodes.Call || instruction.OpCode == OpCodes.Calli || instruction.OpCode == OpCodes.Callvirt) " is 120.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,IsFromComputerGeneratedType,The length of the statement  "            var isFromComputerGeneratedType = parentType.CustomAttributes.Any(c => c.AttributeType.FullName == typeof(CompilerGeneratedAttribute).FullName); " is 144.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,GetMarkedMethods,The length of the statement  "                   let includedMarkersNode = new MarkedNode(node' allMakersNode.Definitions.Where(d => IsIncludedByNode(d' node' context))) " is 120.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,CreateMarkerDefinition,The length of the statement  "            var priorityAttributes = typeDefinition.CustomAttributes.Where(a => a.AttributeType.SafeEquivalent(context.PriorityAttributeType)).ToList(); " is 140.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,CreateMarkerDefinition,The length of the statement  "            var abstractTarget = typeDefinition.CustomAttributes.Any(a => a.AttributeType.SafeEquivalent(context.AbstractTargetAttributeType)); " is 131.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInfoAdvices,The length of the statement  "				instructions.Emit(OpCodes.Call' moduleDefinition.SafeImport(ReflectionUtility.GetMethodInfo(() => Assembly.GetExecutingAssembly()))); " is 133.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInfoAdvices,The length of the statement  "				var getTypeFromHandleMethodInfo = ReflectionUtility.GetMethodInfo(() => Type.GetTypeFromHandle(new RuntimeTypeHandle())); " is 121.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,GetCctorInstructions,The length of the statement  "					new MethodDefUser(cctorMethodName' MethodSig.CreateStatic(moduleDefinition.CorLibTypes.Void)' methodAttributes) { Body = new CilBody() }; " is 137.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveAdvices,The length of the statement  "					Logging.WriteWarning("Advising async void method '{0}' could confuse async advices. Consider switching its return type to async Task."' method.FullName); " is 153.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveAdvices,The length of the statement  "				const MethodAttributes attributesToKeep = MethodAttributes.Static | MethodAttributes.HideBySig | MethodAttributes.PInvokeImpl | " is 127.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveAdvices,The length of the statement  "				var stepInfos = innerMethod.CustomDebugInfos.OfType<PdbAsyncMethodCustomDebugInfo>().SelectMany(d => d.StepInfos).ToArray(); " is 124.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WriteDelegateProceeder,The length of the statement  "				for (int genericParameterIndex = 0; genericParameterIndex < proceederMethod.GenericParameters.Count; genericParameterIndex++) " is 125.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,RunWeavingAdvices,The length of the statement  "			var weaverMethodWeavingContext = new WeaverMethodWeavingContext(typeDefinition' initialType' methodName' context' TypeResolver' Logging); " is 137.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,RunWeavingAdvices,The length of the statement  "				Logging.WriteDebug("Weaving method '{0}' using weaving advice '{1}'"' method.FullName' weavingAdviceMarker.Type.FullName); " is 122.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WritePointcutBody,The length of the statement  "			WriteProceedCall(instructions' context' targetArgument' parametersArgument' methodArgument' innerMethodArgument' innerMethodDelegateArgument' " is 141.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,GetDefaultProceedMethod,The length of the statement  "				var proceedMethodReference = invocationType.Methods.SingleOrDefault(m => m.IsStatic && m.Name == nameof(Invocation.ProceedAdvice2)); " is 132.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,GetGenericParametersArgument,The length of the statement  "					//IL_0006: call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle) " is 130.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,GetGenericParametersArgument,The length of the statement  "						instructions.Emit(OpCodes.Call' ReflectionUtility.GetMethodInfo(() => Type.GetTypeFromHandle(new RuntimeTypeHandle()))); " is 120.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,GetInnerMethodDelegateArgument,The length of the statement  "			var innerMethodDelegate = WriteDelegateProceeder(innerMethod' method.Name' new MethodParameters(method)' method.Module); " is 120.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveIntroductions,The length of the statement  "			var markerAttributeCtor = moduleDefinition.SafeImport(TypeResolver.Resolve(moduleDefinition' typeof(IntroducedFieldAttribute)).FindConstructors() " is 145.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveIntroductions,The length of the statement  "			var markerAttributeCtorDef = new MemberRefUser(markerAttributeCtor.Module' markerAttributeCtor.Name' markerAttributeCtor.MethodSig' " is 131.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveIntroductions,The length of the statement  "					IntroduceMember(method.Module' field.Name' field.FieldType.ToTypeDefOrRef()' field.IsStatic' advice.Type' typeDefinition' " is 121.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveIntroductions,The length of the statement  "					IntroduceMember(method.Module' property.Name' property.PropertySig.RetType.ToTypeDefOrRef()' !property.PropertySig.HasThis' advice.Type' " is 136.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInfoAdvices,The length of the statement  "			if (GetMarkedMethods(new TypeReflectionNode(typeDefinition' null)' infoAdviceInterface' context).Where(IsWeavable).Any()) " is 121.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInterface,The length of the statement  "				if (moduleDefinition.GetTypes().Any(t => t.Namespace == implementationTypeNamespace && t.Name == implementationTypeName)) " is 121.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInterface,The length of the statement  "					new TypeDefUser(implementationTypeNamespace' implementationTypeName' advisedInterfaceTypeReference) { Attributes = typeAttributes }; " is 132.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInterface,The length of the statement  "			const MethodAttributes ctorAttributes = MethodAttributes.Public | MethodAttributes.HideBySig | MethodAttributes.SpecialName | " is 125.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInterface,The length of the statement  "					implementationProperty.GetMethod = WeaveInterfaceMethod(interfaceProperty.GetMethod' implementationType' InjectAsPrivate' context); " is 131.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInterface,The length of the statement  "					implementationProperty.SetMethod = WeaveInterfaceMethod(interfaceProperty.SetMethod' implementationType' InjectAsPrivate' context); " is 131.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInterface,The length of the statement  "					implementationEvent.AddMethod = WeaveInterfaceMethod(interfaceEvent.AddMethod' implementationType' InjectAsPrivate' context); " is 125.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInterface,The length of the statement  "					implementationEvent.RemoveMethod = WeaveInterfaceMethod(interfaceEvent.RemoveMethod' implementationType' InjectAsPrivate' context); " is 131.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInterfaceMethod,The length of the statement  "			var methodAttributes = MethodAttributes.NewSlot | MethodAttributes.Virtual | (injectAsPrivate ? MethodAttributes.Public : MethodAttributes.Private); " is 148.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInterfaceMethod,The length of the statement  "			//var implementationMethodSig = new MethodSig(interfaceMethod.CallingConvention' (uint)interfaceMethod.GenericParameters.Count' interfaceMethod.ReturnType' " is 155.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,WeaveInterfaceMethod,The length of the statement  "			var implementationMethod = new MethodDefUser(interfaceMethod.Name' interfaceMethod.MethodSig /*implementationMethodSig*/' methodAttributes); " is 140.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,IntroduceMember,The length of the statement  "						var fieldAttributes = (InjectAsPrivate ? FieldAttributes.Private : FieldAttributes.Public) | FieldAttributes.NotSerialized; " is 123.
Long Statement,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,IntroduceMember,The length of the statement  "						var introducedField = new FieldDefUser(introducedFieldName' new FieldSig(introducedFieldTypeReference)' fieldAttributes); " is 121.
Long Statement,ArxOne.MrAdvice.Weaver,PointcutSelectorExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\PointcutSelectorExtensions.cs,Select,The length of the statement  "            return pointcutSelector.Select(name' ((MethodAttributes)method.Attributes).ToMemberAttributes() | ((TypeAttributes)method.DeclaringType.Attributes).ToMemberAttributes()); " is 170.
Long Statement,ArxOne.MrAdvice.Weaver,TypeResolver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\TypeResolver.cs,Resolve,The length of the statement  "                var selfAndReferences = moduleDefinition.GetSelfAndReferences(AssemblyResolver' ignoreSystem' depth' Logging' IsMainModule(moduleDefinition)); " is 142.
Long Statement,ArxOne.MrAdvice.Weaver,TypeResolver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\TypeResolver.cs,Resolve,The length of the statement  "                return selfAndReferences.SelectMany(referencedModule => referencedModule.GetTypes()).FirstOrDefault(t => Matches(t' fullName)); " is 127.
Long Statement,ArxOne.MrAdvice.Weaver,TypeResolver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\TypeResolver.cs,FullResolve,The length of the statement  "            foreach (var reference in typeDefOrRef.Module.GetSelfAndReferences(AssemblyResolver' false' int.MaxValue' Logging' IsMainModule(typeDefOrRef.Module))) " is 150.
Long Statement,ArxOne.MrAdvice.Weaver,WeaverMethodWeavingContext,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\WeaverMethodWeavingContext.cs,AddPublicAutoProperty,The length of the statement  "            _typeDefinition.AddPublicAutoProperty(propertyName' moduleDefinition.Import(propertyType)' moduleDefinition' _typeResolver); " is 124.
Long Statement,ArxOne.MrAdvice.Weaver,WeaverMethodWeavingContext,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\WeaverMethodWeavingContext.cs,AddInitializer,The length of the statement  "                if (once && ctor.Body.Instructions.Any(i => i.OpCode == OpCodes.Call && methodReference.SafeEquivalent(i.Operand as IMethod' true))) " is 132.
Long Statement,ArxOne.MrAdvice.Reflection,TargetFramework,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Reflection\TargetFramework.cs,InitializePortable,The length of the statement  "            var match = ProfileEx.Matches(PortableLiterals).OfType<Match>().SingleOrDefault(m => m.Groups["profile"].Value == profile); " is 123.
Long Statement,ArxOne.MrAdvice.Reflection,TypeLoader,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Reflection\TypeLoader.cs,FindType,The length of the statement  "            return AppDomain.CurrentDomain.GetAssemblies().Select(assembly => assembly.GetType(fullName)).FirstOrDefault(type => type != null); " is 131.
Complex Conditional,ArxOne.MrAdvice.Reflection,TargetFramework,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Reflection\TargetFramework.cs,InitializePortable,The conditional expression  "CheckVersion(value' ".NET Framework"' v => Net = v)                      || CheckVersion(value' "Silverlight"' v => Silverlight = v)                      || CheckVersion(value' "Windows Phone Silverlight"' v => { })                      || CheckVersion(value' "Windows Phone"' v => WindowsPhone = v)                      || CheckVersion(value' "Windows"' v => { })"  is complex.
Empty Catch Block,ArxOne.MrAdvice.Utility,ModuleDefinitionExtensions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\ModuleDefinitionExtensions.cs,TryLoad,The method has an empty catch block.
Magic Number,ArxOne.MrAdvice.Utility,ReflectionUtility,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Utility\ReflectionUtility.cs,GetPropertyName,The following statement contains a magic number: return methodName.Substring(4);
Magic Number,ArxOne.MrAdvice.Weaver,AspectWeaver,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\AspectWeaver.Select.cs,GetSpecialOwnerName,The following statement contains a magic number: return methodName.Split(new[] {'_'}' 2)[1];
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdarg,The following statement contains a magic number: switch (parameter.Index)              {                  case 0:                      return Emit(OpCodes.Ldarg_0);                  case 1:                      return Emit(OpCodes.Ldarg_1);                  case 2:                      return Emit(OpCodes.Ldarg_2);                  case 3:                      return Emit(OpCodes.Ldarg_3);                  default:                      return Emit(OpCodes.Ldarg_S' parameter);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdarg,The following statement contains a magic number: switch (parameter.Index)              {                  case 0:                      return Emit(OpCodes.Ldarg_0);                  case 1:                      return Emit(OpCodes.Ldarg_1);                  case 2:                      return Emit(OpCodes.Ldarg_2);                  case 3:                      return Emit(OpCodes.Ldarg_3);                  default:                      return Emit(OpCodes.Ldarg_S' parameter);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdloc,The following statement contains a magic number: switch (variableDefinition.Index)              {                  case 0:                      return Emit(OpCodes.Ldloc_0);                  case 1:                      return Emit(OpCodes.Ldloc_1);                  case 2:                      return Emit(OpCodes.Ldloc_2);                  case 3:                      return Emit(OpCodes.Ldloc_3);                  default:                      return Emit(OpCodes.Ldloc_S' variableDefinition);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdloc,The following statement contains a magic number: switch (variableDefinition.Index)              {                  case 0:                      return Emit(OpCodes.Ldloc_0);                  case 1:                      return Emit(OpCodes.Ldloc_1);                  case 2:                      return Emit(OpCodes.Ldloc_2);                  case 3:                      return Emit(OpCodes.Ldloc_3);                  default:                      return Emit(OpCodes.Ldloc_S' variableDefinition);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitStloc,The following statement contains a magic number: switch (variableDefinition.Index)              {                  case 0:                      return Emit(OpCodes.Stloc_0);                  case 1:                      return Emit(OpCodes.Stloc_1);                  case 2:                      return Emit(OpCodes.Stloc_2);                  case 3:                      return Emit(OpCodes.Stloc_3);                  default:                      return Emit(OpCodes.Stloc_S' variableDefinition);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitStloc,The following statement contains a magic number: switch (variableDefinition.Index)              {                  case 0:                      return Emit(OpCodes.Stloc_0);                  case 1:                      return Emit(OpCodes.Stloc_1);                  case 2:                      return Emit(OpCodes.Stloc_2);                  case 3:                      return Emit(OpCodes.Stloc_3);                  default:                      return Emit(OpCodes.Stloc_S' variableDefinition);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdc,The following statement contains a magic number: switch (value)              {                  case 0:                      return Emit(OpCodes.Ldc_I4_0);                  case 1:                      return Emit(OpCodes.Ldc_I4_1);                  case 2:                      return Emit(OpCodes.Ldc_I4_2);                  case 3:                      return Emit(OpCodes.Ldc_I4_3);                  case 4:                      return Emit(OpCodes.Ldc_I4_4);                  case 5:                      return Emit(OpCodes.Ldc_I4_5);                  case 6:                      return Emit(OpCodes.Ldc_I4_6);                  case 7:                      return Emit(OpCodes.Ldc_I4_7);                  case 8:                      return Emit(OpCodes.Ldc_I4_8);                  default:                      if (value < 128)                          return Emit(OpCodes.Ldc_I4_S' (sbyte) value);                      return Emit(OpCodes.Ldc_I4' value);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdc,The following statement contains a magic number: switch (value)              {                  case 0:                      return Emit(OpCodes.Ldc_I4_0);                  case 1:                      return Emit(OpCodes.Ldc_I4_1);                  case 2:                      return Emit(OpCodes.Ldc_I4_2);                  case 3:                      return Emit(OpCodes.Ldc_I4_3);                  case 4:                      return Emit(OpCodes.Ldc_I4_4);                  case 5:                      return Emit(OpCodes.Ldc_I4_5);                  case 6:                      return Emit(OpCodes.Ldc_I4_6);                  case 7:                      return Emit(OpCodes.Ldc_I4_7);                  case 8:                      return Emit(OpCodes.Ldc_I4_8);                  default:                      if (value < 128)                          return Emit(OpCodes.Ldc_I4_S' (sbyte) value);                      return Emit(OpCodes.Ldc_I4' value);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdc,The following statement contains a magic number: switch (value)              {                  case 0:                      return Emit(OpCodes.Ldc_I4_0);                  case 1:                      return Emit(OpCodes.Ldc_I4_1);                  case 2:                      return Emit(OpCodes.Ldc_I4_2);                  case 3:                      return Emit(OpCodes.Ldc_I4_3);                  case 4:                      return Emit(OpCodes.Ldc_I4_4);                  case 5:                      return Emit(OpCodes.Ldc_I4_5);                  case 6:                      return Emit(OpCodes.Ldc_I4_6);                  case 7:                      return Emit(OpCodes.Ldc_I4_7);                  case 8:                      return Emit(OpCodes.Ldc_I4_8);                  default:                      if (value < 128)                          return Emit(OpCodes.Ldc_I4_S' (sbyte) value);                      return Emit(OpCodes.Ldc_I4' value);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdc,The following statement contains a magic number: switch (value)              {                  case 0:                      return Emit(OpCodes.Ldc_I4_0);                  case 1:                      return Emit(OpCodes.Ldc_I4_1);                  case 2:                      return Emit(OpCodes.Ldc_I4_2);                  case 3:                      return Emit(OpCodes.Ldc_I4_3);                  case 4:                      return Emit(OpCodes.Ldc_I4_4);                  case 5:                      return Emit(OpCodes.Ldc_I4_5);                  case 6:                      return Emit(OpCodes.Ldc_I4_6);                  case 7:                      return Emit(OpCodes.Ldc_I4_7);                  case 8:                      return Emit(OpCodes.Ldc_I4_8);                  default:                      if (value < 128)                          return Emit(OpCodes.Ldc_I4_S' (sbyte) value);                      return Emit(OpCodes.Ldc_I4' value);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdc,The following statement contains a magic number: switch (value)              {                  case 0:                      return Emit(OpCodes.Ldc_I4_0);                  case 1:                      return Emit(OpCodes.Ldc_I4_1);                  case 2:                      return Emit(OpCodes.Ldc_I4_2);                  case 3:                      return Emit(OpCodes.Ldc_I4_3);                  case 4:                      return Emit(OpCodes.Ldc_I4_4);                  case 5:                      return Emit(OpCodes.Ldc_I4_5);                  case 6:                      return Emit(OpCodes.Ldc_I4_6);                  case 7:                      return Emit(OpCodes.Ldc_I4_7);                  case 8:                      return Emit(OpCodes.Ldc_I4_8);                  default:                      if (value < 128)                          return Emit(OpCodes.Ldc_I4_S' (sbyte) value);                      return Emit(OpCodes.Ldc_I4' value);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdc,The following statement contains a magic number: switch (value)              {                  case 0:                      return Emit(OpCodes.Ldc_I4_0);                  case 1:                      return Emit(OpCodes.Ldc_I4_1);                  case 2:                      return Emit(OpCodes.Ldc_I4_2);                  case 3:                      return Emit(OpCodes.Ldc_I4_3);                  case 4:                      return Emit(OpCodes.Ldc_I4_4);                  case 5:                      return Emit(OpCodes.Ldc_I4_5);                  case 6:                      return Emit(OpCodes.Ldc_I4_6);                  case 7:                      return Emit(OpCodes.Ldc_I4_7);                  case 8:                      return Emit(OpCodes.Ldc_I4_8);                  default:                      if (value < 128)                          return Emit(OpCodes.Ldc_I4_S' (sbyte) value);                      return Emit(OpCodes.Ldc_I4' value);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdc,The following statement contains a magic number: switch (value)              {                  case 0:                      return Emit(OpCodes.Ldc_I4_0);                  case 1:                      return Emit(OpCodes.Ldc_I4_1);                  case 2:                      return Emit(OpCodes.Ldc_I4_2);                  case 3:                      return Emit(OpCodes.Ldc_I4_3);                  case 4:                      return Emit(OpCodes.Ldc_I4_4);                  case 5:                      return Emit(OpCodes.Ldc_I4_5);                  case 6:                      return Emit(OpCodes.Ldc_I4_6);                  case 7:                      return Emit(OpCodes.Ldc_I4_7);                  case 8:                      return Emit(OpCodes.Ldc_I4_8);                  default:                      if (value < 128)                          return Emit(OpCodes.Ldc_I4_S' (sbyte) value);                      return Emit(OpCodes.Ldc_I4' value);              }
Magic Number,ArxOne.MrAdvice.Weaver,Instructions,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Weaver\Instructions.cs,EmitLdc,The following statement contains a magic number: switch (value)              {                  case 0:                      return Emit(OpCodes.Ldc_I4_0);                  case 1:                      return Emit(OpCodes.Ldc_I4_1);                  case 2:                      return Emit(OpCodes.Ldc_I4_2);                  case 3:                      return Emit(OpCodes.Ldc_I4_3);                  case 4:                      return Emit(OpCodes.Ldc_I4_4);                  case 5:                      return Emit(OpCodes.Ldc_I4_5);                  case 6:                      return Emit(OpCodes.Ldc_I4_6);                  case 7:                      return Emit(OpCodes.Ldc_I4_7);                  case 8:                      return Emit(OpCodes.Ldc_I4_8);                  default:                      if (value < 128)                          return Emit(OpCodes.Ldc_I4_S' (sbyte) value);                      return Emit(OpCodes.Ldc_I4' value);              }
Magic Number,ArxOne.MrAdvice.Reflection,TargetFramework,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Reflection\TargetFramework.cs,ToString,The following statement contains a magic number: if (Net != null)                  literals.Add(".NET " + GetLiteralVersion(Net' 2));
Missing Default,ArxOne.MrAdvice.Reflection,TargetFramework,C:\repos\ArxOne_MrAdvice\MrAdvice.Weaver\Reflection\TargetFramework.cs,TargetFramework,The following switch statement is missing a default case: switch (frameworkName.Identifier)              {                  case ".NETFramework":                      Net = frameworkName.Version;                      break;                  case "Silverlight":                      Silverlight = frameworkName.Version;                      break;                  case "WindowsPhone":                      WindowsPhone = frameworkName.Version;                      break;                  case ".NETPortable":                      IsPCL = true;                      InitializePortable(frameworkName.Profile);                      break;              }
