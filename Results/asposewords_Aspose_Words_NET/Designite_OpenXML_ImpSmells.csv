Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Aspose.Plugins.AsposeVSOpenXML,Program,F:\newReposMay17\asposewords_Aspose_Words_NET\Plugins\Aspose.Words Vs OpenXML Words\Aspose.Words VS OpenXML\Add table\OpenXML\Program.cs,CreateWordprocessingDocument,The length of the statement  "	using (WordprocessingDocument wordDocument = WordprocessingDocument.Create (filepath' WordprocessingDocumentType.Document)) { " is 125.
Magic Number,Aspose.Plugins.AsposeVSOpenXML,Program,F:\newReposMay17\asposewords_Aspose_Words_NET\Plugins\Aspose.Words Vs OpenXML Words\Aspose.Words VS OpenXML\Add table\OpenXML\Program.cs,AddTable,The following statement contains a magic number: using (var document = WordprocessingDocument.Open (fileName' true)) {  	var doc = document.MainDocumentPart.Document;  	Table table = new Table ();  	TableProperties props = new TableProperties (new TableBorders (new TopBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new BottomBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new LeftBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new RightBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new InsideHorizontalBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new InsideVerticalBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}));  	table.AppendChild<TableProperties> (props);  	for (var i = 0; i <= data.GetUpperBound (0); i++) {  		var tr = new TableRow ();  		for (var j = 0; j <= data.GetUpperBound (1); j++) {  			var tc = new TableCell ();  			tc.Append (new Paragraph (new Run (new Text (data [i' j]))));  			// Assume you want columns that are automatically sized.  			tc.Append (new TableCellProperties (new TableCellWidth {  				Type = TableWidthUnitValues.Auto  			}));  			tr.Append (tc);  		}  		table.Append (tr);  	}  	doc.Body.Append (table);  	doc.Save ();  }  
Magic Number,Aspose.Plugins.AsposeVSOpenXML,Program,F:\newReposMay17\asposewords_Aspose_Words_NET\Plugins\Aspose.Words Vs OpenXML Words\Aspose.Words VS OpenXML\Add table\OpenXML\Program.cs,AddTable,The following statement contains a magic number: using (var document = WordprocessingDocument.Open (fileName' true)) {  	var doc = document.MainDocumentPart.Document;  	Table table = new Table ();  	TableProperties props = new TableProperties (new TableBorders (new TopBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new BottomBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new LeftBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new RightBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new InsideHorizontalBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new InsideVerticalBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}));  	table.AppendChild<TableProperties> (props);  	for (var i = 0; i <= data.GetUpperBound (0); i++) {  		var tr = new TableRow ();  		for (var j = 0; j <= data.GetUpperBound (1); j++) {  			var tc = new TableCell ();  			tc.Append (new Paragraph (new Run (new Text (data [i' j]))));  			// Assume you want columns that are automatically sized.  			tc.Append (new TableCellProperties (new TableCellWidth {  				Type = TableWidthUnitValues.Auto  			}));  			tr.Append (tc);  		}  		table.Append (tr);  	}  	doc.Body.Append (table);  	doc.Save ();  }  
Magic Number,Aspose.Plugins.AsposeVSOpenXML,Program,F:\newReposMay17\asposewords_Aspose_Words_NET\Plugins\Aspose.Words Vs OpenXML Words\Aspose.Words VS OpenXML\Add table\OpenXML\Program.cs,AddTable,The following statement contains a magic number: using (var document = WordprocessingDocument.Open (fileName' true)) {  	var doc = document.MainDocumentPart.Document;  	Table table = new Table ();  	TableProperties props = new TableProperties (new TableBorders (new TopBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new BottomBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new LeftBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new RightBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new InsideHorizontalBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new InsideVerticalBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}));  	table.AppendChild<TableProperties> (props);  	for (var i = 0; i <= data.GetUpperBound (0); i++) {  		var tr = new TableRow ();  		for (var j = 0; j <= data.GetUpperBound (1); j++) {  			var tc = new TableCell ();  			tc.Append (new Paragraph (new Run (new Text (data [i' j]))));  			// Assume you want columns that are automatically sized.  			tc.Append (new TableCellProperties (new TableCellWidth {  				Type = TableWidthUnitValues.Auto  			}));  			tr.Append (tc);  		}  		table.Append (tr);  	}  	doc.Body.Append (table);  	doc.Save ();  }  
Magic Number,Aspose.Plugins.AsposeVSOpenXML,Program,F:\newReposMay17\asposewords_Aspose_Words_NET\Plugins\Aspose.Words Vs OpenXML Words\Aspose.Words VS OpenXML\Add table\OpenXML\Program.cs,AddTable,The following statement contains a magic number: using (var document = WordprocessingDocument.Open (fileName' true)) {  	var doc = document.MainDocumentPart.Document;  	Table table = new Table ();  	TableProperties props = new TableProperties (new TableBorders (new TopBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new BottomBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new LeftBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new RightBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new InsideHorizontalBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new InsideVerticalBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}));  	table.AppendChild<TableProperties> (props);  	for (var i = 0; i <= data.GetUpperBound (0); i++) {  		var tr = new TableRow ();  		for (var j = 0; j <= data.GetUpperBound (1); j++) {  			var tc = new TableCell ();  			tc.Append (new Paragraph (new Run (new Text (data [i' j]))));  			// Assume you want columns that are automatically sized.  			tc.Append (new TableCellProperties (new TableCellWidth {  				Type = TableWidthUnitValues.Auto  			}));  			tr.Append (tc);  		}  		table.Append (tr);  	}  	doc.Body.Append (table);  	doc.Save ();  }  
Magic Number,Aspose.Plugins.AsposeVSOpenXML,Program,F:\newReposMay17\asposewords_Aspose_Words_NET\Plugins\Aspose.Words Vs OpenXML Words\Aspose.Words VS OpenXML\Add table\OpenXML\Program.cs,AddTable,The following statement contains a magic number: using (var document = WordprocessingDocument.Open (fileName' true)) {  	var doc = document.MainDocumentPart.Document;  	Table table = new Table ();  	TableProperties props = new TableProperties (new TableBorders (new TopBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new BottomBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new LeftBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new RightBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new InsideHorizontalBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new InsideVerticalBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}));  	table.AppendChild<TableProperties> (props);  	for (var i = 0; i <= data.GetUpperBound (0); i++) {  		var tr = new TableRow ();  		for (var j = 0; j <= data.GetUpperBound (1); j++) {  			var tc = new TableCell ();  			tc.Append (new Paragraph (new Run (new Text (data [i' j]))));  			// Assume you want columns that are automatically sized.  			tc.Append (new TableCellProperties (new TableCellWidth {  				Type = TableWidthUnitValues.Auto  			}));  			tr.Append (tc);  		}  		table.Append (tr);  	}  	doc.Body.Append (table);  	doc.Save ();  }  
Magic Number,Aspose.Plugins.AsposeVSOpenXML,Program,F:\newReposMay17\asposewords_Aspose_Words_NET\Plugins\Aspose.Words Vs OpenXML Words\Aspose.Words VS OpenXML\Add table\OpenXML\Program.cs,AddTable,The following statement contains a magic number: using (var document = WordprocessingDocument.Open (fileName' true)) {  	var doc = document.MainDocumentPart.Document;  	Table table = new Table ();  	TableProperties props = new TableProperties (new TableBorders (new TopBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new BottomBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new LeftBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new RightBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new InsideHorizontalBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}' new InsideVerticalBorder {  		Val = new EnumValue<BorderValues> (BorderValues.Single)'  		Size = 12  	}));  	table.AppendChild<TableProperties> (props);  	for (var i = 0; i <= data.GetUpperBound (0); i++) {  		var tr = new TableRow ();  		for (var j = 0; j <= data.GetUpperBound (1); j++) {  			var tc = new TableCell ();  			tc.Append (new Paragraph (new Run (new Text (data [i' j]))));  			// Assume you want columns that are automatically sized.  			tc.Append (new TableCellProperties (new TableCellWidth {  				Type = TableWidthUnitValues.Auto  			}));  			tr.Append (tc);  		}  		table.Append (tr);  	}  	doc.Body.Append (table);  	doc.Save ();  }  
