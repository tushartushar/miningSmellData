Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,EyeXFramework,EyePositionEventArgs,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\EyePositionDataStream.cs,EyePositionEventArgs,The method has 5 parameters. Parameters: leftEye' leftEyeNormalized' rightEye' rightEyeNormalized' timestamp
Long Parameter List,EyeXFramework.Forms,FormsCrawler,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\Forms\FormsCrawler.cs,UpdateInteractorProperties,The method has 5 parameters. Parameters: control' parentId' z' windowId' interactors
Long Identifier,EyeXFramework,EyeXHost,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\EyeXHost.Tools.cs,,The length of the parameter _eyeTrackingDeviceStatusStateAccessor is 37.
Long Statement,EyeXFramework,EngineStateValue<T>,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\EngineStateValue.cs,ToString,The length of the statement  "                    return string.Format(CultureInfo.InvariantCulture' "({0}' {1})' {2} x {3}"' value.X' value.Y' value.Width' value.Height); " is 121.
Long Statement,EyeXFramework,EyePositionDataStream,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\EyePositionDataStream.cs,ExtractDataPoints,The length of the statement  "                    var left = new EyePosition(parameters.HasLeftEyePosition != EyeXBoolean.False' parameters.LeftEyeX' parameters.LeftEyeY' parameters.LeftEyeZ); " is 142.
Long Statement,EyeXFramework,EyePositionDataStream,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\EyePositionDataStream.cs,ExtractDataPoints,The length of the statement  "                    var leftNormalized = new EyePosition(parameters.HasLeftEyePosition != EyeXBoolean.False' parameters.LeftEyeXNormalized' parameters.LeftEyeYNormalized' parameters.LeftEyeZNormalized); " is 182.
Long Statement,EyeXFramework,EyePositionDataStream,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\EyePositionDataStream.cs,ExtractDataPoints,The length of the statement  "                    var right = new EyePosition(parameters.HasRightEyePosition != EyeXBoolean.False' parameters.RightEyeX' parameters.RightEyeY' parameters.RightEyeZ); " is 147.
Long Statement,EyeXFramework,EyePositionDataStream,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\EyePositionDataStream.cs,ExtractDataPoints,The length of the statement  "                    var rightNormalized = new EyePosition(parameters.HasRightEyePosition != EyeXBoolean.False' parameters.RightEyeXNormalized' parameters.RightEyeYNormalized' parameters.RightEyeZNormalized); " is 187.
Long Statement,EyeXFramework,EyeXHost,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\EyeXHost.Tools.cs,OnSnapshotCommitted,The length of the statement  "                Debug.Assert(asyncData.TryGetResultCode(out resultCode) != false' "Failed to read value code after committing snapshot."); " is 122.
Long Statement,EyeXFramework,ActivatableBehavior,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\ActivatableBehavior.cs,AssignBehavior,The length of the statement  "            var parameters = new ActivatableParams { EnableTentativeFocus = new EyeXBoolean(IsTentativeFocusEnabled).integerValue }; " is 120.
Long Statement,EyeXFramework.Forms,FormsInteractor,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\Forms\FormsInteractor.cs,AddToSnapshot,The length of the statement  "                    bounds.SetRectangularData(screenTopLeft.X' screenTopLeft.Y' screenBottomRight.X - screenTopLeft.X' screenBottomRight.Y - screenTopLeft.Y); " is 138.
Long Statement,EyeXFramework.Forms,FormsInteractor,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\Forms\FormsInteractor.cs,ToString,The length of the statement  "            return string.Format(CultureInfo.InvariantCulture' "{0} '{1}' P:{2} [{3}]"' Id' Control.Name' ParentId' _behaviors.Count); " is 122.
Complex Conditional,EyeXFramework,EyeXHost,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\EyeXHost.Tools.cs,SendDataStreamSnapshot,The conditional expression  "_context == null ||                  _context.IsInvalid ||                  _context.ConnectionState != ConnectionState.Connected ||                  (_dataStreams.Count == 0 && _deletedDataStreams.Count == 0)"  is complex.
Magic Number,EyeXFramework.Forms,DpiAwarenessUtilities,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\Forms\DpiAwarenessUtilities.cs,SetProcessDpiAware,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Win32NT &&                  Environment.OSVersion.Version.Major >= 6) // meaning Vista or later              {                  // Disable automatic DPI scaling.                  // DPI scaling breaks the mapping between client coordinates and screen coordinates.                  NativeMethods.SetProcessDPIAware();              }
Magic Number,EyeXFramework.Forms,FormsEyeXHost,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\Forms\FormsEyeXHost.cs,TryGetQueryRectangle,The following statement contains a magic number: using (var queryBounds = query.Bounds)              {                  double x' y' w' h;                  if (queryBounds.TryGetRectangularData(out x' out y' out w' out h))                  {                      queryRect = new Rectangle((int)x' (int)y' (int)(w + 0.5)' (int)(h + 0.5));                      return true;                  }                  else                  {                      queryRect = new Rectangle();                      return false;                  }              }
Magic Number,EyeXFramework.Forms,FormsEyeXHost,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\Forms\FormsEyeXHost.cs,TryGetQueryRectangle,The following statement contains a magic number: using (var queryBounds = query.Bounds)              {                  double x' y' w' h;                  if (queryBounds.TryGetRectangularData(out x' out y' out w' out h))                  {                      queryRect = new Rectangle((int)x' (int)y' (int)(w + 0.5)' (int)(h + 0.5));                      return true;                  }                  else                  {                      queryRect = new Rectangle();                      return false;                  }              }
Missing Default,EyeXFramework,ActivatableBehavior,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\ActivatableBehavior.cs,HandleEvent,The following switch statement is missing a default case: switch (eventType)                      {                          case ActivatableEventType.Activated:                              {                                  var handler = Activated;                                  if (handler != null)                                  {                                      handler(sender' EventArgs.Empty);                                  }                                    break;                              }                            case ActivatableEventType.ActivationFocusChanged:                              {                                  ActivationFocusChangedEventParams parameters;                                  if (behavior.TryGetActivationFocusChangedEventParams(out parameters))                                  {                                      var handler = ActivationFocusChanged;                                      if (handler != null)                                      {                                          var focus = GetActivationFocus(parameters);                                          handler(sender' new ActivationFocusChangedEventArgs(focus));                                      }                                  }                                    break;                              }                      }
Missing Default,EyeXFramework.Wpf,Behavior,C:\repos\yhyjp_vvvv_tutorial\plugins\DevicesTobiiEyeX\EyeXFramework\Wpf\Behavior.Activatable.cs,OnActivatablePropertyChanged,The following switch statement is missing a default case: switch (newPropertyValue)              {                  case ActivatableType.Default:                      AddBehavior(element' CreateActivatableBehavior(false));                      break;                  case ActivatableType.TentativeFocusEnabled:                      AddBehavior(element' CreateActivatableBehavior(true));                      break;                  case ActivatableType.None:                      RemoveBehavior(element' BehaviorType.Activatable);                      break;              }
