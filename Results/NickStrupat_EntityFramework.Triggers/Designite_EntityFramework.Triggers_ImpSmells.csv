Implementation smell,Namespace,Class,File,Method,Description
Long Statement,EntityFramework.Triggers,DbContextWithTriggers,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\DbContextWithTriggers.cs,SaveChangesAsync,The length of the statement  "			return TriggersEnabled ? this.SaveChangesWithTriggersAsync(base.SaveChangesAsync' cancellationToken) : base.SaveChangesAsync(cancellationToken); " is 144.
Long Statement,EntityFramework.Triggers,TriggerEntityInvoker<TDbContext;TEntity>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerEntityInvoker.cs,RaiseInserting,The length of the statement  "{ var entry = new InsertingEntry   ((TEntity) entity' dbc' cancel)     ; RaiseInsertingInner   (entry); cancel = entry.Cancel; }" is 128.
Long Statement,EntityFramework.Triggers,TriggerEntityInvoker<TDbContext;TEntity>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerEntityInvoker.cs,RaiseUpdating,The length of the statement  "{ var entry = new UpdatingEntry    ((TEntity) entity' dbc' cancel)     ; RaiseUpdatingInner    (entry); cancel = entry.Cancel; }" is 128.
Long Statement,EntityFramework.Triggers,TriggerEntityInvoker<TDbContext;TEntity>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerEntityInvoker.cs,RaiseDeleting,The length of the statement  "{ var entry = new DeletingEntry    ((TEntity) entity' dbc' cancel)     ; RaiseDeletingInner    (entry); cancel = entry.Cancel; }" is 128.
Long Statement,EntityFramework.Triggers,TriggerEntityInvoker<TDbContext;TEntity>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerEntityInvoker.cs,RaiseInsertFailed,The length of the statement  "{ var entry = new InsertFailedEntry((TEntity) entity' dbc' ex' swallow); RaiseInsertFailedInner(entry); swallow = entry.Swallow; }" is 130.
Long Statement,EntityFramework.Triggers,TriggerEntityInvoker<TDbContext;TEntity>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerEntityInvoker.cs,RaiseUpdateFailed,The length of the statement  "{ var entry = new UpdateFailedEntry((TEntity) entity' dbc' ex' swallow); RaiseUpdateFailedInner(entry); swallow = entry.Swallow; }" is 130.
Long Statement,EntityFramework.Triggers,TriggerEntityInvoker<TDbContext;TEntity>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerEntityInvoker.cs,RaiseDeleteFailed,The length of the statement  "{ var entry = new DeleteFailedEntry((TEntity) entity' dbc' ex' swallow); RaiseDeleteFailedInner(entry); swallow = entry.Swallow; }" is 130.
Long Statement,EntityFramework.Triggers,TriggerEntityInvokers<TDbContext>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerEntityInvokers.cs,ValueFactory,The length of the statement  "			return (ITriggerEntityInvoker<TDbContext>) Activator.CreateInstance(typeof(TriggerEntityInvoker<'>).MakeGenericType(typeof(TDbContext)' type)); " is 143.
Long Statement,EntityFramework.Triggers,TriggerInvoker<TDbContext>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerInvoker.cs,RaiseTheFailedEvents,The length of the statement  "			RaiseTheFailedEvents(context' dbEntityValidationException.EntityValidationErrors.Select(x => x.Entry)' dbEntityValidationException' ref swallow); " is 145.
Long Statement,EntityFramework.Triggers,TriggerInvoker<TDbContext>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerInvoker.cs,RaiseTheFailedEvents,The length of the statement  "					TriggerEntityInvokers<TDbContext>.Get(entry.Entity.GetType()).RaiseInsertFailed(entry.Entity' dbContext' exception' ref swallow); " is 129.
Long Statement,EntityFramework.Triggers,TriggerInvoker<TDbContext>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerInvoker.cs,RaiseTheFailedEvents,The length of the statement  "					TriggerEntityInvokers<TDbContext>.Get(entry.Entity.GetType()).RaiseUpdateFailed(entry.Entity' dbContext' exception' ref swallow); " is 129.
Long Statement,EntityFramework.Triggers,TriggerInvoker<TDbContext>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerInvoker.cs,RaiseTheFailedEvents,The length of the statement  "					TriggerEntityInvokers<TDbContext>.Get(entry.Entity.GetType()).RaiseDeleteFailed(entry.Entity' dbContext' exception' ref swallow); " is 129.
Empty Catch Block,EntityFramework.Triggers,Extensions,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\Extensions.cs,SaveChangesWithTriggers,The method has an empty catch block.
Empty Catch Block,EntityFramework.Triggers,Extensions,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\Extensions.cs,SaveChangesWithTriggers,The method has an empty catch block.
Empty Catch Block,EntityFramework.Triggers,Extensions,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\Extensions.cs,SaveChangesWithTriggers,The method has an empty catch block.
Empty Catch Block,EntityFramework.Triggers,Extensions,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\Extensions.cs,SaveChangesWithTriggersAsync,The method has an empty catch block.
Empty Catch Block,EntityFramework.Triggers,Extensions,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\Extensions.cs,SaveChangesWithTriggersAsync,The method has an empty catch block.
Empty Catch Block,EntityFramework.Triggers,Extensions,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\Extensions.cs,SaveChangesWithTriggersAsync,The method has an empty catch block.
Missing Default,EntityFramework.Triggers,TriggerInvoker<TDbContext>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerInvoker.cs,RaiseTheBeforeEvent,The following switch statement is missing a default case: switch (entry.State) {  				case EntityState.Added:  					triggers.RaiseInserting(entry.Entity' tDbContext' ref cancel);  					return context => triggers.RaiseInserted(entry.Entity' (TDbContext) context);  				case EntityState.Deleted:  					triggers.RaiseDeleting(entry.Entity' tDbContext' ref cancel);  					return context => triggers.RaiseDeleted(entry.Entity' (TDbContext) context);  				case EntityState.Modified:  					triggers.RaiseUpdating(entry.Entity' tDbContext' ref cancel);  					return context => triggers.RaiseUpdated(entry.Entity' (TDbContext) context);  			}
Missing Default,EntityFramework.Triggers,TriggerInvoker<TDbContext>,C:\repos\NickStrupat_EntityFramework.Triggers\EntityFrameworkCore.Triggers\TriggerInvoker.cs,RaiseTheFailedEvents,The following switch statement is missing a default case: switch (entry.State) {  				case EntityState.Added:  					TriggerEntityInvokers<TDbContext>.Get(entry.Entity.GetType()).RaiseInsertFailed(entry.Entity' dbContext' exception' ref swallow);  					break;  				case EntityState.Modified:  					TriggerEntityInvokers<TDbContext>.Get(entry.Entity.GetType()).RaiseUpdateFailed(entry.Entity' dbContext' exception' ref swallow);  					break;  				case EntityState.Deleted:  					TriggerEntityInvokers<TDbContext>.Get(entry.Entity.GetType()).RaiseDeleteFailed(entry.Entity' dbContext' exception' ref swallow);  					break;  			}
