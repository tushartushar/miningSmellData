Implementation smell,Namespace,Class,File,Method,Description
Long Method,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The method has 111 lines of code.
Long Method,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The method has 327 lines of code.
Long Method,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The method has 353 lines of code.
Long Method,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The method has 170 lines of code.
Complex Method,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,Cyclomatic complexity of the method is 12
Complex Method,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,Cyclomatic complexity of the method is 11
Complex Method,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,Cyclomatic complexity of the method is 59
Complex Method,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,Cyclomatic complexity of the method is 88
Complex Method,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,Cyclomatic complexity of the method is 21
Complex Method,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,Cyclomatic complexity of the method is 8
Complex Conditional,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The conditional expression  "Yahtzee.Visible == true && B1.Visible == true && B2.Visible == true && B3.Visible == true"  is complex.
Complex Conditional,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The conditional expression  "Yahtzee.Visible == true && B1.Visible == true && B2.Visible == true && B3.Visible == true"  is complex.
Complex Conditional,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The conditional expression  "(kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0) && (kcount [i + 4] > 0)"  is complex.
Complex Conditional,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The conditional expression  "(kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0)"  is complex.
Empty Catch Block,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,The method has an empty catch block.
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	if (list [i] == 0) {  		if (random_gen == "Crypto") {  			list [i] = RollDice ((byte)6);  		}  		if (random_gen == "Pseudo") {  			list [i] = r.Next (1' 7);  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	if (list [i] == 0) {  		if (random_gen == "Crypto") {  			list [i] = RollDice ((byte)6);  		}  		if (random_gen == "Pseudo") {  			list [i] = r.Next (1' 7);  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	if (list [i] == 0) {  		if (random_gen == "Crypto") {  			list [i] = RollDice ((byte)6);  		}  		if (random_gen == "Pseudo") {  			list [i] = r.Next (1' 7);  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (list [i] == 0) {  	if (random_gen == "Crypto") {  		list [i] = RollDice ((byte)6);  	}  	if (random_gen == "Pseudo") {  		list [i] = r.Next (1' 7);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (list [i] == 0) {  	if (random_gen == "Crypto") {  		list [i] = RollDice ((byte)6);  	}  	if (random_gen == "Pseudo") {  		list [i] = r.Next (1' 7);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (random_gen == "Crypto") {  	list [i] = RollDice ((byte)6);  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: list [i] = RollDice ((byte)6);  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (random_gen == "Pseudo") {  	list [i] = r.Next (1' 7);  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: list [i] = r.Next (1' 7);  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (rol == 1) {  	R1.Text = list [0].ToString ();  	R2.Text = list [1].ToString ();  	R3.Text = list [2].ToString ();  	R4.Text = list [3].ToString ();  	R5.Text = list [4].ToString ();  	S1.Text = "?";  	S2.Text = "?";  	S3.Text = "?";  	S4.Text = "?";  	S5.Text = "?";  	U1.Text = "?";  	U2.Text = "?";  	U3.Text = "?";  	U4.Text = "?";  	U5.Text = "?";  	Label[] cl = new Label[] {  		R1'  		R2'  		R3'  		R4'  		R5'  		S1'  		S2'  		S3'  		S4'  		S5'  		U1'  		U2'  		U3'  		U4'  		U5  	};  	Microsoft.VisualBasic.PowerPacks.RectangleShape[] clr = new Microsoft.VisualBasic.PowerPacks.RectangleShape[] {  		d1'  		d2'  		d3'  		d4'  		d5'  		d6'  		d7'  		d8'  		d9'  		d10'  		d11'  		d12'  		d13'  		d14'  		d15  	};  	foreach (Label item in cl) {  		item.BackColor = System.Drawing.SystemColors.ControlDarkDark;  	}  	foreach (Microsoft.VisualBasic.PowerPacks.RectangleShape item in clr) {  		item.BackColor = System.Drawing.SystemColors.ControlDarkDark;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (rol == 1) {  	R1.Text = list [0].ToString ();  	R2.Text = list [1].ToString ();  	R3.Text = list [2].ToString ();  	R4.Text = list [3].ToString ();  	R5.Text = list [4].ToString ();  	S1.Text = "?";  	S2.Text = "?";  	S3.Text = "?";  	S4.Text = "?";  	S5.Text = "?";  	U1.Text = "?";  	U2.Text = "?";  	U3.Text = "?";  	U4.Text = "?";  	U5.Text = "?";  	Label[] cl = new Label[] {  		R1'  		R2'  		R3'  		R4'  		R5'  		S1'  		S2'  		S3'  		S4'  		S5'  		U1'  		U2'  		U3'  		U4'  		U5  	};  	Microsoft.VisualBasic.PowerPacks.RectangleShape[] clr = new Microsoft.VisualBasic.PowerPacks.RectangleShape[] {  		d1'  		d2'  		d3'  		d4'  		d5'  		d6'  		d7'  		d8'  		d9'  		d10'  		d11'  		d12'  		d13'  		d14'  		d15  	};  	foreach (Label item in cl) {  		item.BackColor = System.Drawing.SystemColors.ControlDarkDark;  	}  	foreach (Microsoft.VisualBasic.PowerPacks.RectangleShape item in clr) {  		item.BackColor = System.Drawing.SystemColors.ControlDarkDark;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (rol == 1) {  	R1.Text = list [0].ToString ();  	R2.Text = list [1].ToString ();  	R3.Text = list [2].ToString ();  	R4.Text = list [3].ToString ();  	R5.Text = list [4].ToString ();  	S1.Text = "?";  	S2.Text = "?";  	S3.Text = "?";  	S4.Text = "?";  	S5.Text = "?";  	U1.Text = "?";  	U2.Text = "?";  	U3.Text = "?";  	U4.Text = "?";  	U5.Text = "?";  	Label[] cl = new Label[] {  		R1'  		R2'  		R3'  		R4'  		R5'  		S1'  		S2'  		S3'  		S4'  		S5'  		U1'  		U2'  		U3'  		U4'  		U5  	};  	Microsoft.VisualBasic.PowerPacks.RectangleShape[] clr = new Microsoft.VisualBasic.PowerPacks.RectangleShape[] {  		d1'  		d2'  		d3'  		d4'  		d5'  		d6'  		d7'  		d8'  		d9'  		d10'  		d11'  		d12'  		d13'  		d14'  		d15  	};  	foreach (Label item in cl) {  		item.BackColor = System.Drawing.SystemColors.ControlDarkDark;  	}  	foreach (Microsoft.VisualBasic.PowerPacks.RectangleShape item in clr) {  		item.BackColor = System.Drawing.SystemColors.ControlDarkDark;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: R3.Text = list [2].ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: R4.Text = list [3].ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: R5.Text = list [4].ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (rol == 2) {  	S1.Text = list [0].ToString ();  	S2.Text = list [1].ToString ();  	S3.Text = list [2].ToString ();  	S4.Text = list [3].ToString ();  	S5.Text = list [4].ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (rol == 2) {  	S1.Text = list [0].ToString ();  	S2.Text = list [1].ToString ();  	S3.Text = list [2].ToString ();  	S4.Text = list [3].ToString ();  	S5.Text = list [4].ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (rol == 2) {  	S1.Text = list [0].ToString ();  	S2.Text = list [1].ToString ();  	S3.Text = list [2].ToString ();  	S4.Text = list [3].ToString ();  	S5.Text = list [4].ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (rol == 2) {  	S1.Text = list [0].ToString ();  	S2.Text = list [1].ToString ();  	S3.Text = list [2].ToString ();  	S4.Text = list [3].ToString ();  	S5.Text = list [4].ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: S3.Text = list [2].ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: S4.Text = list [3].ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: S5.Text = list [4].ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (rol == 3) {  	U1.Text = list [0].ToString ();  	U2.Text = list [1].ToString ();  	U3.Text = list [2].ToString ();  	U4.Text = list [3].ToString ();  	U5.Text = list [4].ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (rol == 3) {  	U1.Text = list [0].ToString ();  	U2.Text = list [1].ToString ();  	U3.Text = list [2].ToString ();  	U4.Text = list [3].ToString ();  	U5.Text = list [4].ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (rol == 3) {  	U1.Text = list [0].ToString ();  	U2.Text = list [1].ToString ();  	U3.Text = list [2].ToString ();  	U4.Text = list [3].ToString ();  	U5.Text = list [4].ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (rol == 3) {  	U1.Text = list [0].ToString ();  	U2.Text = list [1].ToString ();  	U3.Text = list [2].ToString ();  	U4.Text = list [3].ToString ();  	U5.Text = list [4].ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: U3.Text = list [2].ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: U4.Text = list [3].ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: U5.Text = list [4].ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	count [Convert.ToInt32 (list [i].ToString ()) - 1] = count [Convert.ToInt32 (list [i].ToString ()) - 1] + 1;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Random_Click,The following statement contains a magic number: if (rol == 4) {  	FinalDecide ();  }  else {  	Decide ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Decide,The following statement contains a magic number: if (ytest == false) {  	//Start 120 thread processing  	global::Yahtzee.Properties.Settings.Default.BestScore.Clear ();  	global::Yahtzee.Properties.Settings.Default.BestType.Clear ();  	global::Yahtzee.Properties.Settings.Default.Ready.Clear ();  	for (int i = 0; i < 32; i++) {  		global::Yahtzee.Properties.Settings.Default.BestScore.Add ("-");  		global::Yahtzee.Properties.Settings.Default.BestType.Add ("-");  		global::Yahtzee.Properties.Settings.Default.Ready.Add ("0");  	}  	for (int i = 0; i < 32; i++) {  		Thread t = new Thread (new ParameterizedThreadStart (TestArrangement));  		t.IsBackground = true;  		t.Start (i);  	}  	runner = new System.Threading.Thread (WaitforThreads);  	runner.IsBackground = true;  	runner.Name = "WaitThread";  	runner.Start ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Decide,The following statement contains a magic number: if (ytest == false) {  	//Start 120 thread processing  	global::Yahtzee.Properties.Settings.Default.BestScore.Clear ();  	global::Yahtzee.Properties.Settings.Default.BestType.Clear ();  	global::Yahtzee.Properties.Settings.Default.Ready.Clear ();  	for (int i = 0; i < 32; i++) {  		global::Yahtzee.Properties.Settings.Default.BestScore.Add ("-");  		global::Yahtzee.Properties.Settings.Default.BestType.Add ("-");  		global::Yahtzee.Properties.Settings.Default.Ready.Add ("0");  	}  	for (int i = 0; i < 32; i++) {  		Thread t = new Thread (new ParameterizedThreadStart (TestArrangement));  		t.IsBackground = true;  		t.Start (i);  	}  	runner = new System.Threading.Thread (WaitforThreads);  	runner.IsBackground = true;  	runner.Name = "WaitThread";  	runner.Start ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Decide,The following statement contains a magic number: for (int i = 0; i < 32; i++) {  	global::Yahtzee.Properties.Settings.Default.BestScore.Add ("-");  	global::Yahtzee.Properties.Settings.Default.BestType.Add ("-");  	global::Yahtzee.Properties.Settings.Default.Ready.Add ("0");  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Decide,The following statement contains a magic number: for (int i = 0; i < 32; i++) {  	Thread t = new Thread (new ParameterizedThreadStart (TestArrangement));  	t.IsBackground = true;  	t.Start (i);  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,The following statement contains a magic number: while (cont) {  	try {  		for (int i = 0; i < 32; i++) {  			if (global::Yahtzee.Properties.Settings.Default.Ready [i] == "0") {  				throw new Exception ();  			}  		}  		cont = false;  	}  	catch {  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,The following statement contains a magic number: try {  	for (int i = 0; i < 32; i++) {  		if (global::Yahtzee.Properties.Settings.Default.Ready [i] == "0") {  			throw new Exception ();  		}  	}  	cont = false;  }  catch {  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,The following statement contains a magic number: for (int i = 0; i < 32; i++) {  	if (global::Yahtzee.Properties.Settings.Default.Ready [i] == "0") {  		throw new Exception ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,The following statement contains a magic number: for (int i = 0; i < 32; i++) {  	if (Convert.ToDouble (global::Yahtzee.Properties.Settings.Default.BestScore [i]) > hscore) {  		hscore = Convert.ToDouble (global::Yahtzee.Properties.Settings.Default.BestScore [i]);  		htype = global::Yahtzee.Properties.Settings.Default.BestType [i];  		hid = i;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,The following statement contains a magic number: for (int i = 4; i > -1; i--) {  	if ((Math.Pow (2' i)) <= c) {  		c = c - Convert.ToInt32 ((Math.Pow (2' i)));  		kep [i] = true;  		kept.Add (list [i]);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,The following statement contains a magic number: for (int i = 4; i > -1; i--) {  	if ((Math.Pow (2' i)) <= c) {  		c = c - Convert.ToInt32 ((Math.Pow (2' i)));  		kep [i] = true;  		kept.Add (list [i]);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,The following statement contains a magic number: for (int i = 4; i > -1; i--) {  	if ((Math.Pow (2' i)) <= c) {  		c = c - Convert.ToInt32 ((Math.Pow (2' i)));  		kep [i] = true;  		kept.Add (list [i]);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,The following statement contains a magic number: if ((Math.Pow (2' i)) <= c) {  	c = c - Convert.ToInt32 ((Math.Pow (2' i)));  	kep [i] = true;  	kept.Add (list [i]);  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,The following statement contains a magic number: if ((Math.Pow (2' i)) <= c) {  	c = c - Convert.ToInt32 ((Math.Pow (2' i)));  	kep [i] = true;  	kept.Add (list [i]);  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,The following statement contains a magic number: c = c - Convert.ToInt32 ((Math.Pow (2' i)));  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,WaitforThreads,The following statement contains a magic number: if (kept.Count == 5) {  	FinalDecide ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 4; i > -1; i--) {  	if ((Math.Pow (2' i)) <= c) {  		c = c - Convert.ToInt32 ((Math.Pow (2' i)));  		kep [i] = true;  		kept.Add (list [i]);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 4; i > -1; i--) {  	if ((Math.Pow (2' i)) <= c) {  		c = c - Convert.ToInt32 ((Math.Pow (2' i)));  		kep [i] = true;  		kept.Add (list [i]);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 4; i > -1; i--) {  	if ((Math.Pow (2' i)) <= c) {  		c = c - Convert.ToInt32 ((Math.Pow (2' i)));  		kep [i] = true;  		kept.Add (list [i]);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((Math.Pow (2' i)) <= c) {  	c = c - Convert.ToInt32 ((Math.Pow (2' i)));  	kep [i] = true;  	kept.Add (list [i]);  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((Math.Pow (2' i)) <= c) {  	c = c - Convert.ToInt32 ((Math.Pow (2' i)));  	kep [i] = true;  	kept.Add (list [i]);  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: c = c - Convert.ToInt32 ((Math.Pow (2' i)));  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 3 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "3 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 3 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "3 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 3 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "3 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 3 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "3 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 3 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "3 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 3 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "3 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 3 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "3 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 3 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "3 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 3 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "3 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 3 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "3 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 3 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "3 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 3 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "3 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 3 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "3 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 3 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "3 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (scored [i - 1] == true) {  	score = score / 6;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: score = score / 6;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 4 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "4 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 4 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "4 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 4 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "4 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 4 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "4 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 4 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "4 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 4 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "4 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 4 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = currentscore + (6 * diceneeded_rolled);  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (scored [i - 1] == true) {  			score = score / 6;  		}  		if (score > bests) {  			bests = score;  			best = "4 of a kind:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 4 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "4 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 4 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "4 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 4 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "4 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 4 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "4 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 4 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "4 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 4 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "4 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 4 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = currentscore + (6 * diceneeded_rolled);  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (scored [i - 1] == true) {  		score = score / 6;  	}  	if (score > bests) {  		bests = score;  		best = "4 of a kind:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (scored [i - 1] == true) {  	score = score / 6;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: score = score / 6;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 4; i++) {  		double missing = 0;  		for (int j = i; j < i + 4; j++) {  			if (kcount [j - 1] < 1) {  				missing = missing + 1;  			}  		}  		double chance = 1 / (Math.Pow (6' missing));  		double score = chance * 30;  		if (score > bests) {  			bests = score;  			best = "Small Straight:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 4; i++) {  		double missing = 0;  		for (int j = i; j < i + 4; j++) {  			if (kcount [j - 1] < 1) {  				missing = missing + 1;  			}  		}  		double chance = 1 / (Math.Pow (6' missing));  		double score = chance * 30;  		if (score > bests) {  			bests = score;  			best = "Small Straight:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 4; i++) {  		double missing = 0;  		for (int j = i; j < i + 4; j++) {  			if (kcount [j - 1] < 1) {  				missing = missing + 1;  			}  		}  		double chance = 1 / (Math.Pow (6' missing));  		double score = chance * 30;  		if (score > bests) {  			bests = score;  			best = "Small Straight:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 4; i++) {  		double missing = 0;  		for (int j = i; j < i + 4; j++) {  			if (kcount [j - 1] < 1) {  				missing = missing + 1;  			}  		}  		double chance = 1 / (Math.Pow (6' missing));  		double score = chance * 30;  		if (score > bests) {  			bests = score;  			best = "Small Straight:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 4; i++) {  	double missing = 0;  	for (int j = i; j < i + 4; j++) {  		if (kcount [j - 1] < 1) {  			missing = missing + 1;  		}  	}  	double chance = 1 / (Math.Pow (6' missing));  	double score = chance * 30;  	if (score > bests) {  		bests = score;  		best = "Small Straight:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 4; i++) {  	double missing = 0;  	for (int j = i; j < i + 4; j++) {  		if (kcount [j - 1] < 1) {  			missing = missing + 1;  		}  	}  	double chance = 1 / (Math.Pow (6' missing));  	double score = chance * 30;  	if (score > bests) {  		bests = score;  		best = "Small Straight:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 4; i++) {  	double missing = 0;  	for (int j = i; j < i + 4; j++) {  		if (kcount [j - 1] < 1) {  			missing = missing + 1;  		}  	}  	double chance = 1 / (Math.Pow (6' missing));  	double score = chance * 30;  	if (score > bests) {  		bests = score;  		best = "Small Straight:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 4; i++) {  	double missing = 0;  	for (int j = i; j < i + 4; j++) {  		if (kcount [j - 1] < 1) {  			missing = missing + 1;  		}  	}  	double chance = 1 / (Math.Pow (6' missing));  	double score = chance * 30;  	if (score > bests) {  		bests = score;  		best = "Small Straight:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int j = i; j < i + 4; j++) {  	if (kcount [j - 1] < 1) {  		missing = missing + 1;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 3; i++) {  		double missing = 0;  		for (int j = i; j < i + 5; j++) {  			if (kcount [j - 1] < 1) {  				missing = missing + 1;  			}  		}  		double chance = 1 / (Math.Pow (6' missing));  		double score = chance * 40;  		if (score > bests) {  			bests = score;  			best = "Large Straight:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 3; i++) {  		double missing = 0;  		for (int j = i; j < i + 5; j++) {  			if (kcount [j - 1] < 1) {  				missing = missing + 1;  			}  		}  		double chance = 1 / (Math.Pow (6' missing));  		double score = chance * 40;  		if (score > bests) {  			bests = score;  			best = "Large Straight:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 3; i++) {  		double missing = 0;  		for (int j = i; j < i + 5; j++) {  			if (kcount [j - 1] < 1) {  				missing = missing + 1;  			}  		}  		double chance = 1 / (Math.Pow (6' missing));  		double score = chance * 40;  		if (score > bests) {  			bests = score;  			best = "Large Straight:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 3; i++) {  		double missing = 0;  		for (int j = i; j < i + 5; j++) {  			if (kcount [j - 1] < 1) {  				missing = missing + 1;  			}  		}  		double chance = 1 / (Math.Pow (6' missing));  		double score = chance * 40;  		if (score > bests) {  			bests = score;  			best = "Large Straight:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 3; i++) {  	double missing = 0;  	for (int j = i; j < i + 5; j++) {  		if (kcount [j - 1] < 1) {  			missing = missing + 1;  		}  	}  	double chance = 1 / (Math.Pow (6' missing));  	double score = chance * 40;  	if (score > bests) {  		bests = score;  		best = "Large Straight:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 3; i++) {  	double missing = 0;  	for (int j = i; j < i + 5; j++) {  		if (kcount [j - 1] < 1) {  			missing = missing + 1;  		}  	}  	double chance = 1 / (Math.Pow (6' missing));  	double score = chance * 40;  	if (score > bests) {  		bests = score;  		best = "Large Straight:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 3; i++) {  	double missing = 0;  	for (int j = i; j < i + 5; j++) {  		if (kcount [j - 1] < 1) {  			missing = missing + 1;  		}  	}  	double chance = 1 / (Math.Pow (6' missing));  	double score = chance * 40;  	if (score > bests) {  		bests = score;  		best = "Large Straight:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 3; i++) {  	double missing = 0;  	for (int j = i; j < i + 5; j++) {  		if (kcount [j - 1] < 1) {  			missing = missing + 1;  		}  	}  	double chance = 1 / (Math.Pow (6' missing));  	double score = chance * 40;  	if (score > bests) {  		bests = score;  		best = "Large Straight:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int j = i; j < i + 5; j++) {  	if (kcount [j - 1] < 1) {  		missing = missing + 1;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int x = 1; x < 7; x++) {  		for (int y = 1; y < 7; y++) {  			if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  				double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  				double score = chance * 25;  				if (score == 25) {  					score = 50;  				}  				if (score > bests) {  					bests = score;  					best = "Full House:" + x.ToString () + y.ToString ();  				}  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int x = 1; x < 7; x++) {  		for (int y = 1; y < 7; y++) {  			if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  				double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  				double score = chance * 25;  				if (score == 25) {  					score = 50;  				}  				if (score > bests) {  					bests = score;  					best = "Full House:" + x.ToString () + y.ToString ();  				}  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int x = 1; x < 7; x++) {  		for (int y = 1; y < 7; y++) {  			if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  				double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  				double score = chance * 25;  				if (score == 25) {  					score = 50;  				}  				if (score > bests) {  					bests = score;  					best = "Full House:" + x.ToString () + y.ToString ();  				}  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int x = 1; x < 7; x++) {  		for (int y = 1; y < 7; y++) {  			if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  				double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  				double score = chance * 25;  				if (score == 25) {  					score = 50;  				}  				if (score > bests) {  					bests = score;  					best = "Full House:" + x.ToString () + y.ToString ();  				}  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int x = 1; x < 7; x++) {  		for (int y = 1; y < 7; y++) {  			if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  				double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  				double score = chance * 25;  				if (score == 25) {  					score = 50;  				}  				if (score > bests) {  					bests = score;  					best = "Full House:" + x.ToString () + y.ToString ();  				}  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int x = 1; x < 7; x++) {  		for (int y = 1; y < 7; y++) {  			if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  				double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  				double score = chance * 25;  				if (score == 25) {  					score = 50;  				}  				if (score > bests) {  					bests = score;  					best = "Full House:" + x.ToString () + y.ToString ();  				}  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int x = 1; x < 7; x++) {  		for (int y = 1; y < 7; y++) {  			if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  				double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  				double score = chance * 25;  				if (score == 25) {  					score = 50;  				}  				if (score > bests) {  					bests = score;  					best = "Full House:" + x.ToString () + y.ToString ();  				}  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int x = 1; x < 7; x++) {  		for (int y = 1; y < 7; y++) {  			if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  				double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  				double score = chance * 25;  				if (score == 25) {  					score = 50;  				}  				if (score > bests) {  					bests = score;  					best = "Full House:" + x.ToString () + y.ToString ();  				}  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int x = 1; x < 7; x++) {  		for (int y = 1; y < 7; y++) {  			if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  				double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  				double score = chance * 25;  				if (score == 25) {  					score = 50;  				}  				if (score > bests) {  					bests = score;  					best = "Full House:" + x.ToString () + y.ToString ();  				}  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int x = 1; x < 7; x++) {  		for (int y = 1; y < 7; y++) {  			if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  				double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  				double score = chance * 25;  				if (score == 25) {  					score = 50;  				}  				if (score > bests) {  					bests = score;  					best = "Full House:" + x.ToString () + y.ToString ();  				}  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  			double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  			double score = chance * 25;  			if (score == 25) {  				score = 50;  			}  			if (score > bests) {  				bests = score;  				best = "Full House:" + x.ToString () + y.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  			double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  			double score = chance * 25;  			if (score == 25) {  				score = 50;  			}  			if (score > bests) {  				bests = score;  				best = "Full House:" + x.ToString () + y.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  			double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  			double score = chance * 25;  			if (score == 25) {  				score = 50;  			}  			if (score > bests) {  				bests = score;  				best = "Full House:" + x.ToString () + y.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  			double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  			double score = chance * 25;  			if (score == 25) {  				score = 50;  			}  			if (score > bests) {  				bests = score;  				best = "Full House:" + x.ToString () + y.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  			double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  			double score = chance * 25;  			if (score == 25) {  				score = 50;  			}  			if (score > bests) {  				bests = score;  				best = "Full House:" + x.ToString () + y.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  			double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  			double score = chance * 25;  			if (score == 25) {  				score = 50;  			}  			if (score > bests) {  				bests = score;  				best = "Full House:" + x.ToString () + y.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  			double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  			double score = chance * 25;  			if (score == 25) {  				score = 50;  			}  			if (score > bests) {  				bests = score;  				best = "Full House:" + x.ToString () + y.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  			double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  			double score = chance * 25;  			if (score == 25) {  				score = 50;  			}  			if (score > bests) {  				bests = score;  				best = "Full House:" + x.ToString () + y.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  			double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  			double score = chance * 25;  			if (score == 25) {  				score = 50;  			}  			if (score > bests) {  				bests = score;  				best = "Full House:" + x.ToString () + y.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  			double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  			double score = chance * 25;  			if (score == 25) {  				score = 50;  			}  			if (score > bests) {  				bests = score;  				best = "Full House:" + x.ToString () + y.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int y = 1; y < 7; y++) {  	if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  		double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  		double score = chance * 25;  		if (score == 25) {  			score = 50;  		}  		if (score > bests) {  			bests = score;  			best = "Full House:" + x.ToString () + y.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int y = 1; y < 7; y++) {  	if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  		double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  		double score = chance * 25;  		if (score == 25) {  			score = 50;  		}  		if (score > bests) {  			bests = score;  			best = "Full House:" + x.ToString () + y.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int y = 1; y < 7; y++) {  	if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  		double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  		double score = chance * 25;  		if (score == 25) {  			score = 50;  		}  		if (score > bests) {  			bests = score;  			best = "Full House:" + x.ToString () + y.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int y = 1; y < 7; y++) {  	if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  		double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  		double score = chance * 25;  		if (score == 25) {  			score = 50;  		}  		if (score > bests) {  			bests = score;  			best = "Full House:" + x.ToString () + y.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int y = 1; y < 7; y++) {  	if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  		double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  		double score = chance * 25;  		if (score == 25) {  			score = 50;  		}  		if (score > bests) {  			bests = score;  			best = "Full House:" + x.ToString () + y.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int y = 1; y < 7; y++) {  	if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  		double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  		double score = chance * 25;  		if (score == 25) {  			score = 50;  		}  		if (score > bests) {  			bests = score;  			best = "Full House:" + x.ToString () + y.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int y = 1; y < 7; y++) {  	if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  		double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  		double score = chance * 25;  		if (score == 25) {  			score = 50;  		}  		if (score > bests) {  			bests = score;  			best = "Full House:" + x.ToString () + y.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int y = 1; y < 7; y++) {  	if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  		double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  		double score = chance * 25;  		if (score == 25) {  			score = 50;  		}  		if (score > bests) {  			bests = score;  			best = "Full House:" + x.ToString () + y.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int y = 1; y < 7; y++) {  	if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  		double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  		double score = chance * 25;  		if (score == 25) {  			score = 50;  		}  		if (score > bests) {  			bests = score;  			best = "Full House:" + x.ToString () + y.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  	double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  	double score = chance * 25;  	if (score == 25) {  		score = 50;  	}  	if (score > bests) {  		bests = score;  		best = "Full House:" + x.ToString () + y.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  	double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  	double score = chance * 25;  	if (score == 25) {  		score = 50;  	}  	if (score > bests) {  		bests = score;  		best = "Full House:" + x.ToString () + y.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  	double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  	double score = chance * 25;  	if (score == 25) {  		score = 50;  	}  	if (score > bests) {  		bests = score;  		best = "Full House:" + x.ToString () + y.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  	double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  	double score = chance * 25;  	if (score == 25) {  		score = 50;  	}  	if (score > bests) {  		bests = score;  		best = "Full House:" + x.ToString () + y.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  	double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  	double score = chance * 25;  	if (score == 25) {  		score = 50;  	}  	if (score > bests) {  		bests = score;  		best = "Full House:" + x.ToString () + y.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  	double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  	double score = chance * 25;  	if (score == 25) {  		score = 50;  	}  	if (score > bests) {  		bests = score;  		best = "Full House:" + x.ToString () + y.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  	double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  	double score = chance * 25;  	if (score == 25) {  		score = 50;  	}  	if (score > bests) {  		bests = score;  		best = "Full House:" + x.ToString () + y.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((kcount [x - 1] < 4) && (kcount [y - 1] < 3) && (x != y)) {  	double chance = 1 / (Math.Pow (6' (3 - kcount [x - 1]) + (2 - kcount [y - 1])));  	double score = chance * 25;  	if (score == 25) {  		score = 50;  	}  	if (score > bests) {  		bests = score;  		best = "Full House:" + x.ToString () + y.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (score == 25) {  	score = 50;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (score == 25) {  	score = 50;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: score = 50;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 5 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = 10;  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		//subsidize yahtzees where i is open in the upper section  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  			if (scored [i - 1] == false) {  				score = score + 8.5;  			}  			else {  				score = score / 2;  			}  		}  		if (score > bests) {  			bests = score;  			best = "Yahtzee:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 5 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = 10;  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		//subsidize yahtzees where i is open in the upper section  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  			if (scored [i - 1] == false) {  				score = score + 8.5;  			}  			else {  				score = score / 2;  			}  		}  		if (score > bests) {  			bests = score;  			best = "Yahtzee:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 5 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = 10;  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		//subsidize yahtzees where i is open in the upper section  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  			if (scored [i - 1] == false) {  				score = score + 8.5;  			}  			else {  				score = score / 2;  			}  		}  		if (score > bests) {  			bests = score;  			best = "Yahtzee:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 5 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = 10;  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		//subsidize yahtzees where i is open in the upper section  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  			if (scored [i - 1] == false) {  				score = score + 8.5;  			}  			else {  				score = score / 2;  			}  		}  		if (score > bests) {  			bests = score;  			best = "Yahtzee:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 5 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = 10;  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		//subsidize yahtzees where i is open in the upper section  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  			if (scored [i - 1] == false) {  				score = score + 8.5;  			}  			else {  				score = score / 2;  			}  		}  		if (score > bests) {  			bests = score;  			best = "Yahtzee:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 5 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = 10;  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		//subsidize yahtzees where i is open in the upper section  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  			if (scored [i - 1] == false) {  				score = score + 8.5;  			}  			else {  				score = score / 2;  			}  		}  		if (score > bests) {  			bests = score;  			best = "Yahtzee:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 5 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = 10;  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		//subsidize yahtzees where i is open in the upper section  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  			if (scored [i - 1] == false) {  				score = score + 8.5;  			}  			else {  				score = score / 2;  			}  		}  		if (score > bests) {  			bests = score;  			best = "Yahtzee:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	for (int i = 1; i < 7; i++) {  		//check every digit  		double diceneeded_kind = 5 - kcount [i - 1];  		double turnsleft = 3 - (rol - 1);  		double chance = (.17);  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double maxscore = 10;  		double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  		//subsidize yahtzees where i is open in the upper section  		bool[] scored = new bool[] {  			Aces.Visible'  			Twos.Visible'  			Threes.Visible'  			Fours.Visible'  			Fives.Visible'  			Sixes.Visible  		};  		if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  			if (scored [i - 1] == false) {  				score = score + 8.5;  			}  			else {  				score = score / 2;  			}  		}  		if (score > bests) {  			bests = score;  			best = "Yahtzee:" + i.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 5 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = 10;  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	//subsidize yahtzees where i is open in the upper section  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  		if (scored [i - 1] == false) {  			score = score + 8.5;  		}  		else {  			score = score / 2;  		}  	}  	if (score > bests) {  		bests = score;  		best = "Yahtzee:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 5 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = 10;  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	//subsidize yahtzees where i is open in the upper section  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  		if (scored [i - 1] == false) {  			score = score + 8.5;  		}  		else {  			score = score / 2;  		}  	}  	if (score > bests) {  		bests = score;  		best = "Yahtzee:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 5 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = 10;  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	//subsidize yahtzees where i is open in the upper section  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  		if (scored [i - 1] == false) {  			score = score + 8.5;  		}  		else {  			score = score / 2;  		}  	}  	if (score > bests) {  		bests = score;  		best = "Yahtzee:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 5 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = 10;  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	//subsidize yahtzees where i is open in the upper section  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  		if (scored [i - 1] == false) {  			score = score + 8.5;  		}  		else {  			score = score / 2;  		}  	}  	if (score > bests) {  		bests = score;  		best = "Yahtzee:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 5 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = 10;  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	//subsidize yahtzees where i is open in the upper section  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  		if (scored [i - 1] == false) {  			score = score + 8.5;  		}  		else {  			score = score / 2;  		}  	}  	if (score > bests) {  		bests = score;  		best = "Yahtzee:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 5 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = 10;  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	//subsidize yahtzees where i is open in the upper section  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  		if (scored [i - 1] == false) {  			score = score + 8.5;  		}  		else {  			score = score / 2;  		}  	}  	if (score > bests) {  		bests = score;  		best = "Yahtzee:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 5 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = 10;  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	//subsidize yahtzees where i is open in the upper section  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  		if (scored [i - 1] == false) {  			score = score + 8.5;  		}  		else {  			score = score / 2;  		}  	}  	if (score > bests) {  		bests = score;  		best = "Yahtzee:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int i = 1; i < 7; i++) {  	//check every digit  	double diceneeded_kind = 5 - kcount [i - 1];  	double turnsleft = 3 - (rol - 1);  	double chance = (.17);  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double maxscore = 10;  	double score = (Math.Pow (chance' diceneeded_kind)) * maxscore;  	//subsidize yahtzees where i is open in the upper section  	bool[] scored = new bool[] {  		Aces.Visible'  		Twos.Visible'  		Threes.Visible'  		Fours.Visible'  		Fives.Visible'  		Sixes.Visible  	};  	if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  		if (scored [i - 1] == false) {  			score = score + 8.5;  		}  		else {  			score = score / 2;  		}  	}  	if (score > bests) {  		bests = score;  		best = "Yahtzee:" + i.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  	if (scored [i - 1] == false) {  		score = score + 8.5;  	}  	else {  		score = score / 2;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (best == "NULL" || best.StartsWith ("Yahtzee:")) {  	if (scored [i - 1] == false) {  		score = score + 8.5;  	}  	else {  		score = score / 2;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (scored [i - 1] == false) {  	score = score + 8.5;  }  else {  	score = score / 2;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (scored [i - 1] == false) {  	score = score + 8.5;  }  else {  	score = score / 2;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: score = score + 8.5;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: score = score / 2;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((best == "NULL")) {  	if (Chance.Visible == false) {  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double score = (currentscore) + (3.5 * diceneeded_rolled);  		score = (score / 100);  		if (score > bests) {  			bests = score;  			best = "Chance:";  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((best == "NULL")) {  	if (Chance.Visible == false) {  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double score = (currentscore) + (3.5 * diceneeded_rolled);  		score = (score / 100);  		if (score > bests) {  			bests = score;  			best = "Chance:";  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((best == "NULL")) {  	if (Chance.Visible == false) {  		double diceneeded_rolled = 5 - kept.Count;  		double currentscore = 0;  		foreach (int j in kept) {  			currentscore = currentscore + j;  		}  		double score = (currentscore) + (3.5 * diceneeded_rolled);  		score = (score / 100);  		if (score > bests) {  			bests = score;  			best = "Chance:";  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (Chance.Visible == false) {  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double score = (currentscore) + (3.5 * diceneeded_rolled);  	score = (score / 100);  	if (score > bests) {  		bests = score;  		best = "Chance:";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (Chance.Visible == false) {  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double score = (currentscore) + (3.5 * diceneeded_rolled);  	score = (score / 100);  	if (score > bests) {  		bests = score;  		best = "Chance:";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (Chance.Visible == false) {  	double diceneeded_rolled = 5 - kept.Count;  	double currentscore = 0;  	foreach (int j in kept) {  		currentscore = currentscore + j;  	}  	double score = (currentscore) + (3.5 * diceneeded_rolled);  	score = (score / 100);  	if (score > bests) {  		bests = score;  		best = "Chance:";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: score = (score / 100);  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = true;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = true;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = true;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = true;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = true;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = true;  	}  	if (exist == false) {  		double score = kcount [x - 1] * x;  		score = 10 * (score / 63);  		if (score > bests) {  			bool allow = true;  			if ((x > 4) && (score < 20)) {  				if (best == "NULL") {  					allow = true;  				}  				else {  					allow = false;  				}  			}  			if (allow == true) {  				bests = score;  				best = "Digits:" + x.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = true;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = true;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = true;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = true;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = true;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = true;  	}  	if (exist == false) {  		double score = kcount [x - 1] * x;  		score = 10 * (score / 63);  		if (score > bests) {  			bool allow = true;  			if ((x > 4) && (score < 20)) {  				if (best == "NULL") {  					allow = true;  				}  				else {  					allow = false;  				}  			}  			if (allow == true) {  				bests = score;  				best = "Digits:" + x.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = true;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = true;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = true;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = true;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = true;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = true;  	}  	if (exist == false) {  		double score = kcount [x - 1] * x;  		score = 10 * (score / 63);  		if (score > bests) {  			bool allow = true;  			if ((x > 4) && (score < 20)) {  				if (best == "NULL") {  					allow = true;  				}  				else {  					allow = false;  				}  			}  			if (allow == true) {  				bests = score;  				best = "Digits:" + x.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = true;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = true;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = true;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = true;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = true;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = true;  	}  	if (exist == false) {  		double score = kcount [x - 1] * x;  		score = 10 * (score / 63);  		if (score > bests) {  			bool allow = true;  			if ((x > 4) && (score < 20)) {  				if (best == "NULL") {  					allow = true;  				}  				else {  					allow = false;  				}  			}  			if (allow == true) {  				bests = score;  				best = "Digits:" + x.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = true;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = true;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = true;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = true;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = true;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = true;  	}  	if (exist == false) {  		double score = kcount [x - 1] * x;  		score = 10 * (score / 63);  		if (score > bests) {  			bool allow = true;  			if ((x > 4) && (score < 20)) {  				if (best == "NULL") {  					allow = true;  				}  				else {  					allow = false;  				}  			}  			if (allow == true) {  				bests = score;  				best = "Digits:" + x.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = true;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = true;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = true;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = true;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = true;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = true;  	}  	if (exist == false) {  		double score = kcount [x - 1] * x;  		score = 10 * (score / 63);  		if (score > bests) {  			bool allow = true;  			if ((x > 4) && (score < 20)) {  				if (best == "NULL") {  					allow = true;  				}  				else {  					allow = false;  				}  			}  			if (allow == true) {  				bests = score;  				best = "Digits:" + x.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = true;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = true;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = true;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = true;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = true;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = true;  	}  	if (exist == false) {  		double score = kcount [x - 1] * x;  		score = 10 * (score / 63);  		if (score > bests) {  			bool allow = true;  			if ((x > 4) && (score < 20)) {  				if (best == "NULL") {  					allow = true;  				}  				else {  					allow = false;  				}  			}  			if (allow == true) {  				bests = score;  				best = "Digits:" + x.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = true;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = true;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = true;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = true;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = true;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = true;  	}  	if (exist == false) {  		double score = kcount [x - 1] * x;  		score = 10 * (score / 63);  		if (score > bests) {  			bool allow = true;  			if ((x > 4) && (score < 20)) {  				if (best == "NULL") {  					allow = true;  				}  				else {  					allow = false;  				}  			}  			if (allow == true) {  				bests = score;  				best = "Digits:" + x.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = true;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = true;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = true;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = true;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = true;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = true;  	}  	if (exist == false) {  		double score = kcount [x - 1] * x;  		score = 10 * (score / 63);  		if (score > bests) {  			bool allow = true;  			if ((x > 4) && (score < 20)) {  				if (best == "NULL") {  					allow = true;  				}  				else {  					allow = false;  				}  			}  			if (allow == true) {  				bests = score;  				best = "Digits:" + x.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = true;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = true;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = true;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = true;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = true;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = true;  	}  	if (exist == false) {  		double score = kcount [x - 1] * x;  		score = 10 * (score / 63);  		if (score > bests) {  			bool allow = true;  			if ((x > 4) && (score < 20)) {  				if (best == "NULL") {  					allow = true;  				}  				else {  					allow = false;  				}  			}  			if (allow == true) {  				bests = score;  				best = "Digits:" + x.ToString ();  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((x == 2) && (Twos.Visible == true)) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((x == 3) && (Threes.Visible == true)) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((x == 4) && (Fours.Visible == true)) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((x == 5) && (Fives.Visible == true)) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((x == 6) && (Sixes.Visible == true)) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	double score = kcount [x - 1] * x;  	score = 10 * (score / 63);  	if (score > bests) {  		bool allow = true;  		if ((x > 4) && (score < 20)) {  			if (best == "NULL") {  				allow = true;  			}  			else {  				allow = false;  			}  		}  		if (allow == true) {  			bests = score;  			best = "Digits:" + x.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	double score = kcount [x - 1] * x;  	score = 10 * (score / 63);  	if (score > bests) {  		bool allow = true;  		if ((x > 4) && (score < 20)) {  			if (best == "NULL") {  				allow = true;  			}  			else {  				allow = false;  			}  		}  		if (allow == true) {  			bests = score;  			best = "Digits:" + x.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	double score = kcount [x - 1] * x;  	score = 10 * (score / 63);  	if (score > bests) {  		bool allow = true;  		if ((x > 4) && (score < 20)) {  			if (best == "NULL") {  				allow = true;  			}  			else {  				allow = false;  			}  		}  		if (allow == true) {  			bests = score;  			best = "Digits:" + x.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (exist == false) {  	double score = kcount [x - 1] * x;  	score = 10 * (score / 63);  	if (score > bests) {  		bool allow = true;  		if ((x > 4) && (score < 20)) {  			if (best == "NULL") {  				allow = true;  			}  			else {  				allow = false;  			}  		}  		if (allow == true) {  			bests = score;  			best = "Digits:" + x.ToString ();  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: score = 10 * (score / 63);  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: score = 10 * (score / 63);  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (score > bests) {  	bool allow = true;  	if ((x > 4) && (score < 20)) {  		if (best == "NULL") {  			allow = true;  		}  		else {  			allow = false;  		}  	}  	if (allow == true) {  		bests = score;  		best = "Digits:" + x.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if (score > bests) {  	bool allow = true;  	if ((x > 4) && (score < 20)) {  		if (best == "NULL") {  			allow = true;  		}  		else {  			allow = false;  		}  	}  	if (allow == true) {  		bests = score;  		best = "Digits:" + x.ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((x > 4) && (score < 20)) {  	if (best == "NULL") {  		allow = true;  	}  	else {  		allow = false;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The following statement contains a magic number: if ((x > 4) && (score < 20)) {  	if (best == "NULL") {  		allow = true;  	}  	else {  		allow = false;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Subsidize,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if ((scored [i] == false) && (kcount [i] > 1)) {  		int amount = kcount [i];  		double bonus = amount * (i + 1);  		double bas = (bonus / 63);  		bas = 1 + bas;  		double scor = score * bas;  		if (scor > hscore) {  			hscore = scor;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Subsidize,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if ((scored [i] == false) && (kcount [i] > 1)) {  		int amount = kcount [i];  		double bonus = amount * (i + 1);  		double bas = (bonus / 63);  		bas = 1 + bas;  		double scor = score * bas;  		if (scor > hscore) {  			hscore = scor;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,Subsidize,The following statement contains a magic number: if ((scored [i] == false) && (kcount [i] > 1)) {  	int amount = kcount [i];  	double bonus = amount * (i + 1);  	double bas = (bonus / 63);  	bas = 1 + bas;  	double scor = score * bas;  	if (scor > hscore) {  		hscore = scor;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (kcount [i] == 5) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (kcount [i] == 5) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (kcount [i] == 5) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	if ((B1.Visible == false) || (B2.Visible == false) || (B3.Visible == false)) {  		double score;  		if (Yahtzee.Visible == true) {  			score = 100;  		}  		else {  			score = 50;  		}  		if (score > bests) {  			bests = score;  			best = "Yahtzee";  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	if ((B1.Visible == false) || (B2.Visible == false) || (B3.Visible == false)) {  		double score;  		if (Yahtzee.Visible == true) {  			score = 100;  		}  		else {  			score = 50;  		}  		if (score > bests) {  			bests = score;  			best = "Yahtzee";  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((B1.Visible == false) || (B2.Visible == false) || (B3.Visible == false)) {  	double score;  	if (Yahtzee.Visible == true) {  		score = 100;  	}  	else {  		score = 50;  	}  	if (score > bests) {  		bests = score;  		best = "Yahtzee";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((B1.Visible == false) || (B2.Visible == false) || (B3.Visible == false)) {  	double score;  	if (Yahtzee.Visible == true) {  		score = 100;  	}  	else {  		score = 50;  	}  	if (score > bests) {  		bests = score;  		best = "Yahtzee";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	score = 100;  }  else {  	score = 50;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	score = 100;  }  else {  	score = 50;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: score = 100;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: score = 50;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (kcount [i] > 3) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (kcount [i] > 3) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (kcount [i] > 3) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double score = 0;  	for (int i = 0; i < 5; i++) {  		score = score + lists [i];  	}  	if ((score > bests) && (score > kind_min)) {  		bests = score;  		best = "4 of a Kind";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	score = score + lists [i];  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] == 3) && (kcount [y - 1] == 2) && (x != y)) {  			exist = true;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] == 3) && (kcount [y - 1] == 2) && (x != y)) {  			exist = true;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] == 3) && (kcount [y - 1] == 2) && (x != y)) {  			exist = true;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	for (int y = 1; y < 7; y++) {  		if ((kcount [x - 1] == 3) && (kcount [y - 1] == 2) && (x != y)) {  			exist = true;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int y = 1; y < 7; y++) {  	if ((kcount [x - 1] == 3) && (kcount [y - 1] == 2) && (x != y)) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int y = 1; y < 7; y++) {  	if ((kcount [x - 1] == 3) && (kcount [y - 1] == 2) && (x != y)) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int y = 1; y < 7; y++) {  	if ((kcount [x - 1] == 3) && (kcount [y - 1] == 2) && (x != y)) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((kcount [x - 1] == 3) && (kcount [y - 1] == 2) && (x != y)) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((kcount [x - 1] == 3) && (kcount [y - 1] == 2) && (x != y)) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double score = 25;  	if (score > bests) {  		bests = score;  		best = "Full House";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (kcount [i] > 2) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (kcount [i] > 2) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (kcount [i] > 2) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double score = 0;  	for (int i = 0; i < 5; i++) {  		score = score + lists [i];  	}  	if ((score > bests) && (score > kind_min)) {  		bests = score;  		best = "3 of a Kind";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	score = score + lists [i];  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	if ((kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0) && (kcount [i + 4] > 0)) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	if ((kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0) && (kcount [i + 4] > 0)) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	if ((kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0) && (kcount [i + 4] > 0)) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	if ((kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0) && (kcount [i + 4] > 0)) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0) && (kcount [i + 4] > 0)) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0) && (kcount [i + 4] > 0)) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0) && (kcount [i + 4] > 0)) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double score = 40;  	if (score > bests) {  		bests = score;  		best = "Large Straight";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if ((kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0)) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if ((kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0)) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if ((kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0)) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0)) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((kcount [i] > 0) && (kcount [i + 1] > 0) && (kcount [i + 2] > 0) && (kcount [i + 3] > 0)) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double score = 30;  	if (score > bests) {  		bests = score;  		best = "Small Straight";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = true;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		available_count++;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = true;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		available_count++;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = true;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		available_count++;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = true;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		available_count++;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = true;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		available_count++;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = true;  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		available_count++;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 2) && (Twos.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 3) && (Threes.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 4) && (Fours.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 5) && (Fives.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 6) && (Sixes.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		double scr = (amount / 63);  		double score = upper_multiplier * scr;  		double min_score = digit_min / 63;  		min_score = min_score * upper_multiplier;  		if ((x > 4) && (score < min_score)) {  			score = -2;  		}  		if (available_count == 1) {  			/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  				//if not achieved and possible  				score = -2;  			}  		}  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 2) && (Twos.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 3) && (Threes.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 4) && (Fours.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 5) && (Fives.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 6) && (Sixes.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double count = kcount [x - 1];  	double amount = count * x;  	double scr = (amount / 63);  	double score = upper_multiplier * scr;  	double min_score = digit_min / 63;  	min_score = min_score * upper_multiplier;  	if ((x > 4) && (score < min_score)) {  		score = -2;  	}  	if (available_count == 1) {  		/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  			//if not achieved and possible  			score = -2;  		}  	}  	if ((score > bests) && (count > hcount)) {  		bests = score;  		best = "Digit " + x.ToString ();  		hcount = count;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double count = kcount [x - 1];  	double amount = count * x;  	double scr = (amount / 63);  	double score = upper_multiplier * scr;  	double min_score = digit_min / 63;  	min_score = min_score * upper_multiplier;  	if ((x > 4) && (score < min_score)) {  		score = -2;  	}  	if (available_count == 1) {  		/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  			//if not achieved and possible  			score = -2;  		}  	}  	if ((score > bests) && (count > hcount)) {  		bests = score;  		best = "Digit " + x.ToString ();  		hcount = count;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double count = kcount [x - 1];  	double amount = count * x;  	double scr = (amount / 63);  	double score = upper_multiplier * scr;  	double min_score = digit_min / 63;  	min_score = min_score * upper_multiplier;  	if ((x > 4) && (score < min_score)) {  		score = -2;  	}  	if (available_count == 1) {  		/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  			//if not achieved and possible  			score = -2;  		}  	}  	if ((score > bests) && (count > hcount)) {  		bests = score;  		best = "Digit " + x.ToString ();  		hcount = count;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double count = kcount [x - 1];  	double amount = count * x;  	double scr = (amount / 63);  	double score = upper_multiplier * scr;  	double min_score = digit_min / 63;  	min_score = min_score * upper_multiplier;  	if ((x > 4) && (score < min_score)) {  		score = -2;  	}  	if (available_count == 1) {  		/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  			//if not achieved and possible  			score = -2;  		}  	}  	if ((score > bests) && (count > hcount)) {  		bests = score;  		best = "Digit " + x.ToString ();  		hcount = count;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double count = kcount [x - 1];  	double amount = count * x;  	double scr = (amount / 63);  	double score = upper_multiplier * scr;  	double min_score = digit_min / 63;  	min_score = min_score * upper_multiplier;  	if ((x > 4) && (score < min_score)) {  		score = -2;  	}  	if (available_count == 1) {  		/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  			//if not achieved and possible  			score = -2;  		}  	}  	if ((score > bests) && (count > hcount)) {  		bests = score;  		best = "Digit " + x.ToString ();  		hcount = count;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double count = kcount [x - 1];  	double amount = count * x;  	double scr = (amount / 63);  	double score = upper_multiplier * scr;  	double min_score = digit_min / 63;  	min_score = min_score * upper_multiplier;  	if ((x > 4) && (score < min_score)) {  		score = -2;  	}  	if (available_count == 1) {  		/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  			//if not achieved and possible  			score = -2;  		}  	}  	if ((score > bests) && (count > hcount)) {  		bests = score;  		best = "Digit " + x.ToString ();  		hcount = count;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double count = kcount [x - 1];  	double amount = count * x;  	double scr = (amount / 63);  	double score = upper_multiplier * scr;  	double min_score = digit_min / 63;  	min_score = min_score * upper_multiplier;  	if ((x > 4) && (score < min_score)) {  		score = -2;  	}  	if (available_count == 1) {  		/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  			//if not achieved and possible  			score = -2;  		}  	}  	if ((score > bests) && (count > hcount)) {  		bests = score;  		best = "Digit " + x.ToString ();  		hcount = count;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double count = kcount [x - 1];  	double amount = count * x;  	double scr = (amount / 63);  	double score = upper_multiplier * scr;  	double min_score = digit_min / 63;  	min_score = min_score * upper_multiplier;  	if ((x > 4) && (score < min_score)) {  		score = -2;  	}  	if (available_count == 1) {  		/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  			//if not achieved and possible  			score = -2;  		}  	}  	if ((score > bests) && (count > hcount)) {  		bests = score;  		best = "Digit " + x.ToString ();  		hcount = count;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x > 4) && (score < min_score)) {  	score = -2;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x > 4) && (score < min_score)) {  	score = -2;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: score = -2;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (available_count == 1) {  	/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  		//if not achieved and possible  		score = -2;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (available_count == 1) {  	/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  		//if not achieved and possible  		score = -2;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (available_count == 1) {  	/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  		//if not achieved and possible  		score = -2;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (available_count == 1) {  	/*if ((upperscore + (4 * x)) < 63)                         {                             score = -2;                         }                         if (((upperscore + (3 * x)) < 63) && (score != -2))                         {                             score = -2;                         }*/if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  		//if not achieved and possible  		score = -2;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  	//if not achieved and possible  	score = -2;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  	//if not achieved and possible  	score = -2;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  	//if not achieved and possible  	score = -2;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((upperscore + amount < 63) && ((upperscore + (4 * x)) >= 63)) {  	//if not achieved and possible  	score = -2;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: score = -2;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double score = 0;  	for (int i = 0; i < 5; i++) {  		score = score + lists [i];  	}  	if (score > bests) {  		bests = score;  		best = "Chance";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	score = score + lists [i];  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "NULL") {  	hcount = -1;  	for (int x = 1; x < 7; x++) {  		exist = false;  		if (kcount [x - 1] > 0) {  			exist = true;  		}  		if ((x == 1) && (Aces.Visible == true)) {  			exist = false;  		}  		if ((x == 2) && (Twos.Visible == true)) {  			exist = false;  		}  		if ((x == 3) && (Threes.Visible == true)) {  			exist = false;  		}  		if ((x == 4) && (Fours.Visible == true)) {  			exist = false;  		}  		if ((x == 5) && (Fives.Visible == true)) {  			exist = false;  		}  		if ((x == 6) && (Sixes.Visible == true)) {  			exist = false;  		}  		if (exist == true) {  			double count = kcount [x - 1];  			double amount = count * x;  			amount = (amount / 63);  			double score = upper_multiplier * amount;  			if ((score > bests) && (count > hcount)) {  				bests = score;  				best = "Digit " + x.ToString ();  				hcount = count;  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "NULL") {  	hcount = -1;  	for (int x = 1; x < 7; x++) {  		exist = false;  		if (kcount [x - 1] > 0) {  			exist = true;  		}  		if ((x == 1) && (Aces.Visible == true)) {  			exist = false;  		}  		if ((x == 2) && (Twos.Visible == true)) {  			exist = false;  		}  		if ((x == 3) && (Threes.Visible == true)) {  			exist = false;  		}  		if ((x == 4) && (Fours.Visible == true)) {  			exist = false;  		}  		if ((x == 5) && (Fives.Visible == true)) {  			exist = false;  		}  		if ((x == 6) && (Sixes.Visible == true)) {  			exist = false;  		}  		if (exist == true) {  			double count = kcount [x - 1];  			double amount = count * x;  			amount = (amount / 63);  			double score = upper_multiplier * amount;  			if ((score > bests) && (count > hcount)) {  				bests = score;  				best = "Digit " + x.ToString ();  				hcount = count;  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "NULL") {  	hcount = -1;  	for (int x = 1; x < 7; x++) {  		exist = false;  		if (kcount [x - 1] > 0) {  			exist = true;  		}  		if ((x == 1) && (Aces.Visible == true)) {  			exist = false;  		}  		if ((x == 2) && (Twos.Visible == true)) {  			exist = false;  		}  		if ((x == 3) && (Threes.Visible == true)) {  			exist = false;  		}  		if ((x == 4) && (Fours.Visible == true)) {  			exist = false;  		}  		if ((x == 5) && (Fives.Visible == true)) {  			exist = false;  		}  		if ((x == 6) && (Sixes.Visible == true)) {  			exist = false;  		}  		if (exist == true) {  			double count = kcount [x - 1];  			double amount = count * x;  			amount = (amount / 63);  			double score = upper_multiplier * amount;  			if ((score > bests) && (count > hcount)) {  				bests = score;  				best = "Digit " + x.ToString ();  				hcount = count;  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "NULL") {  	hcount = -1;  	for (int x = 1; x < 7; x++) {  		exist = false;  		if (kcount [x - 1] > 0) {  			exist = true;  		}  		if ((x == 1) && (Aces.Visible == true)) {  			exist = false;  		}  		if ((x == 2) && (Twos.Visible == true)) {  			exist = false;  		}  		if ((x == 3) && (Threes.Visible == true)) {  			exist = false;  		}  		if ((x == 4) && (Fours.Visible == true)) {  			exist = false;  		}  		if ((x == 5) && (Fives.Visible == true)) {  			exist = false;  		}  		if ((x == 6) && (Sixes.Visible == true)) {  			exist = false;  		}  		if (exist == true) {  			double count = kcount [x - 1];  			double amount = count * x;  			amount = (amount / 63);  			double score = upper_multiplier * amount;  			if ((score > bests) && (count > hcount)) {  				bests = score;  				best = "Digit " + x.ToString ();  				hcount = count;  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "NULL") {  	hcount = -1;  	for (int x = 1; x < 7; x++) {  		exist = false;  		if (kcount [x - 1] > 0) {  			exist = true;  		}  		if ((x == 1) && (Aces.Visible == true)) {  			exist = false;  		}  		if ((x == 2) && (Twos.Visible == true)) {  			exist = false;  		}  		if ((x == 3) && (Threes.Visible == true)) {  			exist = false;  		}  		if ((x == 4) && (Fours.Visible == true)) {  			exist = false;  		}  		if ((x == 5) && (Fives.Visible == true)) {  			exist = false;  		}  		if ((x == 6) && (Sixes.Visible == true)) {  			exist = false;  		}  		if (exist == true) {  			double count = kcount [x - 1];  			double amount = count * x;  			amount = (amount / 63);  			double score = upper_multiplier * amount;  			if ((score > bests) && (count > hcount)) {  				bests = score;  				best = "Digit " + x.ToString ();  				hcount = count;  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "NULL") {  	hcount = -1;  	for (int x = 1; x < 7; x++) {  		exist = false;  		if (kcount [x - 1] > 0) {  			exist = true;  		}  		if ((x == 1) && (Aces.Visible == true)) {  			exist = false;  		}  		if ((x == 2) && (Twos.Visible == true)) {  			exist = false;  		}  		if ((x == 3) && (Threes.Visible == true)) {  			exist = false;  		}  		if ((x == 4) && (Fours.Visible == true)) {  			exist = false;  		}  		if ((x == 5) && (Fives.Visible == true)) {  			exist = false;  		}  		if ((x == 6) && (Sixes.Visible == true)) {  			exist = false;  		}  		if (exist == true) {  			double count = kcount [x - 1];  			double amount = count * x;  			amount = (amount / 63);  			double score = upper_multiplier * amount;  			if ((score > bests) && (count > hcount)) {  				bests = score;  				best = "Digit " + x.ToString ();  				hcount = count;  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "NULL") {  	hcount = -1;  	for (int x = 1; x < 7; x++) {  		exist = false;  		if (kcount [x - 1] > 0) {  			exist = true;  		}  		if ((x == 1) && (Aces.Visible == true)) {  			exist = false;  		}  		if ((x == 2) && (Twos.Visible == true)) {  			exist = false;  		}  		if ((x == 3) && (Threes.Visible == true)) {  			exist = false;  		}  		if ((x == 4) && (Fours.Visible == true)) {  			exist = false;  		}  		if ((x == 5) && (Fives.Visible == true)) {  			exist = false;  		}  		if ((x == 6) && (Sixes.Visible == true)) {  			exist = false;  		}  		if (exist == true) {  			double count = kcount [x - 1];  			double amount = count * x;  			amount = (amount / 63);  			double score = upper_multiplier * amount;  			if ((score > bests) && (count > hcount)) {  				bests = score;  				best = "Digit " + x.ToString ();  				hcount = count;  			}  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		amount = (amount / 63);  		double score = upper_multiplier * amount;  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		amount = (amount / 63);  		double score = upper_multiplier * amount;  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		amount = (amount / 63);  		double score = upper_multiplier * amount;  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		amount = (amount / 63);  		double score = upper_multiplier * amount;  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		amount = (amount / 63);  		double score = upper_multiplier * amount;  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		amount = (amount / 63);  		double score = upper_multiplier * amount;  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int x = 1; x < 7; x++) {  	exist = false;  	if (kcount [x - 1] > 0) {  		exist = true;  	}  	if ((x == 1) && (Aces.Visible == true)) {  		exist = false;  	}  	if ((x == 2) && (Twos.Visible == true)) {  		exist = false;  	}  	if ((x == 3) && (Threes.Visible == true)) {  		exist = false;  	}  	if ((x == 4) && (Fours.Visible == true)) {  		exist = false;  	}  	if ((x == 5) && (Fives.Visible == true)) {  		exist = false;  	}  	if ((x == 6) && (Sixes.Visible == true)) {  		exist = false;  	}  	if (exist == true) {  		double count = kcount [x - 1];  		double amount = count * x;  		amount = (amount / 63);  		double score = upper_multiplier * amount;  		if ((score > bests) && (count > hcount)) {  			bests = score;  			best = "Digit " + x.ToString ();  			hcount = count;  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 2) && (Twos.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 3) && (Threes.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 4) && (Fours.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 5) && (Fives.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if ((x == 6) && (Sixes.Visible == true)) {  	exist = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double count = kcount [x - 1];  	double amount = count * x;  	amount = (amount / 63);  	double score = upper_multiplier * amount;  	if ((score > bests) && (count > hcount)) {  		bests = score;  		best = "Digit " + x.ToString ();  		hcount = count;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: amount = (amount / 63);  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "Cross Off!") {  	exist = false;  	for (int i = 0; i < 6; i++) {  		if (kcount [i] > 3) {  			exist = true;  		}  	}  	if (Kind4.Visible == true) {  		exist = false;  	}  	if (exist == true) {  		double score = 0;  		for (int i = 0; i < 5; i++) {  			score = score + lists [i];  		}  		if (score > bests) {  			bests = score;  			best = "4 of a Kind";  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "Cross Off!") {  	exist = false;  	for (int i = 0; i < 6; i++) {  		if (kcount [i] > 3) {  			exist = true;  		}  	}  	if (Kind4.Visible == true) {  		exist = false;  	}  	if (exist == true) {  		double score = 0;  		for (int i = 0; i < 5; i++) {  			score = score + lists [i];  		}  		if (score > bests) {  			bests = score;  			best = "4 of a Kind";  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "Cross Off!") {  	exist = false;  	for (int i = 0; i < 6; i++) {  		if (kcount [i] > 3) {  			exist = true;  		}  	}  	if (Kind4.Visible == true) {  		exist = false;  	}  	if (exist == true) {  		double score = 0;  		for (int i = 0; i < 5; i++) {  			score = score + lists [i];  		}  		if (score > bests) {  			bests = score;  			best = "4 of a Kind";  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (kcount [i] > 3) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (kcount [i] > 3) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (kcount [i] > 3) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double score = 0;  	for (int i = 0; i < 5; i++) {  		score = score + lists [i];  	}  	if (score > bests) {  		bests = score;  		best = "4 of a Kind";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	score = score + lists [i];  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "Cross Off!") {  	exist = false;  	for (int i = 0; i < 6; i++) {  		if (kcount [i] > 2) {  			exist = true;  		}  	}  	if (Kind3.Visible == true) {  		exist = false;  	}  	if (exist == true) {  		double score = 0;  		for (int i = 0; i < 5; i++) {  			score = score + lists [i];  		}  		if (score > bests) {  			bests = score;  			best = "3 of a Kind";  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "Cross Off!") {  	exist = false;  	for (int i = 0; i < 6; i++) {  		if (kcount [i] > 2) {  			exist = true;  		}  	}  	if (Kind3.Visible == true) {  		exist = false;  	}  	if (exist == true) {  		double score = 0;  		for (int i = 0; i < 5; i++) {  			score = score + lists [i];  		}  		if (score > bests) {  			bests = score;  			best = "3 of a Kind";  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (best == "Cross Off!") {  	exist = false;  	for (int i = 0; i < 6; i++) {  		if (kcount [i] > 2) {  			exist = true;  		}  	}  	if (Kind3.Visible == true) {  		exist = false;  	}  	if (exist == true) {  		double score = 0;  		for (int i = 0; i < 5; i++) {  			score = score + lists [i];  		}  		if (score > bests) {  			bests = score;  			best = "3 of a Kind";  		}  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (kcount [i] > 2) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (kcount [i] > 2) {  		exist = true;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (kcount [i] > 2) {  	exist = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: if (exist == true) {  	double score = 0;  	for (int i = 0; i < 5; i++) {  		score = score + lists [i];  	}  	if (score > bests) {  		bests = score;  		best = "3 of a Kind";  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	score = score + lists [i];  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: W1.Width = 171;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: W1.BackColor = Color.FromArgb (0' 192' 192);  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: W1.BackColor = Color.FromArgb (0' 192' 192);  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Yahtzee") {  	if (Yahtzee.Visible == true) {  		if (B1.Visible == true) {  			if (B2.Visible == true) {  				if (B3.Visible == true) {  				}  				else {  					BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  					B3.Visible = true;  					T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  					TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  				}  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B2.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B1.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		Yahtzee.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Yahtzee") {  	if (Yahtzee.Visible == true) {  		if (B1.Visible == true) {  			if (B2.Visible == true) {  				if (B3.Visible == true) {  				}  				else {  					BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  					B3.Visible = true;  					T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  					TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  				}  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B2.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B1.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		Yahtzee.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Yahtzee") {  	if (Yahtzee.Visible == true) {  		if (B1.Visible == true) {  			if (B2.Visible == true) {  				if (B3.Visible == true) {  				}  				else {  					BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  					B3.Visible = true;  					T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  					TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  				}  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B2.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B1.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		Yahtzee.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Yahtzee") {  	if (Yahtzee.Visible == true) {  		if (B1.Visible == true) {  			if (B2.Visible == true) {  				if (B3.Visible == true) {  				}  				else {  					BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  					B3.Visible = true;  					T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  					TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  				}  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B2.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B1.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		Yahtzee.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Yahtzee") {  	if (Yahtzee.Visible == true) {  		if (B1.Visible == true) {  			if (B2.Visible == true) {  				if (B3.Visible == true) {  				}  				else {  					BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  					B3.Visible = true;  					T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  					TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  				}  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B2.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B1.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		Yahtzee.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Yahtzee") {  	if (Yahtzee.Visible == true) {  		if (B1.Visible == true) {  			if (B2.Visible == true) {  				if (B3.Visible == true) {  				}  				else {  					BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  					B3.Visible = true;  					T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  					TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  				}  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B2.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B1.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		Yahtzee.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Yahtzee") {  	if (Yahtzee.Visible == true) {  		if (B1.Visible == true) {  			if (B2.Visible == true) {  				if (B3.Visible == true) {  				}  				else {  					BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  					B3.Visible = true;  					T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  					TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  				}  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B2.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B1.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		Yahtzee.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Yahtzee") {  	if (Yahtzee.Visible == true) {  		if (B1.Visible == true) {  			if (B2.Visible == true) {  				if (B3.Visible == true) {  				}  				else {  					BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  					B3.Visible = true;  					T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  					TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  				}  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B2.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B1.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		Yahtzee.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Yahtzee") {  	if (Yahtzee.Visible == true) {  		if (B1.Visible == true) {  			if (B2.Visible == true) {  				if (B3.Visible == true) {  				}  				else {  					BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  					B3.Visible = true;  					T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  					TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  				}  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B2.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B1.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		Yahtzee.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Yahtzee") {  	if (Yahtzee.Visible == true) {  		if (B1.Visible == true) {  			if (B2.Visible == true) {  				if (B3.Visible == true) {  				}  				else {  					BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  					B3.Visible = true;  					T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  					TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  				}  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B2.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B1.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		Yahtzee.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Yahtzee") {  	if (Yahtzee.Visible == true) {  		if (B1.Visible == true) {  			if (B2.Visible == true) {  				if (B3.Visible == true) {  				}  				else {  					BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  					B3.Visible = true;  					T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  					TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  				}  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B2.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B1.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		Yahtzee.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	if (B1.Visible == true) {  		if (B2.Visible == true) {  			if (B3.Visible == true) {  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B3.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B2.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B1.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	Yahtzee.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	if (B1.Visible == true) {  		if (B2.Visible == true) {  			if (B3.Visible == true) {  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B3.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B2.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B1.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	Yahtzee.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	if (B1.Visible == true) {  		if (B2.Visible == true) {  			if (B3.Visible == true) {  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B3.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B2.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B1.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	Yahtzee.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	if (B1.Visible == true) {  		if (B2.Visible == true) {  			if (B3.Visible == true) {  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B3.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B2.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B1.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	Yahtzee.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	if (B1.Visible == true) {  		if (B2.Visible == true) {  			if (B3.Visible == true) {  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B3.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B2.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B1.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	Yahtzee.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	if (B1.Visible == true) {  		if (B2.Visible == true) {  			if (B3.Visible == true) {  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B3.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B2.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B1.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	Yahtzee.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	if (B1.Visible == true) {  		if (B2.Visible == true) {  			if (B3.Visible == true) {  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B3.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B2.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B1.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	Yahtzee.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	if (B1.Visible == true) {  		if (B2.Visible == true) {  			if (B3.Visible == true) {  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B3.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B2.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B1.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	Yahtzee.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	if (B1.Visible == true) {  		if (B2.Visible == true) {  			if (B3.Visible == true) {  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B3.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B2.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B1.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	Yahtzee.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	if (B1.Visible == true) {  		if (B2.Visible == true) {  			if (B3.Visible == true) {  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B3.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B2.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B1.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	Yahtzee.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (Yahtzee.Visible == true) {  	if (B1.Visible == true) {  		if (B2.Visible == true) {  			if (B3.Visible == true) {  			}  			else {  				BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  				B3.Visible = true;  				T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  				TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  			}  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B2.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B1.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	Yahtzee.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B1.Visible == true) {  	if (B2.Visible == true) {  		if (B3.Visible == true) {  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B3.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B2.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B1.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B1.Visible == true) {  	if (B2.Visible == true) {  		if (B3.Visible == true) {  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B3.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B2.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B1.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B1.Visible == true) {  	if (B2.Visible == true) {  		if (B3.Visible == true) {  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B3.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B2.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B1.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B1.Visible == true) {  	if (B2.Visible == true) {  		if (B3.Visible == true) {  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B3.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B2.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B1.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B1.Visible == true) {  	if (B2.Visible == true) {  		if (B3.Visible == true) {  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B3.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B2.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B1.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B1.Visible == true) {  	if (B2.Visible == true) {  		if (B3.Visible == true) {  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B3.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B2.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B1.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B1.Visible == true) {  	if (B2.Visible == true) {  		if (B3.Visible == true) {  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B3.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B2.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B1.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B1.Visible == true) {  	if (B2.Visible == true) {  		if (B3.Visible == true) {  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B3.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B2.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B1.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B1.Visible == true) {  	if (B2.Visible == true) {  		if (B3.Visible == true) {  		}  		else {  			BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  			B3.Visible = true;  			T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  			TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  		}  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B2.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B1.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B2.Visible == true) {  	if (B3.Visible == true) {  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B3.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B2.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B2.Visible == true) {  	if (B3.Visible == true) {  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B3.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B2.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B2.Visible == true) {  	if (B3.Visible == true) {  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B3.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B2.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B2.Visible == true) {  	if (B3.Visible == true) {  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B3.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B2.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B2.Visible == true) {  	if (B3.Visible == true) {  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B3.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B2.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B2.Visible == true) {  	if (B3.Visible == true) {  	}  	else {  		BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  		B3.Visible = true;  		T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  		TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  	}  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B2.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B3.Visible == true) {  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B3.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B3.Visible == true) {  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B3.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (B3.Visible == true) {  }  else {  	BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  	B3.Visible = true;  	T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: BPoint.Text = (Convert.ToInt32 (BPoint.Text) + 100).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: T3.Text = (Convert.ToInt32 (T3.Text) + 100).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 100).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: T3.Text = (Convert.ToInt32 (T3.Text) + 50).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 50).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Full House") {  	House.Visible = true;  	House.Text = "25";  	T3.Text = (Convert.ToInt32 (T3.Text) + 25).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 25).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Full House") {  	House.Visible = true;  	House.Text = "25";  	T3.Text = (Convert.ToInt32 (T3.Text) + 25).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 25).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: T3.Text = (Convert.ToInt32 (T3.Text) + 25).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 25).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Small Straight") {  	Small.Visible = true;  	Small.Text = "30";  	T3.Text = (Convert.ToInt32 (T3.Text) + 30).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 30).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Small Straight") {  	Small.Visible = true;  	Small.Text = "30";  	T3.Text = (Convert.ToInt32 (T3.Text) + 30).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 30).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: T3.Text = (Convert.ToInt32 (T3.Text) + 30).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 30).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Large Straight") {  	Large.Visible = true;  	Large.Text = "40";  	T3.Text = (Convert.ToInt32 (T3.Text) + 40).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 40).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best == "Large Straight") {  	Large.Visible = true;  	Large.Text = "40";  	T3.Text = (Convert.ToInt32 (T3.Text) + 40).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 40).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: T3.Text = (Convert.ToInt32 (T3.Text) + 40).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: TGrand.Text = (Convert.ToInt32 (TGrand.Text) + 40).ToString ();  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best.StartsWith ("Digit ")) {  	int digit = Convert.ToInt32 (best.Substring (6' 1));  	Label[] locs = new Label[] {  		Aces'  		Twos'  		Threes'  		Fours'  		Fives'  		Sixes  	};  	double score = (bests * 63);  	score = (score / upper_multiplier);  	locs [digit - 1].Text = score.ToString ();  	locs [digit - 1].Visible = true;  	T1.Text = (Convert.ToInt32 (T1.Text) + score).ToString ();  	if ((Convert.ToInt32 (T1.Text) >= 63) && (Bonus.Visible == false)) {  		score = score + 35;  		Bonus.Visible = true;  	}  	T2.Text = (Convert.ToInt32 (T2.Text) + score).ToString ();  	T4.Text = (Convert.ToInt32 (T4.Text) + score).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + score).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best.StartsWith ("Digit ")) {  	int digit = Convert.ToInt32 (best.Substring (6' 1));  	Label[] locs = new Label[] {  		Aces'  		Twos'  		Threes'  		Fours'  		Fives'  		Sixes  	};  	double score = (bests * 63);  	score = (score / upper_multiplier);  	locs [digit - 1].Text = score.ToString ();  	locs [digit - 1].Visible = true;  	T1.Text = (Convert.ToInt32 (T1.Text) + score).ToString ();  	if ((Convert.ToInt32 (T1.Text) >= 63) && (Bonus.Visible == false)) {  		score = score + 35;  		Bonus.Visible = true;  	}  	T2.Text = (Convert.ToInt32 (T2.Text) + score).ToString ();  	T4.Text = (Convert.ToInt32 (T4.Text) + score).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + score).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best.StartsWith ("Digit ")) {  	int digit = Convert.ToInt32 (best.Substring (6' 1));  	Label[] locs = new Label[] {  		Aces'  		Twos'  		Threes'  		Fours'  		Fives'  		Sixes  	};  	double score = (bests * 63);  	score = (score / upper_multiplier);  	locs [digit - 1].Text = score.ToString ();  	locs [digit - 1].Visible = true;  	T1.Text = (Convert.ToInt32 (T1.Text) + score).ToString ();  	if ((Convert.ToInt32 (T1.Text) >= 63) && (Bonus.Visible == false)) {  		score = score + 35;  		Bonus.Visible = true;  	}  	T2.Text = (Convert.ToInt32 (T2.Text) + score).ToString ();  	T4.Text = (Convert.ToInt32 (T4.Text) + score).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + score).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if (best.StartsWith ("Digit ")) {  	int digit = Convert.ToInt32 (best.Substring (6' 1));  	Label[] locs = new Label[] {  		Aces'  		Twos'  		Threes'  		Fours'  		Fives'  		Sixes  	};  	double score = (bests * 63);  	score = (score / upper_multiplier);  	locs [digit - 1].Text = score.ToString ();  	locs [digit - 1].Visible = true;  	T1.Text = (Convert.ToInt32 (T1.Text) + score).ToString ();  	if ((Convert.ToInt32 (T1.Text) >= 63) && (Bonus.Visible == false)) {  		score = score + 35;  		Bonus.Visible = true;  	}  	T2.Text = (Convert.ToInt32 (T2.Text) + score).ToString ();  	T4.Text = (Convert.ToInt32 (T4.Text) + score).ToString ();  	TGrand.Text = (Convert.ToInt32 (TGrand.Text) + score).ToString ();  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if ((Convert.ToInt32 (T1.Text) >= 63) && (Bonus.Visible == false)) {  	score = score + 35;  	Bonus.Visible = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: if ((Convert.ToInt32 (T1.Text) >= 63) && (Bonus.Visible == false)) {  	score = score + 35;  	Bonus.Visible = true;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateScore,The following statement contains a magic number: score = score + 35;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	int j = ((5 * (rol - 1)) - 5) + i;  	if (kep [i] == true) {  		keep [i] = list [i];  		cl [j].BackColor = System.Drawing.SystemColors.Highlight;  		clr [j].BackColor = System.Drawing.SystemColors.Highlight;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	int j = ((5 * (rol - 1)) - 5) + i;  	if (kep [i] == true) {  		keep [i] = list [i];  		cl [j].BackColor = System.Drawing.SystemColors.Highlight;  		clr [j].BackColor = System.Drawing.SystemColors.Highlight;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	int j = ((5 * (rol - 1)) - 5) + i;  	if (kep [i] == true) {  		keep [i] = list [i];  		cl [j].BackColor = System.Drawing.SystemColors.Highlight;  		clr [j].BackColor = System.Drawing.SystemColors.Highlight;  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: try {  	double a = 54.528414604039;  	double b = 11.623547543781;  	double score = a + (b * (Math.Log (Convert.ToDouble (hscore))));  	scor = Math.Floor (score);  	if (scor > 0) {  		Q3.Text = scor.ToString () + "%";  	}  	else {  		Q3.Text = "0%";  	}  	int wid = Convert.ToInt32 ((scor / 100) * 171);  	if (wid < 5) {  		wid = 5;  	}  	W1.Width = wid;  	W1.Visible = true;  }  catch {  	Q3.Text = "0%";  	W1.Width = 3;  	W1.Visible = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: try {  	double a = 54.528414604039;  	double b = 11.623547543781;  	double score = a + (b * (Math.Log (Convert.ToDouble (hscore))));  	scor = Math.Floor (score);  	if (scor > 0) {  		Q3.Text = scor.ToString () + "%";  	}  	else {  		Q3.Text = "0%";  	}  	int wid = Convert.ToInt32 ((scor / 100) * 171);  	if (wid < 5) {  		wid = 5;  	}  	W1.Width = wid;  	W1.Visible = true;  }  catch {  	Q3.Text = "0%";  	W1.Width = 3;  	W1.Visible = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: try {  	double a = 54.528414604039;  	double b = 11.623547543781;  	double score = a + (b * (Math.Log (Convert.ToDouble (hscore))));  	scor = Math.Floor (score);  	if (scor > 0) {  		Q3.Text = scor.ToString () + "%";  	}  	else {  		Q3.Text = "0%";  	}  	int wid = Convert.ToInt32 ((scor / 100) * 171);  	if (wid < 5) {  		wid = 5;  	}  	W1.Width = wid;  	W1.Visible = true;  }  catch {  	Q3.Text = "0%";  	W1.Width = 3;  	W1.Visible = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: try {  	double a = 54.528414604039;  	double b = 11.623547543781;  	double score = a + (b * (Math.Log (Convert.ToDouble (hscore))));  	scor = Math.Floor (score);  	if (scor > 0) {  		Q3.Text = scor.ToString () + "%";  	}  	else {  		Q3.Text = "0%";  	}  	int wid = Convert.ToInt32 ((scor / 100) * 171);  	if (wid < 5) {  		wid = 5;  	}  	W1.Width = wid;  	W1.Visible = true;  }  catch {  	Q3.Text = "0%";  	W1.Width = 3;  	W1.Visible = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: try {  	double a = 54.528414604039;  	double b = 11.623547543781;  	double score = a + (b * (Math.Log (Convert.ToDouble (hscore))));  	scor = Math.Floor (score);  	if (scor > 0) {  		Q3.Text = scor.ToString () + "%";  	}  	else {  		Q3.Text = "0%";  	}  	int wid = Convert.ToInt32 ((scor / 100) * 171);  	if (wid < 5) {  		wid = 5;  	}  	W1.Width = wid;  	W1.Visible = true;  }  catch {  	Q3.Text = "0%";  	W1.Width = 3;  	W1.Visible = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: try {  	double a = 54.528414604039;  	double b = 11.623547543781;  	double score = a + (b * (Math.Log (Convert.ToDouble (hscore))));  	scor = Math.Floor (score);  	if (scor > 0) {  		Q3.Text = scor.ToString () + "%";  	}  	else {  		Q3.Text = "0%";  	}  	int wid = Convert.ToInt32 ((scor / 100) * 171);  	if (wid < 5) {  		wid = 5;  	}  	W1.Width = wid;  	W1.Visible = true;  }  catch {  	Q3.Text = "0%";  	W1.Width = 3;  	W1.Visible = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: try {  	double a = 54.528414604039;  	double b = 11.623547543781;  	double score = a + (b * (Math.Log (Convert.ToDouble (hscore))));  	scor = Math.Floor (score);  	if (scor > 0) {  		Q3.Text = scor.ToString () + "%";  	}  	else {  		Q3.Text = "0%";  	}  	int wid = Convert.ToInt32 ((scor / 100) * 171);  	if (wid < 5) {  		wid = 5;  	}  	W1.Width = wid;  	W1.Visible = true;  }  catch {  	Q3.Text = "0%";  	W1.Width = 3;  	W1.Visible = false;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: if (wid < 5) {  	wid = 5;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: if (wid < 5) {  	wid = 5;  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: wid = 5;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: W1.Width = 3;  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: if (scor < 55) {  	W1.BackColor = Color.Red;  }  else {  	if (scor > 69) {  		W1.BackColor = Color.FromArgb (0' 192' 0);  	}  	else {  		W1.BackColor = Color.FromArgb (192' 192' 0);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: if (scor < 55) {  	W1.BackColor = Color.Red;  }  else {  	if (scor > 69) {  		W1.BackColor = Color.FromArgb (0' 192' 0);  	}  	else {  		W1.BackColor = Color.FromArgb (192' 192' 0);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: if (scor < 55) {  	W1.BackColor = Color.Red;  }  else {  	if (scor > 69) {  		W1.BackColor = Color.FromArgb (0' 192' 0);  	}  	else {  		W1.BackColor = Color.FromArgb (192' 192' 0);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: if (scor < 55) {  	W1.BackColor = Color.Red;  }  else {  	if (scor > 69) {  		W1.BackColor = Color.FromArgb (0' 192' 0);  	}  	else {  		W1.BackColor = Color.FromArgb (192' 192' 0);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: if (scor < 55) {  	W1.BackColor = Color.Red;  }  else {  	if (scor > 69) {  		W1.BackColor = Color.FromArgb (0' 192' 0);  	}  	else {  		W1.BackColor = Color.FromArgb (192' 192' 0);  	}  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: if (scor > 69) {  	W1.BackColor = Color.FromArgb (0' 192' 0);  }  else {  	W1.BackColor = Color.FromArgb (192' 192' 0);  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: if (scor > 69) {  	W1.BackColor = Color.FromArgb (0' 192' 0);  }  else {  	W1.BackColor = Color.FromArgb (192' 192' 0);  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: if (scor > 69) {  	W1.BackColor = Color.FromArgb (0' 192' 0);  }  else {  	W1.BackColor = Color.FromArgb (192' 192' 0);  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: if (scor > 69) {  	W1.BackColor = Color.FromArgb (0' 192' 0);  }  else {  	W1.BackColor = Color.FromArgb (192' 192' 0);  }  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: W1.BackColor = Color.FromArgb (0' 192' 0);  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: W1.BackColor = Color.FromArgb (192' 192' 0);  
Magic Number,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,UpdateConfidence,The following statement contains a magic number: W1.BackColor = Color.FromArgb (192' 192' 0);  
Duplicate Code,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,TestArrangement,The method contains a code clone-set at the following line numbers (starting from the method definition): ((58' 79)' (100' 121))
Duplicate Code,Yahtzee,Main,C:\repos\smo-key_Yahtzee-AI\Yahtzee\Main.cs,FinalDecide,The method contains a code clone-set at the following line numbers (starting from the method definition): ((174' 199)' (247' 272))
