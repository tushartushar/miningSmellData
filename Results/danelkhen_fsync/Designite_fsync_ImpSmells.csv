Implementation smell,Namespace,Class,File,Method,Description
Complex Method,fsync,FSync,C:\repos\danelkhen_fsync\src\fsync\FSync.cs,Sync,Cyclomatic complexity of the method is 8
Long Parameter List,fsync,FSync,C:\repos\danelkhen_fsync\src\fsync\FSync.cs,Sync,The method has 7 parameters.
Long Parameter List,fsync,Program,C:\repos\danelkhen_fsync\src\fsync\Program.cs,StartMenu,The method has 5 parameters.
Long Statement,fsync,FSync,C:\repos\danelkhen_fsync\src\fsync\FSync.cs,Sync,The length of the statement  "		var x = Session.Get (t => t.SynchronizeDirectories2 (syncMode' LocalDir' RemoteDir' allowDelete' false' SynchronizationCriteria.Time' new TransferOptions { " is 155.
Long Statement,fsync,FSync,C:\repos\danelkhen_fsync\src\fsync\FSync.cs,Sync,The length of the statement  "		Console.WriteLine ("Uploads: {0} Downloads: {1} Removals: {2} Failures:{3}"' x.Uploads.Count' x.Downloads.Count' x.Removals.Count' x.Failures.Count); " is 149.
Long Statement,fsync,FileWatcher,C:\repos\danelkhen_fsync\src\fsync\FileWatcher.cs,Watcher_Renamed,The length of the statement  "	var deletedFile = WatcherEvents.Where (t => t.ChangeType == WatcherChangeTypes.Deleted && t.Name == e.Name).FirstOrDefault (); " is 126.
Long Statement,fsync,FileWatcher,C:\repos\danelkhen_fsync\src\fsync\FileWatcher.cs,Watcher_Changed,The length of the statement  "	Console.WriteLine ("Watcher_Changed {0} {1} IsFromRename:{3}"' e.ChangeType' e.Name' e.FullPath' e is RenamedEventArgs); " is 120.
Long Statement,fsync,Program,C:\repos\danelkhen_fsync\src\fsync\Program.cs,StartMenu,The length of the statement  "	var mes = FSync1.GetType ().GetMethods (BindingFlags.Instance | BindingFlags.Public | BindingFlags.DeclaredOnly).Where (t => !t.Name.StartsWith ("get_") && !t.Name.StartsWith ("set_")).ToList (); " is 195.
Long Statement,fsync,Program,C:\repos\danelkhen_fsync\src\fsync\Program.cs,StartMenu,The length of the statement  "	mes = mes.Concat (this.GetType ().GetMethods (BindingFlags.Instance | BindingFlags.Public | BindingFlags.DeclaredOnly).Where (t => !t.Name.StartsWith ("get_") && !t.Name.StartsWith ("set_"))).ToList (); " is 202.
Empty Catch Block,fsync,Program,C:\repos\danelkhen_fsync\src\fsync\Program.cs,Main,The method has an empty catch block.
Magic Number,fsync,FSync,C:\repos\danelkhen_fsync\src\fsync\FSync.cs,VerifyRemoteDir,The following statement contains a magic number: try {  	var remoteDir = session.ListDirectory (dir);  }  catch {  	try {  		session.CreateDirectory (dir);  	}  	catch {  		var parent = Path.GetDirectoryName (dir).Replace ("\\"' "/");  		if (parent.Split ('/').Length < 2)  			throw;  		VerifyRemoteDir (session' parent);  		session.CreateDirectory (dir);  	}  }  
Magic Number,fsync,FSync,C:\repos\danelkhen_fsync\src\fsync\FSync.cs,VerifyRemoteDir,The following statement contains a magic number: try {  	session.CreateDirectory (dir);  }  catch {  	var parent = Path.GetDirectoryName (dir).Replace ("\\"' "/");  	if (parent.Split ('/').Length < 2)  		throw;  	VerifyRemoteDir (session' parent);  	session.CreateDirectory (dir);  }  
Magic Number,fsync,FSync,C:\repos\danelkhen_fsync\src\fsync\FSync.cs,VerifyRemoteDir,The following statement contains a magic number: if (parent.Split ('/').Length < 2)  	throw;  
Magic Number,fsync,FileWatcher,C:\repos\danelkhen_fsync\src\fsync\FileWatcher.cs,StartRealtime,The following statement contains a magic number: IdleDetector = new IdleDetector {  	Timeout = TimeSpan.FromMilliseconds (200)'  	Idle = IdleDetector_Idle  };  
Magic Number,fsync,Program,C:\repos\danelkhen_fsync\src\fsync\Program.cs,Run,The following statement contains a magic number: for (var i = 1; i < 10; i++) {  	var fp = Config.TryGetValue ("FolderPair" + i);  	if (fp == null)  		continue;  	var fs = new FSync {  		AutoConnect = fp.Get<bool> ("AutoConnect")'  		AutoStartRealTime = fp.Get<bool> ("AutoStartRealTime")'  		Session = Session'  		Console = new FakeConsole {  			DoWriteLine = s => Console.WriteLine ("#1: {0}"' s)  		}'  		IncludeSubdirectories = fp.Get<bool> ("IncludeSubdirectories")'  		LocalDir = fp ["LocalDir"]'  		BackupDir = fp ["BackupDir"]'  		RemoteDir = fp ["RemoteDir"]'  		FilesUploaded = FSync_FilesUploaded'  	};  	FSyncs.Add (fs);  }  
Magic Number,fsync,Program,C:\repos\danelkhen_fsync\src\fsync\Program.cs,LoadConfig,The following statement contains a magic number: file.Lines ().ForEach (line =>  {  	if (line.IsNullOrEmpty ())  		return;  	if (line.StartsWith ("[") && line.EndsWith ("]")) {  		category = line.Substring (1' line.Length - 2);  		dic.Add (category' new Dictionary<string' string> ());  	}  	else {  		var tokens = line.SplitAt (line.IndexOf ("=")' true);  		dic [category].Add (tokens [0]' tokens [1]);  	}  });  
Magic Number,fsync,Program,C:\repos\danelkhen_fsync\src\fsync\Program.cs,LoadConfig,The following statement contains a magic number: if (line.StartsWith ("[") && line.EndsWith ("]")) {  	category = line.Substring (1' line.Length - 2);  	dic.Add (category' new Dictionary<string' string> ());  }  else {  	var tokens = line.SplitAt (line.IndexOf ("=")' true);  	dic [category].Add (tokens [0]' tokens [1]);  }  
Magic Number,fsync,Program,C:\repos\danelkhen_fsync\src\fsync\Program.cs,LoadConfig,The following statement contains a magic number: category = line.Substring (1' line.Length - 2);  
