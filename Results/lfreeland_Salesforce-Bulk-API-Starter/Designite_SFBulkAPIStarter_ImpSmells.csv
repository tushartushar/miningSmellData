Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SFBulkAPIStarter,Batch,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\Batch.cs,CreateBatch,Cyclomatic complexity of the method is 31
Complex Method,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,CreateAttachmentBatch,Cyclomatic complexity of the method is 11
Complex Method,SFBulkAPIStarter,Job,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\Job.cs,Create,Cyclomatic complexity of the method is 61
Long Identifier,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,CreateAttachmentBatch,The length of the parameter requestTxtFileCSVContentsBytes is 30.
Long Identifier,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,CreateAttachmentBatch,The length of the parameter attachmentFileToCompressStream is 30.
Long Statement,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,CreateJob,The length of the statement  "	jobRequestXML = String.Format (jobRequestXML' createJobRequest.OperationString' createJobRequest.Object' createJobRequest.ContentTypeString' externalField); " is 156.
Long Statement,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,CloseJob,The length of the statement  "	String closeRequestXML = @"<?xml version=""1.0"" encoding=""UTF-8""?>" + Environment.NewLine + @"<jobInfo xmlns=""http://www.force.com/2009/06/asyncapi/dataload"">" + Environment.NewLine + "<state>Closed</state>" + Environment.NewLine + "</jobInfo>"; " is 250.
Long Statement,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,CreateAttachmentBatch,The length of the statement  "			String requestUrl = "https://" + _sfService.Pod + ".salesforce.com/services/async/31.0/job/" + request.JobId + "/batch"; " is 120.
Long Statement,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,CreateBatch,The length of the statement  "	String requestUrl = "https://" + _sfService.Pod + ".salesforce.com/services/async/31.0/job/" + createBatchRequest.JobId + "/batch"; " is 131.
Long Statement,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,GetBatch,The length of the statement  "	String requestUrl = "https://" + _sfService.Pod + ".salesforce.com/services/async/31.0/job/" + jobId + "/batch/" + batchId; " is 123.
Long Statement,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,GetBatchRequest,The length of the statement  "	String requestUrl = "https://" + _sfService.Pod + ".salesforce.com/services/async/31.0/job/" + jobId + "/batch/" + batchId + "/request"; " is 136.
Long Statement,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,GetBatchResults,The length of the statement  "	String requestUrl = "https://" + _sfService.Pod + ".salesforce.com/services/async/31.0/job/" + jobId + "/batch/" + batchId + "/result"; " is 135.
Long Statement,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,GetBatchResult,The length of the statement  "	String requestUrl = "https://" + _sfService.Pod + ".salesforce.com/services/async/31.0/job/" + jobId + "/batch/" + batchId + "/result/" + resultId; " is 147.
Magic Number,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,GetCompletedJob,The following statement contains a magic number: while (job.IsDone == false) {  	Thread.Sleep (2000);  	job = job = GetJob (jobId);  }  
Magic Number,SFBulkAPIStarter,BulkApiClient,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\BulkApiClient.cs,GetCompletedJob,The following statement contains a magic number: Thread.Sleep (2000);  
Missing Default,SFBulkAPIStarter,Batch,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\Batch.cs,CreateBatch,The following switch statement is missing a default case: switch (e.Name.LocalName) {  case "id":  	batch.Id = e.Value;  	break;  case "jobId":  	batch.JobId = e.Value;  	break;  case "createdDate":  	batch.CreatedDate = DateTime.Parse (e.Value);  	break;  case "systemModstamp":  	batch.SystemModStamp = DateTime.Parse (e.Value);  	break;  case "state":  	batch.State = e.Value;  	break;  case "numberRecordsProcessed":  	batch.NumberRecordsProcessed = int.Parse (e.Value);  	break;  case "numberRecordsFailed":  	batch.NumberRecordsFailed = int.Parse (e.Value);  	break;  case "totalProcessingTime":  	batch.TotalProcessingTime = int.Parse (e.Value);  	break;  case "apiActiveProcessingTime":  	batch.ApiActiveProcessingTime = int.Parse (e.Value);  	break;  case "apexProcessingTime":  	batch.ApexProcessingTime = int.Parse (e.Value);  	break;  }  
Missing Default,SFBulkAPIStarter,Job,C:\repos\lfreeland_Salesforce-Bulk-API-Starter\src\SFBulkAPIStarter\Job.cs,Create,The following switch statement is missing a default case: switch (e.Name.LocalName) {  case "id":  	job.Id = e.Value;  	break;  case "operation":  	job.Operation = e.Value;  	break;  case "object":  	job.Object = e.Value;  	break;  case "createdById":  	job.CreatedById = e.Value;  	break;  case "createdDate":  	job.CreatedDate = DateTime.Parse (e.Value);  	break;  case "systemModstamp":  	job.SystemModStamp = DateTime.Parse (e.Value);  	break;  case "state":  	job.State = e.Value;  	break;  case "concurrencyMode":  	job.ConcurrencyMode = e.Value;  	break;  case "contentType":  	job.ContentType = e.Value;  	break;  case "numberBatchesQueued":  	job.NumberBatchesQueued = int.Parse (e.Value);  	break;  case "numberBatchesInProgress":  	job.NumberBatchesInProgress = int.Parse (e.Value);  	break;  case "numberBatchesCompleted":  	job.NumberBatchesCompleted = int.Parse (e.Value);  	break;  case "numberBatchesFailed":  	job.NumberBatchesFailed = int.Parse (e.Value);  	break;  case "numberBatchesTotal":  	job.NumberBatchesTotal = int.Parse (e.Value);  	break;  case "numberRecordsProcessed":  	job.NumberRecordsProcessed = int.Parse (e.Value);  	break;  case "numberRetries":  	job.NumberRetries = int.Parse (e.Value);  	break;  case "numberRecordsFailed":  	job.NumberRecordsFailed = int.Parse (e.Value);  	break;  case "totalProcessingTime":  	job.TotalProcessingTime = int.Parse (e.Value);  	break;  case "apiActiveProcessingTime":  	job.ApiActiveProcessingTime = int.Parse (e.Value);  	break;  case "apexProcessingTime":  	job.ApexProcessingTime = int.Parse (e.Value);  	break;  }  
