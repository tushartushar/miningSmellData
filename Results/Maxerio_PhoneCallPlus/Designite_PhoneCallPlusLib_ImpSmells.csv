Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,Cyclomatic complexity of the method is 14
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: switch (callType) {  case ECallType.Outgoing:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [5]'  					CallerID = itemSplit [1]'  					PortID = itemSplit [3]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  case ECallType.Incoming:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [1]'  					CallerID = itemSplit [3]'  					PortID = itemSplit [5]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  default:  	break;  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: switch (callType) {  case ECallType.Outgoing:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [5]'  					CallerID = itemSplit [1]'  					PortID = itemSplit [3]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  case ECallType.Incoming:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [1]'  					CallerID = itemSplit [3]'  					PortID = itemSplit [5]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  default:  	break;  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: switch (callType) {  case ECallType.Outgoing:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [5]'  					CallerID = itemSplit [1]'  					PortID = itemSplit [3]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  case ECallType.Incoming:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [1]'  					CallerID = itemSplit [3]'  					PortID = itemSplit [5]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  default:  	break;  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: switch (callType) {  case ECallType.Outgoing:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [5]'  					CallerID = itemSplit [1]'  					PortID = itemSplit [3]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  case ECallType.Incoming:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [1]'  					CallerID = itemSplit [3]'  					PortID = itemSplit [5]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  default:  	break;  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: switch (callType) {  case ECallType.Outgoing:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [5]'  					CallerID = itemSplit [1]'  					PortID = itemSplit [3]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  case ECallType.Incoming:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [1]'  					CallerID = itemSplit [3]'  					PortID = itemSplit [5]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  default:  	break;  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: switch (callType) {  case ECallType.Outgoing:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [5]'  					CallerID = itemSplit [1]'  					PortID = itemSplit [3]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  case ECallType.Incoming:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [1]'  					CallerID = itemSplit [3]'  					PortID = itemSplit [5]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  default:  	break;  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: switch (callType) {  case ECallType.Outgoing:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [5]'  					CallerID = itemSplit [1]'  					PortID = itemSplit [3]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  case ECallType.Incoming:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [1]'  					CallerID = itemSplit [3]'  					PortID = itemSplit [5]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  default:  	break;  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: switch (callType) {  case ECallType.Outgoing:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [5]'  					CallerID = itemSplit [1]'  					PortID = itemSplit [3]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  case ECallType.Incoming:  	foreach (string item in matchResult) {  		if (item.Contains ("Array")) {  			itemSplit = item.Split ('"');  			if (itemSplit.Length > 3) {  				output.Add (new PhoneCallModel {  					Time = itemSplit [1]'  					CallerID = itemSplit [3]'  					PortID = itemSplit [5]'  					Duration = itemSplit [7]  				});  			}  		}  	}  	break;  default:  	break;  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: foreach (string item in matchResult) {  	if (item.Contains ("Array")) {  		itemSplit = item.Split ('"');  		if (itemSplit.Length > 3) {  			output.Add (new PhoneCallModel {  				Time = itemSplit [5]'  				CallerID = itemSplit [1]'  				PortID = itemSplit [3]'  				Duration = itemSplit [7]  			});  		}  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: foreach (string item in matchResult) {  	if (item.Contains ("Array")) {  		itemSplit = item.Split ('"');  		if (itemSplit.Length > 3) {  			output.Add (new PhoneCallModel {  				Time = itemSplit [5]'  				CallerID = itemSplit [1]'  				PortID = itemSplit [3]'  				Duration = itemSplit [7]  			});  		}  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: foreach (string item in matchResult) {  	if (item.Contains ("Array")) {  		itemSplit = item.Split ('"');  		if (itemSplit.Length > 3) {  			output.Add (new PhoneCallModel {  				Time = itemSplit [5]'  				CallerID = itemSplit [1]'  				PortID = itemSplit [3]'  				Duration = itemSplit [7]  			});  		}  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: foreach (string item in matchResult) {  	if (item.Contains ("Array")) {  		itemSplit = item.Split ('"');  		if (itemSplit.Length > 3) {  			output.Add (new PhoneCallModel {  				Time = itemSplit [5]'  				CallerID = itemSplit [1]'  				PortID = itemSplit [3]'  				Duration = itemSplit [7]  			});  		}  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (item.Contains ("Array")) {  	itemSplit = item.Split ('"');  	if (itemSplit.Length > 3) {  		output.Add (new PhoneCallModel {  			Time = itemSplit [5]'  			CallerID = itemSplit [1]'  			PortID = itemSplit [3]'  			Duration = itemSplit [7]  		});  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (item.Contains ("Array")) {  	itemSplit = item.Split ('"');  	if (itemSplit.Length > 3) {  		output.Add (new PhoneCallModel {  			Time = itemSplit [5]'  			CallerID = itemSplit [1]'  			PortID = itemSplit [3]'  			Duration = itemSplit [7]  		});  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (item.Contains ("Array")) {  	itemSplit = item.Split ('"');  	if (itemSplit.Length > 3) {  		output.Add (new PhoneCallModel {  			Time = itemSplit [5]'  			CallerID = itemSplit [1]'  			PortID = itemSplit [3]'  			Duration = itemSplit [7]  		});  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (item.Contains ("Array")) {  	itemSplit = item.Split ('"');  	if (itemSplit.Length > 3) {  		output.Add (new PhoneCallModel {  			Time = itemSplit [5]'  			CallerID = itemSplit [1]'  			PortID = itemSplit [3]'  			Duration = itemSplit [7]  		});  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (itemSplit.Length > 3) {  	output.Add (new PhoneCallModel {  		Time = itemSplit [5]'  		CallerID = itemSplit [1]'  		PortID = itemSplit [3]'  		Duration = itemSplit [7]  	});  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (itemSplit.Length > 3) {  	output.Add (new PhoneCallModel {  		Time = itemSplit [5]'  		CallerID = itemSplit [1]'  		PortID = itemSplit [3]'  		Duration = itemSplit [7]  	});  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (itemSplit.Length > 3) {  	output.Add (new PhoneCallModel {  		Time = itemSplit [5]'  		CallerID = itemSplit [1]'  		PortID = itemSplit [3]'  		Duration = itemSplit [7]  	});  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (itemSplit.Length > 3) {  	output.Add (new PhoneCallModel {  		Time = itemSplit [5]'  		CallerID = itemSplit [1]'  		PortID = itemSplit [3]'  		Duration = itemSplit [7]  	});  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: output.Add (new PhoneCallModel {  	Time = itemSplit [5]'  	CallerID = itemSplit [1]'  	PortID = itemSplit [3]'  	Duration = itemSplit [7]  });  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: output.Add (new PhoneCallModel {  	Time = itemSplit [5]'  	CallerID = itemSplit [1]'  	PortID = itemSplit [3]'  	Duration = itemSplit [7]  });  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: output.Add (new PhoneCallModel {  	Time = itemSplit [5]'  	CallerID = itemSplit [1]'  	PortID = itemSplit [3]'  	Duration = itemSplit [7]  });  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: foreach (string item in matchResult) {  	if (item.Contains ("Array")) {  		itemSplit = item.Split ('"');  		if (itemSplit.Length > 3) {  			output.Add (new PhoneCallModel {  				Time = itemSplit [1]'  				CallerID = itemSplit [3]'  				PortID = itemSplit [5]'  				Duration = itemSplit [7]  			});  		}  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: foreach (string item in matchResult) {  	if (item.Contains ("Array")) {  		itemSplit = item.Split ('"');  		if (itemSplit.Length > 3) {  			output.Add (new PhoneCallModel {  				Time = itemSplit [1]'  				CallerID = itemSplit [3]'  				PortID = itemSplit [5]'  				Duration = itemSplit [7]  			});  		}  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: foreach (string item in matchResult) {  	if (item.Contains ("Array")) {  		itemSplit = item.Split ('"');  		if (itemSplit.Length > 3) {  			output.Add (new PhoneCallModel {  				Time = itemSplit [1]'  				CallerID = itemSplit [3]'  				PortID = itemSplit [5]'  				Duration = itemSplit [7]  			});  		}  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: foreach (string item in matchResult) {  	if (item.Contains ("Array")) {  		itemSplit = item.Split ('"');  		if (itemSplit.Length > 3) {  			output.Add (new PhoneCallModel {  				Time = itemSplit [1]'  				CallerID = itemSplit [3]'  				PortID = itemSplit [5]'  				Duration = itemSplit [7]  			});  		}  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (item.Contains ("Array")) {  	itemSplit = item.Split ('"');  	if (itemSplit.Length > 3) {  		output.Add (new PhoneCallModel {  			Time = itemSplit [1]'  			CallerID = itemSplit [3]'  			PortID = itemSplit [5]'  			Duration = itemSplit [7]  		});  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (item.Contains ("Array")) {  	itemSplit = item.Split ('"');  	if (itemSplit.Length > 3) {  		output.Add (new PhoneCallModel {  			Time = itemSplit [1]'  			CallerID = itemSplit [3]'  			PortID = itemSplit [5]'  			Duration = itemSplit [7]  		});  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (item.Contains ("Array")) {  	itemSplit = item.Split ('"');  	if (itemSplit.Length > 3) {  		output.Add (new PhoneCallModel {  			Time = itemSplit [1]'  			CallerID = itemSplit [3]'  			PortID = itemSplit [5]'  			Duration = itemSplit [7]  		});  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (item.Contains ("Array")) {  	itemSplit = item.Split ('"');  	if (itemSplit.Length > 3) {  		output.Add (new PhoneCallModel {  			Time = itemSplit [1]'  			CallerID = itemSplit [3]'  			PortID = itemSplit [5]'  			Duration = itemSplit [7]  		});  	}  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (itemSplit.Length > 3) {  	output.Add (new PhoneCallModel {  		Time = itemSplit [1]'  		CallerID = itemSplit [3]'  		PortID = itemSplit [5]'  		Duration = itemSplit [7]  	});  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (itemSplit.Length > 3) {  	output.Add (new PhoneCallModel {  		Time = itemSplit [1]'  		CallerID = itemSplit [3]'  		PortID = itemSplit [5]'  		Duration = itemSplit [7]  	});  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (itemSplit.Length > 3) {  	output.Add (new PhoneCallModel {  		Time = itemSplit [1]'  		CallerID = itemSplit [3]'  		PortID = itemSplit [5]'  		Duration = itemSplit [7]  	});  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: if (itemSplit.Length > 3) {  	output.Add (new PhoneCallModel {  		Time = itemSplit [1]'  		CallerID = itemSplit [3]'  		PortID = itemSplit [5]'  		Duration = itemSplit [7]  	});  }  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: output.Add (new PhoneCallModel {  	Time = itemSplit [1]'  	CallerID = itemSplit [3]'  	PortID = itemSplit [5]'  	Duration = itemSplit [7]  });  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: output.Add (new PhoneCallModel {  	Time = itemSplit [1]'  	CallerID = itemSplit [3]'  	PortID = itemSplit [5]'  	Duration = itemSplit [7]  });  
Magic Number,PhoneCallPlusLib.Parser,PhoneCallParser,C:\repos\Maxerio_PhoneCallPlus\PhoneCallPlusLib\PhoneCallPlusLib\Parser\PhoneCallParser.cs,Parse,The following statement contains a magic number: output.Add (new PhoneCallModel {  	Time = itemSplit [1]'  	CallerID = itemSplit [3]'  	PortID = itemSplit [5]'  	Duration = itemSplit [7]  });  
