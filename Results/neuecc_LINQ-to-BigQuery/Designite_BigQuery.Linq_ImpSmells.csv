Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BigQuery.Linq,Deserializer,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\Deserializer.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,BigQuery.Linq,Deserializer<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\Deserializer.cs,Deserialize,Cyclomatic complexity of the method is 10
Complex Method,BigQuery.Linq,DataTypeUtility,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\DataType.cs,ToDataType,Cyclomatic complexity of the method is 11
Complex Method,BigQuery.Linq,DataTypeFormatter,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\DataType.cs,Format,Cyclomatic complexity of the method is 12
Complex Method,BigQuery.Linq,BigQueryTranslateVisitor,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryTranslateVisitor.cs,FormatIfExprIsDateTime,Cyclomatic complexity of the method is 8
Complex Method,BigQuery.Linq,BigQueryTranslateVisitor,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryTranslateVisitor.cs,VisitBinary,Cyclomatic complexity of the method is 21
Complex Method,BigQuery.Linq,BigQueryTranslateVisitor,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryTranslateVisitor.cs,VisitMember,Cyclomatic complexity of the method is 14
Complex Method,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,Cyclomatic complexity of the method is 9
Complex Method,BigQuery.Linq,ExpressionHelper,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\ReflectionAccessor.cs,GetValue,Cyclomatic complexity of the method is 8
Complex Method,BigQuery.Linq.Query,JoinBigQueryable<TOuter;TInner;TResult>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Query\BigQueryable.Join.cs,BuildQueryString,Cyclomatic complexity of the method is 15
Complex Method,BigQuery.Linq.Query,TableDecoratorBigQueryable<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Query\BigQueryable.TableDecorator.cs,GetTableName,Cyclomatic complexity of the method is 10
Long Parameter List,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,Join,The method has 5 parameters. Parameters: source' joinType' joinTable' aliasSelector' joinCondition
Long Parameter List,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,Join,The method has 5 parameters. Parameters: source' joinType' joinTable' aliasSelector' joinCondition
Long Parameter List,BigQuery.Linq,DeserializerRowsParser,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\DeserializerRowsParser.cs,Parse,The method has 5 parameters. Parameters: fallbacks' isConvertResultUtcToLocalTime' schema' rows' isDynamic
Long Parameter List,BigQuery.Linq,IRowsParser,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\IRowsParser.cs,Parse,The method has 5 parameters. Parameters: fallbacks' isConvertResultUtcToLocalTime' schema' rows' isDynamic
Long Parameter List,BigQuery.Linq,FullWindowFunction<TSource;TResult;TPartitionKey>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Functions\BqFunc.Window.cs,FullWindowFunction,The method has 5 parameters. Parameters: methodName' argument' partitionKeySelector' orderKeySelector' isDescending
Long Parameter List,BigQuery.Linq,MetaTable,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\MetaTable.cs,CreateTable,The method has 5 parameters. Parameters: service' fields' description' expirationTime' friendlyName
Long Parameter List,BigQuery.Linq,MetaTable,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\MetaTable.cs,CreateTableAsync,The method has 5 parameters. Parameters: service' fields' description' expirationTime' friendlyName
Long Parameter List,BigQuery.Linq,MetaTable,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\MetaTable.cs,InsertAllAsync,The method has 5 parameters. Parameters: service' data' retryStrategy' insertIdSelector' serializerSettings
Long Parameter List,BigQuery.Linq,QueryResponse<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\QueryResponse.cs,QueryResponse,The method has 6 parameters. Parameters: context' query' executionTime' queryResponse' isDynamic' rowsParser
Long Parameter List,BigQuery.Linq,QueryResponse<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\QueryResponse.cs,QueryResponse,The method has 6 parameters. Parameters: context' query' executionTime' queryResponse' isDynamic' rowsParser
Long Parameter List,BigQuery.Linq,QueryResponse<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\QueryResponse.cs,QueryResponse,The method has 15 parameters. Parameters: context' query' executionTime' isDynamic' rowsParser' rows' schema' cacheHit' eTag' kind' pageToken' totalBytesProcessed' totalRows' jobComplete' jobReference
Long Parameter List,BigQuery.Linq,QueryResponse<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\QueryResponse.cs,CreateNextPageRequest,The method has 5 parameters. Parameters: context' jobComplete' jobReference' pageToken' hasNextPage
Long Parameter List,BigQuery.Linq.Query,JoinBigQueryable<TOuter;TInner;TResult>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Query\BigQueryable.Join.cs,JoinBigQueryable,The method has 7 parameters. Parameters: parent' joinType' joinTableName' joinTable' joinFlattenTable' aliasSelector' joinCondition
Long Parameter List,BigQuery.Linq.Query,TableDecoratorBigQueryable<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Query\BigQueryable.TableDecorator.cs,TableDecoratorBigQueryable,The method has 6 parameters. Parameters: parent' type' absoluteTime1' absoluteTime2' relativeTime1' relativeTime2
Long Identifier,BigQuery.Linq,Deserializer,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\Deserializer.cs,,The length of the parameter ExtractAnonymousFieldNameRegex is 30.
Long Statement,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,WithSnapshot,The length of the statement  "            return new TableDecoratorBigQueryable<T>(source' DecorateType.Snapshot' absoluteTime1: TableDecoratorBigQueryable<T>.Zero); " is 123.
Long Statement,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,WithRange,The length of the statement  "            return new TableDecoratorBigQueryable<T>(source' DecorateType.Range' absoluteTime1: absoluteTimeFrom' absoluteTime2: absoluteTimeTo); " is 133.
Long Statement,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,WithRange,The length of the statement  "            return new TableDecoratorBigQueryable<T>(source' DecorateType.Range' relativeTime1: relativeTimeFrom' relativeTime2: relativeTimeTo); " is 133.
Long Statement,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,Join,The length of the statement  "            return new JoinBigQueryable<TOuter' TInner' TResult>(source' InternalJoinType.Inner' null' joinTable' null' aliasSelector' joinCondition); " is 138.
Long Statement,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,Join,The length of the statement  "                    return new JoinBigQueryable<TOuter' TInner' TResult>(source' InternalJoinType.Inner' null' null' flatten' aliasSelector' joinCondition); " is 136.
Long Statement,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,Join,The length of the statement  "            return new JoinBigQueryable<TOuter' TInner' TResult>(source' InternalJoinType.Inner' tb.GetTableName()' null' null' aliasSelector' joinCondition); " is 146.
Long Statement,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,Join,The length of the statement  "            return new JoinBigQueryable<TOuter' TInner' TResult>(source' (InternalJoinType)joinType' null' joinTable' null' aliasSelector' joinCondition); " is 142.
Long Statement,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,Join,The length of the statement  "                    return new JoinBigQueryable<TOuter' TInner' TResult>(source' (InternalJoinType)joinType' null' null' flatten' aliasSelector' joinCondition); " is 140.
Long Statement,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,Join,The length of the statement  "            return new JoinBigQueryable<TOuter' TInner' TResult>(source' (InternalJoinType)joinType' tb.GetTableName()' null' null' aliasSelector' joinCondition); " is 150.
Long Statement,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,JoinCross,The length of the statement  "            return new JoinBigQueryable<TOuter' TInner' TResult>(source' (each ? InternalJoinType.CrossEach : InternalJoinType.Cross)' null' joinTable' null' aliasSelector' null); " is 167.
Long Statement,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,JoinCross,The length of the statement  "                    return new JoinBigQueryable<TOuter' TInner' TResult>(source' (each ? InternalJoinType.CrossEach : InternalJoinType.Cross)' null' null' flatten' aliasSelector' null); " is 165.
Long Statement,BigQuery.Linq,BigQueryableQueryChainExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryable.cs,JoinCross,The length of the statement  "            return new JoinBigQueryable<TOuter' TInner' TResult>(source' (each ? InternalJoinType.CrossEach : InternalJoinType.Cross)' tb.GetTableName()' null' null' aliasSelector' null); " is 175.
Long Statement,BigQuery.Linq,MetaTableSchema,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\MetaTableSchema.cs,BuildCSharpClasses,The length of the statement  "            return new[] { new BuildCodeResult { ClassName = className' Code = result' IsTableName = isTable' IsTablePrefix = !isTable' MetaTableSchema = this } } " is 150.
Long Statement,BigQuery.Linq,MetaTableSchema,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\MetaTableSchema.cs,ToJsonSchema,The length of the statement  "                jw.WritePropertyName("id"); jw.WriteValue(TableInfo.project_id + ":" + TableInfo.dataset_id + "." + TableInfo.table_id); " is 120.
Long Statement,BigQuery.Linq,Deserializer,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\Deserializer.cs,Parse,The length of the statement  "                    throw new InvalidOperationException("Deserializer can't need support record type. If you encount this error' please write to GitHub issues."); " is 142.
Long Statement,BigQuery.Linq,Deserializer<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\Deserializer.cs,Deserialize,The length of the statement  "                    : typeof(T).IsNullable() ? Convert.ChangeType(parsedValue' typeof(T).GetGenericArguments()[0]' CultureInfo.InvariantCulture) " is 124.
Long Statement,BigQuery.Linq,Deserializer<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\Deserializer.cs,Deserialize,The length of the statement  "                          : ((propertyInfo.PropertyType == typeof(DateTime)) || (propertyInfo.PropertyType == typeof(DateTime?))) ? ((DateTimeOffset)parsedValue).UtcDateTime " is 147.
Long Statement,BigQuery.Linq,Deserializer<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\Deserializer.cs,Deserialize,The length of the statement  "                          : propertyInfo.PropertyType.IsNullable() ? Convert.ChangeType(parsedValue' propertyInfo.PropertyType.GetGenericArguments()[0]' CultureInfo.InvariantCulture) " is 156.
Long Statement,BigQuery.Linq,BqFunc,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Functions\BqFunc.Window.cs,Lag,The length of the statement  "            return new FirstWindowFunction<T' TColumn>("LAG"' arg1 + "' " + offset + "' " + DataTypeFormatter.Format(defaultValue)); " is 120.
Long Statement,BigQuery.Linq,BqFunc,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Functions\BqFunc.Window.cs,Lag,The length of the statement  "            return new FirstWindowFunction<T' TColumn>("LAG"' arg1 + "' " + offset + "' " + DataTypeFormatter.Format(defaultValue)); " is 120.
Long Statement,BigQuery.Linq,BqFunc,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Functions\BqFunc.Window.cs,Lead,The length of the statement  "            return new FirstWindowFunction<T' TColumn>("LEAD"' arg1 + "' " + offset + "' " + DataTypeFormatter.Format(defaultValue)); " is 121.
Long Statement,BigQuery.Linq,BqFunc,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Functions\BqFunc.Window.cs,Lead,The length of the statement  "            return new FirstWindowFunction<T' TColumn>("LEAD"' arg1 + "' " + offset + "' " + DataTypeFormatter.Format(defaultValue)); " is 121.
Long Statement,BigQuery.Linq,SecondWindowFunction<TSource;TResult;TPartitionKey>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Functions\BqFunc.Window.cs,OrderBy,The length of the statement  "            return new FullWindowFunction<TSource' TResult' TPartitionKey>(methodName' argument' partitionKeySelector' keySelector' false); " is 127.
Long Statement,BigQuery.Linq,SecondWindowFunction<TSource;TResult;TPartitionKey>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Functions\BqFunc.Window.cs,OrderByDescending,The length of the statement  "            return new FullWindowFunction<TSource' TResult' TPartitionKey>(methodName' argument' partitionKeySelector' keySelector' true); " is 126.
Long Statement,BigQuery.Linq,MetaTable,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\MetaTable.cs,ToString,The length of the statement  "            var time = string.Format("Created:{0}' LastModified:{1}"' creation_time.FromTimestampMilliSeconds()' last_modified_time.FromTimestampMilliSeconds()); " is 149.
Long Statement,BigQuery.Linq,BigQueryContext,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryContext.cs,BuildRequest,The length of the statement  "                throw new InvalidOperationException("BigQueryService is null. Please set BigQueryService and ProjectId on constructor."); " is 121.
Long Statement,BigQuery.Linq,BigQueryContext,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryContext.cs,Run,The length of the statement  "                throw new TimeoutException("Job is uncompleted maybe timeout' you can change QueryContext.TimeoutMs. ExecutionTime:" + sw.Elapsed); " is 131.
Long Statement,BigQuery.Linq,BigQueryContext,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryContext.cs,RunAsync,The length of the statement  "                throw new TimeoutException("Job is uncompleted maybe timeout' you can change QueryContext.TimeoutMs. ExecutionTime:" + sw.Elapsed); " is 131.
Long Statement,BigQuery.Linq,BigQueryContext,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryContext.cs,RunDry,The length of the statement  "                throw new TimeoutException("Job is uncompleted maybe timeout' you can change QueryContext.TimeoutMs. ExecutionTime:" + sw.Elapsed); " is 131.
Long Statement,BigQuery.Linq,BigQueryContext,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryContext.cs,Run,The length of the statement  "                throw new TimeoutException("Job is uncompleted maybe timeout' you can change QueryContext.TimeoutMs. ExecutionTime:" + sw.Elapsed); " is 131.
Long Statement,BigQuery.Linq,BigQueryContext,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryContext.cs,RunAsync,The length of the statement  "                throw new TimeoutException("Job is uncompleted maybe timeout' you can change QueryContext.TimeoutMs. ExecutionTime:" + sw.Elapsed); " is 131.
Long Statement,BigQuery.Linq,BigQueryContext,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryContext.cs,RunDry,The length of the statement  "                throw new TimeoutException("Job is uncompleted maybe timeout' you can change QueryContext.TimeoutMs. ExecutionTime:" + sw.Elapsed); " is 131.
Long Statement,BigQuery.Linq,BigQueryTranslateVisitor,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryTranslateVisitor.cs,VisitMethodCall,The length of the statement  "            if (attr == null) throw new InvalidOperationException("Not support method:" + node.Method.DeclaringType.Name + "." + node.Method.Name + " Method can only call BigQuery.Linq.Functions.*"); " is 187.
Long Statement,BigQuery.Linq.Query,FromBigQueryable<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Query\BigQueryable.From.cs,BuildQueryStringWithAlias,The length of the statement  "            return Indent(depth) + "FROM" + Environment.NewLine + Indent(depth + 1) + string.Join("' "' tableNames) + " AS " + aliasName.EscapeBq(); " is 136.
Long Statement,BigQuery.Linq.Query,FromDateRangeBigQueryable<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Query\BigQueryable.From.cs,BuildQueryStringWithAlias,The length of the statement  "            return Indent(depth) + "FROM" + Environment.NewLine + Indent(depth + 1) + RangeFormat() + " AS " + aliasName.EscapeBq(); " is 120.
Long Statement,BigQuery.Linq.Query,FromDateRangeBigQueryable<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Query\BigQueryable.From.cs,RangeFormat,The length of the statement  "                return string.Format("TABLE_DATE_RANGE({0}' TIMESTAMP('{1}')' TIMESTAMP('{2}'))"' prefix' timestampFrom.ToString("yyyy-MM-dd")' timestampTo.ToString("yyyy-MM-dd")); " is 164.
Long Statement,BigQuery.Linq.Query,FromDateRangeStrictBigQueryable<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Query\BigQueryable.From.cs,BuildQueryStringWithAlias,The length of the statement  "            return Indent(depth) + "FROM" + Environment.NewLine + Indent(depth + 1) + RangeFormat() + " AS " + aliasName.EscapeBq(); " is 120.
Long Statement,BigQuery.Linq.Query,FromDateRangeStrictBigQueryable<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Query\BigQueryable.From.cs,RangeFormat,The length of the statement  "                return string.Format("TABLE_DATE_RANGE_STRICT({0}' TIMESTAMP('{1}')' TIMESTAMP('{2}'))"' prefix' timestampFrom.ToString("yyyy-MM-dd")' timestampTo.ToString("yyyy-MM-dd")); " is 171.
Long Statement,BigQuery.Linq.Query,FromTableQueryBigQueryable<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Query\BigQueryable.From.cs,BuildQueryStringWithAlias,The length of the statement  "            return Indent(depth) + "FROM" + Environment.NewLine + Indent(depth + 1) + QueryFormat() + " AS " + aliasName.EscapeBq(); " is 120.
Long Statement,BigQuery.Linq.Query,SubqueryBigQueryable<T>,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Query\BigQueryable.From.cs,BuildQueryStringWithAlias,The length of the statement  "                throw new InvalidOperationException("JOIN cannot be applied directly to a table union or to a table wildcard function. Consider wrapping the table union or table wildcard function in a subquery (e.g.' SELECT *)."); " is 214.
Magic Number,BigQuery.Linq,MetaTableSchema,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\MetaTableSchema.cs,ToJsonSchema,The following statement contains a magic number: jw.WriteValue((TableInfo.type == 2) ? "VIEW" : "TABLE");
Magic Number,BigQuery.Linq,Deserializer,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\Deserializer.cs,Parse,The following statement contains a magic number: switch (type)              {                  case "STRING":                      return value;                  case "INTEGER":                      return long.Parse(value' CultureInfo.InvariantCulture);                  case "FLOAT":                      return double.Parse(value' CultureInfo.InvariantCulture);                  case "BOOLEAN":                      return bool.Parse(value);                  case "TIMESTAMP":                      var v = double.Parse(value' CultureInfo.InvariantCulture).ToString(CultureInfo.InvariantCulture);                      var xs = v.Split('.');                      var intergralPart = xs[0];                      var decimalPart = (xs.Length == 1)                          ? "000000"                          : xs[1].Substring(0' Math.Min(xs[1].Length' 6)).PadRight(6' '0'); // Truncate Len:6                      var l = long.Parse(intergralPart + decimalPart' CultureInfo.InvariantCulture);                      return DateTimeExtensions.FromBigQueryTimestamp(l);                  case "RECORD":                      throw new InvalidOperationException("Deserializer can't need support record type. If you encount this error' please write to GitHub issues.");                  default:                      throw new InvalidOperationException("UNKNOWN TYPE:" + type);              }
Magic Number,BigQuery.Linq,Deserializer,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\Deserializer.cs,Parse,The following statement contains a magic number: switch (type)              {                  case "STRING":                      return value;                  case "INTEGER":                      return long.Parse(value' CultureInfo.InvariantCulture);                  case "FLOAT":                      return double.Parse(value' CultureInfo.InvariantCulture);                  case "BOOLEAN":                      return bool.Parse(value);                  case "TIMESTAMP":                      var v = double.Parse(value' CultureInfo.InvariantCulture).ToString(CultureInfo.InvariantCulture);                      var xs = v.Split('.');                      var intergralPart = xs[0];                      var decimalPart = (xs.Length == 1)                          ? "000000"                          : xs[1].Substring(0' Math.Min(xs[1].Length' 6)).PadRight(6' '0'); // Truncate Len:6                      var l = long.Parse(intergralPart + decimalPart' CultureInfo.InvariantCulture);                      return DateTimeExtensions.FromBigQueryTimestamp(l);                  case "RECORD":                      throw new InvalidOperationException("Deserializer can't need support record type. If you encount this error' please write to GitHub issues.");                  default:                      throw new InvalidOperationException("UNKNOWN TYPE:" + type);              }
Magic Number,BigQuery.Linq,RegexpReplaceFormatter,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Functions\BqFunc.RegularExpression.cs,Format,The following statement contains a magic number: var expr3 = innnerTranslator.VisitAndClearBuffer(node.Arguments[2]);
Magic Number,BigQuery.Linq,DateAddFormatter,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Functions\BqFunc.DateAndTime.cs,Format,The following statement contains a magic number: var intervalUnit = ((IntervalUnit)(node.Arguments[2] as ConstantExpression).Value).ToString().ToUpper();
Magic Number,BigQuery.Linq,BetweenFormatter,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Functions\BqFunc.Comparison.cs,Format,The following statement contains a magic number: var expr3 = innerTranslator.VisitAndClearBuffer(node.Arguments[2]);
Magic Number,BigQuery.Linq,BigQueryContext,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryContext.cs,BigQueryContext,The following statement contains a magic number: this.IndentSize = 2;
Magic Number,BigQuery.Linq,BigQueryContext,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryContext.cs,GetFastTableSchemasAsync,The following statement contains a magic number: var tables = GetAllTableInfo(dataset)                  .Select(x =>                  {                      var match = Regex.Match(x.ToFullTableName()' @"(.*)(\d{8})]$");                      if (match.Success && x.type != 2)                      {                          return new                          {                              info = x'                              prefix = match.Groups[1].Value + "]"'                              day = int.Parse(match.Groups[2].Value)                          };                      }                      else                      {                          return new { info = x' prefix = default(string)' day = default(int) };                      }                  })                  .GroupBy(x => x.prefix ?? x.info.ToFullTableName())                  .Select(async xs =>                  {                      var orderedTable = xs.OrderByDescending(x => x.day).ToArray();                      var targetTable = orderedTable.First();                        var schema = await targetTable.info.GetTableSchemaAsync(BigQueryService).ConfigureAwait(false);                        if (orderedTable.Length == 1)                      {                          return new GroupedMetaTableSchema                          {                              MetaTableSchemas = new[] { schema }'                              IsGrouped = false'                          };                      }                      else                      {                          return new GroupedMetaTableSchema                          {                              MetaTableSchemas = orderedTable.Select(x => new MetaTableSchema(x.info' schema.Fields)).ToArray()'                              IsGrouped = true'                              TablePrefix = targetTable.prefix'                              ShortTablePrefix = Regex.Match(targetTable.info.table_id' @"(.*)(\d{8})$").Groups[1].Value'                          };                      }                  });
Magic Number,BigQuery.Linq,BigQueryContext,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\BigQueryContext.cs,GetFastTableSchemasAsync,The following statement contains a magic number: var tables = GetAllTableInfo(dataset)                  .Select(x =>                  {                      var match = Regex.Match(x.ToFullTableName()' @"(.*)(\d{8})]$");                      if (match.Success && x.type != 2)                      {                          return new                          {                              info = x'                              prefix = match.Groups[1].Value + "]"'                              day = int.Parse(match.Groups[2].Value)                          };                      }                      else                      {                          return new { info = x' prefix = default(string)' day = default(int) };                      }                  })                  .GroupBy(x => x.prefix ?? x.info.ToFullTableName())                  .Select(async xs =>                  {                      var orderedTable = xs.OrderByDescending(x => x.day).ToArray();                      var targetTable = orderedTable.First();                        var schema = await targetTable.info.GetTableSchemaAsync(BigQueryService).ConfigureAwait(false);                        if (orderedTable.Length == 1)                      {                          return new GroupedMetaTableSchema                          {                              MetaTableSchemas = new[] { schema }'                              IsGrouped = false'                          };                      }                      else                      {                          return new GroupedMetaTableSchema                          {                              MetaTableSchemas = orderedTable.Select(x => new MetaTableSchema(x.info' schema.Fields)).ToArray()'                              IsGrouped = true'                              TablePrefix = targetTable.prefix'                              ShortTablePrefix = Regex.Match(targetTable.info.table_id' @"(.*)(\d{8})$").Groups[1].Value'                          };                      }                  });
Magic Number,BigQuery.Linq,DateTimeExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\DateTimeExtensions.cs,ToBigQueryTimestamp,The following statement contains a magic number: return (long)(target - unixEpoch).TotalMilliseconds * 1000;
Magic Number,BigQuery.Linq,DateTimeExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\DateTimeExtensions.cs,ToBigQueryTimestamp,The following statement contains a magic number: return (long)(target - unixEpochOffset).TotalMilliseconds * 1000;
Magic Number,BigQuery.Linq,DateTimeExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\DateTimeExtensions.cs,FromBigQueryTimestamp,The following statement contains a magic number: var seconds = Math.Round(((double)timestamp / 1000));
Magic Number,BigQuery.Linq,DateTimeExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\DateTimeExtensions.cs,FromBigQueryTimestamp,The following statement contains a magic number: var seconds = Math.Round(((double)timestamp / 1000));
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes <= 1024
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes = bytes / 1024;
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes <= 1024
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes = bytes / 1024;
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes <= 1024
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes = bytes / 1024;
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes <= 1024
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes = bytes / 1024;
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes <= 1024
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes = bytes / 1024;
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes <= 1024
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes = bytes / 1024;
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes <= 1024
Magic Number,BigQuery.Linq,LongExtensions,C:\research\architectureSmells\repos\neuecc_LINQ-to-BigQuery\BigQuery.Linq\Utils\LongExtensions.cs,ToHumanReadableSize,The following statement contains a magic number: bytes = bytes / 1024;
