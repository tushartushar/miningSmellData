Implementation smell,Namespace,Class,File,Method,Description
Long Method,SaintCoinach.Libra,Item,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Libra\Item.cs,Parse,The method has 116 lines of code.
Complex Method,SaintCoinach,Formatter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.Formatter.cs,Format,Cyclomatic complexity of the method is 10
Complex Method,SaintCoinach.Xiv,ItemComparer,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemComparer.cs,Compare,Cyclomatic complexity of the method is 10
Complex Method,SaintCoinach.Xiv,Recipe,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Recipe.cs,BuildIngredients,Cyclomatic complexity of the method is 8
Complex Method,SaintCoinach.Ex.Relational.Update,SheetUpdater,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\Relational\Update\SheetUpdater.cs,ProcessDefinitionMatches,Cyclomatic complexity of the method is 10
Complex Method,SaintCoinach.Libra,BNpcName,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Libra\BNpcName.cs,ParseRegions,Cyclomatic complexity of the method is 10
Complex Method,SaintCoinach.Libra,ENpcResident,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Libra\ENpcResident.cs,ParseCoordinate,Cyclomatic complexity of the method is 10
Complex Method,SaintCoinach.Libra,ENpcResident,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Libra\ENpcResident.cs,ParseShops,Cyclomatic complexity of the method is 13
Complex Method,SaintCoinach.Libra,Item,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Libra\Item.cs,ParseAction,Cyclomatic complexity of the method is 9
Complex Method,SaintCoinach.Libra,Item,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Libra\Item.cs,ParseSeriesBonus,Cyclomatic complexity of the method is 9
Complex Method,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheetWithAttributive,Cyclomatic complexity of the method is 9
Complex Method,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EqualsEx,Cyclomatic complexity of the method is 8
Complex Method,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,TryConvert,Cyclomatic complexity of the method is 9
Complex Method,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,TryConvert,Cyclomatic complexity of the method is 10
Complex Method,SaintCoinach.Xiv.Collections,Enumerator,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Collections\ClassJobActionCollection.cs,MoveNext,Cyclomatic complexity of the method is 9
Long Parameter List,SaintCoinach,Formatter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.Formatter.cs,TryFinishSequence,The method has 5 parameters. Parameters: dateTime' stringBuilder' specifier' count' formatProvider
Long Parameter List,SaintCoinach.Xiv,Listing,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\FccShop.cs,Listing,The method has 5 parameters. Parameters: shop' rewardItem' costItem' costCount' requiredFcRank
Long Parameter List,SaintCoinach.Xiv,QuestRewards,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\QuestRewards.cs,BuildItemGroup,The method has 5 parameters. Parameters: type' itemPrefix' countPrefix' stainPrefix' count
Long Parameter List,SaintCoinach.Ex.Relational.Update,RelationUpdater,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\Relational\Update\RelationUpdater.cs,RelationUpdater,The method has 5 parameters. Parameters: previousPacks' previousDefinition' updatedPacks' updatedVersion' progress
Long Parameter List,SaintCoinach.IO,Hash,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\Hash.cs,Compute,The method has 5 parameters. Parameters: table' seed' buffer' start' size
Long Parameter List,SaintCoinach.Ex.Relational.Update.Changes,FieldChanged,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\Relational\Update\Changes\FieldChanged.cs,FieldChanged,The method has 6 parameters. Parameters: sheetName' language' columnName' row' previousVal' updatedValue
Long Parameter List,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,DecodeGenericElement,The method has 5 parameters. Parameters: input' tag' length' argCount' hasContent
Long Parameter List,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,DecodeGenericElementWithVariableArguments,The method has 5 parameters. Parameters: input' tag' length' minCount' maxCount
Long Parameter List,SaintCoinach.Text.Nodes,IfEqualsElement,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\Nodes\IfEqualsElement.cs,IfEqualsElement,The method has 5 parameters. Parameters: tag' leftValue' rightValue' trueValue' falseValue
Long Statement,SaintCoinach,ARealmReversed,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\ARealmReversed.cs,Setup,The length of the statement  "                System.Diagnostics.Trace.WriteLine(string.Format("Definition and game version mismatch ({0} != {1})"' def.Version' GameVersion)); " is 129.
Long Statement,SaintCoinach.Xiv,ENpc,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ENpc.cs,BuildLocations,The length of the statement  "                        if (!levelLocations.Any(l => Math.Abs(l.MapX - c.X) < 1 && Math.Abs(l.MapY - c.Y) < 1 && (l.Map.LocationPlaceName == placeName || l.Map.PlaceName == placeName || l.Map.RegionPlaceName == placeName))) " is 199.
Long Statement,SaintCoinach.Xiv,EquipSlot,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\EquipSlot.cs,GetModel,The length of the statement  "            while (!packs.TryGetFile(string.Format(helper.ModelFileFormat' key.Value1' key.Value2' key.Value3' key.Value4' characterType)' out modelBase) && CharacterTypeFallback.TryGetValue(characterType' out characterType)) { } " is 217.
Long Statement,SaintCoinach.Xiv,Map,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Map.cs,MultiplyBlend,The length of the statement  "                    using (var tempImage = new Bitmap(image.Width' image.Height' image.Width * BytesPerPixel' PixelFormat.Format32bppArgb' ptr)) " is 124.
Long Statement,SaintCoinach.Xiv,XivCollection,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\XivCollection.cs,BuildSheetToTypeMap,The length of the statement  "            var attrTypes = allTypes.Select(t => new { Type = t' Attr = t.GetCustomAttribute<XivSheetAttribute>() }).Where(t => t.Attr != null); " is 132.
Long Statement,SaintCoinach.Ex.Relational.Update,SheetUpdater,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\Relational\Update\SheetUpdater.cs,ProcessDefinitionMatches,The length of the statement  "                    if(match.Value > bestMatchConfidence || (match.Value == bestMatchConfidence && match.Key == updater.Key.DataDefinition.Index)) { " is 128.
Long Statement,SaintCoinach.Ex.Relational.Update,SheetUpdater,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\Relational\Update\SheetUpdater.cs,ProcessDefinitionMatches,The length of the statement  "                        _ChangeLog.Add(new DefinitionRemoved(_PreviousDefinition.Name' updater.Key.DataDefinition.Index' bestMatchIndex' bestMatchConfidence)); " is 135.
Long Statement,SaintCoinach.Ex.Relational.Update,SheetUpdater,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\Relational\Update\SheetUpdater.cs,ProcessColumnMatches,The length of the statement  "                        string.Join("' "' bestGroup.Matches.Select(m => string.Format("{0} @ {1}"' m.Key.DataDefinition.GetName(m.Key.DataDefinition.Index)' m.Key.DataDefinition.Index)))); " is 164.
Long Statement,SaintCoinach.Ex.Relational.Update,SheetUpdater,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\Relational\Update\SheetUpdater.cs,ProcessLeftovers,The length of the statement  "                var remainingMatches = updater.Value.Where(r => IsUnusedColumnRange(r.Key' updater.Key.DataDefinition.Length)).OrderByDescending(m => m.Value).ToArray(); " is 153.
Long Statement,SaintCoinach.Graphics,Material,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\Material.cs,Build,The length of the statement  "            this.TextureParameters = buffer.ToStructures<MaterialTextureParameter>(MetadataHeader.ParameterMappingCount' ref offset); " is 121.
Long Statement,SaintCoinach.Libra,JsonReaderExtensions,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Libra\JsonReaderExtensions.cs,ReadSingle,The length of the statement  "            if (r.TokenType != JsonToken.Integer && r.TokenType != JsonToken.String && r.TokenType != JsonToken.Float) throw new InvalidOperationException(); " is 145.
Long Statement,SaintCoinach.Libra,JsonReaderExtensions,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Libra\JsonReaderExtensions.cs,ReadSingleArray,The length of the statement  "                if (r.TokenType != JsonToken.Integer && r.TokenType != JsonToken.String && r.TokenType != JsonToken.Float) throw new InvalidOperationException(); " is 145.
Long Statement,SaintCoinach.Sound,ScdOggEntry,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdOggEntry.cs,Decode,The length of the statement  "            if (cryptType != ScdOggCryptType.None && cryptType != ScdOggCryptType.FullXorUsingTable && cryptType != ScdOggCryptType.VorbisHeaderXor) " is 136.
Long Statement,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateDefaultGenericElement,The length of the statement  "                items.Add(new SurroundedExpression(StringTokens.ArgumentsOpen' new ExpressionCollection(element.Arguments.Select(_ => _.TryEvaluate(parameters))) { Separator = StringTokens.ArgumentsSeperator }' StringTokens.ArgumentsClose)); " is 225.
Long Statement,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateDefaultGenericElement,The length of the statement  "                items.Add(new GenericExpression(StringTokens.TagOpen + StringTokens.ElementClose + element.Tag.ToString() + StringTokens.TagClose)); " is 132.
Long Statement,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheetWithAttributive,The length of the statement  "            return new SurroundedExpression(new ObjectWithDisplay(attributiveValue' attributiveRow)' new ObjectWithDisplay(value' row)' null); " is 130.
Complex Conditional,SaintCoinach.Xiv,CompanyCraftProcess,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\CompanyCraftProcess.cs,BuildRequests,The conditional expression  "supplyItem == null || supplyItem.Key == 0 || perSet == 0 || setCount == 0"  is complex.
Complex Conditional,SaintCoinach.Xiv,ENpc,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ENpc.cs,BuildLocations,The conditional expression  "!levelLocations.Any(l => Math.Abs(l.MapX - c.X) < 1 && Math.Abs(l.MapY - c.Y) < 1 && (l.Map.LocationPlaceName == placeName || l.Map.PlaceName == placeName || l.Map.RegionPlaceName == placeName))"  is complex.
Virtual Method Call from Constructor,SaintCoinach.Graphics,ImcFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\ImcFile.cs,ImcFile,The constructor "ImcFile" calls a virtual method "GetData".
Virtual Method Call from Constructor,SaintCoinach.Imaging,GraphicsFileTextureDefinition,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\GraphicsFileTextureDefinition.cs,GraphicsFileTextureDefinition,The constructor "GraphicsFileTextureDefinition" calls a virtual method "GetData".
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,GetTimeSpan,The following statement contains a magic number: return new TimeSpan(Sun + (((Year * 12) + Moon) * 32)' Bell' Minute' 0' 0);
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,GetTimeSpan,The following statement contains a magic number: return new TimeSpan(Sun + (((Year * 12) + Moon) * 32)' Bell' Minute' 0' 0);
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,GetUnixTime,The following statement contains a magic number: var moons = (years * 12.0) + Moon - 1;
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,GetUnixTime,The following statement contains a magic number: var suns = (moons * 32.0) + Sun - 1;
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,GetUnixTime,The following statement contains a magic number: var bells = (suns * 24.0) + Bell;
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,GetUnixTime,The following statement contains a magic number: var minutes = (bells * 60.0) + Minute;
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,GetUnixTime,The following statement contains a magic number: var seconds = minutes * 60.0;
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,SetEorzeaTime,The following statement contains a magic number: var minutes = eorzeaSeconds / 60;
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,SetEorzeaTime,The following statement contains a magic number: var bells = minutes / 60;
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,SetEorzeaTime,The following statement contains a magic number: var suns = bells / 24;
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,SetEorzeaTime,The following statement contains a magic number: var moons = suns / 32;
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,SetEorzeaTime,The following statement contains a magic number: var years = moons / 12;
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,SetEorzeaTime,The following statement contains a magic number: Minute = (int)(minutes % 60);
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,SetEorzeaTime,The following statement contains a magic number: Bell = (int)(bells % 24);
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,SetEorzeaTime,The following statement contains a magic number: Sun = (int)(suns % 32) + 1;
Magic Number,SaintCoinach,EorzeaDateTime,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\EorzeaDateTime.cs,SetEorzeaTime,The following statement contains a magic number: Moon = (int)(moons % 12) + 1;
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToInt16,The following statement contains a magic number: if (offset < 0 || offset + 2 > buffer.Length)                  throw new ArgumentOutOfRangeException("offset");
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToInt16,The following statement contains a magic number: var tmp = new byte[2];
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToInt16,The following statement contains a magic number: Array.Copy(buffer' offset' tmp' 0' 2);
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToInt32,The following statement contains a magic number: if (offset < 0 || offset + 4 > buffer.Length)                  throw new ArgumentOutOfRangeException("offset");
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToInt32,The following statement contains a magic number: var tmp = new byte[4];
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToInt32,The following statement contains a magic number: Array.Copy(buffer' offset' tmp' 0' 4);
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToInt64,The following statement contains a magic number: if (offset < 0 || offset + 8 > buffer.Length)                  throw new ArgumentOutOfRangeException("offset");
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToInt64,The following statement contains a magic number: var tmp = new byte[8];
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToInt64,The following statement contains a magic number: Array.Copy(buffer' offset' tmp' 0' 8);
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToSingle,The following statement contains a magic number: if (offset < 0 || offset + 4 > buffer.Length)                  throw new ArgumentOutOfRangeException("offset");
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToSingle,The following statement contains a magic number: var tmp = new byte[4];
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToSingle,The following statement contains a magic number: Array.Copy(buffer' offset' tmp' 0' 4);
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToDouble,The following statement contains a magic number: if (offset < 0 || offset + 8 > buffer.Length)                  throw new ArgumentOutOfRangeException("offset");
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToDouble,The following statement contains a magic number: var tmp = new byte[8];
Magic Number,SaintCoinach,OrderedBitConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\OrderedBitConverter.cs,ToDouble,The following statement contains a magic number: Array.Copy(buffer' offset' tmp' 0' 8);
Magic Number,SaintCoinach,HalfHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\HalfHelper.cs,Pack,The following statement contains a magic number: var num3 = (uint)((num5 & -2147483648) >> 0x10);
Magic Number,SaintCoinach,HalfHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\HalfHelper.cs,Pack,The following statement contains a magic number: if (num >= 0x38800000) return (ushort)(num3 | ((((num + -939524096) + 0xfff) + ((num >> 13) & 1)) >> 13));
Magic Number,SaintCoinach,HalfHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\HalfHelper.cs,Pack,The following statement contains a magic number: if (num >= 0x38800000) return (ushort)(num3 | ((((num + -939524096) + 0xfff) + ((num >> 13) & 1)) >> 13));
Magic Number,SaintCoinach,HalfHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\HalfHelper.cs,Pack,The following statement contains a magic number: if (num >= 0x38800000) return (ushort)(num3 | ((((num + -939524096) + 0xfff) + ((num >> 13) & 1)) >> 13));
Magic Number,SaintCoinach,HalfHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\HalfHelper.cs,Pack,The following statement contains a magic number: return (ushort)(num3 | (((num + 0xfff) + ((num >> 13) & 1)) >> 13));
Magic Number,SaintCoinach,HalfHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\HalfHelper.cs,Pack,The following statement contains a magic number: return (ushort)(num3 | (((num + 0xfff) + ((num >> 13) & 1)) >> 13));
Magic Number,SaintCoinach,HalfHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\HalfHelper.cs,Unpack,The following statement contains a magic number: if ((value & -33792) == 0) {                  if ((value & 0x3ff) != 0) {                      var num2 = 0xfffffff2;                      var num = (uint)(value & 0x3ff);                      while ((num & 0x400) == 0) {                          num2--;                          num = num << 1;                      }                      num &= 0xfffffbff;                      num3 = ((uint)(((value & 0x8000) << 0x10) | ((num2 + 0x7f) << 0x17))) | (num << 13);                  } else {                      num3 = (uint)((value & 0x8000) << 0x10);                  }              } else {                  num3 =                      (uint)                      ((((value & 0x8000) << 0x10) | (((((value >> 10) & 0x1f) - 15) + 0x7f) << 0x17))                       | ((value & 0x3ff) << 13));              }
Magic Number,SaintCoinach,HalfHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\HalfHelper.cs,Unpack,The following statement contains a magic number: if ((value & -33792) == 0) {                  if ((value & 0x3ff) != 0) {                      var num2 = 0xfffffff2;                      var num = (uint)(value & 0x3ff);                      while ((num & 0x400) == 0) {                          num2--;                          num = num << 1;                      }                      num &= 0xfffffbff;                      num3 = ((uint)(((value & 0x8000) << 0x10) | ((num2 + 0x7f) << 0x17))) | (num << 13);                  } else {                      num3 = (uint)((value & 0x8000) << 0x10);                  }              } else {                  num3 =                      (uint)                      ((((value & 0x8000) << 0x10) | (((((value >> 10) & 0x1f) - 15) + 0x7f) << 0x17))                       | ((value & 0x3ff) << 13));              }
Magic Number,SaintCoinach,HalfHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\HalfHelper.cs,Unpack,The following statement contains a magic number: if ((value & -33792) == 0) {                  if ((value & 0x3ff) != 0) {                      var num2 = 0xfffffff2;                      var num = (uint)(value & 0x3ff);                      while ((num & 0x400) == 0) {                          num2--;                          num = num << 1;                      }                      num &= 0xfffffbff;                      num3 = ((uint)(((value & 0x8000) << 0x10) | ((num2 + 0x7f) << 0x17))) | (num << 13);                  } else {                      num3 = (uint)((value & 0x8000) << 0x10);                  }              } else {                  num3 =                      (uint)                      ((((value & 0x8000) << 0x10) | (((((value >> 10) & 0x1f) - 15) + 0x7f) << 0x17))                       | ((value & 0x3ff) << 13));              }
Magic Number,SaintCoinach,HalfHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\HalfHelper.cs,Unpack,The following statement contains a magic number: if ((value & -33792) == 0) {                  if ((value & 0x3ff) != 0) {                      var num2 = 0xfffffff2;                      var num = (uint)(value & 0x3ff);                      while ((num & 0x400) == 0) {                          num2--;                          num = num << 1;                      }                      num &= 0xfffffbff;                      num3 = ((uint)(((value & 0x8000) << 0x10) | ((num2 + 0x7f) << 0x17))) | (num << 13);                  } else {                      num3 = (uint)((value & 0x8000) << 0x10);                  }              } else {                  num3 =                      (uint)                      ((((value & 0x8000) << 0x10) | (((((value >> 10) & 0x1f) - 15) + 0x7f) << 0x17))                       | ((value & 0x3ff) << 13));              }
Magic Number,SaintCoinach,HalfHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\HalfHelper.cs,Unpack,The following statement contains a magic number: if ((value & -33792) == 0) {                  if ((value & 0x3ff) != 0) {                      var num2 = 0xfffffff2;                      var num = (uint)(value & 0x3ff);                      while ((num & 0x400) == 0) {                          num2--;                          num = num << 1;                      }                      num &= 0xfffffbff;                      num3 = ((uint)(((value & 0x8000) << 0x10) | ((num2 + 0x7f) << 0x17))) | (num << 13);                  } else {                      num3 = (uint)((value & 0x8000) << 0x10);                  }              } else {                  num3 =                      (uint)                      ((((value & 0x8000) << 0x10) | (((((value >> 10) & 0x1f) - 15) + 0x7f) << 0x17))                       | ((value & 0x3ff) << 13));              }
Magic Number,SaintCoinach.Ex,DataReader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\DataReader.cs,DataReader,The following statement contains a magic number: DataReaders = new Dictionary<int' DataReader> {                  {                      0x0000' new StringDataReader()                  }' {                      0x0001' new DelegateDataReader("bool"' 1' typeof(bool)' (d' o) => d[o] != 0)                  }' {                      0x0002' new DelegateDataReader("sbyte"' 1' typeof(sbyte)' (d' o) => (sbyte)d[o])                  }' {                      0x0003' new DelegateDataReader("byte"' 1' typeof(byte)' (d' o) => d[o])                  }' {                      0x0004'                      new DelegateDataReader("int16"' 2' typeof(short)' (d' o) => OrderedBitConverter.ToInt16(d' o' true))                  }' {                      0x0005'                      new DelegateDataReader("uint16"' 2' typeof(ushort)'                          (d' o) => OrderedBitConverter.ToUInt16(d' o' true))                  }' {                      0x0006'                      new DelegateDataReader("int32"' 4' typeof(int)' (d' o) => OrderedBitConverter.ToInt32(d' o' true))                  }' {                      0x0007'                      new DelegateDataReader("uint32"' 4' typeof(uint)' (d' o) => OrderedBitConverter.ToUInt32(d' o' true))                  }' {                      0x0009'                      new DelegateDataReader("single"' 4' typeof(Single)'                          (d' o) => OrderedBitConverter.ToSingle(d' o' true))                  }' {                      0x000B'                      new DelegateDataReader("int64"' 8' typeof(Quad)' (d' o) => Quad.Read(d' o' true))                  }              };
Magic Number,SaintCoinach.Ex,DataReader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\DataReader.cs,DataReader,The following statement contains a magic number: DataReaders = new Dictionary<int' DataReader> {                  {                      0x0000' new StringDataReader()                  }' {                      0x0001' new DelegateDataReader("bool"' 1' typeof(bool)' (d' o) => d[o] != 0)                  }' {                      0x0002' new DelegateDataReader("sbyte"' 1' typeof(sbyte)' (d' o) => (sbyte)d[o])                  }' {                      0x0003' new DelegateDataReader("byte"' 1' typeof(byte)' (d' o) => d[o])                  }' {                      0x0004'                      new DelegateDataReader("int16"' 2' typeof(short)' (d' o) => OrderedBitConverter.ToInt16(d' o' true))                  }' {                      0x0005'                      new DelegateDataReader("uint16"' 2' typeof(ushort)'                          (d' o) => OrderedBitConverter.ToUInt16(d' o' true))                  }' {                      0x0006'                      new DelegateDataReader("int32"' 4' typeof(int)' (d' o) => OrderedBitConverter.ToInt32(d' o' true))                  }' {                      0x0007'                      new DelegateDataReader("uint32"' 4' typeof(uint)' (d' o) => OrderedBitConverter.ToUInt32(d' o' true))                  }' {                      0x0009'                      new DelegateDataReader("single"' 4' typeof(Single)'                          (d' o) => OrderedBitConverter.ToSingle(d' o' true))                  }' {                      0x000B'                      new DelegateDataReader("int64"' 8' typeof(Quad)' (d' o) => Quad.Read(d' o' true))                  }              };
Magic Number,SaintCoinach.Ex,DataReader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\DataReader.cs,DataReader,The following statement contains a magic number: DataReaders = new Dictionary<int' DataReader> {                  {                      0x0000' new StringDataReader()                  }' {                      0x0001' new DelegateDataReader("bool"' 1' typeof(bool)' (d' o) => d[o] != 0)                  }' {                      0x0002' new DelegateDataReader("sbyte"' 1' typeof(sbyte)' (d' o) => (sbyte)d[o])                  }' {                      0x0003' new DelegateDataReader("byte"' 1' typeof(byte)' (d' o) => d[o])                  }' {                      0x0004'                      new DelegateDataReader("int16"' 2' typeof(short)' (d' o) => OrderedBitConverter.ToInt16(d' o' true))                  }' {                      0x0005'                      new DelegateDataReader("uint16"' 2' typeof(ushort)'                          (d' o) => OrderedBitConverter.ToUInt16(d' o' true))                  }' {                      0x0006'                      new DelegateDataReader("int32"' 4' typeof(int)' (d' o) => OrderedBitConverter.ToInt32(d' o' true))                  }' {                      0x0007'                      new DelegateDataReader("uint32"' 4' typeof(uint)' (d' o) => OrderedBitConverter.ToUInt32(d' o' true))                  }' {                      0x0009'                      new DelegateDataReader("single"' 4' typeof(Single)'                          (d' o) => OrderedBitConverter.ToSingle(d' o' true))                  }' {                      0x000B'                      new DelegateDataReader("int64"' 8' typeof(Quad)' (d' o) => Quad.Read(d' o' true))                  }              };
Magic Number,SaintCoinach.Ex,DataReader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\DataReader.cs,DataReader,The following statement contains a magic number: DataReaders = new Dictionary<int' DataReader> {                  {                      0x0000' new StringDataReader()                  }' {                      0x0001' new DelegateDataReader("bool"' 1' typeof(bool)' (d' o) => d[o] != 0)                  }' {                      0x0002' new DelegateDataReader("sbyte"' 1' typeof(sbyte)' (d' o) => (sbyte)d[o])                  }' {                      0x0003' new DelegateDataReader("byte"' 1' typeof(byte)' (d' o) => d[o])                  }' {                      0x0004'                      new DelegateDataReader("int16"' 2' typeof(short)' (d' o) => OrderedBitConverter.ToInt16(d' o' true))                  }' {                      0x0005'                      new DelegateDataReader("uint16"' 2' typeof(ushort)'                          (d' o) => OrderedBitConverter.ToUInt16(d' o' true))                  }' {                      0x0006'                      new DelegateDataReader("int32"' 4' typeof(int)' (d' o) => OrderedBitConverter.ToInt32(d' o' true))                  }' {                      0x0007'                      new DelegateDataReader("uint32"' 4' typeof(uint)' (d' o) => OrderedBitConverter.ToUInt32(d' o' true))                  }' {                      0x0009'                      new DelegateDataReader("single"' 4' typeof(Single)'                          (d' o) => OrderedBitConverter.ToSingle(d' o' true))                  }' {                      0x000B'                      new DelegateDataReader("int64"' 8' typeof(Quad)' (d' o) => Quad.Read(d' o' true))                  }              };
Magic Number,SaintCoinach.Ex,DataReader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\DataReader.cs,DataReader,The following statement contains a magic number: DataReaders = new Dictionary<int' DataReader> {                  {                      0x0000' new StringDataReader()                  }' {                      0x0001' new DelegateDataReader("bool"' 1' typeof(bool)' (d' o) => d[o] != 0)                  }' {                      0x0002' new DelegateDataReader("sbyte"' 1' typeof(sbyte)' (d' o) => (sbyte)d[o])                  }' {                      0x0003' new DelegateDataReader("byte"' 1' typeof(byte)' (d' o) => d[o])                  }' {                      0x0004'                      new DelegateDataReader("int16"' 2' typeof(short)' (d' o) => OrderedBitConverter.ToInt16(d' o' true))                  }' {                      0x0005'                      new DelegateDataReader("uint16"' 2' typeof(ushort)'                          (d' o) => OrderedBitConverter.ToUInt16(d' o' true))                  }' {                      0x0006'                      new DelegateDataReader("int32"' 4' typeof(int)' (d' o) => OrderedBitConverter.ToInt32(d' o' true))                  }' {                      0x0007'                      new DelegateDataReader("uint32"' 4' typeof(uint)' (d' o) => OrderedBitConverter.ToUInt32(d' o' true))                  }' {                      0x0009'                      new DelegateDataReader("single"' 4' typeof(Single)'                          (d' o) => OrderedBitConverter.ToSingle(d' o' true))                  }' {                      0x000B'                      new DelegateDataReader("int64"' 8' typeof(Quad)' (d' o) => Quad.Read(d' o' true))                  }              };
Magic Number,SaintCoinach.Ex,DataReader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\DataReader.cs,DataReader,The following statement contains a magic number: DataReaders = new Dictionary<int' DataReader> {                  {                      0x0000' new StringDataReader()                  }' {                      0x0001' new DelegateDataReader("bool"' 1' typeof(bool)' (d' o) => d[o] != 0)                  }' {                      0x0002' new DelegateDataReader("sbyte"' 1' typeof(sbyte)' (d' o) => (sbyte)d[o])                  }' {                      0x0003' new DelegateDataReader("byte"' 1' typeof(byte)' (d' o) => d[o])                  }' {                      0x0004'                      new DelegateDataReader("int16"' 2' typeof(short)' (d' o) => OrderedBitConverter.ToInt16(d' o' true))                  }' {                      0x0005'                      new DelegateDataReader("uint16"' 2' typeof(ushort)'                          (d' o) => OrderedBitConverter.ToUInt16(d' o' true))                  }' {                      0x0006'                      new DelegateDataReader("int32"' 4' typeof(int)' (d' o) => OrderedBitConverter.ToInt32(d' o' true))                  }' {                      0x0007'                      new DelegateDataReader("uint32"' 4' typeof(uint)' (d' o) => OrderedBitConverter.ToUInt32(d' o' true))                  }' {                      0x0009'                      new DelegateDataReader("single"' 4' typeof(Single)'                          (d' o) => OrderedBitConverter.ToSingle(d' o' true))                  }' {                      0x000B'                      new DelegateDataReader("int64"' 8' typeof(Quad)' (d' o) => Quad.Read(d' o' true))                  }              };
Magic Number,SaintCoinach.Ex,DataReader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\DataReader.cs,DataReader,The following statement contains a magic number: for (byte i = 0; i < 8; ++i)                  DataReaders.Add(0x19 + i' new PackedBooleanDataReader((byte)(1 << i)));
Magic Number,SaintCoinach.Ex,ExCollection,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\ExCollection.cs,BuildIndex,The following statement contains a magic number: using (var ms = new MemoryStream(exRoot.GetData())) {                  using (var s = new StreamReader(ms' Encoding.ASCII)) {                      s.ReadLine(); // EXLT'2                        while (!s.EndOfStream) {                          var line = s.ReadLine();                          if (string.IsNullOrWhiteSpace(line)) continue;                            var split = line.Split(''');                          if (split.Length != 2)                              continue;                            var name = split[0];                          var id = int.Parse(split[1]);                            available.Add(name);                          if (id >= 0)                              _SheetIdentifiers.Add(id' name);                      }                  }              }
Magic Number,SaintCoinach.Xiv,Quad,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Quad.cs,Quad,The following statement contains a magic number: Value2 = (short)(data >> 16);
Magic Number,SaintCoinach.Xiv,Quad,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Quad.cs,Quad,The following statement contains a magic number: Value3 = (short)(data >> 32);
Magic Number,SaintCoinach.Xiv,Quad,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Quad.cs,Quad,The following statement contains a magic number: Value4 = (short)(data >> 48);
Magic Number,SaintCoinach.Xiv,Quad,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Quad.cs,ToInt64,The following statement contains a magic number: return (Int64)Value1 + ((Int64)Value2 << 16) + ((Int64)Value3 << 32) + ((Int64)Value4 << 48);
Magic Number,SaintCoinach.Xiv,Quad,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Quad.cs,ToInt64,The following statement contains a magic number: return (Int64)Value1 + ((Int64)Value2 << 16) + ((Int64)Value3 << 32) + ((Int64)Value4 << 48);
Magic Number,SaintCoinach.Xiv,Quad,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Quad.cs,ToInt64,The following statement contains a magic number: return (Int64)Value1 + ((Int64)Value2 << 16) + ((Int64)Value3 << 32) + ((Int64)Value4 << 48);
Magic Number,SaintCoinach.Xiv,CompanyCraftDraft,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\CompanyCraftDraft.cs,BuildRequiredItems,The following statement contains a magic number: const int Count = 3;
Magic Number,SaintCoinach.Xiv,CompanyCraftDraftCategory,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\CompanyCraftDraftCategory.cs,BuildCompanyCraftTypes,The following statement contains a magic number: const int Count = 10;
Magic Number,SaintCoinach.Xiv,CompanyCraftPart,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\CompanyCraftPart.cs,BuildCraftProcesses,The following statement contains a magic number: const int Count = 3;
Magic Number,SaintCoinach.Xiv,CompanyCraftProcess,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\CompanyCraftProcess.cs,BuildRequests,The following statement contains a magic number: const int Count = 12;
Magic Number,SaintCoinach.Xiv,CompanyCraftSequence,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\CompanyCraftSequence.cs,BuildCraftParts,The following statement contains a magic number: const int Count = 8;
Magic Number,SaintCoinach.Xiv,CustomTalk,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\CustomTalk.cs,BuildScriptCommands,The following statement contains a magic number: const int Count = 30;
Magic Number,SaintCoinach.Xiv,FccShop,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\FccShop.cs,BuildShopListings,The following statement contains a magic number: const int CostItem = 6559;
Magic Number,SaintCoinach.Xiv,GatheringNotebookList,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\GatheringNotebookList.cs,BuildItems,The following statement contains a magic number: const int Count = 100;
Magic Number,SaintCoinach.Xiv,GatheringPointBase,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\GatheringPointBase.cs,BuildGatheringItems,The following statement contains a magic number: const int Count = 8;
Magic Number,SaintCoinach.Xiv,MasterpieceSupplyDuty,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\MasterpieceSupplyDuty.cs,BuildCollectableItems,The following statement contains a magic number: const int Count = 8;
Magic Number,SaintCoinach.Xiv,BaseParam,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\BaseParam.cs,GetMaximum,The following statement contains a magic number: const int Offset = 2;
Magic Number,SaintCoinach.Xiv,BaseParam,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\BaseParam.cs,GetModifier,The following statement contains a magic number: const int Offset = 24;
Magic Number,SaintCoinach.Xiv,BaseParam,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\BaseParam.cs,GetModifier,The following statement contains a magic number: const int Maximum = 12;
Magic Number,SaintCoinach.Xiv,CraftLeve,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\CraftLeve.cs,BuildItems,The following statement contains a magic number: const int Count = 4;
Magic Number,SaintCoinach.Xiv,EquipSlot,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\EquipSlot.cs,GetModel,The following statement contains a magic number: var variantIndex = (int)((key.ToInt64() >> (helper.VariantIndexWord * 16)) & 0xFFFF);
Magic Number,SaintCoinach.Xiv,FishingSpot,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\FishingSpot.cs,BuildItems,The following statement contains a magic number: const int Count = 10;
Magic Number,SaintCoinach.Xiv,FishingSpot,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\FishingSpot.cs,ToMapCoordinate,The following statement contains a magic number: var c = TerritoryType.Map.SizeFactor / 100.0;
Magic Number,SaintCoinach.Xiv,FishingSpot,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\FishingSpot.cs,ToMapCoordinate,The following statement contains a magic number: return (41.0 / c) * ((val) / 2048.0) + 1;
Magic Number,SaintCoinach.Xiv,FishingSpot,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\FishingSpot.cs,ToMapCoordinate,The following statement contains a magic number: return (41.0 / c) * ((val) / 2048.0) + 1;
Magic Number,SaintCoinach.Xiv,ItemFood,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemFood.cs,BuildParameters,The following statement contains a magic number: const int Count = 3;
Magic Number,SaintCoinach.Xiv,ItemFood,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemFood.cs,BuildParameters,The following statement contains a magic number: for (var i = 0; i < Count; ++i) {                  var param = As<BaseParam>(i);                  if (param.Key == 0)                      continue;                    var isRel = AsBoolean("IsRelative"' i);                  var val = AsInt32("Value"' i);                  var valHq = AsInt32("Value{HQ}"' i);                    if (isRel) {                      var max = AsInt32("Max"' i);                      var maxHq = AsInt32("Max{HQ}"' i);                        parameters.AddParameterValue(param'                          max == 0                              ? new ParameterValueRelative(ParameterType.Base' val / 100.0)                              : new ParameterValueRelativeLimited(ParameterType.Base' val / 100.0' max));                        if (maxHq == max && valHq == val) continue;                        parameters.AddParameterValue(param'                          maxHq == 0                              ? new ParameterValueRelative(ParameterType.Hq' valHq / 100.0)                              : new ParameterValueRelativeLimited(ParameterType.Hq' valHq / 100.0' maxHq));                  } else {                      parameters.AddParameterValue(param' new ParameterValueFixed(ParameterType.Base' val));                      if (val != valHq)                          parameters.AddParameterValue(param' new ParameterValueFixed(ParameterType.Hq' valHq));                  }              }
Magic Number,SaintCoinach.Xiv,ItemFood,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemFood.cs,BuildParameters,The following statement contains a magic number: for (var i = 0; i < Count; ++i) {                  var param = As<BaseParam>(i);                  if (param.Key == 0)                      continue;                    var isRel = AsBoolean("IsRelative"' i);                  var val = AsInt32("Value"' i);                  var valHq = AsInt32("Value{HQ}"' i);                    if (isRel) {                      var max = AsInt32("Max"' i);                      var maxHq = AsInt32("Max{HQ}"' i);                        parameters.AddParameterValue(param'                          max == 0                              ? new ParameterValueRelative(ParameterType.Base' val / 100.0)                              : new ParameterValueRelativeLimited(ParameterType.Base' val / 100.0' max));                        if (maxHq == max && valHq == val) continue;                        parameters.AddParameterValue(param'                          maxHq == 0                              ? new ParameterValueRelative(ParameterType.Hq' valHq / 100.0)                              : new ParameterValueRelativeLimited(ParameterType.Hq' valHq / 100.0' maxHq));                  } else {                      parameters.AddParameterValue(param' new ParameterValueFixed(ParameterType.Base' val));                      if (val != valHq)                          parameters.AddParameterValue(param' new ParameterValueFixed(ParameterType.Hq' valHq));                  }              }
Magic Number,SaintCoinach.Xiv,ItemFood,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemFood.cs,BuildParameters,The following statement contains a magic number: for (var i = 0; i < Count; ++i) {                  var param = As<BaseParam>(i);                  if (param.Key == 0)                      continue;                    var isRel = AsBoolean("IsRelative"' i);                  var val = AsInt32("Value"' i);                  var valHq = AsInt32("Value{HQ}"' i);                    if (isRel) {                      var max = AsInt32("Max"' i);                      var maxHq = AsInt32("Max{HQ}"' i);                        parameters.AddParameterValue(param'                          max == 0                              ? new ParameterValueRelative(ParameterType.Base' val / 100.0)                              : new ParameterValueRelativeLimited(ParameterType.Base' val / 100.0' max));                        if (maxHq == max && valHq == val) continue;                        parameters.AddParameterValue(param'                          maxHq == 0                              ? new ParameterValueRelative(ParameterType.Hq' valHq / 100.0)                              : new ParameterValueRelativeLimited(ParameterType.Hq' valHq / 100.0' maxHq));                  } else {                      parameters.AddParameterValue(param' new ParameterValueFixed(ParameterType.Base' val));                      if (val != valHq)                          parameters.AddParameterValue(param' new ParameterValueFixed(ParameterType.Hq' valHq));                  }              }
Magic Number,SaintCoinach.Xiv,ItemFood,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemFood.cs,BuildParameters,The following statement contains a magic number: for (var i = 0; i < Count; ++i) {                  var param = As<BaseParam>(i);                  if (param.Key == 0)                      continue;                    var isRel = AsBoolean("IsRelative"' i);                  var val = AsInt32("Value"' i);                  var valHq = AsInt32("Value{HQ}"' i);                    if (isRel) {                      var max = AsInt32("Max"' i);                      var maxHq = AsInt32("Max{HQ}"' i);                        parameters.AddParameterValue(param'                          max == 0                              ? new ParameterValueRelative(ParameterType.Base' val / 100.0)                              : new ParameterValueRelativeLimited(ParameterType.Base' val / 100.0' max));                        if (maxHq == max && valHq == val) continue;                        parameters.AddParameterValue(param'                          maxHq == 0                              ? new ParameterValueRelative(ParameterType.Hq' valHq / 100.0)                              : new ParameterValueRelativeLimited(ParameterType.Hq' valHq / 100.0' maxHq));                  } else {                      parameters.AddParameterValue(param' new ParameterValueFixed(ParameterType.Base' val));                      if (val != valHq)                          parameters.AddParameterValue(param' new ParameterValueFixed(ParameterType.Hq' valHq));                  }              }
Magic Number,SaintCoinach.Xiv,Level,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Level.cs,ToMapCoordinate,The following statement contains a magic number: var c = Map.SizeFactor / 100.0;
Magic Number,SaintCoinach.Xiv,Level,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Level.cs,ToMapCoordinate,The following statement contains a magic number: return ((41.0 / c) * ((val + 1024.0) / 2048.0)) + 1;
Magic Number,SaintCoinach.Xiv,Level,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Level.cs,ToMapCoordinate,The following statement contains a magic number: return ((41.0 / c) * ((val + 1024.0) / 2048.0)) + 1;
Magic Number,SaintCoinach.Xiv,Level,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Level.cs,ToMapCoordinate,The following statement contains a magic number: return ((41.0 / c) * ((val + 1024.0) / 2048.0)) + 1;
Magic Number,SaintCoinach.Xiv,LeveRewardItem,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\LeveRewardItem.cs,BuildItemGroups,The following statement contains a magic number: const int Count = 8;
Magic Number,SaintCoinach.Xiv,LeveRewardItem,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\LeveRewardItem.cs,BuildItemGroups,The following statement contains a magic number: for (var i = 0; i < Count; ++i) {                  var probability = AsInt32("Probability<%>"' i);                  if (probability == 0)                      continue;                    var group = As<LeveRewardItemGroup>(i);                  if (group.Key == 0)                      continue;                    itemGroups.Add(new ProbabilityPair<LeveRewardItemGroup>(group' probability / 100.0));              }
Magic Number,SaintCoinach.Xiv,LeveRewardItemGroup,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\LeveRewardItemGroup.cs,BuildItems,The following statement contains a magic number: const int Count = 9;
Magic Number,SaintCoinach.Xiv,Map,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Map.cs,MultiplyBlend,The following statement contains a magic number: const int BytesPerPixel = 4;
Magic Number,SaintCoinach.Xiv,Map,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Map.cs,MultiplyBlend,The following statement contains a magic number: for (var i = 0; i < aArgb.Length; i += BytesPerPixel) {                  for (var j = 0; j < 3; ++j)     // Only blend RGB                      result[i + j] = (byte)((aArgb[i + j] * bArgb[i + j]) / 255);                  result[i + 3] = aArgb[i + 3];  // Preserve alpha              }
Magic Number,SaintCoinach.Xiv,Map,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Map.cs,MultiplyBlend,The following statement contains a magic number: for (var i = 0; i < aArgb.Length; i += BytesPerPixel) {                  for (var j = 0; j < 3; ++j)     // Only blend RGB                      result[i + j] = (byte)((aArgb[i + j] * bArgb[i + j]) / 255);                  result[i + 3] = aArgb[i + 3];  // Preserve alpha              }
Magic Number,SaintCoinach.Xiv,Map,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Map.cs,MultiplyBlend,The following statement contains a magic number: for (var i = 0; i < aArgb.Length; i += BytesPerPixel) {                  for (var j = 0; j < 3; ++j)     // Only blend RGB                      result[i + j] = (byte)((aArgb[i + j] * bArgb[i + j]) / 255);                  result[i + 3] = aArgb[i + 3];  // Preserve alpha              }
Magic Number,SaintCoinach.Xiv,Map,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Map.cs,MultiplyBlend,The following statement contains a magic number: for (var i = 0; i < aArgb.Length; i += BytesPerPixel) {                  for (var j = 0; j < 3; ++j)     // Only blend RGB                      result[i + j] = (byte)((aArgb[i + j] * bArgb[i + j]) / 255);                  result[i + 3] = aArgb[i + 3];  // Preserve alpha              }
Magic Number,SaintCoinach.Xiv,Materia,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Materia.cs,BuildItems,The following statement contains a magic number: const int Count = 10;
Magic Number,SaintCoinach.Xiv,MonsterNote,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\MonsterNote.cs,BuildTargets,The following statement contains a magic number: const int Count = 4;
Magic Number,SaintCoinach.Xiv,MonsterNoteTarget,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\MonsterNoteTarget.cs,BuildLocations,The following statement contains a magic number: const int Count = 3;
Magic Number,SaintCoinach.Xiv,QuestRequirements,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\QuestRequirements.cs,BuildClassJobs,The following statement contains a magic number: const int Count = 2;
Magic Number,SaintCoinach.Xiv,QuestRequirements,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\QuestRequirements.cs,BuildQuestExclusion,The following statement contains a magic number: const int Count = 3;
Magic Number,SaintCoinach.Xiv,InstanceContentRequirement,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\QuestRequirements.InstanceContentRequirement.cs,InstanceContentRequirement,The following statement contains a magic number: const int QuestCount = 3;
Magic Number,SaintCoinach.Xiv,PrerequisiteQuestsRequirement,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\PrerequisiteQuestsRequirement.cs,PrerequisiteQuestsRequirement,The following statement contains a magic number: const int QuestCount = 3;
Magic Number,SaintCoinach.Xiv,QuestRewards,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\QuestRewards.cs,BuildItems,The following statement contains a magic number: const int CatalystCount = 3;
Magic Number,SaintCoinach.Xiv,QuestRewards,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\QuestRewards.cs,BuildItems,The following statement contains a magic number: const int Group1Count = 6;
Magic Number,SaintCoinach.Xiv,QuestRewards,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\QuestRewards.cs,BuildItems,The following statement contains a magic number: const int Group2Count = 5;
Magic Number,SaintCoinach.Xiv,QuestRewards,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\QuestRewards.cs,BuildItems,The following statement contains a magic number: switch (groupsType) {                  case 0:                      return new QuestRewardItemGroup[0];                  case 1:                      t1 = QuestRewardGroupType.All;                      t2 = QuestRewardGroupType.One;                      break;                  case 3:                      // Special handler                      break;                  case 5:                      t1 = QuestRewardGroupType.OnePerDay;                      t2 = QuestRewardGroupType.OnePerDay;                      break;              }
Magic Number,SaintCoinach.Xiv,QuestRewards,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\QuestRewards.cs,BuildItems,The following statement contains a magic number: switch (groupsType) {                  case 0:                      return new QuestRewardItemGroup[0];                  case 1:                      t1 = QuestRewardGroupType.All;                      t2 = QuestRewardGroupType.One;                      break;                  case 3:                      // Special handler                      break;                  case 5:                      t1 = QuestRewardGroupType.OnePerDay;                      t2 = QuestRewardGroupType.OnePerDay;                      break;              }
Magic Number,SaintCoinach.Xiv,QuestRewards,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\QuestRewards.cs,BuildItems,The following statement contains a magic number: if (groupsType == 3) {                  {                      var mItem = Quest.As<Item>("Item{Reward}[0]"' 0);                      var mCount = Quest.AsInt32("ItemCount{Reward}[0]"' 0);                      var mStain = Quest.As<Stain>("Stain{Reward}[0]"' 0);                        groups.Add(                          new QuestRewardItemGroup(                              new[]{ new QuestRewardItem(mItem' mCount' mStain) }'                              QuestRewardGroupType.GenderSpecificMale));                  }                  {                      var fItem = Quest.As<Item>("Item{Reward}[0]"' 1);                      var fCount = Quest.AsInt32("ItemCount{Reward}[0]"' 1);                      var fStain = Quest.As<Stain>("Stain{Reward}[0]"' 1);                        groups.Add(                          new QuestRewardItemGroup(                              new[]{ new QuestRewardItem(fItem' fCount' fStain) }'                              QuestRewardGroupType.GenderSpecificFemale));                  }              } else {                  groups.Add(BuildItemGroup(t1' "Item{Reward}[0]"' "ItemCount{Reward}[0]"' "Stain{Reward}[0]"' Group1Count));                  groups.Add(BuildItemGroup(t2' "Item{Reward}[1]"' "ItemCount{Reward}[1]"' "Stain{Reward}[1]"' Group2Count));              }
Magic Number,SaintCoinach.Xiv,Recipe,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Recipe.cs,BuildIngredients,The following statement contains a magic number: const int MaterialCount = 8;
Magic Number,SaintCoinach.Xiv,Recipe,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Recipe.cs,BuildIngredients,The following statement contains a magic number: const int CrystalCount = 2;
Magic Number,SaintCoinach.Xiv,Recipe,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Recipe.cs,BuildIngredients,The following statement contains a magic number: var qualityFromMats = RecipeLevel.Quality / 2;
Magic Number,SaintCoinach.Xiv,RecipeLevel,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\RecipeLevel.cs,RecipeLevel,The following statement contains a magic number: Difficulty = (RecipeLevelTable.Difficulty * recipe.DifficultyFactor) / 100;
Magic Number,SaintCoinach.Xiv,RecipeLevel,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\RecipeLevel.cs,RecipeLevel,The following statement contains a magic number: Quality = (RecipeLevelTable.Quality * recipe.QualityFactor) / 100;
Magic Number,SaintCoinach.Xiv,RecipeLevel,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\RecipeLevel.cs,RecipeLevel,The following statement contains a magic number: Durability = (RecipeLevelTable.Durability * recipe.DurabilityFactor) / 100;
Magic Number,SaintCoinach.Xiv,RelicNote,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\RelicNote.cs,BuildTargets,The following statement contains a magic number: const int Count = 10;
Magic Number,SaintCoinach.Xiv,RelicNote,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\RelicNote.cs,BuildNotoriousTargets,The following statement contains a magic number: const int Count = 3;
Magic Number,SaintCoinach.Xiv,RelicNote,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\RelicNote.cs,BuildFates,The following statement contains a magic number: const int Count = 3;
Magic Number,SaintCoinach.Xiv,RelicNote,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\RelicNote.cs,BuildLeves,The following statement contains a magic number: const int Count = 3;
Magic Number,SaintCoinach.Xiv,Shop,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Shop.cs,BuildShopItems,The following statement contains a magic number: const int Count = 40;
Magic Number,SaintCoinach.Xiv,ShopItem,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ShopItem.cs,ShopItem,The following statement contains a magic number: _Cost = new ShopListingItem(this' Sheet.Collection.GetSheet<Item>()[GilItemKey]'                  (PriceFactor * Item.Ask) / 100' false);
Magic Number,SaintCoinach.Xiv,SpecialShop,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\SpecialShop.cs,BuildShopItems,The following statement contains a magic number: const int Count = 60;
Magic Number,SaintCoinach.Xiv,SpecialShopListing,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\SpecialShopListing.cs,SpecialShopListing,The following statement contains a magic number: const int RewardCount = 2;
Magic Number,SaintCoinach.Xiv,SpecialShopListing,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\SpecialShopListing.cs,SpecialShopListing,The following statement contains a magic number: const int CostCount = 3;
Magic Number,SaintCoinach.Xiv,TripleTriad,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\TripleTriad.cs,BuildFixedCards,The following statement contains a magic number: const int Count = 5;
Magic Number,SaintCoinach.Xiv,TripleTriad,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\TripleTriad.cs,BuildVariableCards,The following statement contains a magic number: const int Count = 5;
Magic Number,SaintCoinach.Xiv,TripleTriad,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\TripleTriad.cs,BuildRules,The following statement contains a magic number: const int Count = 2;
Magic Number,SaintCoinach.Xiv,TripleTriad,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\TripleTriad.cs,BuildQuestRequirement,The following statement contains a magic number: const int Count = 3;
Magic Number,SaintCoinach.Xiv,WeatherRate,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\WeatherRate.cs,WeatherRate,The following statement contains a magic number: const int Count = 8;
Magic Number,SaintCoinach.Xiv,WeatherRate,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\WeatherRate.cs,CalculateTarget,The following statement contains a magic number: var bell = unix / 175;
Magic Number,SaintCoinach.Xiv,WeatherRate,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\WeatherRate.cs,CalculateTarget,The following statement contains a magic number: var increment = ((uint)(bell + 8 - (bell % 8))) % 24;
Magic Number,SaintCoinach.Xiv,WeatherRate,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\WeatherRate.cs,CalculateTarget,The following statement contains a magic number: var increment = ((uint)(bell + 8 - (bell % 8))) % 24;
Magic Number,SaintCoinach.Xiv,WeatherRate,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\WeatherRate.cs,CalculateTarget,The following statement contains a magic number: var increment = ((uint)(bell + 8 - (bell % 8))) % 24;
Magic Number,SaintCoinach.Xiv,WeatherRate,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\WeatherRate.cs,CalculateTarget,The following statement contains a magic number: var totalDays = (uint)(unix / 4200);
Magic Number,SaintCoinach.Xiv,WeatherRate,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\WeatherRate.cs,CalculateTarget,The following statement contains a magic number: var step2 = (step1 >> 8) ^ step1;
Magic Number,SaintCoinach.Xiv,XivCollection,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\XivCollection.cs,GetSheet,The following statement contains a magic number: var name = t.FullName.Substring(t.FullName.IndexOf(".Xiv."' StringComparison.OrdinalIgnoreCase) + 5);
Magic Number,SaintCoinach.Xiv,PreviousQuestRequirement,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\QuestRequirements.PreviousQuestRequirement.cs,PreviousQuestRequirement,The following statement contains a magic number: const int QuestCount = 3;
Magic Number,SaintCoinach.Ex.Relational.Update,Comparer,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\Relational\Update\Comparer.cs,IsMatch,The following statement contains a magic number: var maxDistance = Math.Ceiling(RelativeLevenshteinDistance * (s1.Length + s2.Length) / 2.0);
Magic Number,SaintCoinach.Ex.Relational.Update,RelationUpdater,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\Relational\Update\RelationUpdater.cs,Update,The following statement contains a magic number: var progress = new UpdateProgress {                  CurrentOperation = "Structure"'                  CurrentStep = 0'                  TotalSteps = (detectDataChanges ? 2 : 1) * Previous.SheetDefinitions.Count              };
Magic Number,SaintCoinach.Ex.Relational.ValueConverters,IconConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Ex\Relational\ValueConverters\IconConverter.cs,Convert,The following statement contains a magic number: if (nr < 0 || nr > 999999)                  return null;
Magic Number,SaintCoinach.Graphics,ImcFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\ImcFile.cs,ImcFile,The following statement contains a magic number: this.PartsMask  = BitConverter.ToInt16(buffer' 2);
Magic Number,SaintCoinach.Graphics,ImcFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\ImcFile.cs,ImcFile,The following statement contains a magic number: var offset = 4;
Magic Number,SaintCoinach.Graphics,ImcFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\ImcFile.cs,ImcFile,The following statement contains a magic number: for (byte bit = 0; bit < 8; ++bit) {                  var match = 1 << bit;                  if ((PartsMask & match) == match)                      _Parts.Add(bit' new ImcPart(buffer' bit' ref offset));              }
Magic Number,SaintCoinach.Graphics,Material,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\Material.cs,Build,The following statement contains a magic number: var stringsStart = offset + (4 * (Header.TextureCount + Header.MapCount + Header.DataSetCount));
Magic Number,SaintCoinach.Graphics,Material,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\Material.cs,ReadStrings,The following statement contains a magic number: for (var i = 0; i < count; ++i) {                  var o = BitConverter.ToInt16(buffer' offsetOffset);                  values[i] = buffer.ReadString(stringsOffset + o);                  offsetOffset += 4;              }
Magic Number,SaintCoinach.Graphics,Model,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\Model.cs,Build,The following statement contains a magic number: const int VertexPartOffset = 2;
Magic Number,SaintCoinach.Graphics,Model,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\Model.cs,Build,The following statement contains a magic number: const int IndexPartOffset = 8;
Magic Number,SaintCoinach.Graphics,ModelDefinition,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\ModelDefinition.cs,ReadStrings,The following statement contains a magic number: for(var i = 0; i < count; ++i) {                  var stringOffset = BitConverter.ToInt32(buffer' offset);                  values[i] = buffer.ReadString(StringsOffset + stringOffset);                  offset += 4;              }
Magic Number,SaintCoinach.Graphics,ModelFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\ModelFile.cs,ReadPart,The following statement contains a magic number: var minBlock = BitConverter.ToInt16(CommonHeader._Buffer' MinimumBlockOffset + 2 * part);
Magic Number,SaintCoinach.Graphics,ModelFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\ModelFile.cs,ReadPart,The following statement contains a magic number: var blockCount = BitConverter.ToInt16(CommonHeader._Buffer' BlockCountOffset + 2 * part);
Magic Number,SaintCoinach.Graphics,ModelFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\ModelFile.cs,GetBlockOffsets,The following statement contains a magic number: for (var i = BlockInfoOffset; i + 2 <= CommonHeader._Buffer.Length; i += 2) {                  var len = BitConverter.ToUInt16(CommonHeader._Buffer' i);                  if (len == 0)                      break;                  offsets.Add(currentOffset);                  currentOffset += len;              }
Magic Number,SaintCoinach.Graphics,ModelFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\ModelFile.cs,GetBlockOffsets,The following statement contains a magic number: for (var i = BlockInfoOffset; i + 2 <= CommonHeader._Buffer.Length; i += 2) {                  var len = BitConverter.ToUInt16(CommonHeader._Buffer' i);                  if (len == 0)                      break;                  offsets.Add(currentOffset);                  currentOffset += len;              }
Magic Number,SaintCoinach.Graphics,VertexReader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\VertexReader.cs,ReadData,The following statement contains a magic number: switch (type) {                  case VertexDataType.Half2:                      return new Vector2 {                          X = HalfHelper.Unpack(buffer' offset + 0x00)'                          Y = HalfHelper.Unpack(buffer' offset + 0x02)                      };                  case VertexDataType.Half4:                      return new Vector4 {                          X = HalfHelper.Unpack(buffer' offset + 0x00)'                          Y = HalfHelper.Unpack(buffer' offset + 0x02)'                          Z = HalfHelper.Unpack(buffer' offset + 0x04)'                          W = HalfHelper.Unpack(buffer' offset + 0x06)                      };                  case VertexDataType.UInt:                      return BitConverter.ToUInt32(buffer' offset);                  case VertexDataType.ByteFloat4:                      return new Vector4 {                          X = buffer[offset + 0] / 255f'                          Y = buffer[offset + 1] / 255f'                          Z = buffer[offset + 2] / 255f'                          W = buffer[offset + 3] / 255f                      };                  case VertexDataType.Single3:                      return buffer.ToStructure<Vector3>(offset);                  case VertexDataType.Single4:                      return buffer.ToStructure<Vector4>(offset);                  default:                      throw new NotSupportedException();              }
Magic Number,SaintCoinach.Graphics,VertexReader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\VertexReader.cs,ReadData,The following statement contains a magic number: switch (type) {                  case VertexDataType.Half2:                      return new Vector2 {                          X = HalfHelper.Unpack(buffer' offset + 0x00)'                          Y = HalfHelper.Unpack(buffer' offset + 0x02)                      };                  case VertexDataType.Half4:                      return new Vector4 {                          X = HalfHelper.Unpack(buffer' offset + 0x00)'                          Y = HalfHelper.Unpack(buffer' offset + 0x02)'                          Z = HalfHelper.Unpack(buffer' offset + 0x04)'                          W = HalfHelper.Unpack(buffer' offset + 0x06)                      };                  case VertexDataType.UInt:                      return BitConverter.ToUInt32(buffer' offset);                  case VertexDataType.ByteFloat4:                      return new Vector4 {                          X = buffer[offset + 0] / 255f'                          Y = buffer[offset + 1] / 255f'                          Z = buffer[offset + 2] / 255f'                          W = buffer[offset + 3] / 255f                      };                  case VertexDataType.Single3:                      return buffer.ToStructure<Vector3>(offset);                  case VertexDataType.Single4:                      return buffer.ToStructure<Vector4>(offset);                  default:                      throw new NotSupportedException();              }
Magic Number,SaintCoinach.Graphics.Sgb,SgbGroup,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\Sgb\SgbGroup.cs,SgbGroup,The following statement contains a magic number: for(var i = 0; i < Header.EntryCount; ++i) {                  var entryOffset = entriesOffset + BitConverter.ToInt32(buffer' entriesOffset + i * 4);                    var type = (SgbGroupEntryType)BitConverter.ToInt32(buffer' entryOffset);                  switch (type) {                      case SgbGroupEntryType.Model:                          Entries[i] = new SgbModelEntry(Parent.File.Pack.Collection' buffer' entryOffset);                          break;                      default:                          //System.Diagnostics.Trace.WriteLine(string.Format("{0}: Type {1} at 0x{2:X} in {3}"' Parent.File.Path' type' entryOffset' Name));                          break;                          // TODO: Work out other parts.                  }              }
Magic Number,SaintCoinach.Graphics.Lgb,LgbFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\Lgb\LgbFile.cs,Build,The following statement contains a magic number: for (int i = 0; i < Header.GroupCount; ++i) {                  var groupOffset = baseOffset + BitConverter.ToInt32(buffer' baseOffset + i * 4);                  Groups[i] = new LgbGroup(this' buffer' groupOffset);              }
Magic Number,SaintCoinach.Graphics.Lgb,LgbGroup,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\Lgb\LgbGroup.cs,LgbGroup,The following statement contains a magic number: for(var i = 0; i < Header.EntryCount; ++i) {                  var entryOffset = entriesOffset + BitConverter.ToInt32(buffer' entriesOffset + i * 4);                                    var type = (LgbEntryType)BitConverter.ToInt32(buffer' entryOffset);                  switch (type) {                      case LgbEntryType.Model:                          Entries[i] = new LgbModelEntry(Parent.File.Pack.Collection' buffer' entryOffset);                          break;                      case LgbEntryType.Gimmick:                          Entries[i] = new LgbGimmickEntry(Parent.File.Pack.Collection' buffer' entryOffset);                          break;                      default:                          //System.Diagnostics.Trace.WriteLine(string.Format("{0}: Type {1} at 0x{2:X} in {3}"' Parent.File.Path' type' entryOffset' Name));                          break;                          // TODO: Work out other parts.                  }              }
Magic Number,SaintCoinach.Graphics.TerritoryParts,Terrain,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\TerritoryParts\Terrain.cs,Build,The following statement contains a magic number: for (var i = 0; i < blockCount; ++i) {                  var blockPath = blockDirectory + string.Format("{0:D4}.mdl"' i);                  var blockModelFile = (ModelFile)File.Pack.Collection.GetFile(blockPath);                    var x = BitConverter.ToInt16(buffer' BlockPositionsOffset + BlockPositionSize * i + 0);                  var z = BitConverter.ToInt16(buffer' BlockPositionsOffset + BlockPositionSize * i + 2);                    var translation = new Vector3 {                      X = blockSize * (x + 0.5f)'                      Y = 0'                      Z = blockSize * (z + 0.5f)                  };                  Parts[i] = new TransformedModel(blockModelFile.GetModelDefinition()' translation' Vector3.Zero' Vector3.One);              }
Magic Number,SaintCoinach.Graphics.Unknowns,BoneIndices,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\Unknowns\BoneIndices.cs,BoneIndices,The following statement contains a magic number: offset += 4;
Magic Number,SaintCoinach.Graphics.Unknowns,BoneIndices,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\Unknowns\BoneIndices.cs,BoneIndices,The following statement contains a magic number: Bones = new ushort[DataSize / 2];
Magic Number,SaintCoinach.Graphics.Unknowns,BoneIndices,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Graphics\Unknowns\BoneIndices.cs,BoneIndices,The following statement contains a magic number: for (var i = 0; i < Bones.Length; ++i) {                  Bones[i] = BitConverter.ToUInt16(buffer' offset);                  offset += 2;              }
Magic Number,SaintCoinach.Imaging,GraphicsFileTextureDefinition,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\GraphicsFileTextureDefinition.cs,GraphicsFileTextureDefinition,The following statement contains a magic number: var count = BitConverter.ToInt32(buffer' 8);
Magic Number,SaintCoinach.Imaging,IconHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\IconHelper.cs,GetIcon,The following statement contains a magic number: var filePath = string.Format(IconFileFormat' nr / 1000' type' nr);
Magic Number,SaintCoinach.Imaging,IconHelper,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\IconHelper.cs,GetIcon,The following statement contains a magic number: if (!pack.TryGetFile(filePath' out file) && type.Length > 0) {                  // Couldn't get specific type' try for generic version.                  filePath = string.Format(IconFileFormat' nr / 1000' string.Empty' nr);                  if (!pack.TryGetFile(filePath' out file)) {                      // Couldn't get generic version either' that's a shame.                      file = null;                  }              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,Convert,The following statement contains a magic number: fixed (byte* p = argb) {                  var ptr = (IntPtr)p;                  using (var tempImage = new Bitmap(width' height' width * 4' PixelFormat.Format32bppArgb' ptr))                      image = new Bitmap(tempImage);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,GetA8R8G8B8,The following statement contains a magic number: var argb = new byte[width * height * 4];
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA16R16G16B16_Float,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var srcOff = i * 4 * 2;                  var dstOff = i * 4;                    for (var j = 0; j < 4; ++j)                      dst[dstOff + j] = (byte)(HalfHelper.Unpack(src' srcOff + j * 2) * byte.MaxValue);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA16R16G16B16_Float,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var srcOff = i * 4 * 2;                  var dstOff = i * 4;                    for (var j = 0; j < 4; ++j)                      dst[dstOff + j] = (byte)(HalfHelper.Unpack(src' srcOff + j * 2) * byte.MaxValue);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA16R16G16B16_Float,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var srcOff = i * 4 * 2;                  var dstOff = i * 4;                    for (var j = 0; j < 4; ++j)                      dst[dstOff + j] = (byte)(HalfHelper.Unpack(src' srcOff + j * 2) * byte.MaxValue);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA16R16G16B16_Float,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var srcOff = i * 4 * 2;                  var dstOff = i * 4;                    for (var j = 0; j < 4; ++j)                      dst[dstOff + j] = (byte)(HalfHelper.Unpack(src' srcOff + j * 2) * byte.MaxValue);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA16R16G16B16_Float,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var srcOff = i * 4 * 2;                  var dstOff = i * 4;                    for (var j = 0; j < 4; ++j)                      dst[dstOff + j] = (byte)(HalfHelper.Unpack(src' srcOff + j * 2) * byte.MaxValue);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA1R5G5B5,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    var a = (uint)(v & 0x8000);                  var r = (uint)(v & 0x7C00);                  var g = (uint)(v & 0x03E0);                  var b = (uint)(v & 0x001F);                    var rgb = ((r << 9) | (g << 6) | (b << 3));                  var argbValue = (a * 0x1FE00 | rgb | ((rgb >> 5) & 0x070707));                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(argbValue >> (8 * j));              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA1R5G5B5,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    var a = (uint)(v & 0x8000);                  var r = (uint)(v & 0x7C00);                  var g = (uint)(v & 0x03E0);                  var b = (uint)(v & 0x001F);                    var rgb = ((r << 9) | (g << 6) | (b << 3));                  var argbValue = (a * 0x1FE00 | rgb | ((rgb >> 5) & 0x070707));                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(argbValue >> (8 * j));              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA1R5G5B5,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    var a = (uint)(v & 0x8000);                  var r = (uint)(v & 0x7C00);                  var g = (uint)(v & 0x03E0);                  var b = (uint)(v & 0x001F);                    var rgb = ((r << 9) | (g << 6) | (b << 3));                  var argbValue = (a * 0x1FE00 | rgb | ((rgb >> 5) & 0x070707));                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(argbValue >> (8 * j));              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA1R5G5B5,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    var a = (uint)(v & 0x8000);                  var r = (uint)(v & 0x7C00);                  var g = (uint)(v & 0x03E0);                  var b = (uint)(v & 0x001F);                    var rgb = ((r << 9) | (g << 6) | (b << 3));                  var argbValue = (a * 0x1FE00 | rgb | ((rgb >> 5) & 0x070707));                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(argbValue >> (8 * j));              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA1R5G5B5,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    var a = (uint)(v & 0x8000);                  var r = (uint)(v & 0x7C00);                  var g = (uint)(v & 0x03E0);                  var b = (uint)(v & 0x001F);                    var rgb = ((r << 9) | (g << 6) | (b << 3));                  var argbValue = (a * 0x1FE00 | rgb | ((rgb >> 5) & 0x070707));                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(argbValue >> (8 * j));              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA1R5G5B5,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    var a = (uint)(v & 0x8000);                  var r = (uint)(v & 0x7C00);                  var g = (uint)(v & 0x03E0);                  var b = (uint)(v & 0x001F);                    var rgb = ((r << 9) | (g << 6) | (b << 3));                  var argbValue = (a * 0x1FE00 | rgb | ((rgb >> 5) & 0x070707));                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(argbValue >> (8 * j));              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA1R5G5B5,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    var a = (uint)(v & 0x8000);                  var r = (uint)(v & 0x7C00);                  var g = (uint)(v & 0x03E0);                  var b = (uint)(v & 0x001F);                    var rgb = ((r << 9) | (g << 6) | (b << 3));                  var argbValue = (a * 0x1FE00 | rgb | ((rgb >> 5) & 0x070707));                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(argbValue >> (8 * j));              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA1R5G5B5,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    var a = (uint)(v & 0x8000);                  var r = (uint)(v & 0x7C00);                  var g = (uint)(v & 0x03E0);                  var b = (uint)(v & 0x001F);                    var rgb = ((r << 9) | (g << 6) | (b << 3));                  var argbValue = (a * 0x1FE00 | rgb | ((rgb >> 5) & 0x070707));                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(argbValue >> (8 * j));              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA1R5G5B5,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    var a = (uint)(v & 0x8000);                  var r = (uint)(v & 0x7C00);                  var g = (uint)(v & 0x03E0);                  var b = (uint)(v & 0x001F);                    var rgb = ((r << 9) | (g << 6) | (b << 3));                  var argbValue = (a * 0x1FE00 | rgb | ((rgb >> 5) & 0x070707));                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(argbValue >> (8 * j));              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA1R5G5B5,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    var a = (uint)(v & 0x8000);                  var r = (uint)(v & 0x7C00);                  var g = (uint)(v & 0x03E0);                  var b = (uint)(v & 0x001F);                    var rgb = ((r << 9) | (g << 6) | (b << 3));                  var argbValue = (a * 0x1FE00 | rgb | ((rgb >> 5) & 0x070707));                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(argbValue >> (8 * j));              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA4R4G4B4,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(((v >> (4 * j)) & 0x0F) << 4);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA4R4G4B4,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(((v >> (4 * j)) & 0x0F) << 4);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA4R4G4B4,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(((v >> (4 * j)) & 0x0F) << 4);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA4R4G4B4,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(((v >> (4 * j)) & 0x0F) << 4);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA4R4G4B4,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(((v >> (4 * j)) & 0x0F) << 4);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA4R4G4B4,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(((v >> (4 * j)) & 0x0F) << 4);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessA4R4G4B4,The following statement contains a magic number: for (var i = 0; (i + 2) <= 2 * width * height; i += 2) {                  var v = BitConverter.ToUInt16(src' i);                    for (var j = 0; j < 4; ++j)                      dst[i * 2 + j] = (byte)(((v >> (4 * j)) & 0x0F) << 4);              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageConverter,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageConverter.cs,ProcessR3G3B2,The following statement contains a magic number: for (var i = 0; i < width * height; ++i) {                  var r = (uint)(src[i] & 0xE0);                  var g = (uint)(src[i] & 0x1C);                  var b = (uint)(src[i] & 0x03);                    dst[i * 4 + 0] = (byte)(b | (b << 2) | (b << 4) | (b << 6));                  dst[i * 4 + 1] = (byte)(g | (g << 3) | (g << 6));                  dst[i * 4 + 2] = (byte)(r | (r << 3) | (r << 6));                  dst[i * 4 + 3] = 0xFF;              }
Magic Number,SaintCoinach.Imaging,ImageFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageFile.cs,GetBlockOffsets,The following statement contains a magic number: for (var i = BlockInfoOffset + count * EntryLength; i + 2 <= CommonHeader._Buffer.Length; i += 2) {                  var len = BitConverter.ToUInt16(CommonHeader._Buffer' i);                  if (len == 0)                      break;                  offsets.Add(currentOffset);                  currentOffset += len;              }
Magic Number,SaintCoinach.Imaging,ImageFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Imaging\ImageFile.cs,GetBlockOffsets,The following statement contains a magic number: for (var i = BlockInfoOffset + count * EntryLength; i + 2 <= CommonHeader._Buffer.Length; i += 2) {                  var len = BitConverter.ToUInt16(CommonHeader._Buffer' i);                  if (len == 0)                      break;                  offsets.Add(currentOffset);                  currentOffset += len;              }
Magic Number,SaintCoinach.IO,Index2File,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\Index2File.cs,Index2File,The following statement contains a magic number: Offset = (int)((baseOffset & 0xFFFFFFF8) << 3);
Magic Number,SaintCoinach.IO,Index2File,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\Index2File.cs,GetHashCode,The following statement contains a magic number: return (int)(((DatFile << 24) | PackId.GetHashCode()) ^ Offset);
Magic Number,SaintCoinach.IO,PackIdentifier,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\PackIdentifier.cs,GetHashCode,The following statement contains a magic number: return TypeKey << 16 | ExpansionKey << 8 | Number;
Magic Number,SaintCoinach.IO,PackIdentifier,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\PackIdentifier.cs,GetHashCode,The following statement contains a magic number: return TypeKey << 16 | ExpansionKey << 8 | Number;
Magic Number,SaintCoinach.IO,PackIdentifier,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\PackIdentifier.cs,TryGet,The following statement contains a magic number: if (expSep > typeSep) {                  expansion = fullPath.Substring(typeSep + 1' expSep - typeSep - 1);                  var numberEnd = fullPath.IndexOf('_'' expSep);                  if (numberEnd - expSep == 3) {                      if (!byte.TryParse(                          fullPath.Substring(expSep + 1' 2)'                          System.Globalization.NumberStyles.HexNumber | System.Globalization.NumberStyles.AllowHexSpecifier'                          System.Globalization.CultureInfo.CurrentCulture'                          out number))                          number = 0;                  }              }
Magic Number,SaintCoinach.IO,PackIdentifier,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\PackIdentifier.cs,TryGet,The following statement contains a magic number: if (expSep > typeSep) {                  expansion = fullPath.Substring(typeSep + 1' expSep - typeSep - 1);                  var numberEnd = fullPath.IndexOf('_'' expSep);                  if (numberEnd - expSep == 3) {                      if (!byte.TryParse(                          fullPath.Substring(expSep + 1' 2)'                          System.Globalization.NumberStyles.HexNumber | System.Globalization.NumberStyles.AllowHexSpecifier'                          System.Globalization.CultureInfo.CurrentCulture'                          out number))                          number = 0;                  }              }
Magic Number,SaintCoinach.IO,FileCommonHeader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\FileCommonHeader.cs,Read,The following statement contains a magic number: const int FileLengthShift = 7;
Magic Number,SaintCoinach.IO,FileCommonHeader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\FileCommonHeader.cs,Read,The following statement contains a magic number: _Buffer = new byte[4];
Magic Number,SaintCoinach.IO,FileCommonHeader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\FileCommonHeader.cs,Read,The following statement contains a magic number: if (stream.Read(_Buffer' 0' 4) != 4)                  throw new EndOfStreamException();
Magic Number,SaintCoinach.IO,FileCommonHeader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\FileCommonHeader.cs,Read,The following statement contains a magic number: if (stream.Read(_Buffer' 0' 4) != 4)                  throw new EndOfStreamException();
Magic Number,SaintCoinach.IO,FileCommonHeader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\FileCommonHeader.cs,Read,The following statement contains a magic number: var remaining = length - 4;
Magic Number,SaintCoinach.IO,FileCommonHeader,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\FileCommonHeader.cs,Read,The following statement contains a magic number: if (stream.Read(_Buffer' 4' remaining) != remaining)                  throw new EndOfStreamException();
Magic Number,SaintCoinach.IO,Hash,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\Hash.cs,Compute,The following statement contains a magic number: for (var i = start; i < start + size; i++)                  unchecked {                      var b = buffer[i];                      if (b >= 0x41 && b <= 0x5A)                          b = (byte)(((uint)b) + 0x20);                      crc = (crc >> 8) ^ table[(byte)(b ^ crc)];                  }
Magic Number,SaintCoinach.IO,IndexFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\IndexFile.cs,IndexFile,The following statement contains a magic number: Offset = (int)((baseOffset & 0xFFFFFFF8) << 3);
Magic Number,SaintCoinach.IO,IndexFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\IO\IndexFile.cs,GetHashCode,The following statement contains a magic number: return (int)(((DatFile << 24) | PackId.GetHashCode()) ^ Offset);
Magic Number,SaintCoinach.Sound,ScdAdpcmEntry,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdAdpcmEntry.cs,Decode,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((int)(0x14 + WaveHeaderSize + Header.DataSize))' 0' _Decoded' o' 4);
Magic Number,SaintCoinach.Sound,ScdAdpcmEntry,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdAdpcmEntry.cs,Decode,The following statement contains a magic number: o += 4;
Magic Number,SaintCoinach.Sound,ScdAdpcmEntry,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdAdpcmEntry.cs,Decode,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((int)WaveHeaderSize)' 0' _Decoded' o' 4);
Magic Number,SaintCoinach.Sound,ScdAdpcmEntry,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdAdpcmEntry.cs,Decode,The following statement contains a magic number: o += 4;
Magic Number,SaintCoinach.Sound,ScdAdpcmEntry,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdAdpcmEntry.cs,Decode,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((int)Header.DataSize)' 0' _Decoded' o' 4);
Magic Number,SaintCoinach.Sound,ScdAdpcmEntry,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdAdpcmEntry.cs,Decode,The following statement contains a magic number: o += 4;
Magic Number,SaintCoinach.Sound,ScdFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdFile.cs,Decode,The following statement contains a magic number: for (var i = 0; i < ScdHeader.EntryCount; ++i) {                  var headerOffset = ReadInt32(ScdHeader.EntryTableOffset + 4 * i);                  entryHeaders[i] = ReadEntryHeader(headerOffset);                    entryChunkOffsets[i] = headerOffset + System.Runtime.InteropServices.Marshal.SizeOf<ScdEntryHeader>();                  entryDataOffsets[i] = entryChunkOffsets[i];                  for (var j = 0; j < entryHeaders[i].AuxChunkCount; ++j)                      entryDataOffsets[i] += ReadInt32(entryDataOffsets[i] + 4);              }
Magic Number,SaintCoinach.Sound,ScdFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdFile.cs,Decode,The following statement contains a magic number: for (var i = 0; i < ScdHeader.EntryCount; ++i) {                  var headerOffset = ReadInt32(ScdHeader.EntryTableOffset + 4 * i);                  entryHeaders[i] = ReadEntryHeader(headerOffset);                    entryChunkOffsets[i] = headerOffset + System.Runtime.InteropServices.Marshal.SizeOf<ScdEntryHeader>();                  entryDataOffsets[i] = entryChunkOffsets[i];                  for (var j = 0; j < entryHeaders[i].AuxChunkCount; ++j)                      entryDataOffsets[i] += ReadInt32(entryDataOffsets[i] + 4);              }
Magic Number,SaintCoinach.Sound,ScdFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdFile.cs,Init,The following statement contains a magic number: var verBigEndian = ReadInt32(8' false);
Magic Number,SaintCoinach.Sound,ScdFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdFile.cs,Init,The following statement contains a magic number: var verLittleEndian = ReadInt32(8' true);
Magic Number,SaintCoinach.Sound,ScdFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdFile.cs,Init,The following statement contains a magic number: if (verBigEndian == 2 || verBigEndian == 3) {                  _UseLittleEndian = false;              } else if (verLittleEndian == 2 || verLittleEndian == 3) {                  _UseLittleEndian = true;              } else                  throw new InvalidDataException();
Magic Number,SaintCoinach.Sound,ScdFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdFile.cs,Init,The following statement contains a magic number: if (verBigEndian == 2 || verBigEndian == 3) {                  _UseLittleEndian = false;              } else if (verLittleEndian == 2 || verLittleEndian == 3) {                  _UseLittleEndian = true;              } else                  throw new InvalidDataException();
Magic Number,SaintCoinach.Sound,ScdFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdFile.cs,Init,The following statement contains a magic number: if (verBigEndian == 2 || verBigEndian == 3) {                  _UseLittleEndian = false;              } else if (verLittleEndian == 2 || verLittleEndian == 3) {                  _UseLittleEndian = true;              } else                  throw new InvalidDataException();
Magic Number,SaintCoinach.Sound,ScdFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdFile.cs,Init,The following statement contains a magic number: if (verBigEndian == 2 || verBigEndian == 3) {                  _UseLittleEndian = false;              } else if (verLittleEndian == 2 || verLittleEndian == 3) {                  _UseLittleEndian = true;              } else                  throw new InvalidDataException();
Magic Number,SaintCoinach.Sound,ScdFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdFile.cs,ReadInt16,The following statement contains a magic number: var buffer = new byte[2];
Magic Number,SaintCoinach.Sound,ScdFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdFile.cs,ReadInt32,The following statement contains a magic number: var buffer = new byte[4];
Magic Number,SaintCoinach.Sound,ScdFile,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Sound\ScdFile.cs,ReadInt64,The following statement contains a magic number: var buffer = new byte[8];
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheet,The following statement contains a magic number: if (evalArgs.Length < 2)                  throw new InvalidOperationException();
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheet,The following statement contains a magic number: if (evalArgs.Length > 2)                  colKey = ToInteger(evalArgs[2]);
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheet,The following statement contains a magic number: if (evalArgs.Length > 2)                  colKey = ToInteger(evalArgs[2]);
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheet,The following statement contains a magic number: if (value is INode) {                  var innerParams = new EvaluationParameters(parameters);                  innerParams.InputParameters.Clear();                  for (var i = 3; i < evalArgs.Length; ++i)                      innerParams.InputParameters[i - 2] = evalArgs[i];                      value = EvaluationHelper.TryEvaluate((INode)value' innerParams);              }
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheet,The following statement contains a magic number: if (value is INode) {                  var innerParams = new EvaluationParameters(parameters);                  innerParams.InputParameters.Clear();                  for (var i = 3; i < evalArgs.Length; ++i)                      innerParams.InputParameters[i - 2] = evalArgs[i];                      value = EvaluationHelper.TryEvaluate((INode)value' innerParams);              }
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheetWithAttributive,The following statement contains a magic number: if (evalArgs.Length < 3)                  throw new InvalidOperationException();
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheetWithAttributive,The following statement contains a magic number: var rowKey = ToInteger(evalArgs[2]);
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheetWithAttributive,The following statement contains a magic number: if (evalArgs.Length > 3)                  columnKey = ToInteger(evalArgs[3]);
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheetWithAttributive,The following statement contains a magic number: if (evalArgs.Length > 3)                  columnKey = ToInteger(evalArgs[3]);
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheetWithAttributive,The following statement contains a magic number: if (evalArgs.Length > 4)                  attributiveColumnKey += ToInteger(evalArgs[4]);
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheetWithAttributive,The following statement contains a magic number: if (evalArgs.Length > 4)                  attributiveColumnKey += ToInteger(evalArgs[4]);
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheetWithAttributive,The following statement contains a magic number: for (var i = 5; i < evalArgs.Length; ++i)                  innerParams.InputParameters[i - 2] = evalArgs[i];
Magic Number,SaintCoinach.Text,DefaultEvaluationFunctionProvider,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\DefaultEvaluationFunctionProvider.cs,EvaluateSheetWithAttributive,The following statement contains a magic number: for (var i = 5; i < evalArgs.Length; ++i)                  innerParams.InputParameters[i - 2] = evalArgs[i];
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,XivStringDecoder,The following statement contains a magic number: SetDecoder(TagType.Sheet' (i' t' l) => DecodeGenericElementWithVariableArguments(i' t' l' 2' int.MaxValue));
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,XivStringDecoder,The following statement contains a magic number: SetDecoder(TagType.SheetDe' (i' t' l) => DecodeGenericElementWithVariableArguments(i' t' l' 3' int.MaxValue));
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,XivStringDecoder,The following statement contains a magic number: SetDecoder(TagType.SheetEn' (i' t' l) => DecodeGenericElementWithVariableArguments(i' t' l' 3' int.MaxValue));
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,XivStringDecoder,The following statement contains a magic number: SetDecoder(TagType.SheetFr' (i' t' l) => DecodeGenericElementWithVariableArguments(i' t' l' 3' int.MaxValue));
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,XivStringDecoder,The following statement contains a magic number: SetDecoder(TagType.SheetJa' (i' t' l) => DecodeGenericElementWithVariableArguments(i' t' l' 3' int.MaxValue));
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,XivStringDecoder,The following statement contains a magic number: SetDecoder(TagType.Split' (i' t' l) => DecodeGenericElement(i' t' l' 3' false));
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,DecodeExpression,The following statement contains a magic number: switch (exprType) {                  case DecodeExpressionType.Decode: {                          var len = GetInteger(input);                          return Decode(input' len);                      }                  case DecodeExpressionType.Byte:                      return new Nodes.StaticInteger(GetInteger(input' IntegerType.Byte));                  case DecodeExpressionType.Int16_MinusOne:                      return new Nodes.StaticInteger(GetInteger(input' IntegerType.Int16) - 1);                  case DecodeExpressionType.Int16_1:                  case DecodeExpressionType.Int16_2:                      return new Nodes.StaticInteger(GetInteger(input' IntegerType.Int16));                  case DecodeExpressionType.Int24_MinusOne:                      return new Nodes.StaticInteger(GetInteger(input' IntegerType.Int24) - 1);                  case DecodeExpressionType.Int24:                  case DecodeExpressionType.Int24_Unknown:                      return new Nodes.StaticInteger(GetInteger(input' IntegerType.Int24));                  case DecodeExpressionType.Int24_SafeZero: {                          var v16 = input.ReadByte();                          var v8 = input.ReadByte();                          var v0 = input.ReadByte();                            int v = 0;                          if (v16 != byte.MaxValue)                              v |= v16 << 16;                          if (v8 != byte.MaxValue)                              v |= v8 << 8;                          if (v0 != byte.MaxValue)                              v |= v0;                            return new Nodes.StaticInteger(v);                      }                  case DecodeExpressionType.Int32:                      return new Nodes.StaticInteger(GetInteger(input' IntegerType.Int32));                  case DecodeExpressionType.GreaterThanOrEqualTo:                  case DecodeExpressionType.UnknownComparisonE1:                  case DecodeExpressionType.LessThanOrEqualTo:                  case DecodeExpressionType.NotEqual:                  case DecodeExpressionType.Equal: {                          var left = DecodeExpression(input);                          var right = DecodeExpression(input);                          return new Nodes.Comparison(exprType' left' right);                      }                  case DecodeExpressionType.IntegerParameter:                  case DecodeExpressionType.PlayerParameter:                  case DecodeExpressionType.StringParameter:                  case DecodeExpressionType.ObjectParameter:                      return new Nodes.Parameter(exprType' DecodeExpression(input));                  default:                      throw new NotSupportedException();              }
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,DecodeExpression,The following statement contains a magic number: switch (exprType) {                  case DecodeExpressionType.Decode: {                          var len = GetInteger(input);                          return Decode(input' len);                      }                  case DecodeExpressionType.Byte:                      return new Nodes.StaticInteger(GetInteger(input' IntegerType.Byte));                  case DecodeExpressionType.Int16_MinusOne:                      return new Nodes.StaticInteger(GetInteger(input' IntegerType.Int16) - 1);                  case DecodeExpressionType.Int16_1:                  case DecodeExpressionType.Int16_2:                      return new Nodes.StaticInteger(GetInteger(input' IntegerType.Int16));                  case DecodeExpressionType.Int24_MinusOne:                      return new Nodes.StaticInteger(GetInteger(input' IntegerType.Int24) - 1);                  case DecodeExpressionType.Int24:                  case DecodeExpressionType.Int24_Unknown:                      return new Nodes.StaticInteger(GetInteger(input' IntegerType.Int24));                  case DecodeExpressionType.Int24_SafeZero: {                          var v16 = input.ReadByte();                          var v8 = input.ReadByte();                          var v0 = input.ReadByte();                            int v = 0;                          if (v16 != byte.MaxValue)                              v |= v16 << 16;                          if (v8 != byte.MaxValue)                              v |= v8 << 8;                          if (v0 != byte.MaxValue)                              v |= v0;                            return new Nodes.StaticInteger(v);                      }                  case DecodeExpressionType.Int32:                      return new Nodes.StaticInteger(GetInteger(input' IntegerType.Int32));                  case DecodeExpressionType.GreaterThanOrEqualTo:                  case DecodeExpressionType.UnknownComparisonE1:                  case DecodeExpressionType.LessThanOrEqualTo:                  case DecodeExpressionType.NotEqual:                  case DecodeExpressionType.Equal: {                          var left = DecodeExpression(input);                          var right = DecodeExpression(input);                          return new Nodes.Comparison(exprType' left' right);                      }                  case DecodeExpressionType.IntegerParameter:                  case DecodeExpressionType.PlayerParameter:                  case DecodeExpressionType.StringParameter:                  case DecodeExpressionType.ObjectParameter:                      return new Nodes.Parameter(exprType' DecodeExpression(input));                  default:                      throw new NotSupportedException();              }
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,GetInteger,The following statement contains a magic number: switch (type) {                  case IntegerType.Byte:                      return (input.ReadByte());                  case IntegerType.ByteTimes256:                      return (input.ReadByte() * 256);                  case IntegerType.Int16: {                          int v = 0;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int24: {                          int v = 0;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int32: {                          int v = 0;                          v |= input.ReadByte() << 24;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  default:                      throw new NotSupportedException();              }
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,GetInteger,The following statement contains a magic number: switch (type) {                  case IntegerType.Byte:                      return (input.ReadByte());                  case IntegerType.ByteTimes256:                      return (input.ReadByte() * 256);                  case IntegerType.Int16: {                          int v = 0;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int24: {                          int v = 0;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int32: {                          int v = 0;                          v |= input.ReadByte() << 24;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  default:                      throw new NotSupportedException();              }
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,GetInteger,The following statement contains a magic number: switch (type) {                  case IntegerType.Byte:                      return (input.ReadByte());                  case IntegerType.ByteTimes256:                      return (input.ReadByte() * 256);                  case IntegerType.Int16: {                          int v = 0;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int24: {                          int v = 0;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int32: {                          int v = 0;                          v |= input.ReadByte() << 24;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  default:                      throw new NotSupportedException();              }
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,GetInteger,The following statement contains a magic number: switch (type) {                  case IntegerType.Byte:                      return (input.ReadByte());                  case IntegerType.ByteTimes256:                      return (input.ReadByte() * 256);                  case IntegerType.Int16: {                          int v = 0;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int24: {                          int v = 0;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int32: {                          int v = 0;                          v |= input.ReadByte() << 24;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  default:                      throw new NotSupportedException();              }
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,GetInteger,The following statement contains a magic number: switch (type) {                  case IntegerType.Byte:                      return (input.ReadByte());                  case IntegerType.ByteTimes256:                      return (input.ReadByte() * 256);                  case IntegerType.Int16: {                          int v = 0;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int24: {                          int v = 0;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int32: {                          int v = 0;                          v |= input.ReadByte() << 24;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  default:                      throw new NotSupportedException();              }
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,GetInteger,The following statement contains a magic number: switch (type) {                  case IntegerType.Byte:                      return (input.ReadByte());                  case IntegerType.ByteTimes256:                      return (input.ReadByte() * 256);                  case IntegerType.Int16: {                          int v = 0;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int24: {                          int v = 0;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int32: {                          int v = 0;                          v |= input.ReadByte() << 24;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  default:                      throw new NotSupportedException();              }
Magic Number,SaintCoinach.Text,XivStringDecoder,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Text\XivStringDecoder.cs,GetInteger,The following statement contains a magic number: switch (type) {                  case IntegerType.Byte:                      return (input.ReadByte());                  case IntegerType.ByteTimes256:                      return (input.ReadByte() * 256);                  case IntegerType.Int16: {                          int v = 0;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int24: {                          int v = 0;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  case IntegerType.Int32: {                          int v = 0;                          v |= input.ReadByte() << 24;                          v |= input.ReadByte() << 16;                          v |= input.ReadByte() << 8;                          v |= input.ReadByte();                          return (v);                      }                  default:                      throw new NotSupportedException();              }
Magic Number,SaintCoinach.Xiv.Collections,Enumerator,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Collections\ClassJobActionCollection.cs,MoveNext,The following statement contains a magic number: if (_State == 2) {                      result = _SpecialShopEnumerator.MoveNext();                      if (result)                          Current = _SpecialShopEnumerator.Current;                      else                          ++_State;                  }
Magic Number,SaintCoinach.Xiv.Collections,Enumerator,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Collections\ClassJobActionCollection.cs,MoveNext,The following statement contains a magic number: if(_State == 3) {                      result = _FccShopEnumerator.MoveNext();                      if (result)                          Current = _FccShopEnumerator.Current;                      else                          ++_State;                  }
Magic Number,SaintCoinach.Xiv.Collections,EquipSlotCollection,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Collections\EquipSlotCollection.cs,EquipSlotCollection,The following statement contains a magic number: const int SlotCount = 14;
Magic Number,SaintCoinach.Xiv.ItemActions,GpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\GpRecovery.cs,GetParameters,The following statement contains a magic number: const int GpBaseParamKey = 10;
Magic Number,SaintCoinach.Xiv.ItemActions,HpMpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\HpMpRecovery.cs,GetParameters,The following statement contains a magic number: const int HpBaseParamKey = 7;
Magic Number,SaintCoinach.Xiv.ItemActions,HpMpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\HpMpRecovery.cs,GetParameters,The following statement contains a magic number: const int MpBaseParamKey = 8;
Magic Number,SaintCoinach.Xiv.ItemActions,HpMpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\HpMpRecovery.cs,GetParameters,The following statement contains a magic number: if (HpMaximum > 0)                  parameters.AddParameterValue(bpSheet[HpBaseParamKey]'                      new ParameterValueRelativeLimited(ParameterType.Base' HpAmount / 100.0' HpMaximum));              else                  parameters.AddParameterValue(bpSheet[HpBaseParamKey]'                      new ParameterValueFixed(ParameterType.Base' HpAmount));
Magic Number,SaintCoinach.Xiv.ItemActions,HpMpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\HpMpRecovery.cs,GetParameters,The following statement contains a magic number: if (HpMaximumHq != HpMaximum && HpAmountHq != HpAmount) {                  if (HpMaximumHq > 0)                      parameters.AddParameterValue(bpSheet[HpBaseParamKey]'                          new ParameterValueRelativeLimited(ParameterType.Hq' HpAmountHq / 100.0' HpMaximumHq));                  else                      parameters.AddParameterValue(bpSheet[HpBaseParamKey]'                          new ParameterValueFixed(ParameterType.Hq' HpAmountHq));              }
Magic Number,SaintCoinach.Xiv.ItemActions,HpMpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\HpMpRecovery.cs,GetParameters,The following statement contains a magic number: if (MpMaximum > 0)                  parameters.AddParameterValue(bpSheet[MpBaseParamKey]'                      new ParameterValueRelativeLimited(ParameterType.Base' MpAmount / 100.0' MpMaximum));              else                  parameters.AddParameterValue(bpSheet[MpBaseParamKey]'                      new ParameterValueFixed(ParameterType.Base' MpAmount));
Magic Number,SaintCoinach.Xiv.ItemActions,HpMpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\HpMpRecovery.cs,GetParameters,The following statement contains a magic number: if (MpMaximumHq != MpMaximum && MpAmountHq != MpAmount) {                  if (MpMaximumHq > 0)                      parameters.AddParameterValue(bpSheet[MpBaseParamKey]'                          new ParameterValueRelativeLimited(ParameterType.Hq' MpAmountHq / 100.0' MpMaximumHq));                  else                      parameters.AddParameterValue(bpSheet[MpBaseParamKey]'                          new ParameterValueFixed(ParameterType.Hq' MpAmountHq));              }
Magic Number,SaintCoinach.Xiv.ItemActions,HpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\HpRecovery.cs,GetParameters,The following statement contains a magic number: const int HpBaseParamKey = 7;
Magic Number,SaintCoinach.Xiv.ItemActions,HpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\HpRecovery.cs,GetParameters,The following statement contains a magic number: if (Maximum > 0)                  parameters.AddParameterValue(bpSheet[HpBaseParamKey]'                      new ParameterValueRelativeLimited(ParameterType.Base' Amount / 100.0' Maximum));              else                  parameters.AddParameterValue(bpSheet[HpBaseParamKey]'                      new ParameterValueFixed(ParameterType.Base' Amount));
Magic Number,SaintCoinach.Xiv.ItemActions,HpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\HpRecovery.cs,GetParameters,The following statement contains a magic number: if (MaximumHq != Maximum && AmountHq != Amount) {                  if (MaximumHq > 0)                      parameters.AddParameterValue(bpSheet[HpBaseParamKey]'                          new ParameterValueRelativeLimited(ParameterType.Hq' AmountHq / 100.0' MaximumHq));                  else                      parameters.AddParameterValue(bpSheet[HpBaseParamKey]'                          new ParameterValueFixed(ParameterType.Hq' AmountHq));              }
Magic Number,SaintCoinach.Xiv.ItemActions,MpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\MpRecovery.cs,GetParameters,The following statement contains a magic number: const int MpBaseParamKey = 8;
Magic Number,SaintCoinach.Xiv.ItemActions,MpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\MpRecovery.cs,GetParameters,The following statement contains a magic number: if (Maximum > 0)                  parameters.AddParameterValue(bpSheet[MpBaseParamKey]'                      new ParameterValueRelativeLimited(ParameterType.Base' Amount / 100.0' Maximum));              else                  parameters.AddParameterValue(bpSheet[MpBaseParamKey]'                      new ParameterValueFixed(ParameterType.Base' Amount));
Magic Number,SaintCoinach.Xiv.ItemActions,MpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\MpRecovery.cs,GetParameters,The following statement contains a magic number: if (MaximumHq != Maximum && AmountHq != Amount) {                  if (MaximumHq > 0)                      parameters.AddParameterValue(bpSheet[MpBaseParamKey]'                          new ParameterValueRelativeLimited(ParameterType.Hq' AmountHq / 100.0' MaximumHq));                  else                      parameters.AddParameterValue(bpSheet[MpBaseParamKey]'                          new ParameterValueFixed(ParameterType.Hq' AmountHq));              }
Magic Number,SaintCoinach.Xiv.ItemActions,TpRecovery,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\ItemActions\TpRecovery.cs,GetParameters,The following statement contains a magic number: const int TpBaseParamKey = 9;
Magic Number,SaintCoinach.Xiv.Items,Armour,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Items\Armour.cs,BuildPrimaryParameters,The following statement contains a magic number: const int PhysicalDefenseKey = 21;
Magic Number,SaintCoinach.Xiv.Items,Armour,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Items\Armour.cs,BuildPrimaryParameters,The following statement contains a magic number: const int MagicDefenseKey = 24;
Magic Number,SaintCoinach.Xiv.Items,Equipment,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Items\Equipment.cs,GetMaximumParamValue,The following statement contains a magic number: return (int)Math.Round(maxBase * slotFactor * roleModifier / 10000.0' MidpointRounding.AwayFromZero);
Magic Number,SaintCoinach.Xiv.Items,Equipment,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Items\Equipment.cs,AddDefaultParameters,The following statement contains a magic number: const int Count = 6;
Magic Number,SaintCoinach.Xiv.Items,Equipment,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Items\Equipment.cs,AddSpecialParameters,The following statement contains a magic number: const int Count = 6;
Magic Number,SaintCoinach.Xiv.Items,Equipment,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Items\Equipment.cs,AddSpecialParameters,The following statement contains a magic number: switch (ItemSpecialBonus.Key) {                  case 2:                      type = ParameterType.SetBonus;                      break;                  case 4:                      type = ParameterType.Sanction;                      break;                  default:                      type = ParameterType.Hq;                      break;              }
Magic Number,SaintCoinach.Xiv.Items,Equipment,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Items\Equipment.cs,AddSpecialParameters,The following statement contains a magic number: switch (ItemSpecialBonus.Key) {                  case 2:                      type = ParameterType.SetBonus;                      break;                  case 4:                      type = ParameterType.Sanction;                      break;                  default:                      type = ParameterType.Hq;                      break;              }
Magic Number,SaintCoinach.Xiv.Items,Shield,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Items\Shield.cs,BuildPrimaryParameters,The following statement contains a magic number: const int BlockStrengthKey = 17;
Magic Number,SaintCoinach.Xiv.Items,Shield,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Items\Shield.cs,BuildPrimaryParameters,The following statement contains a magic number: const int BlockRateKey = 18;
Magic Number,SaintCoinach.Xiv.Items,Weapon,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Items\Weapon.cs,BuildPrimaryParameters,The following statement contains a magic number: const int PhysicalDamageKey = 12;
Magic Number,SaintCoinach.Xiv.Items,Weapon,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Items\Weapon.cs,BuildPrimaryParameters,The following statement contains a magic number: const int MagicDamageKey = 13;
Magic Number,SaintCoinach.Xiv.Items,Weapon,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\Items\Weapon.cs,BuildPrimaryParameters,The following statement contains a magic number: const int DelayKey = 14;
Missing Default,SaintCoinach.Xiv,QuestRewards,C:\repos\Rogueadyn_SaintCoinach\SaintCoinach\Xiv\QuestRewards.cs,BuildItems,The following switch statement is missing a default case: switch (groupsType) {                  case 0:                      return new QuestRewardItemGroup[0];                  case 1:                      t1 = QuestRewardGroupType.All;                      t2 = QuestRewardGroupType.One;                      break;                  case 3:                      // Special handler                      break;                  case 5:                      t1 = QuestRewardGroupType.OnePerDay;                      t2 = QuestRewardGroupType.OnePerDay;                      break;              }
