Implementation smell,Namespace,Class,File,Method,Description
Complex Method,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,CheckDateRangeWithSelectedDate,Cyclomatic complexity of the method is 8
Complex Method,GreyhoundBE.DAL,BetsDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\BetsDAL.cs,InsertBet,Cyclomatic complexity of the method is 23
Complex Method,GreyhoundBE.DAL,RaceEventDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\RaceEventDAL.cs,GetRaceEventsAtDate,Cyclomatic complexity of the method is 9
Complex Method,GreyhoundBE.DAL,UserDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\UserDAL.cs,LoginUser,Cyclomatic complexity of the method is 19
Long Parameter List,GreyhoundBE.BLL,RaceBLL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BLL\RaceBLL.cs,GetRacesPaged,The method has 5 parameters.
Long Parameter List,GreyhoundBE.BLL,StadiumBLL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BLL\StadiumBLL.cs,GetStadiumsPaged,The method has 5 parameters.
Long Parameter List,GreyhoundBE.BO,Bet,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Bet.cs,Bet,The method has 9 parameters.
Long Parameter List,GreyhoundBE.BO,Bet,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Bet.cs,Bet,The method has 5 parameters.
Long Parameter List,GreyhoundBE.BO,ConnString,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\ConnString.cs,ConnString,The method has 6 parameters.
Long Parameter List,GreyhoundBE.BO,RaceDetail,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\RaceDetail.cs,RaceDetail,The method has 12 parameters.
Long Parameter List,GreyhoundBE.BO,Greyhound,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Greyhound.cs,Greyhound,The method has 5 parameters.
Long Parameter List,GreyhoundBE.BO,Race,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Race.cs,Race,The method has 7 parameters.
Long Parameter List,GreyhoundBE.BO,Stadium,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Stadium.cs,Stadium,The method has 5 parameters.
Long Parameter List,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,AddZerosToDate,The method has 5 parameters.
Long Parameter List,GreyhoundBE.BO,User,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\User.cs,User,The method has 8 parameters.
Long Parameter List,GreyhoundBE.BO,User,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\User.cs,User,The method has 9 parameters.
Long Parameter List,GreyhoundBE.DAL,RaceDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\RaceDAL.cs,GetRacesPaged,The method has 5 parameters.
Long Parameter List,GreyhoundBE.DAL,StadiumDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\StadiumDAL.cs,GetStadiumsPaged,The method has 5 parameters.
Long Parameter List,GreyhoundBE.DAL,UserDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\UserDAL.cs,GetUsersPaged,The method has 5 parameters.
Long Statement,GreyhoundBE.BLL,ConfigurationBLL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BLL\ConfigurationBLL.cs,GetConnectionStringByRole,The length of the statement  "	//return Tools.DecryptData(section.ConnectionStrings["Greyhound.Properties.ConnectionString" + (int)roleid].ConnectionString); " is 126.
Long Statement,GreyhoundBE.BO,ConnString,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\ConnString.cs,CreateConnectionString,The length of the statement  "	string strDbConnectionString = "Data Source=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=[_HOST_])(PORT=1521)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=[_SERVICE_NAME_])));User Id=[_USER_ID_];Password=[_PASSWORD_];"; " is 232.
Long Statement,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,printDbg,The length of the statement  "		File.AppendAllText (Tools.m_strDebugFileName' "[" + System.DateTime.Now + "] " + str_class_name + ":" + str_method_name + ": " + str_debug_message + "\r\n"); " is 157.
Long Statement,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,DecryptData,The length of the statement  "		CryptoStream cCryptoStreamDecrypt = new CryptoStream (cMemStream' new TripleDESCryptoServiceProvider ().CreateDecryptor (m_btaTripleDESKey' m_btaTripleDESInitVector)' CryptoStreamMode.Read); " is 190.
Long Statement,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,DecryptData,The length of the statement  "		Tools.printDbg (new System.Diagnostics.StackFrame ().GetMethod ().DeclaringType.Name' new System.Diagnostics.StackFrame ().GetMethod ().Name' cExc.Message); " is 156.
Long Statement,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,DecryptDataFromMemory,The length of the statement  "		CryptoStream cCryptoStreamDecrypt = new CryptoStream (cMemStream' cTripleDES.CreateDecryptor (bt_key' bt_init_vector)' CryptoStreamMode.Read); " is 142.
Long Statement,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,DecryptDataFromMemory,The length of the statement  "		Tools.printDbg (new System.Diagnostics.StackFrame ().GetMethod ().DeclaringType.Name' new System.Diagnostics.StackFrame ().GetMethod ().Name' cException.Message); " is 162.
Long Statement,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,EncryptData,The length of the statement  "		CryptoStream cCryptoStreamEncrypt = new CryptoStream (cMemStream' new TripleDESCryptoServiceProvider ().CreateEncryptor (m_btaTripleDESKey' m_btaTripleDESInitVector)' CryptoStreamMode.Write); " is 191.
Long Statement,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,EncryptData,The length of the statement  "		Tools.printDbg (new System.Diagnostics.StackFrame ().GetMethod ().DeclaringType.Name' new System.Diagnostics.StackFrame ().GetMethod ().Name' cExc.Message); " is 156.
Long Statement,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,EncryptDataToMemory,The length of the statement  "		CryptoStream cCryptoStreamEncrypt = new CryptoStream (cMemStream' cTripleDES.CreateEncryptor (bt_key' bt_init_vector)' CryptoStreamMode.Write); " is 143.
Long Statement,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,EncryptDataToMemory,The length of the statement  "		Tools.printDbg (new System.Diagnostics.StackFrame ().GetMethod ().DeclaringType.Name' new System.Diagnostics.StackFrame ().GetMethod ().Name' cExc.Message); " is 156.
Long Statement,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,sendMail,The length of the statement  "		string body = "Please click on the link bellow to confirm your registration.\r\n" + "\r\nhttp://greyhounds.org/Greyhound/ConfirmRegistration.aspx?user_id=" + reference + "&email=" + user_email + "\r\n"; " is 202.
Long Statement,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,sendMail,The length of the statement  "		Tools.printDbg (new System.Diagnostics.StackFrame ().GetMethod ().DeclaringType.Name' new System.Diagnostics.StackFrame ().GetMethod ().Name' ex.StackTrace); " is 157.
Long Statement,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,printDebug,The length of the statement  "		File.AppendAllText (DEBUG_FILE_NAME' "\r\n[" + System.DateTime.Now + "] " + stackFrame.GetMethod ().DeclaringType.Name + ":" + stackFrame.GetMethod ().Name + ": " + stackFrame.GetFileLineNumber () + ": " + debugMessage + exceptionInformation); " is 243.
Long Statement,GreyhoundBE.DAL,BetsDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\BetsDAL.cs,GetBetsByUserId,The length of the statement  "			int bet_result = (!sqlDataReader [BETS_BET_RESULT].ToString ().Equals ("") ? Convert.ToInt32 (sqlDataReader [BETS_BET_RESULT].ToString ()) : -1); " is 145.
Long Statement,GreyhoundBE.DAL,RaceDetailDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\RaceDetailDAL.cs,executeQuery,The length of the statement  "			RaceDetail race_detail = new RaceDetail (races_race_id' greyhounds_grey_id' greyhound_name' trainer' birth_date' score' track_number' race_completed' position' odd' prediction' time); " is 183.
Long Statement,GreyhoundBE.DAL,UserDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\UserDAL.cs,GetUserByEmail,The length of the statement  "	OracleConnection connection = new OracleConnection (ConfigurationBLL.GetConnectionStringByRole (Role.ROLES.CONNECTION_USER_ROLE)); " is 130.
Long Statement,GreyhoundBE.DAL,UserDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\UserDAL.cs,GetUserById,The length of the statement  "	OracleConnection connection = new OracleConnection (ConfigurationBLL.GetConnectionStringByRole (Role.ROLES.CONNECTION_USER_ROLE)); " is 130.
Long Statement,GreyhoundBE.DAL,UserDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\UserDAL.cs,ConfirmUserRegistration,The length of the statement  "	OracleConnection connection = new OracleConnection (ConfigurationBLL.GetConnectionStringByRole (Role.ROLES.CONNECTION_USER_ROLE)); " is 130.
Long Statement,GreyhoundBE.DAL,UserDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\UserDAL.cs,RegisterNewUser,The length of the statement  "	OracleConnection connection = new OracleConnection (ConfigurationBLL.GetConnectionStringByRole (Role.ROLES.CONNECTION_USER_ROLE)); " is 130.
Long Statement,GreyhoundBE.DAL,UserDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\UserDAL.cs,UpdateUserSettings,The length of the statement  "	OracleConnection connection = new OracleConnection (ConfigurationBLL.GetConnectionStringByRole (Role.ROLES.CONNECTION_USER_ROLE)); " is 130.
Long Statement,GreyhoundBE.DAL,UserDAL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\DAL\UserDAL.cs,LoginUser,The length of the statement  "		using (var connection = new OracleConnection (ConfigurationBLL.GetConnectionStringByRole (Role.ROLES.ADMINISTRATOR_USER_ROLE))) { " is 129.
Magic Number,GreyhoundBE.BLL,StadiumBLL,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BLL\StadiumBLL.cs,GetAllStadiums,The following statement contains a magic number: return StadiumDAL.GetStadiumsPaged ("1=1"' 1' 100' DatabaseSchema.STADIUMS_STADIUM_ID_FIELD' "ASC");  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,FromHexString,The following statement contains a magic number: for (int nI = 0; nI < str_hex.Length; nI += 2) {  	strData.Append (System.Convert.ToChar (System.Convert.ToUInt32 (str_hex.Substring (nI' 2)' 16)).ToString ());  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,FromHexString,The following statement contains a magic number: for (int nI = 0; nI < str_hex.Length; nI += 2) {  	strData.Append (System.Convert.ToChar (System.Convert.ToUInt32 (str_hex.Substring (nI' 2)' 16)).ToString ());  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,FromHexString,The following statement contains a magic number: for (int nI = 0; nI < str_hex.Length; nI += 2) {  	strData.Append (System.Convert.ToChar (System.Convert.ToUInt32 (str_hex.Substring (nI' 2)' 16)).ToString ());  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,FromHexString,The following statement contains a magic number: nI += 2
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,FromHexString,The following statement contains a magic number: strData.Append (System.Convert.ToChar (System.Convert.ToUInt32 (str_hex.Substring (nI' 2)' 16)).ToString ());  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,FromHexString,The following statement contains a magic number: strData.Append (System.Convert.ToChar (System.Convert.ToUInt32 (str_hex.Substring (nI' 2)' 16)).ToString ());  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,sendMail,The following statement contains a magic number: try {  	var fromAddress = new MailAddress ("username@gmail.com"' "Greyhound Racing");  	const string fromPassword = "password";  	const string subject = "Greyhound Racing Registration";  	string body = "Please click on the link bellow to confirm your registration.\r\n" + "\r\nhttp://greyhounds.org/Greyhound/ConfirmRegistration.aspx?user_id=" + reference + "&email=" + user_email + "\r\n";  	SmtpClient smtp = new SmtpClient {  		Host = "smtp.gmail.com"'  		Port = 587'  		EnableSsl = true'  		DeliveryMethod = SmtpDeliveryMethod.Network'  		UseDefaultCredentials = false'  		Credentials = new NetworkCredential (fromAddress.Address' fromPassword)'  		Timeout = 10000  	};  	using (var message = new MailMessage (fromAddress.Address' user_email) {  		Subject = subject'  		Body = body  	}) {  		smtp.Send (message);  	}  	return true;  }  catch (Exception ex) {  	Tools.printDbg (new System.Diagnostics.StackFrame ().GetMethod ().DeclaringType.Name' new System.Diagnostics.StackFrame ().GetMethod ().Name' ex.StackTrace);  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,sendMail,The following statement contains a magic number: try {  	var fromAddress = new MailAddress ("username@gmail.com"' "Greyhound Racing");  	const string fromPassword = "password";  	const string subject = "Greyhound Racing Registration";  	string body = "Please click on the link bellow to confirm your registration.\r\n" + "\r\nhttp://greyhounds.org/Greyhound/ConfirmRegistration.aspx?user_id=" + reference + "&email=" + user_email + "\r\n";  	SmtpClient smtp = new SmtpClient {  		Host = "smtp.gmail.com"'  		Port = 587'  		EnableSsl = true'  		DeliveryMethod = SmtpDeliveryMethod.Network'  		UseDefaultCredentials = false'  		Credentials = new NetworkCredential (fromAddress.Address' fromPassword)'  		Timeout = 10000  	};  	using (var message = new MailMessage (fromAddress.Address' user_email) {  		Subject = subject'  		Body = body  	}) {  		smtp.Send (message);  	}  	return true;  }  catch (Exception ex) {  	Tools.printDbg (new System.Diagnostics.StackFrame ().GetMethod ().DeclaringType.Name' new System.Diagnostics.StackFrame ().GetMethod ().Name' ex.StackTrace);  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,normalizeRanges,The following statement contains a magic number: if (endRec < 0)  	endRec = 100;  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,normalizeRanges,The following statement contains a magic number: endRec = 100;  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,normalizeRanges,The following statement contains a magic number: if (endRec > startRec + 99)  	endRec = startRec + 99;  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,normalizeRanges,The following statement contains a magic number: if (endRec > startRec + 99)  	endRec = startRec + 99;  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,normalizeRanges,The following statement contains a magic number: endRec = startRec + 99;  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: try {  	if (date.EndsWith ("\n")) {  		date = date.Substring (0' date.Length - 1);  	}  	CultureInfo provider = CultureInfo.InvariantCulture;  	res = DateTime.ParseExact (date' format' provider);  }  catch (Exception) {  	try {  		string[] strDD;  		string[] strToken;  		strDD = date.Split (' ');  		strToken = strDD [0].Split ('-');  		year = Convert.ToInt32 (strToken [2]);  		month = Convert.ToInt32 (strToken [1]);  		day = Convert.ToInt32 (strToken [0]);  		strToken = strDD [1].Split (':');  		hours = Convert.ToInt32 (strToken [0]);  		minutes = Convert.ToInt32 (strToken [1]);  		seconds = Convert.ToInt32 (strToken [2]);  		res = new DateTime (year' month' day' hours' minutes' seconds);  	}  	catch (Exception) {  		try {  			string[] strDD;  			string[] strToken;  			strDD = date.Split (' ');  			strToken = strDD [0].Split ('/');  			year = Convert.ToInt32 (strToken [2]);  			month = Convert.ToInt32 (strToken [1]);  			day = Convert.ToInt32 (strToken [0]);  			strToken = strDD [1].Split (':');  			hours = Convert.ToInt32 (strToken [0]);  			minutes = Convert.ToInt32 (strToken [1]);  			seconds = Convert.ToInt32 (strToken [2]);  			res = new DateTime (year' month' day' hours' minutes' seconds);  		}  		catch (Exception) {  			try {  				//Fri Oct 09 16:15:49 2009  				format = "ddd MMM dd HH:mm:ss yyyy";  				CultureInfo provider = CultureInfo.InvariantCulture;  				res = DateTime.ParseExact (date' format' provider);  			}  			catch (System.Exception e) {  				Tools.printDebug (new System.Diagnostics.StackFrame ()' "FORTH FORMAT (" + date + "|" + format + ") Aborting"' e);  			}  		}  	}  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: try {  	if (date.EndsWith ("\n")) {  		date = date.Substring (0' date.Length - 1);  	}  	CultureInfo provider = CultureInfo.InvariantCulture;  	res = DateTime.ParseExact (date' format' provider);  }  catch (Exception) {  	try {  		string[] strDD;  		string[] strToken;  		strDD = date.Split (' ');  		strToken = strDD [0].Split ('-');  		year = Convert.ToInt32 (strToken [2]);  		month = Convert.ToInt32 (strToken [1]);  		day = Convert.ToInt32 (strToken [0]);  		strToken = strDD [1].Split (':');  		hours = Convert.ToInt32 (strToken [0]);  		minutes = Convert.ToInt32 (strToken [1]);  		seconds = Convert.ToInt32 (strToken [2]);  		res = new DateTime (year' month' day' hours' minutes' seconds);  	}  	catch (Exception) {  		try {  			string[] strDD;  			string[] strToken;  			strDD = date.Split (' ');  			strToken = strDD [0].Split ('/');  			year = Convert.ToInt32 (strToken [2]);  			month = Convert.ToInt32 (strToken [1]);  			day = Convert.ToInt32 (strToken [0]);  			strToken = strDD [1].Split (':');  			hours = Convert.ToInt32 (strToken [0]);  			minutes = Convert.ToInt32 (strToken [1]);  			seconds = Convert.ToInt32 (strToken [2]);  			res = new DateTime (year' month' day' hours' minutes' seconds);  		}  		catch (Exception) {  			try {  				//Fri Oct 09 16:15:49 2009  				format = "ddd MMM dd HH:mm:ss yyyy";  				CultureInfo provider = CultureInfo.InvariantCulture;  				res = DateTime.ParseExact (date' format' provider);  			}  			catch (System.Exception e) {  				Tools.printDebug (new System.Diagnostics.StackFrame ()' "FORTH FORMAT (" + date + "|" + format + ") Aborting"' e);  			}  		}  	}  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: try {  	if (date.EndsWith ("\n")) {  		date = date.Substring (0' date.Length - 1);  	}  	CultureInfo provider = CultureInfo.InvariantCulture;  	res = DateTime.ParseExact (date' format' provider);  }  catch (Exception) {  	try {  		string[] strDD;  		string[] strToken;  		strDD = date.Split (' ');  		strToken = strDD [0].Split ('-');  		year = Convert.ToInt32 (strToken [2]);  		month = Convert.ToInt32 (strToken [1]);  		day = Convert.ToInt32 (strToken [0]);  		strToken = strDD [1].Split (':');  		hours = Convert.ToInt32 (strToken [0]);  		minutes = Convert.ToInt32 (strToken [1]);  		seconds = Convert.ToInt32 (strToken [2]);  		res = new DateTime (year' month' day' hours' minutes' seconds);  	}  	catch (Exception) {  		try {  			string[] strDD;  			string[] strToken;  			strDD = date.Split (' ');  			strToken = strDD [0].Split ('/');  			year = Convert.ToInt32 (strToken [2]);  			month = Convert.ToInt32 (strToken [1]);  			day = Convert.ToInt32 (strToken [0]);  			strToken = strDD [1].Split (':');  			hours = Convert.ToInt32 (strToken [0]);  			minutes = Convert.ToInt32 (strToken [1]);  			seconds = Convert.ToInt32 (strToken [2]);  			res = new DateTime (year' month' day' hours' minutes' seconds);  		}  		catch (Exception) {  			try {  				//Fri Oct 09 16:15:49 2009  				format = "ddd MMM dd HH:mm:ss yyyy";  				CultureInfo provider = CultureInfo.InvariantCulture;  				res = DateTime.ParseExact (date' format' provider);  			}  			catch (System.Exception e) {  				Tools.printDebug (new System.Diagnostics.StackFrame ()' "FORTH FORMAT (" + date + "|" + format + ") Aborting"' e);  			}  		}  	}  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: try {  	if (date.EndsWith ("\n")) {  		date = date.Substring (0' date.Length - 1);  	}  	CultureInfo provider = CultureInfo.InvariantCulture;  	res = DateTime.ParseExact (date' format' provider);  }  catch (Exception) {  	try {  		string[] strDD;  		string[] strToken;  		strDD = date.Split (' ');  		strToken = strDD [0].Split ('-');  		year = Convert.ToInt32 (strToken [2]);  		month = Convert.ToInt32 (strToken [1]);  		day = Convert.ToInt32 (strToken [0]);  		strToken = strDD [1].Split (':');  		hours = Convert.ToInt32 (strToken [0]);  		minutes = Convert.ToInt32 (strToken [1]);  		seconds = Convert.ToInt32 (strToken [2]);  		res = new DateTime (year' month' day' hours' minutes' seconds);  	}  	catch (Exception) {  		try {  			string[] strDD;  			string[] strToken;  			strDD = date.Split (' ');  			strToken = strDD [0].Split ('/');  			year = Convert.ToInt32 (strToken [2]);  			month = Convert.ToInt32 (strToken [1]);  			day = Convert.ToInt32 (strToken [0]);  			strToken = strDD [1].Split (':');  			hours = Convert.ToInt32 (strToken [0]);  			minutes = Convert.ToInt32 (strToken [1]);  			seconds = Convert.ToInt32 (strToken [2]);  			res = new DateTime (year' month' day' hours' minutes' seconds);  		}  		catch (Exception) {  			try {  				//Fri Oct 09 16:15:49 2009  				format = "ddd MMM dd HH:mm:ss yyyy";  				CultureInfo provider = CultureInfo.InvariantCulture;  				res = DateTime.ParseExact (date' format' provider);  			}  			catch (System.Exception e) {  				Tools.printDebug (new System.Diagnostics.StackFrame ()' "FORTH FORMAT (" + date + "|" + format + ") Aborting"' e);  			}  		}  	}  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: try {  	string[] strDD;  	string[] strToken;  	strDD = date.Split (' ');  	strToken = strDD [0].Split ('-');  	year = Convert.ToInt32 (strToken [2]);  	month = Convert.ToInt32 (strToken [1]);  	day = Convert.ToInt32 (strToken [0]);  	strToken = strDD [1].Split (':');  	hours = Convert.ToInt32 (strToken [0]);  	minutes = Convert.ToInt32 (strToken [1]);  	seconds = Convert.ToInt32 (strToken [2]);  	res = new DateTime (year' month' day' hours' minutes' seconds);  }  catch (Exception) {  	try {  		string[] strDD;  		string[] strToken;  		strDD = date.Split (' ');  		strToken = strDD [0].Split ('/');  		year = Convert.ToInt32 (strToken [2]);  		month = Convert.ToInt32 (strToken [1]);  		day = Convert.ToInt32 (strToken [0]);  		strToken = strDD [1].Split (':');  		hours = Convert.ToInt32 (strToken [0]);  		minutes = Convert.ToInt32 (strToken [1]);  		seconds = Convert.ToInt32 (strToken [2]);  		res = new DateTime (year' month' day' hours' minutes' seconds);  	}  	catch (Exception) {  		try {  			//Fri Oct 09 16:15:49 2009  			format = "ddd MMM dd HH:mm:ss yyyy";  			CultureInfo provider = CultureInfo.InvariantCulture;  			res = DateTime.ParseExact (date' format' provider);  		}  		catch (System.Exception e) {  			Tools.printDebug (new System.Diagnostics.StackFrame ()' "FORTH FORMAT (" + date + "|" + format + ") Aborting"' e);  		}  	}  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: try {  	string[] strDD;  	string[] strToken;  	strDD = date.Split (' ');  	strToken = strDD [0].Split ('-');  	year = Convert.ToInt32 (strToken [2]);  	month = Convert.ToInt32 (strToken [1]);  	day = Convert.ToInt32 (strToken [0]);  	strToken = strDD [1].Split (':');  	hours = Convert.ToInt32 (strToken [0]);  	minutes = Convert.ToInt32 (strToken [1]);  	seconds = Convert.ToInt32 (strToken [2]);  	res = new DateTime (year' month' day' hours' minutes' seconds);  }  catch (Exception) {  	try {  		string[] strDD;  		string[] strToken;  		strDD = date.Split (' ');  		strToken = strDD [0].Split ('/');  		year = Convert.ToInt32 (strToken [2]);  		month = Convert.ToInt32 (strToken [1]);  		day = Convert.ToInt32 (strToken [0]);  		strToken = strDD [1].Split (':');  		hours = Convert.ToInt32 (strToken [0]);  		minutes = Convert.ToInt32 (strToken [1]);  		seconds = Convert.ToInt32 (strToken [2]);  		res = new DateTime (year' month' day' hours' minutes' seconds);  	}  	catch (Exception) {  		try {  			//Fri Oct 09 16:15:49 2009  			format = "ddd MMM dd HH:mm:ss yyyy";  			CultureInfo provider = CultureInfo.InvariantCulture;  			res = DateTime.ParseExact (date' format' provider);  		}  		catch (System.Exception e) {  			Tools.printDebug (new System.Diagnostics.StackFrame ()' "FORTH FORMAT (" + date + "|" + format + ") Aborting"' e);  		}  	}  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: try {  	string[] strDD;  	string[] strToken;  	strDD = date.Split (' ');  	strToken = strDD [0].Split ('-');  	year = Convert.ToInt32 (strToken [2]);  	month = Convert.ToInt32 (strToken [1]);  	day = Convert.ToInt32 (strToken [0]);  	strToken = strDD [1].Split (':');  	hours = Convert.ToInt32 (strToken [0]);  	minutes = Convert.ToInt32 (strToken [1]);  	seconds = Convert.ToInt32 (strToken [2]);  	res = new DateTime (year' month' day' hours' minutes' seconds);  }  catch (Exception) {  	try {  		string[] strDD;  		string[] strToken;  		strDD = date.Split (' ');  		strToken = strDD [0].Split ('/');  		year = Convert.ToInt32 (strToken [2]);  		month = Convert.ToInt32 (strToken [1]);  		day = Convert.ToInt32 (strToken [0]);  		strToken = strDD [1].Split (':');  		hours = Convert.ToInt32 (strToken [0]);  		minutes = Convert.ToInt32 (strToken [1]);  		seconds = Convert.ToInt32 (strToken [2]);  		res = new DateTime (year' month' day' hours' minutes' seconds);  	}  	catch (Exception) {  		try {  			//Fri Oct 09 16:15:49 2009  			format = "ddd MMM dd HH:mm:ss yyyy";  			CultureInfo provider = CultureInfo.InvariantCulture;  			res = DateTime.ParseExact (date' format' provider);  		}  		catch (System.Exception e) {  			Tools.printDebug (new System.Diagnostics.StackFrame ()' "FORTH FORMAT (" + date + "|" + format + ") Aborting"' e);  		}  	}  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: try {  	string[] strDD;  	string[] strToken;  	strDD = date.Split (' ');  	strToken = strDD [0].Split ('-');  	year = Convert.ToInt32 (strToken [2]);  	month = Convert.ToInt32 (strToken [1]);  	day = Convert.ToInt32 (strToken [0]);  	strToken = strDD [1].Split (':');  	hours = Convert.ToInt32 (strToken [0]);  	minutes = Convert.ToInt32 (strToken [1]);  	seconds = Convert.ToInt32 (strToken [2]);  	res = new DateTime (year' month' day' hours' minutes' seconds);  }  catch (Exception) {  	try {  		string[] strDD;  		string[] strToken;  		strDD = date.Split (' ');  		strToken = strDD [0].Split ('/');  		year = Convert.ToInt32 (strToken [2]);  		month = Convert.ToInt32 (strToken [1]);  		day = Convert.ToInt32 (strToken [0]);  		strToken = strDD [1].Split (':');  		hours = Convert.ToInt32 (strToken [0]);  		minutes = Convert.ToInt32 (strToken [1]);  		seconds = Convert.ToInt32 (strToken [2]);  		res = new DateTime (year' month' day' hours' minutes' seconds);  	}  	catch (Exception) {  		try {  			//Fri Oct 09 16:15:49 2009  			format = "ddd MMM dd HH:mm:ss yyyy";  			CultureInfo provider = CultureInfo.InvariantCulture;  			res = DateTime.ParseExact (date' format' provider);  		}  		catch (System.Exception e) {  			Tools.printDebug (new System.Diagnostics.StackFrame ()' "FORTH FORMAT (" + date + "|" + format + ") Aborting"' e);  		}  	}  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: year = Convert.ToInt32 (strToken [2]);  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: seconds = Convert.ToInt32 (strToken [2]);  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: try {  	string[] strDD;  	string[] strToken;  	strDD = date.Split (' ');  	strToken = strDD [0].Split ('/');  	year = Convert.ToInt32 (strToken [2]);  	month = Convert.ToInt32 (strToken [1]);  	day = Convert.ToInt32 (strToken [0]);  	strToken = strDD [1].Split (':');  	hours = Convert.ToInt32 (strToken [0]);  	minutes = Convert.ToInt32 (strToken [1]);  	seconds = Convert.ToInt32 (strToken [2]);  	res = new DateTime (year' month' day' hours' minutes' seconds);  }  catch (Exception) {  	try {  		//Fri Oct 09 16:15:49 2009  		format = "ddd MMM dd HH:mm:ss yyyy";  		CultureInfo provider = CultureInfo.InvariantCulture;  		res = DateTime.ParseExact (date' format' provider);  	}  	catch (System.Exception e) {  		Tools.printDebug (new System.Diagnostics.StackFrame ()' "FORTH FORMAT (" + date + "|" + format + ") Aborting"' e);  	}  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: try {  	string[] strDD;  	string[] strToken;  	strDD = date.Split (' ');  	strToken = strDD [0].Split ('/');  	year = Convert.ToInt32 (strToken [2]);  	month = Convert.ToInt32 (strToken [1]);  	day = Convert.ToInt32 (strToken [0]);  	strToken = strDD [1].Split (':');  	hours = Convert.ToInt32 (strToken [0]);  	minutes = Convert.ToInt32 (strToken [1]);  	seconds = Convert.ToInt32 (strToken [2]);  	res = new DateTime (year' month' day' hours' minutes' seconds);  }  catch (Exception) {  	try {  		//Fri Oct 09 16:15:49 2009  		format = "ddd MMM dd HH:mm:ss yyyy";  		CultureInfo provider = CultureInfo.InvariantCulture;  		res = DateTime.ParseExact (date' format' provider);  	}  	catch (System.Exception e) {  		Tools.printDebug (new System.Diagnostics.StackFrame ()' "FORTH FORMAT (" + date + "|" + format + ") Aborting"' e);  	}  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: year = Convert.ToInt32 (strToken [2]);  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,StringToDateTime,The following statement contains a magic number: seconds = Convert.ToInt32 (strToken [2]);  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,AddZerosToDate,The following statement contains a magic number: if (Convert.ToInt32 (str_month) < 10) {  	str_month = "0" + str_month;  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,AddZerosToDate,The following statement contains a magic number: if (Convert.ToInt32 (str_day) < 10) {  	str_day = "0" + str_day;  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,AddZerosToDate,The following statement contains a magic number: if (Convert.ToInt32 (str_hour) < 10) {  	str_hour = "0" + str_hour;  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,AddZerosToDate,The following statement contains a magic number: if (Convert.ToInt32 (str_min) < 10) {  	str_min = "0" + str_min;  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,AddZerosToDate,The following statement contains a magic number: if (Convert.ToInt32 (str_sec) < 10) {  	str_sec = "0" + str_sec;  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,CheckDateRangeWithSelectedDate,The following statement contains a magic number: if (str_sd.CompareTo (ONE_HOUR) == 0) {  	currentDate = currentDate.AddHours (-1);  }  else if (str_sd.CompareTo (ONE_DAY) == 0) {  	currentDate = currentDate.AddDays (-1);  }  else if (str_sd.CompareTo (ONE_WEEK) == 0) {  	currentDate = currentDate.AddDays (-7);  }  else if (str_sd.CompareTo (ONE_MONTH) == 0) {  	currentDate = currentDate.AddMonths (-1);  }  else if (str_sd.CompareTo (SIX_MONTHS) == 0) {  	currentDate = currentDate.AddMonths (-6);  }  else if (str_sd.CompareTo (ONE_YEAR) == 0) {  	currentDate = currentDate.AddYears (-1);  }  else if ((str_sd.CompareTo (EVER) == 0) || (str_sd.CompareTo ("") == 0)) {  	currentDate = new DateTime ();  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,CheckDateRangeWithSelectedDate,The following statement contains a magic number: if (str_sd.CompareTo (ONE_HOUR) == 0) {  	currentDate = currentDate.AddHours (-1);  }  else if (str_sd.CompareTo (ONE_DAY) == 0) {  	currentDate = currentDate.AddDays (-1);  }  else if (str_sd.CompareTo (ONE_WEEK) == 0) {  	currentDate = currentDate.AddDays (-7);  }  else if (str_sd.CompareTo (ONE_MONTH) == 0) {  	currentDate = currentDate.AddMonths (-1);  }  else if (str_sd.CompareTo (SIX_MONTHS) == 0) {  	currentDate = currentDate.AddMonths (-6);  }  else if (str_sd.CompareTo (ONE_YEAR) == 0) {  	currentDate = currentDate.AddYears (-1);  }  else if ((str_sd.CompareTo (EVER) == 0) || (str_sd.CompareTo ("") == 0)) {  	currentDate = new DateTime ();  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,CheckDateRangeWithSelectedDate,The following statement contains a magic number: if (str_sd.CompareTo (ONE_DAY) == 0) {  	currentDate = currentDate.AddDays (-1);  }  else if (str_sd.CompareTo (ONE_WEEK) == 0) {  	currentDate = currentDate.AddDays (-7);  }  else if (str_sd.CompareTo (ONE_MONTH) == 0) {  	currentDate = currentDate.AddMonths (-1);  }  else if (str_sd.CompareTo (SIX_MONTHS) == 0) {  	currentDate = currentDate.AddMonths (-6);  }  else if (str_sd.CompareTo (ONE_YEAR) == 0) {  	currentDate = currentDate.AddYears (-1);  }  else if ((str_sd.CompareTo (EVER) == 0) || (str_sd.CompareTo ("") == 0)) {  	currentDate = new DateTime ();  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,CheckDateRangeWithSelectedDate,The following statement contains a magic number: if (str_sd.CompareTo (ONE_DAY) == 0) {  	currentDate = currentDate.AddDays (-1);  }  else if (str_sd.CompareTo (ONE_WEEK) == 0) {  	currentDate = currentDate.AddDays (-7);  }  else if (str_sd.CompareTo (ONE_MONTH) == 0) {  	currentDate = currentDate.AddMonths (-1);  }  else if (str_sd.CompareTo (SIX_MONTHS) == 0) {  	currentDate = currentDate.AddMonths (-6);  }  else if (str_sd.CompareTo (ONE_YEAR) == 0) {  	currentDate = currentDate.AddYears (-1);  }  else if ((str_sd.CompareTo (EVER) == 0) || (str_sd.CompareTo ("") == 0)) {  	currentDate = new DateTime ();  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,CheckDateRangeWithSelectedDate,The following statement contains a magic number: if (str_sd.CompareTo (ONE_WEEK) == 0) {  	currentDate = currentDate.AddDays (-7);  }  else if (str_sd.CompareTo (ONE_MONTH) == 0) {  	currentDate = currentDate.AddMonths (-1);  }  else if (str_sd.CompareTo (SIX_MONTHS) == 0) {  	currentDate = currentDate.AddMonths (-6);  }  else if (str_sd.CompareTo (ONE_YEAR) == 0) {  	currentDate = currentDate.AddYears (-1);  }  else if ((str_sd.CompareTo (EVER) == 0) || (str_sd.CompareTo ("") == 0)) {  	currentDate = new DateTime ();  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,CheckDateRangeWithSelectedDate,The following statement contains a magic number: if (str_sd.CompareTo (ONE_WEEK) == 0) {  	currentDate = currentDate.AddDays (-7);  }  else if (str_sd.CompareTo (ONE_MONTH) == 0) {  	currentDate = currentDate.AddMonths (-1);  }  else if (str_sd.CompareTo (SIX_MONTHS) == 0) {  	currentDate = currentDate.AddMonths (-6);  }  else if (str_sd.CompareTo (ONE_YEAR) == 0) {  	currentDate = currentDate.AddYears (-1);  }  else if ((str_sd.CompareTo (EVER) == 0) || (str_sd.CompareTo ("") == 0)) {  	currentDate = new DateTime ();  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,CheckDateRangeWithSelectedDate,The following statement contains a magic number: currentDate = currentDate.AddDays (-7);  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,CheckDateRangeWithSelectedDate,The following statement contains a magic number: if (str_sd.CompareTo (ONE_MONTH) == 0) {  	currentDate = currentDate.AddMonths (-1);  }  else if (str_sd.CompareTo (SIX_MONTHS) == 0) {  	currentDate = currentDate.AddMonths (-6);  }  else if (str_sd.CompareTo (ONE_YEAR) == 0) {  	currentDate = currentDate.AddYears (-1);  }  else if ((str_sd.CompareTo (EVER) == 0) || (str_sd.CompareTo ("") == 0)) {  	currentDate = new DateTime ();  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,CheckDateRangeWithSelectedDate,The following statement contains a magic number: if (str_sd.CompareTo (SIX_MONTHS) == 0) {  	currentDate = currentDate.AddMonths (-6);  }  else if (str_sd.CompareTo (ONE_YEAR) == 0) {  	currentDate = currentDate.AddYears (-1);  }  else if ((str_sd.CompareTo (EVER) == 0) || (str_sd.CompareTo ("") == 0)) {  	currentDate = new DateTime ();  }  
Magic Number,GreyhoundBE.BO,Tools,C:\repos\nelsonduvall_greyhoundracingcore\GreyhoundBE\BO\Tools.cs,CheckDateRangeWithSelectedDate,The following statement contains a magic number: currentDate = currentDate.AddMonths (-6);  
