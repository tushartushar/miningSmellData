Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveSensorInfo,Cyclomatic complexity of the method is 8
Complex Method,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,TransformBytes,Cyclomatic complexity of the method is 13
Complex Method,PhoneInfo.ViewModels,MainViewModel,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\ViewModels\MainViewModel.cs,LoadData,Cyclomatic complexity of the method is 28
Long Statement,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveCameraAndFlashInfo,The length of the statement  "		HasFrontCamera = PhotoCaptureDevice.AvailableSensorLocations.Contains<CameraSensorLocation> (CameraSensorLocation.Front); " is 121.
Long Statement,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveCameraAndFlashInfo,The length of the statement  "		System.Diagnostics.Debug.WriteLine (DebugTag + ".ResolveCameraAndFlashInfo(): Failed to resolve the camera availability: " + e.ToString ()); " is 140.
Long Statement,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveMemoryInfo,The length of the statement  "	System.Diagnostics.Debug.WriteLine ("From DeviceStatus class:" + "\n - ApplicationCurrentMemoryUsage: " + TransformBytes (ApplicationCurrentMemoryUsageInBytes' UnitPrefixes.Mega' 1) + " MB" + "\n - ApplicationMemoryUsageLimit: " + TransformBytes (ApplicationMemoryUsageLimitInBytes' UnitPrefixes.Mega' 1) + " MB" + "\n - ApplicationPeakMemoryUsage: " + TransformBytes (ApplicationPeakMemoryUsageInBytes' UnitPrefixes.Mega' 1) + " MB" + "\n - DeviceTotalMemory: " + TransformBytes (DeviceTotalMemoryInBytes' UnitPrefixes.Mega' 1) + " MB"); " is 538.
Long Statement,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The length of the statement  "		System.Diagnostics.Debug.WriteLine (DebugTag + ".ResolveScreenResolution(): Failed to resolve the screen resolution size via DeviceExtendedProperties: " + e.ToString ()); " is 170.
Long Statement,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The length of the statement  "		System.Diagnostics.Debug.WriteLine (DebugTag + ".ResolveScreenResolution(): Failed to resolve the screen DPI values via DeviceExtendedProperties: " + e.ToString ()); " is 165.
Long Statement,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The length of the statement  "		DisplaySizeInInches = Math.Sqrt (Math.Pow (ScreenResolutionSize.Width / RawDpiX' 2) + Math.Pow (ScreenResolutionSize.Height / RawDpiY' 2)); " is 139.
Long Statement,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The length of the statement  "	System.Diagnostics.Debug.WriteLine ("Screen properties:" + "\n - Resolution: " + ScreenResolution + "\n - Resolution in pixels: " + ScreenResolutionSize + "\n - Raw DPI: " + RawDpiX + "' " + RawDpiY + "\n - Screen size: " + DisplaySizeInInches + " inches"); " is 257.
Long Statement,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveFMRadioInfo,The length of the statement  "		System.Diagnostics.Debug.WriteLine (DebugTag + ".ResolveFMRadioInfo(): Failed to get the FM radio instance: " + e.ToString ()); " is 127.
Long Statement,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveOperator,The length of the statement  "		System.Diagnostics.Debug.WriteLine (DebugTag + ".ResolveOperator(): Failed to resolve the operator name via DeviceExtendedProperties: " + e.ToString ()); " is 153.
Long Statement,PhoneInfo,MainPage,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\MainPage.xaml.cs,refreshButton_Click,The length of the statement  "	_progressBarTimer = new Timer (HideProgressBar' null' TimeSpan.FromMilliseconds (ProgressBarDelay)' TimeSpan.FromMilliseconds (ProgressBarDelay)); " is 146.
Long Statement,PhoneInfo.ViewModels,MainViewModel,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\ViewModels\MainViewModel.cs,LoadData,The length of the statement  "	ScreenResolution = AppResources.ScreenResolution + ": " + properties.ScreenResolution.ToString () + "' " + properties.ScreenResolutionSize.Width + "x" + properties.ScreenResolutionSize.Height + " " + AppResources.Pixels; " is 220.
Long Statement,PhoneInfo.ViewModels,MainViewModel,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\ViewModels\MainViewModel.cs,LoadData,The length of the statement  "		MemoryUsedInPercentages = (int)Math.Round ((double)(100 * properties.ApplicationCurrentMemoryUsageInBytes / properties.ApplicationMemoryUsageLimitInBytes)); " is 156.
Long Statement,PhoneInfo.ViewModels,MainViewModel,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\ViewModels\MainViewModel.cs,LoadData,The length of the statement  "		MemoryStatus = DeviceProperties.TransformBytes (properties.ApplicationCurrentMemoryUsageInBytes' DeviceProperties.UnitPrefixes.Mega' 1) + " MB " + AppResources.CurrentlyInUseOf + " " + DeviceProperties.TransformBytes (properties.ApplicationMemoryUsageLimitInBytes' DeviceProperties.UnitPrefixes.Mega' 1) + " MB"; " is 312.
Long Statement,PhoneInfo.ViewModels,MainViewModel,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\ViewModels\MainViewModel.cs,LoadData,The length of the statement  "		AppMemoryPeak = AppResources.AppMemoryPeakedAt + " " + DeviceProperties.TransformBytes (properties.ApplicationPeakMemoryUsageInBytes' DeviceProperties.UnitPrefixes.Mega' 1) + " MB"; " is 181.
Long Statement,PhoneInfo.ViewModels,MainViewModel,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\ViewModels\MainViewModel.cs,LoadData,The length of the statement  "	DeviceTotalMemory = DeviceProperties.TransformBytes (properties.DeviceTotalMemoryInBytes' DeviceProperties.UnitPrefixes.Mega' 0) + " MB"; " is 137.
Empty Catch Block,PhoneInfo.ViewModels,MainViewModel,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\ViewModels\MainViewModel.cs,LoadData,The method has an empty catch block.
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: try {  	ScreenResolutionSize = (Size)DeviceExtendedProperties.GetValue ("PhysicalScreenResolution");  	if (ScreenResolutionSize.Width == 1080) {  		ScreenResolution = Resolutions.HD1080p;  	}  }  catch (Exception e) {  	System.Diagnostics.Debug.WriteLine (DebugTag + ".ResolveScreenResolution(): Failed to resolve the screen resolution size via DeviceExtendedProperties: " + e.ToString ());  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: if (ScreenResolutionSize.Width == 1080) {  	ScreenResolution = Resolutions.HD1080p;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: if (ScreenResolution == Resolutions.Unknown) {  	/* Since the screen resolution could not be resolved via                  * DeviceExtendedProperties' let's use the scale factor                  * instead.                  */Deployment.Current.Dispatcher.BeginInvoke (delegate () {  		switch (Application.Current.Host.Content.ScaleFactor) {  		case 100:  			ScreenResolution = Resolutions.WVGA;  			ScreenResolutionSize = new Size (480' 800);  			break;  		case 150:  			ScreenResolution = Resolutions.HD720p;  			ScreenResolutionSize = new Size (720' 1280);  			break;  		case 160:  			ScreenResolution = Resolutions.WXGA;  			ScreenResolutionSize = new Size (768' 1280);  			break;  		default:  			break;  		}  	});  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: if (ScreenResolution == Resolutions.Unknown) {  	/* Since the screen resolution could not be resolved via                  * DeviceExtendedProperties' let's use the scale factor                  * instead.                  */Deployment.Current.Dispatcher.BeginInvoke (delegate () {  		switch (Application.Current.Host.Content.ScaleFactor) {  		case 100:  			ScreenResolution = Resolutions.WVGA;  			ScreenResolutionSize = new Size (480' 800);  			break;  		case 150:  			ScreenResolution = Resolutions.HD720p;  			ScreenResolutionSize = new Size (720' 1280);  			break;  		case 160:  			ScreenResolution = Resolutions.WXGA;  			ScreenResolutionSize = new Size (768' 1280);  			break;  		default:  			break;  		}  	});  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: if (ScreenResolution == Resolutions.Unknown) {  	/* Since the screen resolution could not be resolved via                  * DeviceExtendedProperties' let's use the scale factor                  * instead.                  */Deployment.Current.Dispatcher.BeginInvoke (delegate () {  		switch (Application.Current.Host.Content.ScaleFactor) {  		case 100:  			ScreenResolution = Resolutions.WVGA;  			ScreenResolutionSize = new Size (480' 800);  			break;  		case 150:  			ScreenResolution = Resolutions.HD720p;  			ScreenResolutionSize = new Size (720' 1280);  			break;  		case 160:  			ScreenResolution = Resolutions.WXGA;  			ScreenResolutionSize = new Size (768' 1280);  			break;  		default:  			break;  		}  	});  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: if (ScreenResolution == Resolutions.Unknown) {  	/* Since the screen resolution could not be resolved via                  * DeviceExtendedProperties' let's use the scale factor                  * instead.                  */Deployment.Current.Dispatcher.BeginInvoke (delegate () {  		switch (Application.Current.Host.Content.ScaleFactor) {  		case 100:  			ScreenResolution = Resolutions.WVGA;  			ScreenResolutionSize = new Size (480' 800);  			break;  		case 150:  			ScreenResolution = Resolutions.HD720p;  			ScreenResolutionSize = new Size (720' 1280);  			break;  		case 160:  			ScreenResolution = Resolutions.WXGA;  			ScreenResolutionSize = new Size (768' 1280);  			break;  		default:  			break;  		}  	});  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: if (ScreenResolution == Resolutions.Unknown) {  	/* Since the screen resolution could not be resolved via                  * DeviceExtendedProperties' let's use the scale factor                  * instead.                  */Deployment.Current.Dispatcher.BeginInvoke (delegate () {  		switch (Application.Current.Host.Content.ScaleFactor) {  		case 100:  			ScreenResolution = Resolutions.WVGA;  			ScreenResolutionSize = new Size (480' 800);  			break;  		case 150:  			ScreenResolution = Resolutions.HD720p;  			ScreenResolutionSize = new Size (720' 1280);  			break;  		case 160:  			ScreenResolution = Resolutions.WXGA;  			ScreenResolutionSize = new Size (768' 1280);  			break;  		default:  			break;  		}  	});  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: if (ScreenResolution == Resolutions.Unknown) {  	/* Since the screen resolution could not be resolved via                  * DeviceExtendedProperties' let's use the scale factor                  * instead.                  */Deployment.Current.Dispatcher.BeginInvoke (delegate () {  		switch (Application.Current.Host.Content.ScaleFactor) {  		case 100:  			ScreenResolution = Resolutions.WVGA;  			ScreenResolutionSize = new Size (480' 800);  			break;  		case 150:  			ScreenResolution = Resolutions.HD720p;  			ScreenResolutionSize = new Size (720' 1280);  			break;  		case 160:  			ScreenResolution = Resolutions.WXGA;  			ScreenResolutionSize = new Size (768' 1280);  			break;  		default:  			break;  		}  	});  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: if (ScreenResolution == Resolutions.Unknown) {  	/* Since the screen resolution could not be resolved via                  * DeviceExtendedProperties' let's use the scale factor                  * instead.                  */Deployment.Current.Dispatcher.BeginInvoke (delegate () {  		switch (Application.Current.Host.Content.ScaleFactor) {  		case 100:  			ScreenResolution = Resolutions.WVGA;  			ScreenResolutionSize = new Size (480' 800);  			break;  		case 150:  			ScreenResolution = Resolutions.HD720p;  			ScreenResolutionSize = new Size (720' 1280);  			break;  		case 160:  			ScreenResolution = Resolutions.WXGA;  			ScreenResolutionSize = new Size (768' 1280);  			break;  		default:  			break;  		}  	});  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: if (ScreenResolution == Resolutions.Unknown) {  	/* Since the screen resolution could not be resolved via                  * DeviceExtendedProperties' let's use the scale factor                  * instead.                  */Deployment.Current.Dispatcher.BeginInvoke (delegate () {  		switch (Application.Current.Host.Content.ScaleFactor) {  		case 100:  			ScreenResolution = Resolutions.WVGA;  			ScreenResolutionSize = new Size (480' 800);  			break;  		case 150:  			ScreenResolution = Resolutions.HD720p;  			ScreenResolutionSize = new Size (720' 1280);  			break;  		case 160:  			ScreenResolution = Resolutions.WXGA;  			ScreenResolutionSize = new Size (768' 1280);  			break;  		default:  			break;  		}  	});  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: if (ScreenResolution == Resolutions.Unknown) {  	/* Since the screen resolution could not be resolved via                  * DeviceExtendedProperties' let's use the scale factor                  * instead.                  */Deployment.Current.Dispatcher.BeginInvoke (delegate () {  		switch (Application.Current.Host.Content.ScaleFactor) {  		case 100:  			ScreenResolution = Resolutions.WVGA;  			ScreenResolutionSize = new Size (480' 800);  			break;  		case 150:  			ScreenResolution = Resolutions.HD720p;  			ScreenResolutionSize = new Size (720' 1280);  			break;  		case 160:  			ScreenResolution = Resolutions.WXGA;  			ScreenResolutionSize = new Size (768' 1280);  			break;  		default:  			break;  		}  	});  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: Deployment.Current.Dispatcher.BeginInvoke (delegate () {  	switch (Application.Current.Host.Content.ScaleFactor) {  	case 100:  		ScreenResolution = Resolutions.WVGA;  		ScreenResolutionSize = new Size (480' 800);  		break;  	case 150:  		ScreenResolution = Resolutions.HD720p;  		ScreenResolutionSize = new Size (720' 1280);  		break;  	case 160:  		ScreenResolution = Resolutions.WXGA;  		ScreenResolutionSize = new Size (768' 1280);  		break;  	default:  		break;  	}  });  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: Deployment.Current.Dispatcher.BeginInvoke (delegate () {  	switch (Application.Current.Host.Content.ScaleFactor) {  	case 100:  		ScreenResolution = Resolutions.WVGA;  		ScreenResolutionSize = new Size (480' 800);  		break;  	case 150:  		ScreenResolution = Resolutions.HD720p;  		ScreenResolutionSize = new Size (720' 1280);  		break;  	case 160:  		ScreenResolution = Resolutions.WXGA;  		ScreenResolutionSize = new Size (768' 1280);  		break;  	default:  		break;  	}  });  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: Deployment.Current.Dispatcher.BeginInvoke (delegate () {  	switch (Application.Current.Host.Content.ScaleFactor) {  	case 100:  		ScreenResolution = Resolutions.WVGA;  		ScreenResolutionSize = new Size (480' 800);  		break;  	case 150:  		ScreenResolution = Resolutions.HD720p;  		ScreenResolutionSize = new Size (720' 1280);  		break;  	case 160:  		ScreenResolution = Resolutions.WXGA;  		ScreenResolutionSize = new Size (768' 1280);  		break;  	default:  		break;  	}  });  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: Deployment.Current.Dispatcher.BeginInvoke (delegate () {  	switch (Application.Current.Host.Content.ScaleFactor) {  	case 100:  		ScreenResolution = Resolutions.WVGA;  		ScreenResolutionSize = new Size (480' 800);  		break;  	case 150:  		ScreenResolution = Resolutions.HD720p;  		ScreenResolutionSize = new Size (720' 1280);  		break;  	case 160:  		ScreenResolution = Resolutions.WXGA;  		ScreenResolutionSize = new Size (768' 1280);  		break;  	default:  		break;  	}  });  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: Deployment.Current.Dispatcher.BeginInvoke (delegate () {  	switch (Application.Current.Host.Content.ScaleFactor) {  	case 100:  		ScreenResolution = Resolutions.WVGA;  		ScreenResolutionSize = new Size (480' 800);  		break;  	case 150:  		ScreenResolution = Resolutions.HD720p;  		ScreenResolutionSize = new Size (720' 1280);  		break;  	case 160:  		ScreenResolution = Resolutions.WXGA;  		ScreenResolutionSize = new Size (768' 1280);  		break;  	default:  		break;  	}  });  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: Deployment.Current.Dispatcher.BeginInvoke (delegate () {  	switch (Application.Current.Host.Content.ScaleFactor) {  	case 100:  		ScreenResolution = Resolutions.WVGA;  		ScreenResolutionSize = new Size (480' 800);  		break;  	case 150:  		ScreenResolution = Resolutions.HD720p;  		ScreenResolutionSize = new Size (720' 1280);  		break;  	case 160:  		ScreenResolution = Resolutions.WXGA;  		ScreenResolutionSize = new Size (768' 1280);  		break;  	default:  		break;  	}  });  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: Deployment.Current.Dispatcher.BeginInvoke (delegate () {  	switch (Application.Current.Host.Content.ScaleFactor) {  	case 100:  		ScreenResolution = Resolutions.WVGA;  		ScreenResolutionSize = new Size (480' 800);  		break;  	case 150:  		ScreenResolution = Resolutions.HD720p;  		ScreenResolutionSize = new Size (720' 1280);  		break;  	case 160:  		ScreenResolution = Resolutions.WXGA;  		ScreenResolutionSize = new Size (768' 1280);  		break;  	default:  		break;  	}  });  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: Deployment.Current.Dispatcher.BeginInvoke (delegate () {  	switch (Application.Current.Host.Content.ScaleFactor) {  	case 100:  		ScreenResolution = Resolutions.WVGA;  		ScreenResolutionSize = new Size (480' 800);  		break;  	case 150:  		ScreenResolution = Resolutions.HD720p;  		ScreenResolutionSize = new Size (720' 1280);  		break;  	case 160:  		ScreenResolution = Resolutions.WXGA;  		ScreenResolutionSize = new Size (768' 1280);  		break;  	default:  		break;  	}  });  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: Deployment.Current.Dispatcher.BeginInvoke (delegate () {  	switch (Application.Current.Host.Content.ScaleFactor) {  	case 100:  		ScreenResolution = Resolutions.WVGA;  		ScreenResolutionSize = new Size (480' 800);  		break;  	case 150:  		ScreenResolution = Resolutions.HD720p;  		ScreenResolutionSize = new Size (720' 1280);  		break;  	case 160:  		ScreenResolution = Resolutions.WXGA;  		ScreenResolutionSize = new Size (768' 1280);  		break;  	default:  		break;  	}  });  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: switch (Application.Current.Host.Content.ScaleFactor) {  case 100:  	ScreenResolution = Resolutions.WVGA;  	ScreenResolutionSize = new Size (480' 800);  	break;  case 150:  	ScreenResolution = Resolutions.HD720p;  	ScreenResolutionSize = new Size (720' 1280);  	break;  case 160:  	ScreenResolution = Resolutions.WXGA;  	ScreenResolutionSize = new Size (768' 1280);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: switch (Application.Current.Host.Content.ScaleFactor) {  case 100:  	ScreenResolution = Resolutions.WVGA;  	ScreenResolutionSize = new Size (480' 800);  	break;  case 150:  	ScreenResolution = Resolutions.HD720p;  	ScreenResolutionSize = new Size (720' 1280);  	break;  case 160:  	ScreenResolution = Resolutions.WXGA;  	ScreenResolutionSize = new Size (768' 1280);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: switch (Application.Current.Host.Content.ScaleFactor) {  case 100:  	ScreenResolution = Resolutions.WVGA;  	ScreenResolutionSize = new Size (480' 800);  	break;  case 150:  	ScreenResolution = Resolutions.HD720p;  	ScreenResolutionSize = new Size (720' 1280);  	break;  case 160:  	ScreenResolution = Resolutions.WXGA;  	ScreenResolutionSize = new Size (768' 1280);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: switch (Application.Current.Host.Content.ScaleFactor) {  case 100:  	ScreenResolution = Resolutions.WVGA;  	ScreenResolutionSize = new Size (480' 800);  	break;  case 150:  	ScreenResolution = Resolutions.HD720p;  	ScreenResolutionSize = new Size (720' 1280);  	break;  case 160:  	ScreenResolution = Resolutions.WXGA;  	ScreenResolutionSize = new Size (768' 1280);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: switch (Application.Current.Host.Content.ScaleFactor) {  case 100:  	ScreenResolution = Resolutions.WVGA;  	ScreenResolutionSize = new Size (480' 800);  	break;  case 150:  	ScreenResolution = Resolutions.HD720p;  	ScreenResolutionSize = new Size (720' 1280);  	break;  case 160:  	ScreenResolution = Resolutions.WXGA;  	ScreenResolutionSize = new Size (768' 1280);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: switch (Application.Current.Host.Content.ScaleFactor) {  case 100:  	ScreenResolution = Resolutions.WVGA;  	ScreenResolutionSize = new Size (480' 800);  	break;  case 150:  	ScreenResolution = Resolutions.HD720p;  	ScreenResolutionSize = new Size (720' 1280);  	break;  case 160:  	ScreenResolution = Resolutions.WXGA;  	ScreenResolutionSize = new Size (768' 1280);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: switch (Application.Current.Host.Content.ScaleFactor) {  case 100:  	ScreenResolution = Resolutions.WVGA;  	ScreenResolutionSize = new Size (480' 800);  	break;  case 150:  	ScreenResolution = Resolutions.HD720p;  	ScreenResolutionSize = new Size (720' 1280);  	break;  case 160:  	ScreenResolution = Resolutions.WXGA;  	ScreenResolutionSize = new Size (768' 1280);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: switch (Application.Current.Host.Content.ScaleFactor) {  case 100:  	ScreenResolution = Resolutions.WVGA;  	ScreenResolutionSize = new Size (480' 800);  	break;  case 150:  	ScreenResolution = Resolutions.HD720p;  	ScreenResolutionSize = new Size (720' 1280);  	break;  case 160:  	ScreenResolution = Resolutions.WXGA;  	ScreenResolutionSize = new Size (768' 1280);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: switch (Application.Current.Host.Content.ScaleFactor) {  case 100:  	ScreenResolution = Resolutions.WVGA;  	ScreenResolutionSize = new Size (480' 800);  	break;  case 150:  	ScreenResolution = Resolutions.HD720p;  	ScreenResolutionSize = new Size (720' 1280);  	break;  case 160:  	ScreenResolution = Resolutions.WXGA;  	ScreenResolutionSize = new Size (768' 1280);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: ScreenResolutionSize = new Size (480' 800);  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: ScreenResolutionSize = new Size (480' 800);  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: ScreenResolutionSize = new Size (720' 1280);  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: ScreenResolutionSize = new Size (720' 1280);  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: ScreenResolutionSize = new Size (768' 1280);  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: ScreenResolutionSize = new Size (768' 1280);  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: if (RawDpiX > 0 && RawDpiY > 0) {  	// Calculate screen diagonal in inches.  	DisplaySizeInInches = Math.Sqrt (Math.Pow (ScreenResolutionSize.Width / RawDpiX' 2) + Math.Pow (ScreenResolutionSize.Height / RawDpiY' 2));  	DisplaySizeInInches = Math.Round (DisplaySizeInInches' 1);  	// One decimal is enough  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: if (RawDpiX > 0 && RawDpiY > 0) {  	// Calculate screen diagonal in inches.  	DisplaySizeInInches = Math.Sqrt (Math.Pow (ScreenResolutionSize.Width / RawDpiX' 2) + Math.Pow (ScreenResolutionSize.Height / RawDpiY' 2));  	DisplaySizeInInches = Math.Round (DisplaySizeInInches' 1);  	// One decimal is enough  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: DisplaySizeInInches = Math.Sqrt (Math.Pow (ScreenResolutionSize.Width / RawDpiX' 2) + Math.Pow (ScreenResolutionSize.Height / RawDpiY' 2));  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,ResolveScreenResolution,The following statement contains a magic number: DisplaySizeInInches = Math.Sqrt (Math.Pow (ScreenResolutionSize.Width / RawDpiX' 2) + Math.Pow (ScreenResolutionSize.Height / RawDpiY' 2));  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,TransformBytes,The following statement contains a magic number: switch (toUnit) {  case UnitPrefixes.Kilo:  	denominator = 1024;  	break;  case UnitPrefixes.Mega:  	denominator = 1024 * 1024;  	break;  case UnitPrefixes.Giga:  	denominator = Math.Pow (1024' 3);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,TransformBytes,The following statement contains a magic number: switch (toUnit) {  case UnitPrefixes.Kilo:  	denominator = 1024;  	break;  case UnitPrefixes.Mega:  	denominator = 1024 * 1024;  	break;  case UnitPrefixes.Giga:  	denominator = Math.Pow (1024' 3);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,TransformBytes,The following statement contains a magic number: switch (toUnit) {  case UnitPrefixes.Kilo:  	denominator = 1024;  	break;  case UnitPrefixes.Mega:  	denominator = 1024 * 1024;  	break;  case UnitPrefixes.Giga:  	denominator = Math.Pow (1024' 3);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,TransformBytes,The following statement contains a magic number: switch (toUnit) {  case UnitPrefixes.Kilo:  	denominator = 1024;  	break;  case UnitPrefixes.Mega:  	denominator = 1024 * 1024;  	break;  case UnitPrefixes.Giga:  	denominator = Math.Pow (1024' 3);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,TransformBytes,The following statement contains a magic number: switch (toUnit) {  case UnitPrefixes.Kilo:  	denominator = 1024;  	break;  case UnitPrefixes.Mega:  	denominator = 1024 * 1024;  	break;  case UnitPrefixes.Giga:  	denominator = Math.Pow (1024' 3);  	break;  default:  	break;  }  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,TransformBytes,The following statement contains a magic number: denominator = 1024;  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,TransformBytes,The following statement contains a magic number: denominator = 1024 * 1024;  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,TransformBytes,The following statement contains a magic number: denominator = 1024 * 1024;  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,TransformBytes,The following statement contains a magic number: denominator = Math.Pow (1024' 3);  
Magic Number,PhoneInfo,DeviceProperties,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\DeviceProperties.cs,TransformBytes,The following statement contains a magic number: denominator = Math.Pow (1024' 3);  
Magic Number,PhoneInfo.ViewModels,MainViewModel,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: try {  	MemoryUsedInPercentages = (int)Math.Round ((double)(100 * properties.ApplicationCurrentMemoryUsageInBytes / properties.ApplicationMemoryUsageLimitInBytes));  	MemoryStatus = DeviceProperties.TransformBytes (properties.ApplicationCurrentMemoryUsageInBytes' DeviceProperties.UnitPrefixes.Mega' 1) + " MB " + AppResources.CurrentlyInUseOf + " " + DeviceProperties.TransformBytes (properties.ApplicationMemoryUsageLimitInBytes' DeviceProperties.UnitPrefixes.Mega' 1) + " MB";  }  catch (Exception) {  	MemoryStatus = AppResources.NotAvailable;  }  
Magic Number,PhoneInfo.ViewModels,MainViewModel,C:\repos\nokia-developer_hardware-info\PhoneInfoWP8\PhoneInfo\ViewModels\MainViewModel.cs,LoadData,The following statement contains a magic number: MemoryUsedInPercentages = (int)Math.Round ((double)(100 * properties.ApplicationCurrentMemoryUsageInBytes / properties.ApplicationMemoryUsageLimitInBytes));  
