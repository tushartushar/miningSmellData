Implementation smell,Namespace,Class,File,Method,Description
Complex Method,JdSoft.Apple.Apns.Notifications,NotificationConnection,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationConnection.cs,workerMethod,Cyclomatic complexity of the method is 8
Complex Method,JdSoft.Apple.Apns.Notifications,NotificationPayload,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationPayload.cs,ToJson,Cyclomatic complexity of the method is 10
Long Parameter List,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,selectLocalCertificate,The method has 5 parameters. Parameters: sender' targetHost' localCertificates' remoteCertificate' acceptableIssuers
Long Parameter List,JdSoft.Apple.Apns.Notifications,NotificationService,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationService.cs,NotificationService,The method has 5 parameters. Parameters: host' port' p12File' p12FilePassword' connections
Long Parameter List,JdSoft.Apple.Apns.Notifications,NotificationService,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationService.cs,NotificationService,The method has 5 parameters. Parameters: host' port' p12FileBytes' p12FilePassword' connections
Long Statement,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,OpenSslStream,The length of the statement  "			apnsStream = new SslStream(apnsClient.GetStream()' false' new RemoteCertificateValidationCallback(validateServerCertificate)' new LocalCertificateSelectionCallback(selectLocalCertificate)); " is 189.
Complex Conditional,JdSoft.Apple.Apns.Notifications,NotificationPayload,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationPayload.cs,ToJson,The conditional expression  "!string.IsNullOrEmpty(this.Alert.Body)  					&& string.IsNullOrEmpty(this.Alert.LocalizedKey)  					&& string.IsNullOrEmpty(this.Alert.ActionLocalizedKey)  					&& (this.Alert.LocalizedArgs == null || this.Alert.LocalizedArgs.Count <= 0)  					&& !this.HideActionButton"  is complex.
Empty Catch Block,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,Dispose,The method has an empty catch block.
Empty Catch Block,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,Dispose,The method has an empty catch block.
Empty Catch Block,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,Dispose,The method has an empty catch block.
Empty Catch Block,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,Dispose,The method has an empty catch block.
Empty Catch Block,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,Dispose,The method has an empty catch block.
Empty Catch Block,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,Reconnect,The method has an empty catch block.
Empty Catch Block,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,Reconnect,The method has an empty catch block.
Empty Catch Block,JdSoft.Apple.Apns.Notifications,NotificationBatch,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,SendMessages,The method has an empty catch block.
Empty Catch Block,JdSoft.Apple.Apns.Notifications,NotificationBatch,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,SendMessages,The method has an empty catch block.
Empty Catch Block,JdSoft.Apple.Apns.Notifications,NotificationConnection,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationConnection.cs,Dispose,The method has an empty catch block.
Magic Number,JdSoft.Apple.Apns.Notifications,Notification,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\Notification.cs,ToBytes,The following statement contains a magic number: byte[] deviceToken = new byte[DeviceToken.Length / 2];
Magic Number,JdSoft.Apple.Apns.Notifications,Notification,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\Notification.cs,ToBytes,The following statement contains a magic number: for (int i = 0; i < deviceToken.Length; i++)  				deviceToken[i] = byte.Parse(DeviceToken.Substring(i * 2' 2)' System.Globalization.NumberStyles.HexNumber);
Magic Number,JdSoft.Apple.Apns.Notifications,Notification,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\Notification.cs,ToBytes,The following statement contains a magic number: for (int i = 0; i < deviceToken.Length; i++)  				deviceToken[i] = byte.Parse(DeviceToken.Substring(i * 2' 2)' System.Globalization.NumberStyles.HexNumber);
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,NotificationChannel,The following statement contains a magic number: ReconnectDelay = 3000;
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,NotificationChannel,The following statement contains a magic number: ConnectRetries = 6;
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,Reconnect,The following statement contains a magic number: if (!firstConnect)  			{  				for (int i = 0; i < this.ReconnectDelay; i += 100)  					System.Threading.Thread.Sleep(100);  			}  			else  			{  				firstConnect = false;  			}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,Reconnect,The following statement contains a magic number: if (!firstConnect)  			{  				for (int i = 0; i < this.ReconnectDelay; i += 100)  					System.Threading.Thread.Sleep(100);  			}  			else  			{  				firstConnect = false;  			}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,Connect,The following statement contains a magic number: if (connectionAttempts >= 3)  			{  				if (this.Error != null)  					this.Error(this' new NotificationException(3' "Too many connection attempts"));    				return false;  			}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,Connect,The following statement contains a magic number: if (connectionAttempts >= 3)  			{  				if (this.Error != null)  					this.Error(this' new NotificationException(3' "Too many connection attempts"));    				return false;  			}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,OpenSslStream,The following statement contains a magic number: if (!apnsStream.IsMutuallyAuthenticated)  			{  				if (this.Error != null)  					this.Error(this' new NotificationException(4' "Ssl Stream Failed to Authenticate"));    				return false;  			}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationChannel,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,OpenSslStream,The following statement contains a magic number: if (!apnsStream.CanWrite)  			{  				if (this.Error != null)  					this.Error(this' new NotificationException(5' "Ssl Stream is not Writable"));    				return false;  			}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationBatch,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,NotificationBatch,The following statement contains a magic number: this.readBuffer = new byte[6];
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationBatch,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,SendMessages,The following statement contains a magic number: IAsyncResult ar = this.channel.apnsStream.BeginRead(this.readBuffer' 0' 6' new AsyncCallback(OnAsyncRead)' null);
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationBatch,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,SendMessages,The following statement contains a magic number: if (!ar.IsCompleted)  				{  					// Give Apple a chance to let us know something went wrong  					ar.AsyncWaitHandle.WaitOne(500);  					if (!ar.IsCompleted)  					{  						// Dispose the channel' which will force the async callback'  						// resulting in an ObjectDisposedException on EndRead.  						channel.apnsStream.Dispose();  					}  				}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationBatch,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,OnAsyncRead,The following statement contains a magic number: try  				{  					if (channel.apnsStream.EndRead(ar) == 6 && readBuffer[0] == 8)  					{  						DeliveryErrorType error = (DeliveryErrorType)readBuffer[1];  						faulted = true;  						int index = IPAddress.NetworkToHostOrder(BitConverter.ToInt32(readBuffer' 2));  						Notification faultedNotification = notifications[index];  						errors.Add(new NotificationDeliveryError(error' faultedNotification));  						current = index + 1;  						channel.ForceReconnect();  					}  				}  				catch (ObjectDisposedException)  				{  					// This is how we "cancel" the asynchronous read' so just make sure  					// the channel must reconnect to try again.  					channel.ForceReconnect();  				}  				catch (Exception x)  				{  					faulted = true;  					Console.WriteLine(x.Message);  				}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationBatch,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,OnAsyncRead,The following statement contains a magic number: try  				{  					if (channel.apnsStream.EndRead(ar) == 6 && readBuffer[0] == 8)  					{  						DeliveryErrorType error = (DeliveryErrorType)readBuffer[1];  						faulted = true;  						int index = IPAddress.NetworkToHostOrder(BitConverter.ToInt32(readBuffer' 2));  						Notification faultedNotification = notifications[index];  						errors.Add(new NotificationDeliveryError(error' faultedNotification));  						current = index + 1;  						channel.ForceReconnect();  					}  				}  				catch (ObjectDisposedException)  				{  					// This is how we "cancel" the asynchronous read' so just make sure  					// the channel must reconnect to try again.  					channel.ForceReconnect();  				}  				catch (Exception x)  				{  					faulted = true;  					Console.WriteLine(x.Message);  				}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationBatch,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationChannel.cs,OnAsyncRead,The following statement contains a magic number: try  				{  					if (channel.apnsStream.EndRead(ar) == 6 && readBuffer[0] == 8)  					{  						DeliveryErrorType error = (DeliveryErrorType)readBuffer[1];  						faulted = true;  						int index = IPAddress.NetworkToHostOrder(BitConverter.ToInt32(readBuffer' 2));  						Notification faultedNotification = notifications[index];  						errors.Add(new NotificationDeliveryError(error' faultedNotification));  						current = index + 1;  						channel.ForceReconnect();  					}  				}  				catch (ObjectDisposedException)  				{  					// This is how we "cancel" the asynchronous read' so just make sure  					// the channel must reconnect to try again.  					channel.ForceReconnect();  				}  				catch (Exception x)  				{  					faulted = true;  					Console.WriteLine(x.Message);  				}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationConnection,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationConnection.cs,Close,The following statement contains a magic number: int maxSleep = 10000;
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationConnection,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationConnection.cs,Close,The following statement contains a magic number: while (notifications.Count > 0 && slept <= maxSleep)  			{  				Thread.Sleep(100);  				slept += 100;  			}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationConnection,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationConnection.cs,Close,The following statement contains a magic number: while (notifications.Count > 0 && slept <= maxSleep)  			{  				Thread.Sleep(100);  				slept += 100;  			}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationConnection,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationConnection.cs,start,The following statement contains a magic number: ReconnectDelay = 3000;
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationConnection,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationConnection.cs,start,The following statement contains a magic number: SendRetries = 3;
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationConnection,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationConnection.cs,start,The following statement contains a magic number: apnsChannel.ConnectRetries = SendRetries * 2;
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationConnection,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationConnection.cs,workerMethod,The following statement contains a magic number: while (!disposing && !closing)  			{  				try  				{  					while (this.notifications.Count > 0 && !disposing)  					{  						Notification notification = this.notifications.Dequeue();    						int tries = 0;  						bool sent = false;    						while (!sent && tries < this.SendRetries)  						{  							try  							{  								if (!disposing)  								{  									apnsChannel.EnsureConnection();    									try  									{  										apnsChannel.Send(notification);  									}  									catch (BadDeviceTokenException btex)  									{  									    var onBadDeviceToken = BadDeviceToken;  									    if (onBadDeviceToken != null)                                              onBadDeviceToken(this' btex);  									}  									catch (NotificationLengthException nlex)  									{  									    var onNotificationTooLong = NotificationTooLong;  									    if (onNotificationTooLong != null)  											onNotificationTooLong(this' nlex);  									}    								    var onNotificationSuccess = NotificationSuccess;  								    if (onNotificationSuccess != null)  										onNotificationSuccess(this' notification);    									sent = true;  								}  								else  								{  									apnsChannel.ForceReconnect();  								}  							}  							catch (Exception ex)  							{  							    var onError = Error;  							    if (onError != null)                                      onError(this' ex);    								apnsChannel.ForceReconnect();  							}    							tries++;  						}    						//Didn't send in 3 tries  					    var onNotificationFailed = NotificationFailed;  					    if (!sent && onNotificationFailed != null)  							onNotificationFailed(this' notification);  					}  				}  				catch (Exception ex)  				{  				    var onError = Error;  				    if (onError != null)  						onError(this' ex);    					apnsChannel.ForceReconnect();  				}    				if (!disposing)  					Thread.Sleep(500);  			}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationPayload,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationPayload.cs,ToJson,The following statement contains a magic number: foreach (char c in rawString)  			{  				if ((int)c < 32 || (int)c > 127)  					encodedString.Append("\\u" + String.Format("{0:x4}"' Convert.ToUInt32(c)));  				else  					encodedString.Append(c);  			}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationPayload,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationPayload.cs,ToJson,The following statement contains a magic number: foreach (char c in rawString)  			{  				if ((int)c < 32 || (int)c > 127)  					encodedString.Append("\\u" + String.Format("{0:x4}"' Convert.ToUInt32(c)));  				else  					encodedString.Append(c);  			}
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationService,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationService.cs,getAllBytesFromStream,The following statement contains a magic number: byte[] buffer = new byte[16 * 1024];
Magic Number,JdSoft.Apple.Apns.Notifications,NotificationService,C:\repos\Redth_APNS-Sharp\JdSoft.Apple.Apns.Notifications\NotificationService.cs,getAllBytesFromStream,The following statement contains a magic number: byte[] buffer = new byte[16 * 1024];
