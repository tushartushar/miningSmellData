Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DataTableStorageSample,Program,F:\newReposMay17\Azure_azure-storage-net\Samples\GettingStarted\VisualStudioQuickStarts\DataTableStorage\Program.cs,CreateTableAsync,The length of the statement  "	CloudStorageAccount storageAccount = CreateStorageAccountFromConnectionString (CloudConfigurationManager.GetSetting ("StorageConnectionString")); " is 145.
Long Statement,DataTableStorageSample,Program,F:\newReposMay17\Azure_azure-storage-net\Samples\GettingStarted\VisualStudioQuickStarts\DataTableStorage\Program.cs,CreateTableAsync,The length of the statement  "		Console.WriteLine ("If you are running with the default configuration please make sure you have started the storage emulator. Press the Windows key and type Azure Storage to select and run it from the list of applications - then restart the sample."); " is 251.
Long Statement,DataTableStorageSample,Program,F:\newReposMay17\Azure_azure-storage-net\Samples\GettingStarted\VisualStudioQuickStarts\DataTableStorage\Program.cs,CreateStorageAccountFromConnectionString,The length of the statement  "		Console.WriteLine ("Invalid storage account information provided. Please confirm the AccountName and AccountKey are valid in the app.config file - then restart the application."); " is 179.
Long Statement,DataTableStorageSample,Program,F:\newReposMay17\Azure_azure-storage-net\Samples\GettingStarted\VisualStudioQuickStarts\DataTableStorage\Program.cs,CreateStorageAccountFromConnectionString,The length of the statement  "		Console.WriteLine ("Invalid storage account information provided. Please confirm the AccountName and AccountKey are valid in the app.config file - then restart the sample."); " is 174.
Long Statement,DataTableStorageSample,Program,F:\newReposMay17\Azure_azure-storage-net\Samples\GettingStarted\VisualStudioQuickStarts\DataTableStorage\Program.cs,RetrieveEntityUsingPointQueryAsync,The length of the statement  "		Console.WriteLine ("\t{0}\t{1}\t{2}\t{3}"' customer.PartitionKey' customer.RowKey' customer.Email' customer.PhoneNumber); " is 121.
Long Statement,DataTableStorageSample,Program,F:\newReposMay17\Azure_azure-storage-net\Samples\GettingStarted\VisualStudioQuickStarts\DataTableStorage\Program.cs,BatchInsertOfCustomerEntitiesAsync,The length of the statement  "		Console.WriteLine ("Inserted entity with\t Etag = {0} and PartitionKey = {1}' RowKey = {2}"' customerInserted.ETag' customerInserted.PartitionKey' customerInserted.RowKey); " is 172.
Long Statement,DataTableStorageSample,Program,F:\newReposMay17\Azure_azure-storage-net\Samples\GettingStarted\VisualStudioQuickStarts\DataTableStorage\Program.cs,PartitionRangeQueryAsync,The length of the statement  "	TableQuery<CustomerEntity> rangeQuery = new TableQuery<CustomerEntity> ().Where (TableQuery.CombineFilters (TableQuery.GenerateFilterCondition ("PartitionKey"' QueryComparisons.Equal' partitionKey)' TableOperators.And' TableQuery.CombineFilters (TableQuery.GenerateFilterCondition ("RowKey"' QueryComparisons.GreaterThanOrEqual' startRowKey)' TableOperators.And' TableQuery.GenerateFilterCondition ("RowKey"' QueryComparisons.LessThanOrEqual' endRowKey)))); " is 457.
Long Statement,DataTableStorageSample,Program,F:\newReposMay17\Azure_azure-storage-net\Samples\GettingStarted\VisualStudioQuickStarts\DataTableStorage\Program.cs,PartitionRangeQueryAsync,The length of the statement  "			Console.WriteLine ("Customer: {0}'{1}\t{2}\t{3}"' entity.PartitionKey' entity.RowKey' entity.Email' entity.PhoneNumber); " is 120.
Long Statement,DataTableStorageSample,Program,F:\newReposMay17\Azure_azure-storage-net\Samples\GettingStarted\VisualStudioQuickStarts\DataTableStorage\Program.cs,PartitionScanAsync,The length of the statement  "	TableQuery<CustomerEntity> partitionScanQuery = new TableQuery<CustomerEntity> ().Where (TableQuery.GenerateFilterCondition ("PartitionKey"' QueryComparisons.Equal' partitionKey)); " is 180.
Long Statement,DataTableStorageSample,Program,F:\newReposMay17\Azure_azure-storage-net\Samples\GettingStarted\VisualStudioQuickStarts\DataTableStorage\Program.cs,PartitionScanAsync,The length of the statement  "			Console.WriteLine ("Customer: {0}'{1}\t{2}\t{3}"' entity.PartitionKey' entity.RowKey' entity.Email' entity.PhoneNumber); " is 120.
Magic Number,DataTableStorageSample,Program,F:\newReposMay17\Azure_azure-storage-net\Samples\GettingStarted\VisualStudioQuickStarts\DataTableStorage\Program.cs,BatchInsertOfCustomerEntitiesAsync,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	batchOperation.InsertOrMerge (new CustomerEntity ("Smith"' string.Format ("{0}"' i.ToString ("D4"))) {  		Email = string.Format ("{0}@contoso.com"' i.ToString ("D4"))'  		PhoneNumber = string.Format ("425-555-{0}"' i.ToString ("D4"))  	});  }  
Magic Number,DataTableStorageSample,Program,F:\newReposMay17\Azure_azure-storage-net\Samples\GettingStarted\VisualStudioQuickStarts\DataTableStorage\Program.cs,PartitionRangeQueryAsync,The following statement contains a magic number: rangeQuery.TakeCount = 50;  
