Implementation smell,Namespace,Class,File,Method,Description
Long Method,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawLines,The method has 121 lines of code.
Long Method,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The method has 310 lines of code.
Long Method,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawText,The method has 100 lines of code.
Complex Method,SvgNet,SvgStyledTransformedElement,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Elements\SvgStyledElement.cs,WriteXmlElements,Cyclomatic complexity of the method is 8
Complex Method,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawLines,Cyclomatic complexity of the method is 9
Complex Method,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,Cyclomatic complexity of the method is 54
Complex Method,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEndAnchor,Cyclomatic complexity of the method is 12
Complex Method,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawText,Cyclomatic complexity of the method is 13
Complex Method,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,HandleBrush,Cyclomatic complexity of the method is 8
Complex Method,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,HandleGraphicsPath,Cyclomatic complexity of the method is 11
Complex Method,MetafileTools,MetafileParser,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,Enumerate,Cyclomatic complexity of the method is 15
Complex Method,MetafileTools,LineBuffer,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,GetPoints,Cyclomatic complexity of the method is 8
Complex Method,SvgNet.SvgTypes,SvgLength,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgLength.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,SvgNet.SvgTypes,SvgPath,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgPath.cs,FromString,Cyclomatic complexity of the method is 18
Complex Method,SvgNet.SvgTypes,SvgStyle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgStyle.cs,SvgStyle,Cyclomatic complexity of the method is 11
Complex Method,SvgNet.SvgTypes,SvgTransform,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgTransform.cs,FromString,Cyclomatic complexity of the method is 18
Long Parameter List,SvgNet,SvgFactory,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\SvgFactory.cs,RecCompXML,The method has 5 parameters. Parameters: entities' singletons' doc' el' idx
Long Parameter List,SvgNet.SvgElements,SvgPatternElement,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Elements\SvgPatternElement.cs,SvgPatternElement,The method has 5 parameters. Parameters: x' y' width' height' vport
Long Parameter List,SvgNet.SvgElements,SvgSvgElement,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Elements\SvgSvgElement.cs,SvgSvgElement,The method has 5 parameters. Parameters: x' y' width' height' vport
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawBezier,The method has 9 parameters. Parameters: pen' x1' y1' x2' y2' x3' y3' x4' y4
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawImage,The method has 6 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr' callback
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttrs
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawImageUnscaled,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' x' y
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawString,The method has 6 parameters. Parameters: s' font' brush' x' y' format
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' point' format
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' layoutRectangle' format
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,IGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\AbstractGraphics.cs,MeasureString,The method has 6 parameters. Parameters: text' font' layoutArea' stringFormat' charactersFitted' linesFilled
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawBezier,The method has 9 parameters. Parameters: pen' x1' y1' x2' y2' x3' y3' x4' y4
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawImage,The method has 6 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr' callback
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttrs
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawImageUnscaled,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' x' y
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawString,The method has 6 parameters. Parameters: s' font' brush' x' y' format
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' point' format
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' layoutRectangle' format
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,MeasureString,The method has 6 parameters. Parameters: text' font' layoutArea' stringFormat' charactersFitted' linesFilled
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawBezier,The method has 9 parameters. Parameters: pen' x1' y1' x2' y2' x3' y3' x4' y4
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImage,The method has 6 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr' callback
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttrs
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImageUnscaled,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' x' y
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawString,The method has 6 parameters. Parameters: s' font' brush' x' y' format
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' point' format
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' layoutRectangle' format
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,MeasureString,The method has 6 parameters. Parameters: text' font' layoutArea' stringFormat' charactersFitted' linesFilled
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImagePixel,The method has 6 parameters. Parameters: container' c' x' y' w' h
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The method has 7 parameters. Parameters: x' y' width' height' startAngle' sweepAngle' pie
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,Spline2Bez,The method has 5 parameters. Parameters: points' start' num' closed' tension
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawBitmapData,The method has 6 parameters. Parameters: b' x' y' w' h' scale
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawBitmapImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEndAnchor,The method has 7 parameters. Parameters: lc' clc' col' w' pt' angle' ignoreUnsupportedLineCaps
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawText,The method has 6 parameters. Parameters: s' font' brush' rect' fmt' ignoreRect
Long Parameter List,MetafileTools,MetafileParser,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,EnumerateMetafile,The method has 5 parameters. Parameters: emf' unitSize' destination' drawLine' fillPolygon
Long Statement,SvgNet.SvgGdi,GdiGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\GDIGraphics.cs,MeasureString,The length of the statement  "            var siz = _g.MeasureString(text' font' layoutArea' stringFormat' out var a' out var b); charactersFitted = a; linesFilled = b; return siz;" is 138.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawBezier,The length of the statement  "                D = "M " + x1.ToString("F"' CultureInfo.InvariantCulture) + " " + y1.ToString("F"' CultureInfo.InvariantCulture) + " C " +" is 122.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawBeziers,The length of the statement  "            string s = "M " + points[0].X.ToString("F"' CultureInfo.InvariantCulture) + " " + points[0].Y.ToString("F"' CultureInfo.InvariantCulture) + " C ";" is 146.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawBeziers,The length of the statement  "                s += points[i].X.ToString("F"' CultureInfo.InvariantCulture) + " " + points[i].Y.ToString("F"' CultureInfo.InvariantCulture) + " ";" is 131.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "            string s = "M " + start.X.ToString("F"' CultureInfo.InvariantCulture) + "'" + start.Y.ToString("F"' CultureInfo.InvariantCulture) +" is 131.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "                " A " + (width / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " + (height / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +" is 138.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "                "0 " + longArc.ToString() + " 0 " + end.X.ToString("F"' CultureInfo.InvariantCulture) + " " + end.Y.ToString("F"' CultureInfo.InvariantCulture);" is 144.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "                s += " L " + center.X.ToString("F"' CultureInfo.InvariantCulture) + "'" + center.Y.ToString("F"' CultureInfo.InvariantCulture);" is 127.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "                s += " L " + start.X.ToString("F"' CultureInfo.InvariantCulture) + "'" + start.Y.ToString("F"' CultureInfo.InvariantCulture);" is 125.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawBitmapData,The length of the statement  "            var g = new SvgGroupElement("bitmap_at_" + x.ToString("F"' CultureInfo.InvariantCulture) + "_" + y.ToString("F"' CultureInfo.InvariantCulture));" is 144.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillBeziers,The length of the statement  "            string s = "M " + points[0].X.ToString("F"' CultureInfo.InvariantCulture) + " " + points[0].Y.ToString("F"' CultureInfo.InvariantCulture) + " C ";" is 146.
Long Statement,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillBeziers,The length of the statement  "                s += points[i].X.ToString("F"' CultureInfo.InvariantCulture) + " " + points[i].Y.ToString("F"' CultureInfo.InvariantCulture) + " ";" is 131.
Long Statement,MetafileTools,LineBuffer,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,IsVisuallyIdentical,The length of the statement  "                        if (_normalizedPoints[i].VisualIndex == a.VisualIndex && IsVisuallyIdentical(_normalizedPoints[i].Point' b)) return true;" is 121.
Long Statement,SvgNet.SvgTypes,SvgPath,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgPath.cs,ToString,The length of the statement  "                    || (prev.Type != seg.Type && !(prev.Type == SvgPathSegType.SVG_SEGTYPE_MOVETO && seg.Type == SvgPathSegType.SVG_SEGTYPE_LINETO))" is 128.
Complex Conditional,SvgNet.SvgTypes,SvgPath,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgPath.cs,ToString,The conditional expression  "prev == null                     || (prev.Type != seg.Type && !(prev.Type == SvgPathSegType.SVG_SEGTYPE_MOVETO && seg.Type == SvgPathSegType.SVG_SEGTYPE_LINETO))                     || prev.Abs != seg.Abs"  is complex.
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgTextElement,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Elements\SvgTextElement.cs,SvgTextElement,The constructor "SvgTextElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgTextElement,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Elements\SvgTextElement.cs,SvgTextElement,The constructor "SvgTextElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgDescElement,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Elements\SvgTitleElement.cs,SvgDescElement,The constructor "SvgDescElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgDescElement,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Elements\SvgTitleElement.cs,SvgDescElement,The constructor "SvgDescElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgTitleElement,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Elements\SvgTitleElement.cs,SvgTitleElement,The constructor "SvgTitleElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgTitleElement,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Elements\SvgTitleElement.cs,SvgTitleElement,The constructor "SvgTitleElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,SvgGraphics,The constructor "SvgGraphics" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,SvgGraphics,The constructor "SvgGraphics" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,SvgGraphics,The constructor "SvgGraphics" calls a virtual method "AddChild".
Empty Catch Block,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEndAnchors,The method has an empty catch block.
Empty Catch Block,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEndAnchors,The method has an empty catch block.
Empty Catch Block,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,HandleBrush,The method has an empty catch block.
Magic Number,SvgNet,SvgFactory,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\SvgFactory.cs,RecCompXML,The following statement contains a magic number: val.Length > 30
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawClosedCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(points' 0' points.Length - 1' true' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawClosedCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' true' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(points' 0' points.Length - 1' false' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(points' offset' numberOfSegments' false' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' false' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEllipse,The following statement contains a magic number: var el = new SvgEllipseElement(x + (width / 2)' y + (height / 2)' width / 2' height / 2) {                 Style = new SvgStyle(pen)             };
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEllipse,The following statement contains a magic number: var el = new SvgEllipseElement(x + (width / 2)' y + (height / 2)' width / 2' height / 2) {                 Style = new SvgStyle(pen)             };
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEllipse,The following statement contains a magic number: var el = new SvgEllipseElement(x + (width / 2)' y + (height / 2)' width / 2' height / 2) {                 Style = new SvgStyle(pen)             };
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEllipse,The following statement contains a magic number: var el = new SvgEllipseElement(x + (width / 2)' y + (height / 2)' width / 2' height / 2) {                 Style = new SvgStyle(pen)             };
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillClosedCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(points' 0' points.Length - 1' true' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillClosedCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(points' 0' points.Length - 1' true' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillClosedCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' true' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillClosedCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' true' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillEllipse,The following statement contains a magic number: var el = new SvgEllipseElement(x + (width / 2)' y + (height / 2)' width / 2' height / 2) {                 Style = HandleBrush(brush)             };
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillEllipse,The following statement contains a magic number: var el = new SvgEllipseElement(x + (width / 2)' y + (height / 2)' width / 2' height / 2) {                 Style = HandleBrush(brush)             };
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillEllipse,The following statement contains a magic number: var el = new SvgEllipseElement(x + (width / 2)' y + (height / 2)' width / 2' height / 2) {                 Style = HandleBrush(brush)             };
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,FillEllipse,The following statement contains a magic number: var el = new SvgEllipseElement(x + (width / 2)' y + (height / 2)' width / 2' height / 2) {                 Style = HandleBrush(brush)             };
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs) {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,ControlPoint,The following statement contains a magic number: v.X /= (float)Math.Sqrt(vlen / (10 * t * t));
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,ControlPoint,The following statement contains a magic number: v.Y /= (float)Math.Sqrt(vlen / (10 * t * t));
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: nlv.X /= (float)Math.Sqrt(nlvlen / (10 * t * t));
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: nlv.Y /= (float)Math.Sqrt(nlvlen / (10 * t * t));
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: nrv.X /= (float)Math.Sqrt(nrvlen / (10 * t * t));
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: nrv.Y /= (float)Math.Sqrt(nrvlen / (10 * t * t));
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: var ret = new PointF[2];
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImagePixel,The following statement contains a magic number: rc.Style.Set("opacity"' c.A / 255f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawImagePixel,The following statement contains a magic number: c.A < 255
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: var center = new PointF(x + (width / 2f)' y + (height / 2f));
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: var center = new PointF(x + (width / 2f)' y + (height / 2f));
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: startAngle = (startAngle / 360f) * 2f * (float)Math.PI;
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: startAngle = (startAngle / 360f) * 2f * (float)Math.PI;
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: sweepAngle = (sweepAngle / 360f) * 2f * (float)Math.PI;
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: sweepAngle = (sweepAngle / 360f) * 2f * (float)Math.PI;
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: start.X = ((float)Math.Cos(startAngle) * (width / 2f)) + center.X;
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: start.Y = ((float)Math.Sin(startAngle) * (height / 2f)) + center.Y;
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: end.X = ((float)Math.Cos(sweepAngle) * (width / 2f)) + center.X;
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: end.Y = ((float)Math.Sin(sweepAngle) * (height / 2f)) + center.Y;
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: string s = "M " + start.X.ToString("F"' CultureInfo.InvariantCulture) + "'" + start.Y.ToString("F"' CultureInfo.InvariantCulture) +                 " A " + (width / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " + (height / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +                 "0 " + longArc.ToString() + " 0 " + end.X.ToString("F"' CultureInfo.InvariantCulture) + " " + end.Y.ToString("F"' CultureInfo.InvariantCulture);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: string s = "M " + start.X.ToString("F"' CultureInfo.InvariantCulture) + "'" + start.Y.ToString("F"' CultureInfo.InvariantCulture) +                 " A " + (width / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " + (height / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +                 "0 " + longArc.ToString() + " 0 " + end.X.ToString("F"' CultureInfo.InvariantCulture) + " " + end.Y.ToString("F"' CultureInfo.InvariantCulture);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,Spline2Bez,The following statement contains a magic number: res[res.Count - 2] = pts[0];
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     anchor = new SvgPolygonElement(new PointF(0' -w / 2f)' new PointF(-w' w)' new PointF(w' w));                     break;                  case LineCap.DiamondAnchor:                     anchor = new SvgPolygonElement(new PointF(0' -w)' new PointF(w' 0)' new PointF(0' w)' new PointF(-w' 0));                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null) {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImplementedException("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImplementedException("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     anchor = new SvgPolygonElement(new PointF(0' -w / 2f)' new PointF(-w' w)' new PointF(w' w));                     break;                  case LineCap.DiamondAnchor:                     anchor = new SvgPolygonElement(new PointF(0' -w)' new PointF(w' 0)' new PointF(0' w)' new PointF(-w' 0));                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null) {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImplementedException("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImplementedException("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     anchor = new SvgPolygonElement(new PointF(0' -w / 2f)' new PointF(-w' w)' new PointF(w' w));                     break;                  case LineCap.DiamondAnchor:                     anchor = new SvgPolygonElement(new PointF(0' -w)' new PointF(w' 0)' new PointF(0' w)' new PointF(-w' 0));                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null) {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImplementedException("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImplementedException("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     anchor = new SvgPolygonElement(new PointF(0' -w / 2f)' new PointF(-w' w)' new PointF(w' w));                     break;                  case LineCap.DiamondAnchor:                     anchor = new SvgPolygonElement(new PointF(0' -w)' new PointF(w' 0)' new PointF(0' w)' new PointF(-w' 0));                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null) {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImplementedException("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImplementedException("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc) {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     anchor = new SvgPolygonElement(new PointF(0' -w / 2f)' new PointF(-w' w)' new PointF(w' w));                     break;                  case LineCap.DiamondAnchor:                     anchor = new SvgPolygonElement(new PointF(0' -w)' new PointF(w' 0)' new PointF(0' w)' new PointF(-w' 0));                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null) {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImplementedException("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImplementedException("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: rotation.Rotate((angle / (float)Math.PI) * 180);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawText,The following statement contains a magic number: switch (fmt.Alignment) {                 case StringAlignment.Near:                     break;                  case StringAlignment.Center: {                         if (ignoreRect)                             throw new SvgGdiNotImplementedException("DrawText automatic rect");                          txt.Style.Set("text-anchor"' "middle");                         txt.X = rect.X + (rect.Width / 2);                     }                     break;                  case StringAlignment.Far: {                         if (ignoreRect)                             throw new SvgGdiNotImplementedException("DrawText automatic rect");                          txt.Style.Set("text-anchor"' "end");                         txt.X = rect.Right;                     }                     break;                  default:                     throw new SvgGdiNotImplementedException("DrawText horizontal alignment");             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawText,The following statement contains a magic number: switch (fmt.LineAlignment) {                 case StringAlignment.Near: {                         // TODO: ??                         // txt.Style.Set("baseline-shift"' "-86%");//a guess.                         var span = new SvgTspanElement(s) {                             DY = new SvgLength(txt.Style.Get("font-size").ToString())                         };                         txt.Text = null;                         txt.AddChild(span);                     }                     break;                  case StringAlignment.Center: {                         if (ignoreRect)                             throw new SvgGdiNotImplementedException("DrawText automatic rect");                          txt.Y.Value += (rect.Height / 2);                         var span = new SvgTspanElement(s) {                             DY = new SvgLength(txt.Style.Get("font-size").ToString())                         };                         span.DY.Value *= 1 - GetFontDescentPercentage(font) - 0.5f;                         txt.Text = null;                         txt.AddChild(span);                     }                     break;                  case StringAlignment.Far: {                         if (ignoreRect)                             throw new SvgGdiNotImplementedException("DrawText automatic rect");                          txt.Y.Value += rect.Height;                         // This would solve the alignment as well' but it's not supported by Internet Explorer                         //                         // txt.Attributes["dominant-baseline"] = "text-after-edge";                         var span = new SvgTspanElement(s) {                             DY = new SvgLength(txt.Style.Get("font-size").ToString())                         };                         span.DY.Value *= 1 - GetFontDescentPercentage(font) - 1;                         txt.Text = null;                         txt.AddChild(span);                     }                     break;                  default:                     throw new SvgGdiNotImplementedException("DrawText vertical alignment");             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,DrawText,The following statement contains a magic number: switch (fmt.LineAlignment) {                 case StringAlignment.Near: {                         // TODO: ??                         // txt.Style.Set("baseline-shift"' "-86%");//a guess.                         var span = new SvgTspanElement(s) {                             DY = new SvgLength(txt.Style.Get("font-size").ToString())                         };                         txt.Text = null;                         txt.AddChild(span);                     }                     break;                  case StringAlignment.Center: {                         if (ignoreRect)                             throw new SvgGdiNotImplementedException("DrawText automatic rect");                          txt.Y.Value += (rect.Height / 2);                         var span = new SvgTspanElement(s) {                             DY = new SvgLength(txt.Style.Get("font-size").ToString())                         };                         span.DY.Value *= 1 - GetFontDescentPercentage(font) - 0.5f;                         txt.Text = null;                         txt.AddChild(span);                     }                     break;                  case StringAlignment.Far: {                         if (ignoreRect)                             throw new SvgGdiNotImplementedException("DrawText automatic rect");                          txt.Y.Value += rect.Height;                         // This would solve the alignment as well' but it's not supported by Internet Explorer                         //                         // txt.Attributes["dominant-baseline"] = "text-after-edge";                         var span = new SvgTspanElement(s) {                             DY = new SvgLength(txt.Style.Get("font-size").ToString())                         };                         span.DY.Value *= 1 - GetFontDescentPercentage(font) - 1;                         txt.Text = null;                         txt.AddChild(span);                     }                     break;                  default:                     throw new SvgGdiNotImplementedException("DrawText vertical alignment");             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,HandleBrush,The following statement contains a magic number: var patty = new SvgPatternElement(0' 0' 8' 8' null);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,HandleBrush,The following statement contains a magic number: var patty = new SvgPatternElement(0' 0' 8' 8' null);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,HandleBrush,The following statement contains a magic number: var rc = new SvgRectElement(0' 0' 8' 8);
Magic Number,SvgNet.SvgGdi,SvgGraphics,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\SVGGraphics.cs,HandleBrush,The following statement contains a magic number: var rc = new SvgRectElement(0' 0' 8' 8);
Magic Number,MetafileTools,MetafileParser,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,ProcessCloseFigure,The following statement contains a magic number: var points = new PointF[2];
Magic Number,MetafileTools,MetafileParser,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,ProcessPolyBezierTo16,The following statement contains a magic number: _br.ReadBytes(16 /* Bounds */);
Magic Number,MetafileTools,MetafileParser,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,ProcessPolyBezierTo16,The following statement contains a magic number: const int PointsPerCurve = 3;
Magic Number,MetafileTools,MetafileParser,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,ProcessPolygon16,The following statement contains a magic number: _br.ReadBytes(16 /* Bounds */);
Magic Number,MetafileTools,MetafileParser,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,ProcessPolyline16,The following statement contains a magic number: _br.ReadBytes(16 /* Bounds */);
Magic Number,MetafileTools,MetafileParser,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,ProcessPolylineTo16,The following statement contains a magic number: _br.ReadBytes(16 /* Bounds */);
Magic Number,MetafileTools,MetafileParser,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,ProcessPolyPolygon16,The following statement contains a magic number: _br.ReadBytes(16 /* Bounds */);
Magic Number,MetafileTools,MetafileParser,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,ProcessStrokeAndFillPath,The following statement contains a magic number: _br.ReadBytes(16 /* Bounds */);
Magic Number,SvgNet.SvgTypes,SvgColor,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgColor.cs,FromHexString,The following statement contains a magic number: b = int.Parse(s.Substring(2' 1)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,SvgNet.SvgTypes,SvgColor,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgColor.cs,FromHexString,The following statement contains a magic number: r += r * 16;
Magic Number,SvgNet.SvgTypes,SvgColor,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgColor.cs,FromHexString,The following statement contains a magic number: g += g * 16;
Magic Number,SvgNet.SvgTypes,SvgColor,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgColor.cs,FromHexString,The following statement contains a magic number: b += b * 16;
Magic Number,SvgNet.SvgTypes,SvgColor,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgColor.cs,FromHexString,The following statement contains a magic number: s.Length == 3
Magic Number,SvgNet.SvgTypes,SvgColor,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgColor.cs,FromRGBString,The following statement contains a magic number: r = int.Parse(m.Groups["r"].Captures[0].Value' CultureInfo.InvariantCulture) * 255 / 100;
Magic Number,SvgNet.SvgTypes,SvgColor,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgColor.cs,FromRGBString,The following statement contains a magic number: r = int.Parse(m.Groups["r"].Captures[0].Value' CultureInfo.InvariantCulture) * 255 / 100;
Magic Number,SvgNet.SvgTypes,SvgColor,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgColor.cs,FromRGBString,The following statement contains a magic number: g = int.Parse(m.Groups["g"].Captures[0].Value' CultureInfo.InvariantCulture) * 255 / 100;
Magic Number,SvgNet.SvgTypes,SvgColor,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgColor.cs,FromRGBString,The following statement contains a magic number: g = int.Parse(m.Groups["g"].Captures[0].Value' CultureInfo.InvariantCulture) * 255 / 100;
Magic Number,SvgNet.SvgTypes,SvgColor,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgColor.cs,FromRGBString,The following statement contains a magic number: b = int.Parse(m.Groups["b"].Captures[0].Value' CultureInfo.InvariantCulture) * 255 / 100;
Magic Number,SvgNet.SvgTypes,SvgColor,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgColor.cs,FromRGBString,The following statement contains a magic number: b = int.Parse(m.Groups["b"].Captures[0].Value' CultureInfo.InvariantCulture) * 255 / 100;
Magic Number,SvgNet.SvgTypes,SvgPath,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgPath.cs,FromString,The following statement contains a magic number: datasize = 2;
Magic Number,SvgNet.SvgTypes,SvgPoints,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgPoints.cs,SvgPoints,The following statement contains a magic number: pts.Length % 2 != 0
Magic Number,SvgNet.SvgTypes,SvgPoints,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgPoints.cs,FromString,The following statement contains a magic number: _pts.Count % 2 != 0
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgStyle.cs,SvgStyle,The following statement contains a magic number: Set("stroke-miterlimit"' (pen.MiterLimit / 2) + 4f);
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgStyle.cs,SvgStyle,The following statement contains a magic number: Set("stroke-miterlimit"' (pen.MiterLimit / 2) + 4f);
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgStyle.cs,SvgStyle,The following statement contains a magic number: switch (pen.DashStyle) {                 case DashStyle.Dash:                     dashes = new float[] { 3' 1 };                     break;                  case DashStyle.DashDot:                     dashes = new float[] { 3' 1' 1' 1 };                     break;                  case DashStyle.DashDotDot:                     dashes = new float[] { 3' 1' 1' 1' 1 };                     break;                  case DashStyle.Dot:                     dashes = new float[] { 1' 1 };                     break;                  case DashStyle.Custom:                     dashes = pen.DashPattern;                     break;             }
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgStyle.cs,SvgStyle,The following statement contains a magic number: switch (pen.DashStyle) {                 case DashStyle.Dash:                     dashes = new float[] { 3' 1 };                     break;                  case DashStyle.DashDot:                     dashes = new float[] { 3' 1' 1' 1 };                     break;                  case DashStyle.DashDotDot:                     dashes = new float[] { 3' 1' 1' 1' 1 };                     break;                  case DashStyle.Dot:                     dashes = new float[] { 1' 1 };                     break;                  case DashStyle.Custom:                     dashes = pen.DashPattern;                     break;             }
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgStyle.cs,SvgStyle,The following statement contains a magic number: switch (pen.DashStyle) {                 case DashStyle.Dash:                     dashes = new float[] { 3' 1 };                     break;                  case DashStyle.DashDot:                     dashes = new float[] { 3' 1' 1' 1 };                     break;                  case DashStyle.DashDotDot:                     dashes = new float[] { 3' 1' 1' 1' 1 };                     break;                  case DashStyle.Dot:                     dashes = new float[] { 1' 1 };                     break;                  case DashStyle.Custom:                     dashes = pen.DashPattern;                     break;             }
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgStyle.cs,SvgStyle,The following statement contains a magic number: Set("opacity"' pen.Color.A / 255f);
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgStyle.cs,SvgStyle,The following statement contains a magic number: Set("opacity"' brush.Color.A / 255f);
Magic Number,SvgNet.SvgTypes,SvgStyle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgStyle.cs,FromString,The following statement contains a magic number: kv.Length == 2
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgTransform.cs,FromString,The following statement contains a magic number: Matrix = new Matrix(points[0]' points[1]' points[2]' points[3]' points[4]' points[5]);
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgTransform.cs,FromString,The following statement contains a magic number: Matrix = new Matrix(points[0]' points[1]' points[2]' points[3]' points[4]' points[5]);
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgTransform.cs,FromString,The following statement contains a magic number: Matrix = new Matrix(points[0]' points[1]' points[2]' points[3]' points[4]' points[5]);
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgTransform.cs,FromString,The following statement contains a magic number: Matrix = new Matrix(points[0]' points[1]' points[2]' points[3]' points[4]' points[5]);
Magic Number,SvgNet.SvgTypes,SvgTransform,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgTransform.cs,FromString,The following statement contains a magic number: points.Length == 6
Missing Default,MetafileTools,MetafileParser,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Graphics\MetafileParser.cs,InternalSelectObject,The following switch statement is missing a default case: switch (stockObject) {                     case EmfStockObject.BLACK_BRUSH:                         _brush = new SolidBrush(Color.Black);                         break;                      case EmfStockObject.DC_BRUSH:                         throw new NotImplementedException();                      case EmfStockObject.DKGRAY_BRUSH:                         _brush = new SolidBrush(Color.DarkGray);                         break;                      case EmfStockObject.GRAY_BRUSH:                         _brush = new SolidBrush(Color.Gray);                         break;                      case EmfStockObject.LTGRAY_BRUSH:                         _brush = new SolidBrush(Color.LightGray);                         break;                      case EmfStockObject.NULL_BRUSH:                         _brush = null;                         break;                      case EmfStockObject.WHITE_BRUSH:                         _brush = new SolidBrush(Color.White);                         break;                 }
Missing Default,SvgNet.SvgTypes,SvgAngle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgAngle.cs,ToString,The following switch statement is missing a default case: switch (Type) {                 case SvgAngleType.SVG_ANGLETYPE_DEG:                 case SvgAngleType.SVG_ANGLETYPE_UNSPECIFIED:                     s += "deg";                     break;                  case SvgAngleType.SVG_ANGLETYPE_GRAD:                     s += "grad";                     break;                  case SvgAngleType.SVG_ANGLETYPE_RAD:                     s += "rad";                     break;             }
Missing Default,SvgNet.SvgTypes,SvgLength,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgLength.cs,ToString,The following switch statement is missing a default case: switch (Type) {                 case SvgLengthType.SVG_LENGTHTYPE_PERCENTAGE:                     s += "%";                     break;                  case SvgLengthType.SVG_LENGTHTYPE_EMS:                     s += "em";                     break;                  case SvgLengthType.SVG_LENGTHTYPE_EXS:                     s += "ex";                     break;                  case SvgLengthType.SVG_LENGTHTYPE_PX:                     s += "px";                     break;                  case SvgLengthType.SVG_LENGTHTYPE_CM:                     s += "cm";                     break;                  case SvgLengthType.SVG_LENGTHTYPE_MM:                     s += "mm";                     break;                  case SvgLengthType.SVG_LENGTHTYPE_IN:                     s += "in";                     break;                  case SvgLengthType.SVG_LENGTHTYPE_PT:                     s += "pt";                     break;                  case SvgLengthType.SVG_LENGTHTYPE_PC:                     s += "pc";                     break;             }
Missing Default,SvgNet.SvgTypes,SvgStyle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgStyle.cs,SvgStyle,The following switch statement is missing a default case: switch (pen.EndCap) {                 case LineCap.Round:                     Set("stroke-linecap"' "round");                     break;                  case LineCap.Square:                     Set("stroke-linecap"' "square");                     break;                  case LineCap.Flat:                     Set("stroke-linecap"' "butt");                     break;             }
Missing Default,SvgNet.SvgTypes,SvgStyle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgStyle.cs,SvgStyle,The following switch statement is missing a default case: switch (pen.LineJoin) {                 case LineJoin.Bevel:                     Set("stroke-linejoin"' "bevel");                     break;                  case LineJoin.Miter:                     Set("stroke-linejoin"' "miter");                     break;                  case LineJoin.Round:                     Set("stroke-linejoin"' "round");                     break;             }
Missing Default,SvgNet.SvgTypes,SvgStyle,C:\research\architectureSmells\repos\monoman_SvgNet\SvgNet\Types\SvgStyle.cs,SvgStyle,The following switch statement is missing a default case: switch (pen.DashStyle) {                 case DashStyle.Dash:                     dashes = new float[] { 3' 1 };                     break;                  case DashStyle.DashDot:                     dashes = new float[] { 3' 1' 1' 1 };                     break;                  case DashStyle.DashDotDot:                     dashes = new float[] { 3' 1' 1' 1' 1 };                     break;                  case DashStyle.Dot:                     dashes = new float[] { 1' 1 };                     break;                  case DashStyle.Custom:                     dashes = pen.DashPattern;                     break;             }
