Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Tilde.Framework.Controller,OptionsManager,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,Cyclomatic complexity of the method is 11
Complex Method,Tilde.Framework.Controller,OptionsManager,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,StoreOption,Cyclomatic complexity of the method is 9
Complex Method,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,Cyclomatic complexity of the method is 11
Complex Method,Tilde.Framework.Controls,TreeTable,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,UpdateItems,Cyclomatic complexity of the method is 8
Complex Method,Tilde.Framework.Controls,TreeTable,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,TreeTable_KeyDown,Cyclomatic complexity of the method is 9
Long Parameter List,Tilde.Framework.Controller,FindInFilesResultEventArgs,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\IManager.cs,FindInFilesResultEventArgs,The method has 5 parameters. Parameters: file' line' startChar' endChar' message
Long Parameter List,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,Show,The method has 6 parameters. Parameters: window' text' title' buttons' icon' defaultButton
Long Parameter List,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The method has 6 parameters. Parameters: window' text' title' buttons' icon' defaultButton
Long Parameter List,Tilde.Framework.Controls,ShellAPI,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,SHGetFileInfo,The method has 5 parameters. Parameters: pszPath' dwFileAttribs' psfi' cbFileInfo' uFlags
Long Parameter List,Tilde.Framework.Controls,ShellAPI,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,SHGetFileInfo,The method has 5 parameters. Parameters: pIDL' dwFileAttributes' psfi' cbFileInfo' uFlags
Long Parameter List,Tilde.Framework.Controls,IShellFolder,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,ParseDisplayName,The method has 6 parameters. Parameters: hwnd' pbc' pszDisplayName' pchEaten' ppidl' pdwAttributes
Long Parameter List,Tilde.Framework.Controls,IShellFolder,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,GetUIObjectOf,The method has 6 parameters. Parameters: hwndOwner' cidl' apidl' riid' rgfReserved' ppv
Long Parameter List,Tilde.Framework.Controls,IShellFolder,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,SetNameOf,The method has 5 parameters. Parameters: hwnd' pidl' pszName' uFlags' ppidlOut
Long Identifier,Tilde.Framework.Controller,ApplicationOptions,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\ApplicationOptions.cs,,The length of the parameter m_automaticallyReloadModifiedFiles is 34.
Long Identifier,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,,The length of the parameter openContainingFolderToolStripMenuItem is 37.
Long Statement,Tilde.Framework.Controller,DirectoryWatcher,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\DirectoryWatcher.cs,Watch,The length of the statement  "			if( (events & (NotificationEvents.Modified | NotificationEvents.Created | NotificationEvents.Deleted | NotificationEvents.Renamed)) != 0) " is 137.
Long Statement,Tilde.Framework.Controller,FileWatcher,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\FileWatcher.cs,EnableFile,The length of the statement  "					WatchedFile fileInfo = mWatchedFiles.Find(delegate(WatchedFile file) { return PathUtils.Compare(file.FileName' fileName) == 0; }); " is 130.
Long Statement,Tilde.Framework.Controller,FileWatcher,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\FileWatcher.cs,EnableFile,The length of the statement  "					WatchedFile fileInfo = mIgnoredFiles.Find(delegate(WatchedFile file) { return PathUtils.Compare(file.FileName' fileName) == 0; }); " is 130.
Long Statement,Tilde.Framework.Controller,OptionsManager,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,StoreOption,The length of the statement  "					success = database.SetStringOption(attr.Path' String.Join("'"' new string[] { color.R.ToString()' color.G.ToString()' color.B.ToString() })' validateOnly); " is 155.
Long Statement,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,WndActivated,The length of the statement  "				Win32.SetWindowLong(Win32.GetDlgItem(mHandle' Win32.IDHELP)' Win32.GWL_ID' mButtons[3] == "Cancel" ? (int)DialogResult.Cancel : (int)DialogResult.OK); " is 150.
Long Statement,Tilde.Framework.Controls,TreeTable,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,UpdateItems,The length of the statement  "				TreeTableNode selItem = listView1.FocusedItem == null ? null : m_nodes[listView1.FocusedItem.Index]; //listView1.SelectedIndices.Count == 0 ? null : m_nodes[listView1.SelectedIndices[0]]; " is 187.
Long Statement,Tilde.Framework.Controls,TreeTable,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(TreeTable)); " is 129.
Long Statement,Tilde.Framework.Controls,TreeTable,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The length of the statement  "			this.imageList1.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("imageList1.ImageStream"))); " is 120.
Long Statement,Tilde.Framework.Controls,TreeTable,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The length of the statement  "			this.listView1.RetrieveVirtualItem += new System.Windows.Forms.RetrieveVirtualItemEventHandler(this.TreeTable_RetrieveVirtualItem); " is 131.
Long Statement,Tilde.Framework.Model,Document,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Model\Document.cs,SaveDocument,The length of the statement  "					DialogResult option = MessageBox.Show("An error occurred while saving '" + this.FileName + "':\r\n\r\n" + ex.ToString()' "Error saving document"' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error' MessageBoxDefaultButton.Button2); " is 232.
Long Statement,Tilde.Framework.Model,Document,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Model\Document.cs,Checkout,The length of the statement  "				if (MessageBox.Show(Manager.MainWindow' "The file '" + this.FileName + "' is under revision control but not checked out; do you want to check it out?"' "Read-only file"' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) " is 240.
Long Statement,Tilde.Framework.Model,Document,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Model\Document.cs,Checkout,The length of the statement  "				if(MessageBox.Show(Manager.MainWindow' "The file is read-only and cannot be edited. Would you like to remove the read-only attribute from it?"' "Read-only file"' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) " is 232.
Long Statement,Tilde.Framework.Model,Document,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Model\Document.cs,Checkout,The length of the statement  "						MessageBox.Show(Manager.MainWindow' "Failed making " + this.FileName + " writable:\r\n\r\n" + ex.ToString()' "Read-only file"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 171.
Long Statement,Tilde.Framework.Model,Project,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Model\Project.cs,NewProjectDocument,The length of the statement  "			System.Diagnostics.Debug.Assert(parentDoc != null || mRootDocument == null' "A Project can have only one root document!"); " is 122.
Long Statement,Tilde.Framework,PathUtils,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\PathUtils.cs,MakeCanonicalFileName,The length of the statement  "			string[] dirs = dirstring.Split(new char[] { System.IO.Path.DirectorySeparatorChar' System.IO.Path.AltDirectorySeparatorChar }); " is 128.
Long Statement,Tilde.Framework,PathUtils,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\PathUtils.cs,MakeRelativePath,The length of the statement  "			string[] fromdirs = from.Remove(0' fromdrive.Length).Split(new char[] { Path.DirectorySeparatorChar' Path.AltDirectorySeparatorChar }); " is 135.
Long Statement,Tilde.Framework,PathUtils,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\PathUtils.cs,MakeRelativePath,The length of the statement  "			string[] todirs = to.Remove(0' todrive.Length).Split(new char[] { Path.DirectorySeparatorChar' Path.AltDirectorySeparatorChar }); " is 129.
Long Statement,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The length of the statement  "			this.openContainingFolderToolStripMenuItem.Click += new System.EventHandler(this.openContainingFolderToolStripMenuItem_Click); " is 126.
Long Statement,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The length of the statement  "			this.DockAreas = ((WeifenLuo.WinFormsUI.Docking.DockAreas)((WeifenLuo.WinFormsUI.Docking.DockAreas.Float | WeifenLuo.WinFormsUI.Docking.DockAreas.Document))); " is 158.
Empty Catch Block,Tilde.Framework.View,ToolWindow,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\ToolWindow.cs,DeserialiseListView,The method has an empty catch block.
Magic Number,Tilde.Framework.Controller,DirectoryWatcher,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\DirectoryWatcher.cs,WatchFileEvents,The following statement contains a magic number: mFileWatcher.InternalBufferSize = 32768;
Magic Number,Tilde.Framework.Controller,DirectoryWatcher,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\DirectoryWatcher.cs,WatchAttributeEvents,The following statement contains a magic number: mFileAttributeWatcher.InternalBufferSize = 32768;
Magic Number,Tilde.Framework.Controller,OptionsGridPanel,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsGridPanel.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid.Size = new System.Drawing.Size(460' 334);
Magic Number,Tilde.Framework.Controller,OptionsGridPanel,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsGridPanel.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid.Size = new System.Drawing.Size(460' 334);
Magic Number,Tilde.Framework.Controller,OptionsGridPanel,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsGridPanel.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(460' 334);
Magic Number,Tilde.Framework.Controller,OptionsGridPanel,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsGridPanel.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(460' 334);
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: System.Diagnostics.Debug.Assert(buttons.Length <= 4 && buttons.Length >= 1);
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,WndActivated,The following statement contains a magic number: Win32.SetWindowLong(Win32.GetDlgItem(mHandle' Win32.IDHELP)' Win32.GWL_ID' mButtons[3] == "Cancel" ? (int)DialogResult.Cancel : (int)DialogResult.OK);
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,WndActivated,The following statement contains a magic number: mButtons.Length == 4
Magic Number,Tilde.Framework.Controls,TreeTable,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The following statement contains a magic number: this.listView1.Size = new System.Drawing.Size(150' 150);
Magic Number,Tilde.Framework.Controls,TreeTable,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The following statement contains a magic number: this.listView1.Size = new System.Drawing.Size(150' 150);
Magic Number,Tilde.Framework.Controls,WindowsHook,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,CoreHookProc,The following statement contains a magic number: sb1.Capacity = 40;
Magic Number,Tilde.Framework.Controls,WindowsHook,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,CoreHookProc,The following statement contains a magic number: Win32.GetClassName(hwnd' sb1' 40);
Magic Number,Tilde.Framework.Model,Project,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Model\Project.cs,SaveUserConfig,The following statement contains a magic number: writer.Indentation = 4;
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.tabMenuStrip.Size = new System.Drawing.Size(188' 98);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.tabMenuStrip.Size = new System.Drawing.Size(188' 98);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.saveToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.saveToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.closeToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.closeToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(184' 6);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(184' 6);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.copyFullPathToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.copyFullPathToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.openContainingFolderToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.openContainingFolderToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(292' 266);
Magic Number,Tilde.Framework.View,DocumentView,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(292' 266);
Magic Number,Tilde.Framework.View,PersistWindowComponent,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,LoadInfoFromRegistry,The following statement contains a magic number: int top = (int)Decimal.Parse(windowpos[2]);
Magic Number,Tilde.Framework.View,PersistWindowComponent,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,LoadInfoFromRegistry,The following statement contains a magic number: int width = (int)Decimal.Parse(windowpos[3]);
Magic Number,Tilde.Framework.View,PersistWindowComponent,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,LoadInfoFromRegistry,The following statement contains a magic number: int height = (int)Decimal.Parse(windowpos[4]);
Magic Number,Tilde.Framework.View,ToolWindow,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\ToolWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(292' 273);
Magic Number,Tilde.Framework.View,ToolWindow,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\ToolWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(292' 273);
Missing Default,Tilde.Framework.Controls,WindowsHook,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,CoreHookProc,The following switch statement is missing a default case: switch (code)  				{  					case Win32.HCBT_CREATEWND:  						OnWindowCreated(hwnd' className);  						break;  					case Win32.HCBT_DESTROYWND:  						OnWindowDestroyed(hwnd' className);  						break;  					case Win32.HCBT_ACTIVATE:  						OnWindowActivated(hwnd' className);  						break;  				}
Missing Default,Tilde.Framework.View,PersistWindowComponent,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,OnClosing,The following switch statement is missing a default case: switch (this.mPersistMethod)  			{  				case PersistMethods.Registry:  					if (this.mRegistryPath == "" || this.mRegistryKey == "")  						throw new Exception("Registry File path is empty");    					this.SaveInfoToRegistry();  					break;  				case PersistMethods.Custom:  					// fire SaveState event  					if(SaveStateEvent != null)  						SaveStateEvent(this' this.mWindowInfo);    					break;  			}
Missing Default,Tilde.Framework.View,PersistWindowComponent,D:\research\architectureSmells\repos\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,OnLoad,The following switch statement is missing a default case: switch (this.mPersistMethod)  			{  				case PersistMethods.Registry:  					if (this.mRegistryPath == "" || this.mRegistryKey == "")  						throw new Exception("Registry File path is empty");    					this.LoadInfoFromRegistry();  					break;  				case PersistMethods.Custom:  					// fire LoadState event  					if(LoadStateEvent != null)  						LoadStateEvent(this' this.mWindowInfo);    					break;  			}
