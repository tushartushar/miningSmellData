Implementation smell,Namespace,Class,File,Method,Description
Long Method,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The method has 73 lines of code.
Long Method,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The method has 69 lines of code.
Complex Method,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,Cyclomatic complexity of the method is 13
Complex Method,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,StoreOption,Cyclomatic complexity of the method is 9
Complex Method,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,Cyclomatic complexity of the method is 22
Complex Method,Tilde.Framework.Controls,TreeTable,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,UpdateItems,Cyclomatic complexity of the method is 10
Complex Method,Tilde.Framework.Controls,TreeTable,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,TreeTable_RetrieveVirtualItem,Cyclomatic complexity of the method is 7
Complex Method,Tilde.Framework.Controls,TreeTable,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,TreeTable_KeyDown,Cyclomatic complexity of the method is 9
Complex Method,Tilde.Framework.Controls,WindowsHook,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,CoreHookProc,Cyclomatic complexity of the method is 10
Complex Method,Tilde.Framework.View,PersistWindowComponent,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,OnClosing,Cyclomatic complexity of the method is 11
Complex Method,Tilde.Framework.View,PersistWindowComponent,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,OnLoad,Cyclomatic complexity of the method is 9
Long Parameter List,Tilde.Framework.Controller,FindInFilesResultEventArgs,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\IManager.cs,FindInFilesResultEventArgs,The method has 5 parameters.
Long Parameter List,Tilde.Framework.Controller,IManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\IManager.cs,CreateDocument,The method has 4 parameters.
Long Parameter List,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,StoreOption,The method has 4 parameters.
Long Parameter List,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,Show,The method has 6 parameters.
Long Parameter List,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The method has 6 parameters.
Long Parameter List,Tilde.Framework.Controls,ShellAPI,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,SendMessage,The method has 4 parameters.
Long Parameter List,Tilde.Framework.Controls,ShellAPI,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,SHGetFileInfo,The method has 5 parameters.
Long Parameter List,Tilde.Framework.Controls,ShellAPI,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,SHGetFileInfo,The method has 5 parameters.
Long Parameter List,Tilde.Framework.Controls,Win32,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\Win32.cs,SendMessage,The method has 4 parameters.
Long Parameter List,Tilde.Framework.Controls,Win32,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\Win32.cs,SendMessage,The method has 4 parameters.
Long Parameter List,Tilde.Framework.Controls,Win32,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\Win32.cs,PostMessage,The method has 4 parameters.
Long Parameter List,Tilde.Framework.Controls,Win32,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\Win32.cs,GetScrollRange,The method has 4 parameters.
Long Parameter List,Tilde.Framework.Controls,Win32,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\Win32.cs,SetScrollPos,The method has 4 parameters.
Long Parameter List,Tilde.Framework.Controls,Win32,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\Win32.cs,FlashWindow,The method has 4 parameters.
Long Parameter List,Tilde.Framework.Controls,Win32,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\Win32.cs,MessageBox,The method has 4 parameters.
Long Parameter List,Tilde.Framework.Controls,Win32,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\Win32.cs,SetWindowsHookEx,The method has 4 parameters.
Long Parameter List,Tilde.Framework.Controls,Win32,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\Win32.cs,CallNextHookEx,The method has 4 parameters.
Long Statement,Tilde.Framework.Controller,DirectoryWatcher,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\DirectoryWatcher.cs,Watch,The length of the statement  "	if ((events & (NotificationEvents.Modified | NotificationEvents.Created | NotificationEvents.Deleted | NotificationEvents.Renamed)) != 0) { " is 139.
Long Statement,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,WndActivated,The length of the statement  "		Win32.SetWindowLong (Win32.GetDlgItem (mHandle' Win32.IDHELP)' Win32.GWL_ID' mButtons [3] == "Cancel" ? (int)DialogResult.Cancel : (int)DialogResult.OK); " is 153.
Long Statement,Tilde.Framework.Controls,TreeTable,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(TreeTable)); " is 130.
Long Statement,Tilde.Framework.Controls,TreeTable,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The length of the statement  "	this.imageList1.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject ("imageList1.ImageStream"))); " is 121.
Long Statement,Tilde.Framework.Controls,TreeTable,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The length of the statement  "	this.listView1.RetrieveVirtualItem += new System.Windows.Forms.RetrieveVirtualItemEventHandler (this.TreeTable_RetrieveVirtualItem); " is 132.
Long Statement,Tilde.Framework.Controls,WindowsHook,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,Install,The length of the statement  "	mHook = Win32.SetWindowsHookEx (Win32.WH_CBT' new Win32.HookProc (this.CoreHookProc)' IntPtr.Zero' AppDomain.GetCurrentThreadId ()); " is 132.
Long Statement,Tilde.Framework.Model,Document,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Model\Document.cs,SaveDocument,The length of the statement  "			DialogResult option = MessageBox.Show ("An error occurred while saving '" + this.FileName + "':\r\n\r\n" + ex.ToString ()' "Error saving document"' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error' MessageBoxDefaultButton.Button2); " is 234.
Long Statement,Tilde.Framework.Model,Document,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Model\Document.cs,Checkout,The length of the statement  "		if (MessageBox.Show (Manager.MainWindow' "The file '" + this.FileName + "' is under revision control but not checked out; do you want to check it out?"' "Read-only file"' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) { " is 243.
Long Statement,Tilde.Framework.Model,Document,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Model\Document.cs,Checkout,The length of the statement  "		if (MessageBox.Show (Manager.MainWindow' "The file is read-only and cannot be edited. Would you like to remove the read-only attribute from it?"' "Read-only file"' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) { " is 236.
Long Statement,Tilde.Framework.Model,Document,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Model\Document.cs,Checkout,The length of the statement  "				MessageBox.Show (Manager.MainWindow' "Failed making " + this.FileName + " writable:\r\n\r\n" + ex.ToString ()' "Read-only file"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 173.
Long Statement,Tilde.Framework.Model,Project,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Model\Project.cs,NewProjectDocument,The length of the statement  "	System.Diagnostics.Debug.Assert (parentDoc != null || mRootDocument == null' "A Project can have only one root document!"); " is 123.
Long Statement,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The length of the statement  "	this.openContainingFolderToolStripMenuItem.Click += new System.EventHandler (this.openContainingFolderToolStripMenuItem_Click); " is 127.
Long Statement,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The length of the statement  "	this.DockAreas = ((WeifenLuo.WinFormsUI.Docking.DockAreas)((WeifenLuo.WinFormsUI.Docking.DockAreas.Float | WeifenLuo.WinFormsUI.Docking.DockAreas.Document))); " is 158.
Empty Catch Block,Tilde.Framework.View,ToolWindow,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\ToolWindow.cs,DeserialiseListView,The method has an empty catch block.
Magic Number,Tilde.Framework.Controller,DirectoryWatcher,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\DirectoryWatcher.cs,WatchFileEvents,The following statement contains a magic number: try {  	mFileWatcher = new FileSystemWatcher ();  	mFileWatcher.Filter = "*.*";  	mFileWatcher.IncludeSubdirectories = true;  	mFileWatcher.NotifyFilter = filters;  	mFileWatcher.Changed += new FileSystemEventHandler (mFileWatcher_Changed);  	mFileWatcher.Created += new FileSystemEventHandler (mFileWatcher_Created);  	mFileWatcher.Renamed += new RenamedEventHandler (mFileWatcher_Renamed);  	mFileWatcher.Deleted += new FileSystemEventHandler (mFileWatcher_Deleted);  	mFileWatcher.Error += new ErrorEventHandler (mFileWatcher_Error);  	mFileWatcher.InternalBufferSize = 32768;  	mFileWatcher.Path = baseDirectory;  	mFileWatcher.EnableRaisingEvents = true;  } catch (Exception) {  	mFileWatcher = null;  }  
Magic Number,Tilde.Framework.Controller,DirectoryWatcher,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\DirectoryWatcher.cs,WatchFileEvents,The following statement contains a magic number: mFileWatcher.InternalBufferSize = 32768;  
Magic Number,Tilde.Framework.Controller,DirectoryWatcher,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\DirectoryWatcher.cs,WatchAttributeEvents,The following statement contains a magic number: try {  	mFileAttributeWatcher = new FileSystemWatcher ();  	mFileAttributeWatcher.Filter = "*.*";  	mFileAttributeWatcher.IncludeSubdirectories = true;  	mFileAttributeWatcher.NotifyFilter = NotifyFilters.Attributes;  	mFileAttributeWatcher.Changed += new FileSystemEventHandler (mFileAttributeWatcher_Changed);  	mFileAttributeWatcher.Error += new ErrorEventHandler (mFileAttributeWatcher_Error);  	mFileAttributeWatcher.InternalBufferSize = 32768;  	mFileAttributeWatcher.Path = baseDirectory;  	mFileAttributeWatcher.EnableRaisingEvents = true;  } catch (System.Exception) {  	mFileAttributeWatcher = null;  }  
Magic Number,Tilde.Framework.Controller,DirectoryWatcher,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\DirectoryWatcher.cs,WatchAttributeEvents,The following statement contains a magic number: mFileAttributeWatcher.InternalBufferSize = 32768;  
Magic Number,Tilde.Framework.Controller,OptionsGridPanel,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsGridPanel.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid.Size = new System.Drawing.Size (460' 334);  
Magic Number,Tilde.Framework.Controller,OptionsGridPanel,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsGridPanel.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid.Size = new System.Drawing.Size (460' 334);  
Magic Number,Tilde.Framework.Controller,OptionsGridPanel,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsGridPanel.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (460' 334);  
Magic Number,Tilde.Framework.Controller,OptionsGridPanel,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsGridPanel.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (460' 334);  
Magic Number,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,The following statement contains a magic number: foreach (PropertyInfo property in options.GetType ().GetProperties ()) {  	object[] attrs = property.GetCustomAttributes (typeof(OptionAttribute)' true);  	if (attrs.Length == 1) {  		OptionAttribute attr = (OptionAttribute)attrs [0];  		IOptionsDatabase database = mDatabases [attr.Location];  		object value;  		if (database == null) {  			value = attr.DefaultValue;  		} else {  			if (typeof(String).IsAssignableFrom (property.PropertyType))  				value = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  			else if (typeof(Boolean).IsAssignableFrom (property.PropertyType))  				value = database.GetBooleanOption (attr.Path' (bool)attr.DefaultValue);  			else if (typeof(Enum).IsAssignableFrom (property.PropertyType)) {  				try {  					value = Enum.Parse (property.PropertyType' database.GetStringOption (attr.Path' ""));  				} catch (Exception) {  					value = attr.DefaultValue;  				}  			} else if (typeof(Int32).IsAssignableFrom (property.PropertyType))  				value = database.GetIntegerOption (attr.Path' (int)attr.DefaultValue);  			else if (typeof(Color).IsAssignableFrom (property.PropertyType)) {  				try {  					string name = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  					if (name.Contains ("'")) {  						string[] components = name.Split (new char[] {  							'''  						});  						value = Color.FromArgb (Int32.Parse (components [0])' Int32.Parse (components [1])' Int32.Parse (components [2]));  					} else  						value = Color.FromName (name);  				} catch (System.Exception) {  					value = attr.DefaultValue;  				}  			} else if (typeof(string[]).IsAssignableFrom (property.PropertyType))  				value = database.GetStringArrayOption (attr.Path' (string[])attr.DefaultValue);  			else  				throw new ApplicationException ("Don't know how to load option of type: " + property.PropertyType.ToString ());  		}  		property.SetValue (options' value' null);  	}  }  
Magic Number,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,The following statement contains a magic number: if (attrs.Length == 1) {  	OptionAttribute attr = (OptionAttribute)attrs [0];  	IOptionsDatabase database = mDatabases [attr.Location];  	object value;  	if (database == null) {  		value = attr.DefaultValue;  	} else {  		if (typeof(String).IsAssignableFrom (property.PropertyType))  			value = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  		else if (typeof(Boolean).IsAssignableFrom (property.PropertyType))  			value = database.GetBooleanOption (attr.Path' (bool)attr.DefaultValue);  		else if (typeof(Enum).IsAssignableFrom (property.PropertyType)) {  			try {  				value = Enum.Parse (property.PropertyType' database.GetStringOption (attr.Path' ""));  			} catch (Exception) {  				value = attr.DefaultValue;  			}  		} else if (typeof(Int32).IsAssignableFrom (property.PropertyType))  			value = database.GetIntegerOption (attr.Path' (int)attr.DefaultValue);  		else if (typeof(Color).IsAssignableFrom (property.PropertyType)) {  			try {  				string name = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  				if (name.Contains ("'")) {  					string[] components = name.Split (new char[] {  						'''  					});  					value = Color.FromArgb (Int32.Parse (components [0])' Int32.Parse (components [1])' Int32.Parse (components [2]));  				} else  					value = Color.FromName (name);  			} catch (System.Exception) {  				value = attr.DefaultValue;  			}  		} else if (typeof(string[]).IsAssignableFrom (property.PropertyType))  			value = database.GetStringArrayOption (attr.Path' (string[])attr.DefaultValue);  		else  			throw new ApplicationException ("Don't know how to load option of type: " + property.PropertyType.ToString ());  	}  	property.SetValue (options' value' null);  }  
Magic Number,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,The following statement contains a magic number: if (database == null) {  	value = attr.DefaultValue;  } else {  	if (typeof(String).IsAssignableFrom (property.PropertyType))  		value = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  	else if (typeof(Boolean).IsAssignableFrom (property.PropertyType))  		value = database.GetBooleanOption (attr.Path' (bool)attr.DefaultValue);  	else if (typeof(Enum).IsAssignableFrom (property.PropertyType)) {  		try {  			value = Enum.Parse (property.PropertyType' database.GetStringOption (attr.Path' ""));  		} catch (Exception) {  			value = attr.DefaultValue;  		}  	} else if (typeof(Int32).IsAssignableFrom (property.PropertyType))  		value = database.GetIntegerOption (attr.Path' (int)attr.DefaultValue);  	else if (typeof(Color).IsAssignableFrom (property.PropertyType)) {  		try {  			string name = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  			if (name.Contains ("'")) {  				string[] components = name.Split (new char[] {  					'''  				});  				value = Color.FromArgb (Int32.Parse (components [0])' Int32.Parse (components [1])' Int32.Parse (components [2]));  			} else  				value = Color.FromName (name);  		} catch (System.Exception) {  			value = attr.DefaultValue;  		}  	} else if (typeof(string[]).IsAssignableFrom (property.PropertyType))  		value = database.GetStringArrayOption (attr.Path' (string[])attr.DefaultValue);  	else  		throw new ApplicationException ("Don't know how to load option of type: " + property.PropertyType.ToString ());  }  
Magic Number,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,The following statement contains a magic number: if (typeof(String).IsAssignableFrom (property.PropertyType))  	value = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  else if (typeof(Boolean).IsAssignableFrom (property.PropertyType))  	value = database.GetBooleanOption (attr.Path' (bool)attr.DefaultValue);  else if (typeof(Enum).IsAssignableFrom (property.PropertyType)) {  	try {  		value = Enum.Parse (property.PropertyType' database.GetStringOption (attr.Path' ""));  	} catch (Exception) {  		value = attr.DefaultValue;  	}  } else if (typeof(Int32).IsAssignableFrom (property.PropertyType))  	value = database.GetIntegerOption (attr.Path' (int)attr.DefaultValue);  else if (typeof(Color).IsAssignableFrom (property.PropertyType)) {  	try {  		string name = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  		if (name.Contains ("'")) {  			string[] components = name.Split (new char[] {  				'''  			});  			value = Color.FromArgb (Int32.Parse (components [0])' Int32.Parse (components [1])' Int32.Parse (components [2]));  		} else  			value = Color.FromName (name);  	} catch (System.Exception) {  		value = attr.DefaultValue;  	}  } else if (typeof(string[]).IsAssignableFrom (property.PropertyType))  	value = database.GetStringArrayOption (attr.Path' (string[])attr.DefaultValue);  else  	throw new ApplicationException ("Don't know how to load option of type: " + property.PropertyType.ToString ());  
Magic Number,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,The following statement contains a magic number: if (typeof(Boolean).IsAssignableFrom (property.PropertyType))  	value = database.GetBooleanOption (attr.Path' (bool)attr.DefaultValue);  else if (typeof(Enum).IsAssignableFrom (property.PropertyType)) {  	try {  		value = Enum.Parse (property.PropertyType' database.GetStringOption (attr.Path' ""));  	} catch (Exception) {  		value = attr.DefaultValue;  	}  } else if (typeof(Int32).IsAssignableFrom (property.PropertyType))  	value = database.GetIntegerOption (attr.Path' (int)attr.DefaultValue);  else if (typeof(Color).IsAssignableFrom (property.PropertyType)) {  	try {  		string name = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  		if (name.Contains ("'")) {  			string[] components = name.Split (new char[] {  				'''  			});  			value = Color.FromArgb (Int32.Parse (components [0])' Int32.Parse (components [1])' Int32.Parse (components [2]));  		} else  			value = Color.FromName (name);  	} catch (System.Exception) {  		value = attr.DefaultValue;  	}  } else if (typeof(string[]).IsAssignableFrom (property.PropertyType))  	value = database.GetStringArrayOption (attr.Path' (string[])attr.DefaultValue);  else  	throw new ApplicationException ("Don't know how to load option of type: " + property.PropertyType.ToString ());  
Magic Number,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,The following statement contains a magic number: if (typeof(Enum).IsAssignableFrom (property.PropertyType)) {  	try {  		value = Enum.Parse (property.PropertyType' database.GetStringOption (attr.Path' ""));  	} catch (Exception) {  		value = attr.DefaultValue;  	}  } else if (typeof(Int32).IsAssignableFrom (property.PropertyType))  	value = database.GetIntegerOption (attr.Path' (int)attr.DefaultValue);  else if (typeof(Color).IsAssignableFrom (property.PropertyType)) {  	try {  		string name = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  		if (name.Contains ("'")) {  			string[] components = name.Split (new char[] {  				'''  			});  			value = Color.FromArgb (Int32.Parse (components [0])' Int32.Parse (components [1])' Int32.Parse (components [2]));  		} else  			value = Color.FromName (name);  	} catch (System.Exception) {  		value = attr.DefaultValue;  	}  } else if (typeof(string[]).IsAssignableFrom (property.PropertyType))  	value = database.GetStringArrayOption (attr.Path' (string[])attr.DefaultValue);  else  	throw new ApplicationException ("Don't know how to load option of type: " + property.PropertyType.ToString ());  
Magic Number,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,The following statement contains a magic number: if (typeof(Int32).IsAssignableFrom (property.PropertyType))  	value = database.GetIntegerOption (attr.Path' (int)attr.DefaultValue);  else if (typeof(Color).IsAssignableFrom (property.PropertyType)) {  	try {  		string name = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  		if (name.Contains ("'")) {  			string[] components = name.Split (new char[] {  				'''  			});  			value = Color.FromArgb (Int32.Parse (components [0])' Int32.Parse (components [1])' Int32.Parse (components [2]));  		} else  			value = Color.FromName (name);  	} catch (System.Exception) {  		value = attr.DefaultValue;  	}  } else if (typeof(string[]).IsAssignableFrom (property.PropertyType))  	value = database.GetStringArrayOption (attr.Path' (string[])attr.DefaultValue);  else  	throw new ApplicationException ("Don't know how to load option of type: " + property.PropertyType.ToString ());  
Magic Number,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,The following statement contains a magic number: if (typeof(Color).IsAssignableFrom (property.PropertyType)) {  	try {  		string name = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  		if (name.Contains ("'")) {  			string[] components = name.Split (new char[] {  				'''  			});  			value = Color.FromArgb (Int32.Parse (components [0])' Int32.Parse (components [1])' Int32.Parse (components [2]));  		} else  			value = Color.FromName (name);  	} catch (System.Exception) {  		value = attr.DefaultValue;  	}  } else if (typeof(string[]).IsAssignableFrom (property.PropertyType))  	value = database.GetStringArrayOption (attr.Path' (string[])attr.DefaultValue);  else  	throw new ApplicationException ("Don't know how to load option of type: " + property.PropertyType.ToString ());  
Magic Number,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,The following statement contains a magic number: try {  	string name = database.GetStringOption (attr.Path' (string)attr.DefaultValue);  	if (name.Contains ("'")) {  		string[] components = name.Split (new char[] {  			'''  		});  		value = Color.FromArgb (Int32.Parse (components [0])' Int32.Parse (components [1])' Int32.Parse (components [2]));  	} else  		value = Color.FromName (name);  } catch (System.Exception) {  	value = attr.DefaultValue;  }  
Magic Number,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,The following statement contains a magic number: if (name.Contains ("'")) {  	string[] components = name.Split (new char[] {  		'''  	});  	value = Color.FromArgb (Int32.Parse (components [0])' Int32.Parse (components [1])' Int32.Parse (components [2]));  } else  	value = Color.FromName (name);  
Magic Number,Tilde.Framework.Controller,OptionsManager,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,The following statement contains a magic number: value = Color.FromArgb (Int32.Parse (components [0])' Int32.Parse (components [1])' Int32.Parse (components [2]));  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: System.Diagnostics.Debug.Assert (buttons.Length <= 4 && buttons.Length >= 1);  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length) {  case 1:  	buttonstype = Win32.MB_OK;  	mButtonMap [DialogResult.OK] = buttons [0];  	break;  case 2:  	if (buttons [1] == "Cancel") {  		buttonstype = Win32.MB_OKCANCEL;  		mButtonMap [DialogResult.OK] = buttons [0];  		mButtonMap [DialogResult.Cancel] = buttons [1];  	} else {  		buttonstype = Win32.MB_YESNO;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  	}  	break;  case 3:  	if (buttons [2] == "Cancel") {  		buttonstype = Win32.MB_YESNOCANCEL;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  		mButtonMap [DialogResult.Cancel] = buttons [2];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  	}  	break;  case 4:  	if (buttons [3] == "Cancel") {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.Cancel] = buttons [3];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.OK] = buttons [3];  	}  	break;  default:  	throw new ApplicationException ("MessageBoxEx can only present 4 buttons");  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length) {  case 1:  	buttonstype = Win32.MB_OK;  	mButtonMap [DialogResult.OK] = buttons [0];  	break;  case 2:  	if (buttons [1] == "Cancel") {  		buttonstype = Win32.MB_OKCANCEL;  		mButtonMap [DialogResult.OK] = buttons [0];  		mButtonMap [DialogResult.Cancel] = buttons [1];  	} else {  		buttonstype = Win32.MB_YESNO;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  	}  	break;  case 3:  	if (buttons [2] == "Cancel") {  		buttonstype = Win32.MB_YESNOCANCEL;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  		mButtonMap [DialogResult.Cancel] = buttons [2];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  	}  	break;  case 4:  	if (buttons [3] == "Cancel") {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.Cancel] = buttons [3];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.OK] = buttons [3];  	}  	break;  default:  	throw new ApplicationException ("MessageBoxEx can only present 4 buttons");  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length) {  case 1:  	buttonstype = Win32.MB_OK;  	mButtonMap [DialogResult.OK] = buttons [0];  	break;  case 2:  	if (buttons [1] == "Cancel") {  		buttonstype = Win32.MB_OKCANCEL;  		mButtonMap [DialogResult.OK] = buttons [0];  		mButtonMap [DialogResult.Cancel] = buttons [1];  	} else {  		buttonstype = Win32.MB_YESNO;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  	}  	break;  case 3:  	if (buttons [2] == "Cancel") {  		buttonstype = Win32.MB_YESNOCANCEL;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  		mButtonMap [DialogResult.Cancel] = buttons [2];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  	}  	break;  case 4:  	if (buttons [3] == "Cancel") {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.Cancel] = buttons [3];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.OK] = buttons [3];  	}  	break;  default:  	throw new ApplicationException ("MessageBoxEx can only present 4 buttons");  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length) {  case 1:  	buttonstype = Win32.MB_OK;  	mButtonMap [DialogResult.OK] = buttons [0];  	break;  case 2:  	if (buttons [1] == "Cancel") {  		buttonstype = Win32.MB_OKCANCEL;  		mButtonMap [DialogResult.OK] = buttons [0];  		mButtonMap [DialogResult.Cancel] = buttons [1];  	} else {  		buttonstype = Win32.MB_YESNO;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  	}  	break;  case 3:  	if (buttons [2] == "Cancel") {  		buttonstype = Win32.MB_YESNOCANCEL;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  		mButtonMap [DialogResult.Cancel] = buttons [2];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  	}  	break;  case 4:  	if (buttons [3] == "Cancel") {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.Cancel] = buttons [3];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.OK] = buttons [3];  	}  	break;  default:  	throw new ApplicationException ("MessageBoxEx can only present 4 buttons");  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length) {  case 1:  	buttonstype = Win32.MB_OK;  	mButtonMap [DialogResult.OK] = buttons [0];  	break;  case 2:  	if (buttons [1] == "Cancel") {  		buttonstype = Win32.MB_OKCANCEL;  		mButtonMap [DialogResult.OK] = buttons [0];  		mButtonMap [DialogResult.Cancel] = buttons [1];  	} else {  		buttonstype = Win32.MB_YESNO;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  	}  	break;  case 3:  	if (buttons [2] == "Cancel") {  		buttonstype = Win32.MB_YESNOCANCEL;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  		mButtonMap [DialogResult.Cancel] = buttons [2];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  	}  	break;  case 4:  	if (buttons [3] == "Cancel") {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.Cancel] = buttons [3];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.OK] = buttons [3];  	}  	break;  default:  	throw new ApplicationException ("MessageBoxEx can only present 4 buttons");  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length) {  case 1:  	buttonstype = Win32.MB_OK;  	mButtonMap [DialogResult.OK] = buttons [0];  	break;  case 2:  	if (buttons [1] == "Cancel") {  		buttonstype = Win32.MB_OKCANCEL;  		mButtonMap [DialogResult.OK] = buttons [0];  		mButtonMap [DialogResult.Cancel] = buttons [1];  	} else {  		buttonstype = Win32.MB_YESNO;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  	}  	break;  case 3:  	if (buttons [2] == "Cancel") {  		buttonstype = Win32.MB_YESNOCANCEL;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  		mButtonMap [DialogResult.Cancel] = buttons [2];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  	}  	break;  case 4:  	if (buttons [3] == "Cancel") {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.Cancel] = buttons [3];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.OK] = buttons [3];  	}  	break;  default:  	throw new ApplicationException ("MessageBoxEx can only present 4 buttons");  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length) {  case 1:  	buttonstype = Win32.MB_OK;  	mButtonMap [DialogResult.OK] = buttons [0];  	break;  case 2:  	if (buttons [1] == "Cancel") {  		buttonstype = Win32.MB_OKCANCEL;  		mButtonMap [DialogResult.OK] = buttons [0];  		mButtonMap [DialogResult.Cancel] = buttons [1];  	} else {  		buttonstype = Win32.MB_YESNO;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  	}  	break;  case 3:  	if (buttons [2] == "Cancel") {  		buttonstype = Win32.MB_YESNOCANCEL;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  		mButtonMap [DialogResult.Cancel] = buttons [2];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  	}  	break;  case 4:  	if (buttons [3] == "Cancel") {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.Cancel] = buttons [3];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.OK] = buttons [3];  	}  	break;  default:  	throw new ApplicationException ("MessageBoxEx can only present 4 buttons");  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length) {  case 1:  	buttonstype = Win32.MB_OK;  	mButtonMap [DialogResult.OK] = buttons [0];  	break;  case 2:  	if (buttons [1] == "Cancel") {  		buttonstype = Win32.MB_OKCANCEL;  		mButtonMap [DialogResult.OK] = buttons [0];  		mButtonMap [DialogResult.Cancel] = buttons [1];  	} else {  		buttonstype = Win32.MB_YESNO;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  	}  	break;  case 3:  	if (buttons [2] == "Cancel") {  		buttonstype = Win32.MB_YESNOCANCEL;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  		mButtonMap [DialogResult.Cancel] = buttons [2];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  	}  	break;  case 4:  	if (buttons [3] == "Cancel") {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.Cancel] = buttons [3];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.OK] = buttons [3];  	}  	break;  default:  	throw new ApplicationException ("MessageBoxEx can only present 4 buttons");  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length) {  case 1:  	buttonstype = Win32.MB_OK;  	mButtonMap [DialogResult.OK] = buttons [0];  	break;  case 2:  	if (buttons [1] == "Cancel") {  		buttonstype = Win32.MB_OKCANCEL;  		mButtonMap [DialogResult.OK] = buttons [0];  		mButtonMap [DialogResult.Cancel] = buttons [1];  	} else {  		buttonstype = Win32.MB_YESNO;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  	}  	break;  case 3:  	if (buttons [2] == "Cancel") {  		buttonstype = Win32.MB_YESNOCANCEL;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  		mButtonMap [DialogResult.Cancel] = buttons [2];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  	}  	break;  case 4:  	if (buttons [3] == "Cancel") {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.Cancel] = buttons [3];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.OK] = buttons [3];  	}  	break;  default:  	throw new ApplicationException ("MessageBoxEx can only present 4 buttons");  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length) {  case 1:  	buttonstype = Win32.MB_OK;  	mButtonMap [DialogResult.OK] = buttons [0];  	break;  case 2:  	if (buttons [1] == "Cancel") {  		buttonstype = Win32.MB_OKCANCEL;  		mButtonMap [DialogResult.OK] = buttons [0];  		mButtonMap [DialogResult.Cancel] = buttons [1];  	} else {  		buttonstype = Win32.MB_YESNO;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  	}  	break;  case 3:  	if (buttons [2] == "Cancel") {  		buttonstype = Win32.MB_YESNOCANCEL;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  		mButtonMap [DialogResult.Cancel] = buttons [2];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  	}  	break;  case 4:  	if (buttons [3] == "Cancel") {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.Cancel] = buttons [3];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.OK] = buttons [3];  	}  	break;  default:  	throw new ApplicationException ("MessageBoxEx can only present 4 buttons");  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length) {  case 1:  	buttonstype = Win32.MB_OK;  	mButtonMap [DialogResult.OK] = buttons [0];  	break;  case 2:  	if (buttons [1] == "Cancel") {  		buttonstype = Win32.MB_OKCANCEL;  		mButtonMap [DialogResult.OK] = buttons [0];  		mButtonMap [DialogResult.Cancel] = buttons [1];  	} else {  		buttonstype = Win32.MB_YESNO;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  	}  	break;  case 3:  	if (buttons [2] == "Cancel") {  		buttonstype = Win32.MB_YESNOCANCEL;  		mButtonMap [DialogResult.Yes] = buttons [0];  		mButtonMap [DialogResult.No] = buttons [1];  		mButtonMap [DialogResult.Cancel] = buttons [2];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  	}  	break;  case 4:  	if (buttons [3] == "Cancel") {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.Cancel] = buttons [3];  	} else {  		buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  		mButtonMap [DialogResult.Abort] = buttons [0];  		mButtonMap [DialogResult.Retry] = buttons [1];  		mButtonMap [DialogResult.Ignore] = buttons [2];  		mButtonMap [DialogResult.OK] = buttons [3];  	}  	break;  default:  	throw new ApplicationException ("MessageBoxEx can only present 4 buttons");  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: if (buttons [2] == "Cancel") {  	buttonstype = Win32.MB_YESNOCANCEL;  	mButtonMap [DialogResult.Yes] = buttons [0];  	mButtonMap [DialogResult.No] = buttons [1];  	mButtonMap [DialogResult.Cancel] = buttons [2];  } else {  	buttonstype = Win32.MB_ABORTRETRYIGNORE;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: if (buttons [2] == "Cancel") {  	buttonstype = Win32.MB_YESNOCANCEL;  	mButtonMap [DialogResult.Yes] = buttons [0];  	mButtonMap [DialogResult.No] = buttons [1];  	mButtonMap [DialogResult.Cancel] = buttons [2];  } else {  	buttonstype = Win32.MB_ABORTRETRYIGNORE;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: if (buttons [2] == "Cancel") {  	buttonstype = Win32.MB_YESNOCANCEL;  	mButtonMap [DialogResult.Yes] = buttons [0];  	mButtonMap [DialogResult.No] = buttons [1];  	mButtonMap [DialogResult.Cancel] = buttons [2];  } else {  	buttonstype = Win32.MB_ABORTRETRYIGNORE;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: mButtonMap [DialogResult.Cancel] = buttons [2];  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: mButtonMap [DialogResult.Ignore] = buttons [2];  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: if (buttons [3] == "Cancel") {  	buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  	mButtonMap [DialogResult.Cancel] = buttons [3];  } else {  	buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  	mButtonMap [DialogResult.OK] = buttons [3];  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: if (buttons [3] == "Cancel") {  	buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  	mButtonMap [DialogResult.Cancel] = buttons [3];  } else {  	buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  	mButtonMap [DialogResult.OK] = buttons [3];  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: if (buttons [3] == "Cancel") {  	buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  	mButtonMap [DialogResult.Cancel] = buttons [3];  } else {  	buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  	mButtonMap [DialogResult.OK] = buttons [3];  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: if (buttons [3] == "Cancel") {  	buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  	mButtonMap [DialogResult.Cancel] = buttons [3];  } else {  	buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  	mButtonMap [DialogResult.OK] = buttons [3];  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: if (buttons [3] == "Cancel") {  	buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  	mButtonMap [DialogResult.Cancel] = buttons [3];  } else {  	buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  	mButtonMap [DialogResult.Abort] = buttons [0];  	mButtonMap [DialogResult.Retry] = buttons [1];  	mButtonMap [DialogResult.Ignore] = buttons [2];  	mButtonMap [DialogResult.OK] = buttons [3];  }  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: mButtonMap [DialogResult.Ignore] = buttons [2];  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: mButtonMap [DialogResult.Cancel] = buttons [3];  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: mButtonMap [DialogResult.Ignore] = buttons [2];  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: mButtonMap [DialogResult.OK] = buttons [3];  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,WndActivated,The following statement contains a magic number: if (mButtons.Length == 4)  	Win32.SetWindowLong (Win32.GetDlgItem (mHandle' Win32.IDHELP)' Win32.GWL_ID' mButtons [3] == "Cancel" ? (int)DialogResult.Cancel : (int)DialogResult.OK);  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,WndActivated,The following statement contains a magic number: if (mButtons.Length == 4)  	Win32.SetWindowLong (Win32.GetDlgItem (mHandle' Win32.IDHELP)' Win32.GWL_ID' mButtons [3] == "Cancel" ? (int)DialogResult.Cancel : (int)DialogResult.OK);  
Magic Number,Tilde.Framework.Controls,MessageBoxEx,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,WndActivated,The following statement contains a magic number: Win32.SetWindowLong (Win32.GetDlgItem (mHandle' Win32.IDHELP)' Win32.GWL_ID' mButtons [3] == "Cancel" ? (int)DialogResult.Cancel : (int)DialogResult.OK);  
Magic Number,Tilde.Framework.Controls,TreeTable,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The following statement contains a magic number: this.listView1.Size = new System.Drawing.Size (150' 150);  
Magic Number,Tilde.Framework.Controls,TreeTable,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The following statement contains a magic number: this.listView1.Size = new System.Drawing.Size (150' 150);  
Magic Number,Tilde.Framework.Controls,WindowsHook,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,CoreHookProc,The following statement contains a magic number: if (code >= 0) {  	IntPtr hwnd = wParam;  	StringBuilder sb1 = new StringBuilder ();  	sb1.Capacity = 40;  	Win32.GetClassName (hwnd' sb1' 40);  	string className = sb1.ToString ();  	switch (code) {  	case Win32.HCBT_CREATEWND:  		OnWindowCreated (hwnd' className);  		break;  	case Win32.HCBT_DESTROYWND:  		OnWindowDestroyed (hwnd' className);  		break;  	case Win32.HCBT_ACTIVATE:  		OnWindowActivated (hwnd' className);  		break;  	}  }  
Magic Number,Tilde.Framework.Controls,WindowsHook,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,CoreHookProc,The following statement contains a magic number: if (code >= 0) {  	IntPtr hwnd = wParam;  	StringBuilder sb1 = new StringBuilder ();  	sb1.Capacity = 40;  	Win32.GetClassName (hwnd' sb1' 40);  	string className = sb1.ToString ();  	switch (code) {  	case Win32.HCBT_CREATEWND:  		OnWindowCreated (hwnd' className);  		break;  	case Win32.HCBT_DESTROYWND:  		OnWindowDestroyed (hwnd' className);  		break;  	case Win32.HCBT_ACTIVATE:  		OnWindowActivated (hwnd' className);  		break;  	}  }  
Magic Number,Tilde.Framework.Controls,WindowsHook,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,CoreHookProc,The following statement contains a magic number: sb1.Capacity = 40;  
Magic Number,Tilde.Framework.Controls,WindowsHook,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,CoreHookProc,The following statement contains a magic number: Win32.GetClassName (hwnd' sb1' 40);  
Magic Number,Tilde.Framework.Model,Project,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Model\Project.cs,SaveUserConfig,The following statement contains a magic number: if (mRootDocument != null) {  	string userFile = System.IO.Path.ChangeExtension (mRootDocument.FileName' ".tilde.xml");  	XmlTextWriter writer = new XmlTextWriter (userFile' System.Text.Encoding.ASCII);  	writer.Formatting = Formatting.Indented;  	writer.Indentation = 4;  	writer.IndentChar = ' ';  	mUserDocument.Save (writer);  	writer.Close ();  }  
Magic Number,Tilde.Framework.Model,Project,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Model\Project.cs,SaveUserConfig,The following statement contains a magic number: writer.Indentation = 4;  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.tabMenuStrip.Size = new System.Drawing.Size (188' 98);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.tabMenuStrip.Size = new System.Drawing.Size (188' 98);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.saveToolStripMenuItem.Size = new System.Drawing.Size (187' 22);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.saveToolStripMenuItem.Size = new System.Drawing.Size (187' 22);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.closeToolStripMenuItem.Size = new System.Drawing.Size (187' 22);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.closeToolStripMenuItem.Size = new System.Drawing.Size (187' 22);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size (184' 6);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size (184' 6);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.copyFullPathToolStripMenuItem.Size = new System.Drawing.Size (187' 22);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.copyFullPathToolStripMenuItem.Size = new System.Drawing.Size (187' 22);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.openContainingFolderToolStripMenuItem.Size = new System.Drawing.Size (187' 22);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.openContainingFolderToolStripMenuItem.Size = new System.Drawing.Size (187' 22);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (292' 266);  
Magic Number,Tilde.Framework.View,DocumentView,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (292' 266);  
Magic Number,Tilde.Framework.View,PersistWindowComponent,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,LoadInfoFromRegistry,The following statement contains a magic number: if (key != null) {  	string data = (string)key.GetValue (mRegistryKey);  	if (data != null) {  		string[] windowpos = data.Split (new char[] {  			'''  		});  		FormWindowState windowState = (FormWindowState)Enum.Parse (typeof(FormWindowState)' windowpos [0]);  		int left = (int)Decimal.Parse (windowpos [1]);  		int top = (int)Decimal.Parse (windowpos [2]);  		int width = (int)Decimal.Parse (windowpos [3]);  		int height = (int)Decimal.Parse (windowpos [4]);  		mParentForm.Location = new System.Drawing.Point (left' top);  		mParentForm.Size = new System.Drawing.Size (width' height);  		mParentForm.WindowState = windowState;  		this.mWindowInfo.Left = mParentForm.Left;  		this.mWindowInfo.Top = mParentForm.Top;  		this.mWindowInfo.Height = mParentForm.Height;  		this.mWindowInfo.Width = mParentForm.Width;  		this.mWindowInfo.WindowState = mParentForm.WindowState;  	}  }  
Magic Number,Tilde.Framework.View,PersistWindowComponent,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,LoadInfoFromRegistry,The following statement contains a magic number: if (key != null) {  	string data = (string)key.GetValue (mRegistryKey);  	if (data != null) {  		string[] windowpos = data.Split (new char[] {  			'''  		});  		FormWindowState windowState = (FormWindowState)Enum.Parse (typeof(FormWindowState)' windowpos [0]);  		int left = (int)Decimal.Parse (windowpos [1]);  		int top = (int)Decimal.Parse (windowpos [2]);  		int width = (int)Decimal.Parse (windowpos [3]);  		int height = (int)Decimal.Parse (windowpos [4]);  		mParentForm.Location = new System.Drawing.Point (left' top);  		mParentForm.Size = new System.Drawing.Size (width' height);  		mParentForm.WindowState = windowState;  		this.mWindowInfo.Left = mParentForm.Left;  		this.mWindowInfo.Top = mParentForm.Top;  		this.mWindowInfo.Height = mParentForm.Height;  		this.mWindowInfo.Width = mParentForm.Width;  		this.mWindowInfo.WindowState = mParentForm.WindowState;  	}  }  
Magic Number,Tilde.Framework.View,PersistWindowComponent,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,LoadInfoFromRegistry,The following statement contains a magic number: if (key != null) {  	string data = (string)key.GetValue (mRegistryKey);  	if (data != null) {  		string[] windowpos = data.Split (new char[] {  			'''  		});  		FormWindowState windowState = (FormWindowState)Enum.Parse (typeof(FormWindowState)' windowpos [0]);  		int left = (int)Decimal.Parse (windowpos [1]);  		int top = (int)Decimal.Parse (windowpos [2]);  		int width = (int)Decimal.Parse (windowpos [3]);  		int height = (int)Decimal.Parse (windowpos [4]);  		mParentForm.Location = new System.Drawing.Point (left' top);  		mParentForm.Size = new System.Drawing.Size (width' height);  		mParentForm.WindowState = windowState;  		this.mWindowInfo.Left = mParentForm.Left;  		this.mWindowInfo.Top = mParentForm.Top;  		this.mWindowInfo.Height = mParentForm.Height;  		this.mWindowInfo.Width = mParentForm.Width;  		this.mWindowInfo.WindowState = mParentForm.WindowState;  	}  }  
Magic Number,Tilde.Framework.View,PersistWindowComponent,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,LoadInfoFromRegistry,The following statement contains a magic number: if (data != null) {  	string[] windowpos = data.Split (new char[] {  		'''  	});  	FormWindowState windowState = (FormWindowState)Enum.Parse (typeof(FormWindowState)' windowpos [0]);  	int left = (int)Decimal.Parse (windowpos [1]);  	int top = (int)Decimal.Parse (windowpos [2]);  	int width = (int)Decimal.Parse (windowpos [3]);  	int height = (int)Decimal.Parse (windowpos [4]);  	mParentForm.Location = new System.Drawing.Point (left' top);  	mParentForm.Size = new System.Drawing.Size (width' height);  	mParentForm.WindowState = windowState;  	this.mWindowInfo.Left = mParentForm.Left;  	this.mWindowInfo.Top = mParentForm.Top;  	this.mWindowInfo.Height = mParentForm.Height;  	this.mWindowInfo.Width = mParentForm.Width;  	this.mWindowInfo.WindowState = mParentForm.WindowState;  }  
Magic Number,Tilde.Framework.View,PersistWindowComponent,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,LoadInfoFromRegistry,The following statement contains a magic number: if (data != null) {  	string[] windowpos = data.Split (new char[] {  		'''  	});  	FormWindowState windowState = (FormWindowState)Enum.Parse (typeof(FormWindowState)' windowpos [0]);  	int left = (int)Decimal.Parse (windowpos [1]);  	int top = (int)Decimal.Parse (windowpos [2]);  	int width = (int)Decimal.Parse (windowpos [3]);  	int height = (int)Decimal.Parse (windowpos [4]);  	mParentForm.Location = new System.Drawing.Point (left' top);  	mParentForm.Size = new System.Drawing.Size (width' height);  	mParentForm.WindowState = windowState;  	this.mWindowInfo.Left = mParentForm.Left;  	this.mWindowInfo.Top = mParentForm.Top;  	this.mWindowInfo.Height = mParentForm.Height;  	this.mWindowInfo.Width = mParentForm.Width;  	this.mWindowInfo.WindowState = mParentForm.WindowState;  }  
Magic Number,Tilde.Framework.View,PersistWindowComponent,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,LoadInfoFromRegistry,The following statement contains a magic number: if (data != null) {  	string[] windowpos = data.Split (new char[] {  		'''  	});  	FormWindowState windowState = (FormWindowState)Enum.Parse (typeof(FormWindowState)' windowpos [0]);  	int left = (int)Decimal.Parse (windowpos [1]);  	int top = (int)Decimal.Parse (windowpos [2]);  	int width = (int)Decimal.Parse (windowpos [3]);  	int height = (int)Decimal.Parse (windowpos [4]);  	mParentForm.Location = new System.Drawing.Point (left' top);  	mParentForm.Size = new System.Drawing.Size (width' height);  	mParentForm.WindowState = windowState;  	this.mWindowInfo.Left = mParentForm.Left;  	this.mWindowInfo.Top = mParentForm.Top;  	this.mWindowInfo.Height = mParentForm.Height;  	this.mWindowInfo.Width = mParentForm.Width;  	this.mWindowInfo.WindowState = mParentForm.WindowState;  }  
Magic Number,Tilde.Framework.View,ToolWindow,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\ToolWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (292' 273);  
Magic Number,Tilde.Framework.View,ToolWindow,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\ToolWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (292' 273);  
Missing Default,Tilde.Framework.Controls,WindowsHook,D:\newReposJune17\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,CoreHookProc,The following switch statement is missing a default case: switch (code) {  case Win32.HCBT_CREATEWND:  	OnWindowCreated (hwnd' className);  	break;  case Win32.HCBT_DESTROYWND:  	OnWindowDestroyed (hwnd' className);  	break;  case Win32.HCBT_ACTIVATE:  	OnWindowActivated (hwnd' className);  	break;  }  
Missing Default,Tilde.Framework.View,PersistWindowComponent,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,OnClosing,The following switch statement is missing a default case: switch (this.mPersistMethod) {  case PersistMethods.Registry:  	if (this.mRegistryPath == "" || this.mRegistryKey == "")  		throw new Exception ("Registry File path is empty");  	this.SaveInfoToRegistry ();  	break;  case PersistMethods.Custom:  	// fire SaveState event  	if (SaveStateEvent != null)  		SaveStateEvent (this' this.mWindowInfo);  	break;  }  
Missing Default,Tilde.Framework.View,PersistWindowComponent,D:\newReposJune17\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,OnLoad,The following switch statement is missing a default case: switch (this.mPersistMethod) {  case PersistMethods.Registry:  	if (this.mRegistryPath == "" || this.mRegistryKey == "")  		throw new Exception ("Registry File path is empty");  	this.LoadInfoFromRegistry ();  	break;  case PersistMethods.Custom:  	// fire LoadState event  	if (LoadStateEvent != null)  		LoadStateEvent (this' this.mWindowInfo);  	break;  }  
