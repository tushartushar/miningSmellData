Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Tilde.Framework.Controller,FindInFilesResultEventArgs,C:\repos\jjensen_lua-tilde\source\Framework\Controller\IManager.cs,FindInFilesResultEventArgs,The method has 5 parameters. Parameters: file' line' startChar' endChar' message
Long Parameter List,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,Show,The method has 6 parameters. Parameters: window' text' title' buttons' icon' defaultButton
Long Parameter List,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The method has 6 parameters. Parameters: window' text' title' buttons' icon' defaultButton
Long Parameter List,Tilde.Framework.Controls,ShellAPI,C:\repos\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,SHGetFileInfo,The method has 5 parameters. Parameters: pszPath' dwFileAttribs' psfi' cbFileInfo' uFlags
Long Parameter List,Tilde.Framework.Controls,ShellAPI,C:\repos\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,SHGetFileInfo,The method has 5 parameters. Parameters: pIDL' dwFileAttributes' psfi' cbFileInfo' uFlags
Long Parameter List,Tilde.Framework.Controls,IShellFolder,C:\repos\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,ParseDisplayName,The method has 6 parameters. Parameters: hwnd' pbc' pszDisplayName' pchEaten' ppidl' pdwAttributes
Long Parameter List,Tilde.Framework.Controls,IShellFolder,C:\repos\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,GetUIObjectOf,The method has 6 parameters. Parameters: hwndOwner' cidl' apidl' riid' rgfReserved' ppv
Long Parameter List,Tilde.Framework.Controls,IShellFolder,C:\repos\jjensen_lua-tilde\source\Framework\Controls\ShellAPI.cs,SetNameOf,The method has 5 parameters. Parameters: hwnd' pidl' pszName' uFlags' ppidlOut
Long Identifier,Tilde.Framework.Controller,ApplicationOptions,C:\repos\jjensen_lua-tilde\source\Framework\Controller\ApplicationOptions.cs,,The length of the parameter m_automaticallyReloadModifiedFiles is 34.
Long Identifier,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,,The length of the parameter openContainingFolderToolStripMenuItem is 37.
Long Statement,Tilde.Framework.Controller,DirectoryWatcher,C:\repos\jjensen_lua-tilde\source\Framework\Controller\DirectoryWatcher.cs,Watch,The length of the statement  "			if( (events & (NotificationEvents.Modified | NotificationEvents.Created | NotificationEvents.Deleted | NotificationEvents.Renamed)) != 0) " is 137.
Long Statement,Tilde.Framework.Controller,FileWatcher,C:\repos\jjensen_lua-tilde\source\Framework\Controller\FileWatcher.cs,EnableFile,The length of the statement  "					WatchedFile fileInfo = mWatchedFiles.Find(delegate(WatchedFile file) { return PathUtils.Compare(file.FileName' fileName) == 0; }); " is 130.
Long Statement,Tilde.Framework.Controller,FileWatcher,C:\repos\jjensen_lua-tilde\source\Framework\Controller\FileWatcher.cs,EnableFile,The length of the statement  "					WatchedFile fileInfo = mIgnoredFiles.Find(delegate(WatchedFile file) { return PathUtils.Compare(file.FileName' fileName) == 0; }); " is 130.
Long Statement,Tilde.Framework.Controller,OptionsManager,C:\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,StoreOption,The length of the statement  "					success = database.SetStringOption(attr.Path' String.Join("'"' new string[] { color.R.ToString()' color.G.ToString()' color.B.ToString() })' validateOnly); " is 155.
Long Statement,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,WndActivated,The length of the statement  "				Win32.SetWindowLong(Win32.GetDlgItem(mHandle' Win32.IDHELP)' Win32.GWL_ID' mButtons[3] == "Cancel" ? (int)DialogResult.Cancel : (int)DialogResult.OK); " is 150.
Long Statement,Tilde.Framework.Controls,TreeTable,C:\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,UpdateItems,The length of the statement  "				TreeTableNode selItem = listView1.FocusedItem == null ? null : m_nodes[listView1.FocusedItem.Index]; //listView1.SelectedIndices.Count == 0 ? null : m_nodes[listView1.SelectedIndices[0]]; " is 187.
Long Statement,Tilde.Framework.Controls,TreeTable,C:\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(TreeTable)); " is 129.
Long Statement,Tilde.Framework.Controls,TreeTable,C:\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The length of the statement  "			this.imageList1.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("imageList1.ImageStream"))); " is 120.
Long Statement,Tilde.Framework.Controls,TreeTable,C:\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The length of the statement  "			this.listView1.RetrieveVirtualItem += new System.Windows.Forms.RetrieveVirtualItemEventHandler(this.TreeTable_RetrieveVirtualItem); " is 131.
Long Statement,Tilde.Framework.Model,Document,C:\repos\jjensen_lua-tilde\source\Framework\Model\Document.cs,SaveDocument,The length of the statement  "					DialogResult option = MessageBox.Show("An error occurred while saving '" + this.FileName + "':\r\n\r\n" + ex.ToString()' "Error saving document"' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error' MessageBoxDefaultButton.Button2); " is 232.
Long Statement,Tilde.Framework.Model,Document,C:\repos\jjensen_lua-tilde\source\Framework\Model\Document.cs,Checkout,The length of the statement  "				if (MessageBox.Show(Manager.MainWindow' "The file '" + this.FileName + "' is under revision control but not checked out; do you want to check it out?"' "Read-only file"' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) " is 240.
Long Statement,Tilde.Framework.Model,Document,C:\repos\jjensen_lua-tilde\source\Framework\Model\Document.cs,Checkout,The length of the statement  "				if(MessageBox.Show(Manager.MainWindow' "The file is read-only and cannot be edited. Would you like to remove the read-only attribute from it?"' "Read-only file"' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) " is 232.
Long Statement,Tilde.Framework.Model,Document,C:\repos\jjensen_lua-tilde\source\Framework\Model\Document.cs,Checkout,The length of the statement  "						MessageBox.Show(Manager.MainWindow' "Failed making " + this.FileName + " writable:\r\n\r\n" + ex.ToString()' "Read-only file"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 171.
Long Statement,Tilde.Framework.Model,Project,C:\repos\jjensen_lua-tilde\source\Framework\Model\Project.cs,NewProjectDocument,The length of the statement  "			System.Diagnostics.Debug.Assert(parentDoc != null || mRootDocument == null' "A Project can have only one root document!"); " is 122.
Long Statement,Tilde.Framework,PathUtils,C:\repos\jjensen_lua-tilde\source\Framework\PathUtils.cs,MakeCanonicalFileName,The length of the statement  "			string[] dirs = dirstring.Split(new char[] { System.IO.Path.DirectorySeparatorChar' System.IO.Path.AltDirectorySeparatorChar }); " is 128.
Long Statement,Tilde.Framework,PathUtils,C:\repos\jjensen_lua-tilde\source\Framework\PathUtils.cs,MakeRelativePath,The length of the statement  "			string[] fromdirs = from.Remove(0' fromdrive.Length).Split(new char[] { Path.DirectorySeparatorChar' Path.AltDirectorySeparatorChar }); " is 135.
Long Statement,Tilde.Framework,PathUtils,C:\repos\jjensen_lua-tilde\source\Framework\PathUtils.cs,MakeRelativePath,The length of the statement  "			string[] todirs = to.Remove(0' todrive.Length).Split(new char[] { Path.DirectorySeparatorChar' Path.AltDirectorySeparatorChar }); " is 129.
Long Statement,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The length of the statement  "			this.openContainingFolderToolStripMenuItem.Click += new System.EventHandler(this.openContainingFolderToolStripMenuItem_Click); " is 126.
Long Statement,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The length of the statement  "			this.DockAreas = ((WeifenLuo.WinFormsUI.Docking.DockAreas)((WeifenLuo.WinFormsUI.Docking.DockAreas.Float | WeifenLuo.WinFormsUI.Docking.DockAreas.Document))); " is 158.
Empty Catch Block,Tilde.Framework.View,ToolWindow,C:\repos\jjensen_lua-tilde\source\Framework\View\ToolWindow.cs,DeserialiseListView,The method has an empty catch block.
Magic Number,Tilde.Framework.Controller,DirectoryWatcher,C:\repos\jjensen_lua-tilde\source\Framework\Controller\DirectoryWatcher.cs,WatchFileEvents,The following statement contains a magic number: try  			{  				mFileWatcher = new FileSystemWatcher();  				mFileWatcher.Filter = "*.*";  				mFileWatcher.IncludeSubdirectories = true;  				mFileWatcher.NotifyFilter = filters;  				mFileWatcher.Changed += new FileSystemEventHandler(mFileWatcher_Changed);  				mFileWatcher.Created += new FileSystemEventHandler(mFileWatcher_Created);  				mFileWatcher.Renamed += new RenamedEventHandler(mFileWatcher_Renamed);  				mFileWatcher.Deleted += new FileSystemEventHandler(mFileWatcher_Deleted);  				mFileWatcher.Error += new ErrorEventHandler(mFileWatcher_Error);  				mFileWatcher.InternalBufferSize = 32768;    				mFileWatcher.Path = baseDirectory;  				mFileWatcher.EnableRaisingEvents = true;  			}  			catch(Exception)  			{  				mFileWatcher = null;  			}
Magic Number,Tilde.Framework.Controller,DirectoryWatcher,C:\repos\jjensen_lua-tilde\source\Framework\Controller\DirectoryWatcher.cs,WatchAttributeEvents,The following statement contains a magic number: try  			{  				mFileAttributeWatcher = new FileSystemWatcher();  				mFileAttributeWatcher.Filter = "*.*";  				mFileAttributeWatcher.IncludeSubdirectories = true;  				mFileAttributeWatcher.NotifyFilter = NotifyFilters.Attributes;  				mFileAttributeWatcher.Changed += new FileSystemEventHandler(mFileAttributeWatcher_Changed);  				mFileAttributeWatcher.Error += new ErrorEventHandler(mFileAttributeWatcher_Error);  				mFileAttributeWatcher.InternalBufferSize = 32768;    				mFileAttributeWatcher.Path = baseDirectory;  				mFileAttributeWatcher.EnableRaisingEvents = true;  			}  			catch (System.Exception)  			{  				mFileAttributeWatcher = null;  			}
Magic Number,Tilde.Framework.Controller,OptionsGridPanel,C:\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsGridPanel.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid.Size = new System.Drawing.Size(460' 334);
Magic Number,Tilde.Framework.Controller,OptionsGridPanel,C:\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsGridPanel.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid.Size = new System.Drawing.Size(460' 334);
Magic Number,Tilde.Framework.Controller,OptionsGridPanel,C:\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsGridPanel.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(460' 334);
Magic Number,Tilde.Framework.Controller,OptionsGridPanel,C:\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsGridPanel.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(460' 334);
Magic Number,Tilde.Framework.Controller,OptionsManager,C:\repos\jjensen_lua-tilde\source\Framework\Controller\OptionsManager.cs,Load,The following statement contains a magic number: foreach (PropertyInfo property in options.GetType().GetProperties())  			{  				object[] attrs = property.GetCustomAttributes(typeof(OptionAttribute)' true);  				if(attrs.Length == 1)  				{  					OptionAttribute attr = (OptionAttribute) attrs[0];  					IOptionsDatabase database = mDatabases[attr.Location];  					object value;    					if (database == null)  					{  						value = attr.DefaultValue;  					}  					else  					{  						if (typeof(String).IsAssignableFrom(property.PropertyType))  							value = database.GetStringOption(attr.Path' (string)attr.DefaultValue);  						else if (typeof(Boolean).IsAssignableFrom(property.PropertyType))  							value = database.GetBooleanOption(attr.Path' (bool)attr.DefaultValue);  						else if (typeof(Enum).IsAssignableFrom(property.PropertyType))  						{  							try  							{  								value = Enum.Parse(property.PropertyType' database.GetStringOption(attr.Path' ""));  							}  							catch (Exception)  							{  								value = attr.DefaultValue;  							}  						}  						else if (typeof(Int32).IsAssignableFrom(property.PropertyType))  							value = database.GetIntegerOption(attr.Path' (int)attr.DefaultValue);  						else if (typeof(Color).IsAssignableFrom(property.PropertyType))  						{  							try  							{  								string name = database.GetStringOption(attr.Path' (string)attr.DefaultValue);  								if (name.Contains("'"))  								{  									string[] components = name.Split(new char[] { ''' });  									value = Color.FromArgb(Int32.Parse(components[0])' Int32.Parse(components[1])' Int32.Parse(components[2]));  								}  								else  									value = Color.FromName(name);  							}  							catch (System.Exception)  							{  								value = attr.DefaultValue;  							}  						}  						else if (typeof(string[]).IsAssignableFrom(property.PropertyType))  							value = database.GetStringArrayOption(attr.Path' (string[])attr.DefaultValue);    						else  							throw new ApplicationException("Don't know how to load option of type: " + property.PropertyType.ToString());  					}    					property.SetValue(options' value' null);  				}  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: System.Diagnostics.Debug.Assert(buttons.Length <= 4 && buttons.Length >= 1);
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,ShowImpl,The following statement contains a magic number: switch (buttons.Length)  			{  				case 1:  					buttonstype = Win32.MB_OK;  					mButtonMap[DialogResult.OK] = buttons[0];  					break;    				case 2:  					if (buttons[1] == "Cancel")  					{  						buttonstype = Win32.MB_OKCANCEL;  						mButtonMap[DialogResult.OK] = buttons[0];  						mButtonMap[DialogResult.Cancel] = buttons[1];  					}  					else  					{  						buttonstype = Win32.MB_YESNO;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  					}  					break;    				case 3:  					if (buttons[2] == "Cancel")  					{  						buttonstype = Win32.MB_YESNOCANCEL;  						mButtonMap[DialogResult.Yes] = buttons[0];  						mButtonMap[DialogResult.No] = buttons[1];  						mButtonMap[DialogResult.Cancel] = buttons[2];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  					}  					break;    				case 4:  					if (buttons[3] == "Cancel")  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.Cancel] = buttons[3];  					}  					else  					{  						buttonstype = Win32.MB_ABORTRETRYIGNORE + Win32.MB_HELP;  						mButtonMap[DialogResult.Abort] = buttons[0];  						mButtonMap[DialogResult.Retry] = buttons[1];  						mButtonMap[DialogResult.Ignore] = buttons[2];  						mButtonMap[DialogResult.OK] = buttons[3];  					}  					break;    				default:  					throw new ApplicationException("MessageBoxEx can only present 4 buttons");  			}
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,WndActivated,The following statement contains a magic number: if(mButtons.Length == 4)  				Win32.SetWindowLong(Win32.GetDlgItem(mHandle' Win32.IDHELP)' Win32.GWL_ID' mButtons[3] == "Cancel" ? (int)DialogResult.Cancel : (int)DialogResult.OK);
Magic Number,Tilde.Framework.Controls,MessageBoxEx,C:\repos\jjensen_lua-tilde\source\Framework\Controls\MessageBoxEx.cs,WndActivated,The following statement contains a magic number: if(mButtons.Length == 4)  				Win32.SetWindowLong(Win32.GetDlgItem(mHandle' Win32.IDHELP)' Win32.GWL_ID' mButtons[3] == "Cancel" ? (int)DialogResult.Cancel : (int)DialogResult.OK);
Magic Number,Tilde.Framework.Controls,TreeTable,C:\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The following statement contains a magic number: this.listView1.Size = new System.Drawing.Size(150' 150);
Magic Number,Tilde.Framework.Controls,TreeTable,C:\repos\jjensen_lua-tilde\source\Framework\Controls\TreeTable.cs,InitializeComponent,The following statement contains a magic number: this.listView1.Size = new System.Drawing.Size(150' 150);
Magic Number,Tilde.Framework.Controls,WindowsHook,C:\repos\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,CoreHookProc,The following statement contains a magic number: if (code >= 0)  			{  				IntPtr hwnd = wParam;    				StringBuilder sb1 = new StringBuilder();  				sb1.Capacity = 40;  				Win32.GetClassName(hwnd' sb1' 40);  				string className = sb1.ToString();    				switch (code)  				{  					case Win32.HCBT_CREATEWND:  						OnWindowCreated(hwnd' className);  						break;  					case Win32.HCBT_DESTROYWND:  						OnWindowDestroyed(hwnd' className);  						break;  					case Win32.HCBT_ACTIVATE:  						OnWindowActivated(hwnd' className);  						break;  				}  			}
Magic Number,Tilde.Framework.Controls,WindowsHook,C:\repos\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,CoreHookProc,The following statement contains a magic number: if (code >= 0)  			{  				IntPtr hwnd = wParam;    				StringBuilder sb1 = new StringBuilder();  				sb1.Capacity = 40;  				Win32.GetClassName(hwnd' sb1' 40);  				string className = sb1.ToString();    				switch (code)  				{  					case Win32.HCBT_CREATEWND:  						OnWindowCreated(hwnd' className);  						break;  					case Win32.HCBT_DESTROYWND:  						OnWindowDestroyed(hwnd' className);  						break;  					case Win32.HCBT_ACTIVATE:  						OnWindowActivated(hwnd' className);  						break;  				}  			}
Magic Number,Tilde.Framework.Model,Project,C:\repos\jjensen_lua-tilde\source\Framework\Model\Project.cs,SaveUserConfig,The following statement contains a magic number: if (mRootDocument != null)  			{  				string userFile = System.IO.Path.ChangeExtension(mRootDocument.FileName' ".tilde.xml");  				XmlTextWriter writer = new XmlTextWriter(userFile' System.Text.Encoding.ASCII);  				writer.Formatting = Formatting.Indented;  				writer.Indentation = 4;  				writer.IndentChar = ' ';  				mUserDocument.Save(writer);  				writer.Close();  			}
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.tabMenuStrip.Size = new System.Drawing.Size(188' 98);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.tabMenuStrip.Size = new System.Drawing.Size(188' 98);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.saveToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.saveToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.closeToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.closeToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(184' 6);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(184' 6);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.copyFullPathToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.copyFullPathToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.openContainingFolderToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.openContainingFolderToolStripMenuItem.Size = new System.Drawing.Size(187' 22);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(292' 266);
Magic Number,Tilde.Framework.View,DocumentView,C:\repos\jjensen_lua-tilde\source\Framework\View\DocumentView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(292' 266);
Magic Number,Tilde.Framework.View,PersistWindowComponent,C:\repos\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,LoadInfoFromRegistry,The following statement contains a magic number: if(key != null)  			{  				string data = (string)key.GetValue(mRegistryKey);  				if (data != null)  				{  					string[] windowpos = data.Split(new char[] { ''' });  					FormWindowState windowState = (FormWindowState)Enum.Parse(typeof(FormWindowState)' windowpos[0]);  					int left = (int)Decimal.Parse(windowpos[1]);  					int top = (int)Decimal.Parse(windowpos[2]);  					int width = (int)Decimal.Parse(windowpos[3]);  					int height = (int)Decimal.Parse(windowpos[4]);    					mParentForm.Location = new System.Drawing.Point(left' top);  					mParentForm.Size = new System.Drawing.Size(width' height);  					mParentForm.WindowState = windowState;    					this.mWindowInfo.Left = mParentForm.Left;  					this.mWindowInfo.Top = mParentForm.Top;  					this.mWindowInfo.Height = mParentForm.Height;  					this.mWindowInfo.Width = mParentForm.Width;  					this.mWindowInfo.WindowState = mParentForm.WindowState;  				}  			}
Magic Number,Tilde.Framework.View,PersistWindowComponent,C:\repos\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,LoadInfoFromRegistry,The following statement contains a magic number: if(key != null)  			{  				string data = (string)key.GetValue(mRegistryKey);  				if (data != null)  				{  					string[] windowpos = data.Split(new char[] { ''' });  					FormWindowState windowState = (FormWindowState)Enum.Parse(typeof(FormWindowState)' windowpos[0]);  					int left = (int)Decimal.Parse(windowpos[1]);  					int top = (int)Decimal.Parse(windowpos[2]);  					int width = (int)Decimal.Parse(windowpos[3]);  					int height = (int)Decimal.Parse(windowpos[4]);    					mParentForm.Location = new System.Drawing.Point(left' top);  					mParentForm.Size = new System.Drawing.Size(width' height);  					mParentForm.WindowState = windowState;    					this.mWindowInfo.Left = mParentForm.Left;  					this.mWindowInfo.Top = mParentForm.Top;  					this.mWindowInfo.Height = mParentForm.Height;  					this.mWindowInfo.Width = mParentForm.Width;  					this.mWindowInfo.WindowState = mParentForm.WindowState;  				}  			}
Magic Number,Tilde.Framework.View,PersistWindowComponent,C:\repos\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,LoadInfoFromRegistry,The following statement contains a magic number: if(key != null)  			{  				string data = (string)key.GetValue(mRegistryKey);  				if (data != null)  				{  					string[] windowpos = data.Split(new char[] { ''' });  					FormWindowState windowState = (FormWindowState)Enum.Parse(typeof(FormWindowState)' windowpos[0]);  					int left = (int)Decimal.Parse(windowpos[1]);  					int top = (int)Decimal.Parse(windowpos[2]);  					int width = (int)Decimal.Parse(windowpos[3]);  					int height = (int)Decimal.Parse(windowpos[4]);    					mParentForm.Location = new System.Drawing.Point(left' top);  					mParentForm.Size = new System.Drawing.Size(width' height);  					mParentForm.WindowState = windowState;    					this.mWindowInfo.Left = mParentForm.Left;  					this.mWindowInfo.Top = mParentForm.Top;  					this.mWindowInfo.Height = mParentForm.Height;  					this.mWindowInfo.Width = mParentForm.Width;  					this.mWindowInfo.WindowState = mParentForm.WindowState;  				}  			}
Magic Number,Tilde.Framework.View,ToolWindow,C:\repos\jjensen_lua-tilde\source\Framework\View\ToolWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(292' 273);
Magic Number,Tilde.Framework.View,ToolWindow,C:\repos\jjensen_lua-tilde\source\Framework\View\ToolWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(292' 273);
Missing Default,Tilde.Framework.Controls,WindowsHook,C:\repos\jjensen_lua-tilde\source\Framework\Controls\WindowsHook.cs,CoreHookProc,The following switch statement is missing a default case: switch (code)  				{  					case Win32.HCBT_CREATEWND:  						OnWindowCreated(hwnd' className);  						break;  					case Win32.HCBT_DESTROYWND:  						OnWindowDestroyed(hwnd' className);  						break;  					case Win32.HCBT_ACTIVATE:  						OnWindowActivated(hwnd' className);  						break;  				}
Missing Default,Tilde.Framework.View,PersistWindowComponent,C:\repos\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,OnClosing,The following switch statement is missing a default case: switch (this.mPersistMethod)  			{  				case PersistMethods.Registry:  					if (this.mRegistryPath == "" || this.mRegistryKey == "")  						throw new Exception("Registry File path is empty");    					this.SaveInfoToRegistry();  					break;  				case PersistMethods.Custom:  					// fire SaveState event  					if(SaveStateEvent != null)  						SaveStateEvent(this' this.mWindowInfo);    					break;  			}
Missing Default,Tilde.Framework.View,PersistWindowComponent,C:\repos\jjensen_lua-tilde\source\Framework\View\PersistWindowComponent.cs,OnLoad,The following switch statement is missing a default case: switch (this.mPersistMethod)  			{  				case PersistMethods.Registry:  					if (this.mRegistryPath == "" || this.mRegistryKey == "")  						throw new Exception("Registry File path is empty");    					this.LoadInfoFromRegistry();  					break;  				case PersistMethods.Custom:  					// fire LoadState event  					if(LoadStateEvent != null)  						LoadStateEvent(this' this.mWindowInfo);    					break;  			}
