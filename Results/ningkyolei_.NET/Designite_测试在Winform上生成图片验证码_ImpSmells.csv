Implementation smell,Namespace,Class,File,Method,Description
Complex Method,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,Cyclomatic complexity of the method is 18
Long Statement,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The length of the statement  "		var aBrush = new LinearGradientBrush (new Rectangle (0' 0' aBitmap.Width' aBitmap.Height)' Color.Blue' Color.DarkRed' 1.2f' true); " is 130.
Complex Conditional,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,TwistImage,The conditional expression  "nOldX >= 0 && nOldX < aDestBitmap.Width && nOldY >= 0 && nOldY < aDestBitmap.Height"  is complex.
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,ImageValidationCodeHelper,The following statement contains a magic number: _ImageHeight = pParameter.ImageHeight.HasValue ? pParameter.ImageHeight.Value : 50;  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,ImageValidationCodeHelper,The following statement contains a magic number: _ImageWidth = pParameter.ImageWidth.HasValue ? pParameter.ImageWidth.Value : 200;  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,ImageValidationCodeHelper,The following statement contains a magic number: _FontSize = pParameter.FontSize.HasValue ? pParameter.FontSize.Value : 30;  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,ImageValidationCodeHelper,The following statement contains a magic number: _ValidationCodeLength = pParameter.ValidationCodeLength.HasValue ? pParameter.ValidationCodeLength.Value : 4;  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateNumbers,The following statement contains a magic number: for (var i = 0; i < _ValidationCodeLength; i++) {  	var aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  	aText += aNumberString;  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateNumbers,The following statement contains a magic number: for (var i = 0; i < _ValidationCodeLength; i++) {  	var aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  	aText += aNumberString;  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateCharacters,The following statement contains a magic number: for (var i = 0; i < _ValidationCodeLength; i++) {  	var aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  	aText += aNumberString;  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateCharacters,The following statement contains a magic number: for (var i = 0; i < _ValidationCodeLength; i++) {  	var aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  	aText += aNumberString;  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateCharacters,The following statement contains a magic number: for (var i = 0; i < _ValidationCodeLength; i++) {  	var aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  	aText += aNumberString;  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: for (var i = 0; i < _ValidationCodeLength; i++) {  	string aNumberString;  	if (aRandom.Next (500) % 2 == 0) {  		aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  	}  	else {  		aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  	}  	aText += aNumberString;  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: for (var i = 0; i < _ValidationCodeLength; i++) {  	string aNumberString;  	if (aRandom.Next (500) % 2 == 0) {  		aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  	}  	else {  		aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  	}  	aText += aNumberString;  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: for (var i = 0; i < _ValidationCodeLength; i++) {  	string aNumberString;  	if (aRandom.Next (500) % 2 == 0) {  		aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  	}  	else {  		aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  	}  	aText += aNumberString;  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: for (var i = 0; i < _ValidationCodeLength; i++) {  	string aNumberString;  	if (aRandom.Next (500) % 2 == 0) {  		aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  	}  	else {  		aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  	}  	aText += aNumberString;  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: for (var i = 0; i < _ValidationCodeLength; i++) {  	string aNumberString;  	if (aRandom.Next (500) % 2 == 0) {  		aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  	}  	else {  		aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  	}  	aText += aNumberString;  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: for (var i = 0; i < _ValidationCodeLength; i++) {  	string aNumberString;  	if (aRandom.Next (500) % 2 == 0) {  		aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  	}  	else {  		aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  	}  	aText += aNumberString;  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: for (var i = 0; i < _ValidationCodeLength; i++) {  	string aNumberString;  	if (aRandom.Next (500) % 2 == 0) {  		aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  	}  	else {  		aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  	}  	aText += aNumberString;  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: if (aRandom.Next (500) % 2 == 0) {  	aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  }  else {  	aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: if (aRandom.Next (500) % 2 == 0) {  	aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  }  else {  	aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: if (aRandom.Next (500) % 2 == 0) {  	aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  }  else {  	aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: if (aRandom.Next (500) % 2 == 0) {  	aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  }  else {  	aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: if (aRandom.Next (500) % 2 == 0) {  	aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  }  else {  	aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: if (aRandom.Next (500) % 2 == 0) {  	aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  }  else {  	aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: if (aRandom.Next (500) % 2 == 0) {  	aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  }  else {  	aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: aNumberString = Convert.ToString (aRandom.Next (10000) % 10);  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,GenerateAlphas,The following statement contains a magic number: aNumberString = Convert.ToString ((char)(65 + aRandom.Next (10000) % 26));  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: try {  	var aRandom = new Random ();  	aGraphics.Clear (Color.White);  	// 画图片的背景噪音线  	for (var i = 0; i < 18; i++) {  		var x1 = aRandom.Next (aBitmap.Width);  		var x2 = aRandom.Next (aBitmap.Width);  		var y1 = aRandom.Next (aBitmap.Height);  		var y2 = aRandom.Next (aBitmap.Height);  		aGraphics.DrawLine (new Pen (Color.FromArgb (aRandom.Next ())' 1)' x1' y1' x2' y2);  	}  	var aFont = new Font ("Times New Roman"' _FontSize' FontStyle.Bold);  	var aBrush = new LinearGradientBrush (new Rectangle (0' 0' aBitmap.Width' aBitmap.Height)' Color.Blue' Color.DarkRed' 1.2f' true);  	if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  		for (var i = 0; i < aValidationCode.Length; i++) {  			aGraphics.DrawString (aValidationCode.Substring (i' 1)' aFont' aBrush' 2 + i * _Margin' 1);  		}  	}  	else {  		aGraphics.DrawString (aValidationCode' aFont' aBrush' 2' 2);  	}  	// 画图片的前景噪音点  	for (var i = 0; i < 150; i++) {  		var x = aRandom.Next (aBitmap.Width);  		var y = aRandom.Next (aBitmap.Height);  		aBitmap.SetPixel (x' y' Color.FromArgb (aRandom.Next ()));  	}  	// 画图片的波形滤镜效果  	if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  		aBitmap = TwistImage (aBitmap' true' 3' 1);  	}  	// 画图片的边框线  	aGraphics.DrawRectangle (new Pen (Color.Silver)' 0' 0' aBitmap.Width - 1' aBitmap.Height - 1);  	aMemoryStream = new MemoryStream ();  	aBitmap.Save (aMemoryStream' ImageFormat.Gif);  }  finally {  	aGraphics.Dispose ();  	aBitmap.Dispose ();  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: try {  	var aRandom = new Random ();  	aGraphics.Clear (Color.White);  	// 画图片的背景噪音线  	for (var i = 0; i < 18; i++) {  		var x1 = aRandom.Next (aBitmap.Width);  		var x2 = aRandom.Next (aBitmap.Width);  		var y1 = aRandom.Next (aBitmap.Height);  		var y2 = aRandom.Next (aBitmap.Height);  		aGraphics.DrawLine (new Pen (Color.FromArgb (aRandom.Next ())' 1)' x1' y1' x2' y2);  	}  	var aFont = new Font ("Times New Roman"' _FontSize' FontStyle.Bold);  	var aBrush = new LinearGradientBrush (new Rectangle (0' 0' aBitmap.Width' aBitmap.Height)' Color.Blue' Color.DarkRed' 1.2f' true);  	if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  		for (var i = 0; i < aValidationCode.Length; i++) {  			aGraphics.DrawString (aValidationCode.Substring (i' 1)' aFont' aBrush' 2 + i * _Margin' 1);  		}  	}  	else {  		aGraphics.DrawString (aValidationCode' aFont' aBrush' 2' 2);  	}  	// 画图片的前景噪音点  	for (var i = 0; i < 150; i++) {  		var x = aRandom.Next (aBitmap.Width);  		var y = aRandom.Next (aBitmap.Height);  		aBitmap.SetPixel (x' y' Color.FromArgb (aRandom.Next ()));  	}  	// 画图片的波形滤镜效果  	if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  		aBitmap = TwistImage (aBitmap' true' 3' 1);  	}  	// 画图片的边框线  	aGraphics.DrawRectangle (new Pen (Color.Silver)' 0' 0' aBitmap.Width - 1' aBitmap.Height - 1);  	aMemoryStream = new MemoryStream ();  	aBitmap.Save (aMemoryStream' ImageFormat.Gif);  }  finally {  	aGraphics.Dispose ();  	aBitmap.Dispose ();  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: try {  	var aRandom = new Random ();  	aGraphics.Clear (Color.White);  	// 画图片的背景噪音线  	for (var i = 0; i < 18; i++) {  		var x1 = aRandom.Next (aBitmap.Width);  		var x2 = aRandom.Next (aBitmap.Width);  		var y1 = aRandom.Next (aBitmap.Height);  		var y2 = aRandom.Next (aBitmap.Height);  		aGraphics.DrawLine (new Pen (Color.FromArgb (aRandom.Next ())' 1)' x1' y1' x2' y2);  	}  	var aFont = new Font ("Times New Roman"' _FontSize' FontStyle.Bold);  	var aBrush = new LinearGradientBrush (new Rectangle (0' 0' aBitmap.Width' aBitmap.Height)' Color.Blue' Color.DarkRed' 1.2f' true);  	if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  		for (var i = 0; i < aValidationCode.Length; i++) {  			aGraphics.DrawString (aValidationCode.Substring (i' 1)' aFont' aBrush' 2 + i * _Margin' 1);  		}  	}  	else {  		aGraphics.DrawString (aValidationCode' aFont' aBrush' 2' 2);  	}  	// 画图片的前景噪音点  	for (var i = 0; i < 150; i++) {  		var x = aRandom.Next (aBitmap.Width);  		var y = aRandom.Next (aBitmap.Height);  		aBitmap.SetPixel (x' y' Color.FromArgb (aRandom.Next ()));  	}  	// 画图片的波形滤镜效果  	if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  		aBitmap = TwistImage (aBitmap' true' 3' 1);  	}  	// 画图片的边框线  	aGraphics.DrawRectangle (new Pen (Color.Silver)' 0' 0' aBitmap.Width - 1' aBitmap.Height - 1);  	aMemoryStream = new MemoryStream ();  	aBitmap.Save (aMemoryStream' ImageFormat.Gif);  }  finally {  	aGraphics.Dispose ();  	aBitmap.Dispose ();  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: try {  	var aRandom = new Random ();  	aGraphics.Clear (Color.White);  	// 画图片的背景噪音线  	for (var i = 0; i < 18; i++) {  		var x1 = aRandom.Next (aBitmap.Width);  		var x2 = aRandom.Next (aBitmap.Width);  		var y1 = aRandom.Next (aBitmap.Height);  		var y2 = aRandom.Next (aBitmap.Height);  		aGraphics.DrawLine (new Pen (Color.FromArgb (aRandom.Next ())' 1)' x1' y1' x2' y2);  	}  	var aFont = new Font ("Times New Roman"' _FontSize' FontStyle.Bold);  	var aBrush = new LinearGradientBrush (new Rectangle (0' 0' aBitmap.Width' aBitmap.Height)' Color.Blue' Color.DarkRed' 1.2f' true);  	if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  		for (var i = 0; i < aValidationCode.Length; i++) {  			aGraphics.DrawString (aValidationCode.Substring (i' 1)' aFont' aBrush' 2 + i * _Margin' 1);  		}  	}  	else {  		aGraphics.DrawString (aValidationCode' aFont' aBrush' 2' 2);  	}  	// 画图片的前景噪音点  	for (var i = 0; i < 150; i++) {  		var x = aRandom.Next (aBitmap.Width);  		var y = aRandom.Next (aBitmap.Height);  		aBitmap.SetPixel (x' y' Color.FromArgb (aRandom.Next ()));  	}  	// 画图片的波形滤镜效果  	if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  		aBitmap = TwistImage (aBitmap' true' 3' 1);  	}  	// 画图片的边框线  	aGraphics.DrawRectangle (new Pen (Color.Silver)' 0' 0' aBitmap.Width - 1' aBitmap.Height - 1);  	aMemoryStream = new MemoryStream ();  	aBitmap.Save (aMemoryStream' ImageFormat.Gif);  }  finally {  	aGraphics.Dispose ();  	aBitmap.Dispose ();  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: try {  	var aRandom = new Random ();  	aGraphics.Clear (Color.White);  	// 画图片的背景噪音线  	for (var i = 0; i < 18; i++) {  		var x1 = aRandom.Next (aBitmap.Width);  		var x2 = aRandom.Next (aBitmap.Width);  		var y1 = aRandom.Next (aBitmap.Height);  		var y2 = aRandom.Next (aBitmap.Height);  		aGraphics.DrawLine (new Pen (Color.FromArgb (aRandom.Next ())' 1)' x1' y1' x2' y2);  	}  	var aFont = new Font ("Times New Roman"' _FontSize' FontStyle.Bold);  	var aBrush = new LinearGradientBrush (new Rectangle (0' 0' aBitmap.Width' aBitmap.Height)' Color.Blue' Color.DarkRed' 1.2f' true);  	if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  		for (var i = 0; i < aValidationCode.Length; i++) {  			aGraphics.DrawString (aValidationCode.Substring (i' 1)' aFont' aBrush' 2 + i * _Margin' 1);  		}  	}  	else {  		aGraphics.DrawString (aValidationCode' aFont' aBrush' 2' 2);  	}  	// 画图片的前景噪音点  	for (var i = 0; i < 150; i++) {  		var x = aRandom.Next (aBitmap.Width);  		var y = aRandom.Next (aBitmap.Height);  		aBitmap.SetPixel (x' y' Color.FromArgb (aRandom.Next ()));  	}  	// 画图片的波形滤镜效果  	if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  		aBitmap = TwistImage (aBitmap' true' 3' 1);  	}  	// 画图片的边框线  	aGraphics.DrawRectangle (new Pen (Color.Silver)' 0' 0' aBitmap.Width - 1' aBitmap.Height - 1);  	aMemoryStream = new MemoryStream ();  	aBitmap.Save (aMemoryStream' ImageFormat.Gif);  }  finally {  	aGraphics.Dispose ();  	aBitmap.Dispose ();  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: try {  	var aRandom = new Random ();  	aGraphics.Clear (Color.White);  	// 画图片的背景噪音线  	for (var i = 0; i < 18; i++) {  		var x1 = aRandom.Next (aBitmap.Width);  		var x2 = aRandom.Next (aBitmap.Width);  		var y1 = aRandom.Next (aBitmap.Height);  		var y2 = aRandom.Next (aBitmap.Height);  		aGraphics.DrawLine (new Pen (Color.FromArgb (aRandom.Next ())' 1)' x1' y1' x2' y2);  	}  	var aFont = new Font ("Times New Roman"' _FontSize' FontStyle.Bold);  	var aBrush = new LinearGradientBrush (new Rectangle (0' 0' aBitmap.Width' aBitmap.Height)' Color.Blue' Color.DarkRed' 1.2f' true);  	if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  		for (var i = 0; i < aValidationCode.Length; i++) {  			aGraphics.DrawString (aValidationCode.Substring (i' 1)' aFont' aBrush' 2 + i * _Margin' 1);  		}  	}  	else {  		aGraphics.DrawString (aValidationCode' aFont' aBrush' 2' 2);  	}  	// 画图片的前景噪音点  	for (var i = 0; i < 150; i++) {  		var x = aRandom.Next (aBitmap.Width);  		var y = aRandom.Next (aBitmap.Height);  		aBitmap.SetPixel (x' y' Color.FromArgb (aRandom.Next ()));  	}  	// 画图片的波形滤镜效果  	if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  		aBitmap = TwistImage (aBitmap' true' 3' 1);  	}  	// 画图片的边框线  	aGraphics.DrawRectangle (new Pen (Color.Silver)' 0' 0' aBitmap.Width - 1' aBitmap.Height - 1);  	aMemoryStream = new MemoryStream ();  	aBitmap.Save (aMemoryStream' ImageFormat.Gif);  }  finally {  	aGraphics.Dispose ();  	aBitmap.Dispose ();  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: for (var i = 0; i < 18; i++) {  	var x1 = aRandom.Next (aBitmap.Width);  	var x2 = aRandom.Next (aBitmap.Width);  	var y1 = aRandom.Next (aBitmap.Height);  	var y2 = aRandom.Next (aBitmap.Height);  	aGraphics.DrawLine (new Pen (Color.FromArgb (aRandom.Next ())' 1)' x1' y1' x2' y2);  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  	for (var i = 0; i < aValidationCode.Length; i++) {  		aGraphics.DrawString (aValidationCode.Substring (i' 1)' aFont' aBrush' 2 + i * _Margin' 1);  	}  }  else {  	aGraphics.DrawString (aValidationCode' aFont' aBrush' 2' 2);  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  	for (var i = 0; i < aValidationCode.Length; i++) {  		aGraphics.DrawString (aValidationCode.Substring (i' 1)' aFont' aBrush' 2 + i * _Margin' 1);  	}  }  else {  	aGraphics.DrawString (aValidationCode' aFont' aBrush' 2' 2);  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  	for (var i = 0; i < aValidationCode.Length; i++) {  		aGraphics.DrawString (aValidationCode.Substring (i' 1)' aFont' aBrush' 2 + i * _Margin' 1);  	}  }  else {  	aGraphics.DrawString (aValidationCode' aFont' aBrush' 2' 2);  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: for (var i = 0; i < aValidationCode.Length; i++) {  	aGraphics.DrawString (aValidationCode.Substring (i' 1)' aFont' aBrush' 2 + i * _Margin' 1);  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: aGraphics.DrawString (aValidationCode.Substring (i' 1)' aFont' aBrush' 2 + i * _Margin' 1);  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: aGraphics.DrawString (aValidationCode' aFont' aBrush' 2' 2);  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: aGraphics.DrawString (aValidationCode' aFont' aBrush' 2' 2);  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: for (var i = 0; i < 150; i++) {  	var x = aRandom.Next (aBitmap.Width);  	var y = aRandom.Next (aBitmap.Height);  	aBitmap.SetPixel (x' y' Color.FromArgb (aRandom.Next ()));  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: if (_ValidationCodeTypeEnum != ValidationCodeTypeEnums.Words) {  	aBitmap = TwistImage (aBitmap' true' 3' 1);  }  
Magic Number,测试在Winform上生成图片验证码,ImageValidationCodeHelper,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\ImageValidationCodeHelper.cs,CreateImageStream,The following statement contains a magic number: aBitmap = TwistImage (aBitmap' true' 3' 1);  
Magic Number,测试在Winform上生成图片验证码.Others,DataItem,C:\repos\ningkyolei_.NET\测试在Winform上生成图片验证码\测试在Winform上生成图片验证码\Others\DataItem.cs,GetList,The following statement contains a magic number: return GetList (10);  
