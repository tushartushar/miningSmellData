Implementation smell,Namespace,Class,File,Method,Description
Long Method,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor5Test,The method has 117 lines of code.
Long Method,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The method has 178 lines of code.
Long Method,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The method has 282 lines of code.
Long Method,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The method has 232 lines of code.
Complex Method,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,CallSemaphoreAction,Cyclomatic complexity of the method is 10
Complex Method,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,RunParallelFor64Test,Cyclomatic complexity of the method is 10
Complex Method,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,RunParallelForeachTest,Cyclomatic complexity of the method is 19
Complex Method,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,RunParallelForTest,Cyclomatic complexity of the method is 10
Complex Method,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,Cyclomatic complexity of the method is 16
Long Parameter List,Tests.Helpers,CollectionChangedEventValidators,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Helpers\CollectionChangedEventValidators.cs,ValidateMoveOperation,The method has 5 parameters. Parameters: args' changedItems' newIndex' oldIndex' message
Long Parameter List,Tests.Helpers,CollectionChangedEventValidators,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Helpers\CollectionChangedEventValidators.cs,ValidateReplaceOperation,The method has 5 parameters. Parameters: args' oldItems' newItems' startIndex' message
Long Parameter List,Tests.Helpers,CollectionChangedEventValidators,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Helpers\CollectionChangedEventValidators.cs,ValidateCommon,The method has 7 parameters. Parameters: args' action' newItems' oldItems' newIndex' oldIndex' message
Long Parameter List,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,DoTest,The method has 6 parameters. Parameters: s1' s2' o' se' psb' psu
Long Parameter List,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,DoTestE,The method has 6 parameters. Parameters: s1' s2' o' se' psb' psu
Long Parameter List,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The method has 5 parameters. Parameters: initial' maximum' timeout' returnValue' exceptionType
Long Parameter List,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The method has 5 parameters. Parameters: initial' maximum' timeout' returnValue' exceptionType
Long Parameter List,System.Threading.Tasks.Tests,ParallelForUnitTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelFor.cs,ParallelFor,The method has 6 parameters. Parameters: api' startIndexBase' count' parallelOption' stateOption' localOption
Long Statement,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,UnexpectedAddAndRemove,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => ((ICollection<KeyValuePair<string' string>>)dict).Add(new KeyValuePair<string' string>(null' null))); " is 144.
Long Statement,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,UnexpectedAddAndRemove,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => GC.KeepAlive(((ICollection<KeyValuePair<string' string>>)dict).Remove(new KeyValuePair<string' string>(null' null)))); " is 161.
Long Statement,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,UnexpectedContains,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => GC.KeepAlive(((ICollection<KeyValuePair<string' string>>)dict).Contains(new KeyValuePair<string' string>(null' null)))); " is 163.
Long Statement,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,EditWhileIterating,The length of the statement  "            // And also "The contents exposed through the enumerator may contain modifications made to the dictionary after GetEnumerator was called." " is 138.
Long Statement,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,EditWhileIteratingThreaded,The length of the statement  "            // And also "The contents exposed through the enumerator may contain modifications made to the dictionary after GetEnumerator was called." " is 138.
Long Statement,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestNullsWithComparerThrowingException,The length of the statement  "            // NOTE: We should get the same errors when using StringComparer.Ordinal on Mono 2.6.1' but the look-alike gives us more control over this test case " is 148.
Long Statement,Tests.SystemTests.CollectionsTests.GenericTests,StringComparerOrdinalLookAlike,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,GetHashCode,The length of the statement  "                    throw new ArgumentNullException(); // Important aspect for test (same as what StringComparer.Ordinal does' and different from GenericEqualityComparer<string>) " is 158.
Long Statement,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor8Test,The length of the statement  "                GC.KeepAlive(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Reset' newItems' oldItems' StartIndex)); " is 120.
Long Statement,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentRank,The length of the statement  "            Assert.Throws(typeof(ArgumentException)' () => GC.KeepAlive(StructuralComparisons.StructuralEqualityComparer.Equals(new['] { { 1' 1 }' { 2' 2 } }' new[] { 1' 1' 2' 2 }))); " is 171.
Long Statement,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentRank,The length of the statement  "            Assert.Throws(typeof(ArgumentException)' () => GC.KeepAlive(StructuralComparisons.StructuralEqualityComparer.Equals(new['] { { 1' 1 }' { 2' 2 } }' new['] { { 1' 1 }' { 2' 2 } }))); " is 180.
Long Statement,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncReadsExtracted,The length of the statement  "            using (var stream = new MemoryStream(new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 0})) " is 140.
Long Statement,MonoTests.System,AggregateExceptionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\AggregateExceptionTests.cs,Setup,The length of the statement  "            _e = new AggregateException(new Exception("foo")' new AggregateException(new Exception("bar")' new Exception("foobar"))); " is 121.
Long Statement,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,ToStringTest,The length of the statement  "            var t1 = new Tuple<int' object' int' int' int' int' int' Tuple<string' string>>(1' null' 3' 4' 5' 6' 7' new Tuple<string' string>(null' null)); " is 143.
Long Statement,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Distinct,The length of the statement  "            Assert.AreEqual(_src.Distinct(new CustomEqualityComparer()).Count()' _array.Distinct(new CustomEqualityComparer()).Count()); " is 124.
Long Statement,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,UserExtensionMethod,The length of the statement  "                          where (m.Name == "UserQueryableExt1" && m.GetParameters()[0].ParameterType.GetGenericTypeDefinition() == typeof(IQueryable<>)) " is 126.
Long Statement,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,UserExtensionMethod,The length of the statement  "                      where (m.Name == "UserQueryableExt2" && m.GetParameters()[0].ParameterType.GetGenericTypeDefinition() == typeof(IQueryable<>)) " is 126.
Long Statement,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,NonGenericMethod,The length of the statement  "                          where (m.Name == "NonGenericMethod" && m.GetParameters()[0].ParameterType.GetGenericTypeDefinition() == typeof(IQueryable<>)) " is 125.
Long Statement,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadDEx,The length of the statement  "            var r = src.GroupBy(i => i > 5' FuncHelper.GetIdentityFunc<int>()' (key' group) => StringEx.Concat(group.ToArray())' null); " is 123.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ContainsArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).Contains("2"' EqualityComparer<string>.Default)); " is 122.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AggregateArgumentNullTest,The length of the statement  "            // Aggregate<TSource'TAccumulate'TResult> (TAccumulate' Func<TAccumulate' TSource' TAccumulate>' Func<TAccumulate' TResult>) " is 124.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AggregateArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).Aggregate("initial"' (x' y) => "test"' x => "test")); " is 126.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AggregateTest,The length of the statement  "            // Aggregate<TSource'TAccumulate'TResult> (TAccumulate' Func<TAccumulate' TSource' TAccumulate>' Func<TAccumulate' TResult>) " is 124.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).Average((Func<string' long?>)(x => (int?)0L))); " is 120.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).Average((Func<string' float?>)(x => (int?)0f))); " is 121.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).Average((Func<string' double?>)(x => (int?)0d))); " is 122.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).Average((Func<string' decimal?>)(x => (int?)0m))); " is 123.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SelectManyArgumentNullTest,The length of the statement  "            // SelectMany<TSource'TCollection'TResult> (Func<string' int' IEnumerable<TCollection>>' Func<TSource' TCollection' TResult>) " is 125.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SelectManyArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.SelectMany((Func<string' int' IEnumerable<string>>)null' (x' y) => "test")); " is 126.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SelectManyArgumentNullTest,The length of the statement  "            // SelectMany<TSource'TCollection'TResult> (Func<TSource' IEnumerable<TCollection>>' Func<TSource' TCollection' TResult>) " is 121.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SelectManyArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.SelectMany((Func<string' IEnumerable<string>>)null' (x' y) => "test")); " is 121.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SelectManyTest,The length of the statement  "            // SelectMany<TSource'TCollection'TResult> (Func<string' int' IEnumerable<TCollection>>' Func<TSource' TCollection' TResult>) " is 125.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SelectManyTest,The length of the statement  "            // SelectMany<TSource'TCollection'TResult> (Func<TSource' IEnumerable<TCollection>>' Func<TSource' TCollection' TResult>) " is 121.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinArgumentNullTest,The length of the statement  "            // Join<TOuter'TInner'TKey'TResult> (IEnumerable<TInner>' Func<TOuter' TKey>' Func<TInner' TKey>' Func<TOuter' TInner' TResult>) " is 128.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).Join(data' x => "test"' x => "test"' (x' y) => "test")); " is 129.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.Join((IEnumerable<string>)null' x => "test"' x => "test"' (x' y) => "test")); " is 127.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.Join(data' x => "test"' x => "test"' (Func<string' string' string>)null)); " is 124.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinArgumentNullTest,The length of the statement  "            // Join<TOuter'TInner'TKey'TResult> (IEnumerable<TInner>' Func<TOuter' TKey>' Func<TInner' TKey>' Func<TOuter' TInner' TResult>' IEqualityComparer<string>) " is 155.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).Join(data' x => "test"' x => "test"' (x' y) => "test"' EqualityComparer<string>.Default)); " is 163.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.Join((IEnumerable<string>)null' x => "test"' x => "test"' (x' y) => "test"' EqualityComparer<string>.Default)); " is 161.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.Join(data' null' x => "test"' (x' y) => "test"' EqualityComparer<string>.Default)); " is 133.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.Join(data' x => "test"' null' (x' y) => "test"' EqualityComparer<string>.Default)); " is 133.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.Join(data' x => "test"' x => "test"' (Func<string' string' string>)null' EqualityComparer<string>.Default)); " is 158.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinTest,The length of the statement  "            // Join<TOuter'TInner'TKey'TResult> (IEnumerable<TInner>' Func<TOuter' TKey>' Func<TInner' TKey>' Func<TOuter' TInner' TResult>) " is 128.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinTest,The length of the statement  "            // Join<TOuter'TInner'TKey'TResult> (IEnumerable<TInner>' Func<TOuter' TKey>' Func<TInner' TKey>' Func<TOuter' TInner' TResult>' IEqualityComparer<string>) " is 155.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinTest,The length of the statement  "            AssertAreSame(expected1' dataOuter1.Join(dataInner1' x => x' x => x' (x' y) => x + y' EqualityComparer<string>.Default)); " is 121.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,JoinTest,The length of the statement  "            AssertAreSame(expected2' dataOuter2.Join(dataInner2' x => x' x => x' (x' y) => x + y' EqualityComparer<string>.Default)); " is 121.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupJoinArgumentNullTest,The length of the statement  "            // GroupJoin<TOuter'TInner'TKey'TResult> (IEnumerable<TInner>' Func<TOuter' TKey>' Func<TInner' TKey>' Func<TOuter' IEnumerable<TInner>' TResult>) " is 146.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupJoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupJoin(data' x => "test"' x => "test"' (x' y) => "test")); " is 134.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupJoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupJoin((IEnumerable<string>)null' x => "test"' x => "test"' (x' y) => "test")); " is 132.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupJoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupJoin(data' x => "test"' x => "test"' (Func<string' IEnumerable<string>' string>)null)); " is 142.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupJoinArgumentNullTest,The length of the statement  "            // GroupJoin<TOuter'TInner'TKey'TResult> (IEnumerable<TInner>' Func<TOuter' TKey>' Func<TInner' TKey>' Func<TOuter' IEnumerable<TInner>' TResult' IEqualityComparer<TKey>>) " is 171.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupJoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupJoin(data' x => "test"' x => "test"' (x' y) => "test"' EqualityComparer<string>.Default)); " is 168.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupJoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupJoin((IEnumerable<string>)null' x => "test"' x => "test"' (x' y) => "test"' EqualityComparer<string>.Default)); " is 166.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupJoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupJoin(data' null' x => "test"' (x' y) => "test"' EqualityComparer<string>.Default)); " is 138.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupJoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupJoin(data' x => "test"' null' (x' y) => "test"' EqualityComparer<string>.Default)); " is 138.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupJoinArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupJoin(data' x => "test"' x => "test"' (Func<string' IEnumerable<string>' string>)null' EqualityComparer<string>.Default)); " is 176.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupJoinTest,The length of the statement  "            // GroupJoin<TOuter'TInner'TKey'TResult> (IEnumerable<TInner>' Func<TOuter' TKey>' Func<TInner' TKey>' Func<TOuter' IEnumerable<TInner>' TResult>) " is 146.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupJoinTest,The length of the statement  "            // GroupJoin<TOuter'TInner'TKey'TResult> (IEnumerable<TInner>' Func<TOuter' TKey>' Func<TInner' TKey>' Func<TOuter' IEnumerable<TInner>' TResult' IEqualityComparer<TKey>>) " is 171.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).OrderBy(x => "test"' Comparer<string>.Default)); " is 121.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByDescendingArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).OrderByDescending(x => "test"' Comparer<string>.Default)); " is 131.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IOrderedEnumerable<string>)null).ThenBy(x => "test"' Comparer<string>.Default)); " is 127.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByDescendingArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IOrderedEnumerable<string>)null).ThenByDescending(x => "test"' Comparer<string>.Default)); " is 137.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupBy(x => "test"' EqualityComparer<string>.Default)); " is 129.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupBy(x => "test"' x => "test"' EqualityComparer<string>.Default)); " is 142.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupBy(x => "test"' (Func<string' string>)null' EqualityComparer<string>.Default)); " is 134.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupBy(x => "test"' (Func<string' IEnumerable<string>' string>)null)); " is 121.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            // GroupBy<string'string'string'string> (Func<string' string>' Func<string' string>' Func<string' IEnumerable<string>' string>) " is 127.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupBy(x => "test"' x => "test"' (x' y) => "test")); " is 126.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupBy<string' string' string' string>(null' x => "test"' (x' y) => "test")); " is 128.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupBy<string' string' string' string>(x => "test"' null' (x' y) => "test")); " is 128.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupBy<string' string' string' string>(x => "test"' x => "test"' null)); " is 123.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            // GroupBy<string'string'string> (Func<string' string>' Func<string' IEnumerable<string>' string>' IEqualityComparer<string>) " is 125.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupBy(x => "test"' (x' y) => "test"' EqualityComparer<string>.Default)); " is 147.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupBy(x => "test"' (Func<string' IEnumerable<string>' string>)null' EqualityComparer<string>.Default)); " is 155.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            // GroupBy<string'string'string'string> (Func<string' string>' Func<string' string>' Func<string' IEnumerable<string>' string>' IEqualityComparer<string>) " is 154.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupBy(x => "test"' x => "test"' (x' y) => "test"' EqualityComparer<string>.Default)); " is 160.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupBy(null' x => "test"' (x' y) => "test"' EqualityComparer<string>.Default)); " is 130.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupBy<string' string' string' string>(x => "test"' null' (x' y) => "test"' EqualityComparer<string>.Default)); " is 162.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupBy<string' string' string' string>(x => "test"' x => "test"' null' EqualityComparer<string>.Default)); " is 157.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).Union(data' EqualityComparer<string>.Default)); " is 120.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).Intersect(data' EqualityComparer<string>.Default)); " is 124.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).Except(data' EqualityComparer<string>.Default)); " is 121.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).SequenceEqual(data' EqualityComparer<string>.Default)); " is 128.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToDictionaryArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).ToDictionary(x => "test"' EqualityComparer<string>.Default)); " is 134.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToDictionaryArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).ToDictionary(x => "test"' x => "test"' EqualityComparer<string>.Default)); " is 147.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToDictionaryArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.ToDictionary(x => "test"' (Func<string' string>)null' EqualityComparer<string>.Default)); " is 139.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToLookupArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).ToLookup(x => "test"' EqualityComparer<string>.Default)); " is 130.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToLookupArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).ToLookup(x => "test"' x => "test"' EqualityComparer<string>.Default)); " is 143.
Long Statement,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToLookupArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.ToLookup<string' string' string>(x => "test"' null' EqualityComparer<string>.Default)); " is 137.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,AddDecimals,The length of the statement  "            var compiled = Expression.Lambda<Func<decimal' decimal' decimal>>(binaryExpression' parameterLeft' parameterRight).Compile(); " is 125.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,AddLiftedDecimals,The length of the statement  "            var compiled = Expression.Lambda<Func<decimal?' decimal?' decimal?>>(binaryExpression' parameterLeft' parameterRight).Compile(); " is 128.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,AddStrings,The length of the statement  "            var compiled = Expression.Lambda<Func<string' string' string>>(binaryExpression' parameterLeft' parameterRight).Compile(); " is 122.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,AddTestNullable,The length of the statement  "            var lambda = Expression.Lambda<Func<int?' int?' int?>>(Expression.Add(parameterLeft' parameterRight)' parameterLeft' parameterRight); " is 133.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,ArgTypesDifferent,The length of the statement  "            AssertEx.Throws<InvalidOperationException>(() => Expression.Add(Expression.Constant(ValueLeft)' Expression.Constant(ValueRight))); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,Boolean,The length of the statement  "            AssertEx.Throws<InvalidOperationException>(() => Expression.Add(Expression.Constant(ValueLeft)' Expression.Constant(ValueRight))); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,CompileAdd,The length of the statement  "            var lambda = Expression.Lambda<Func<int' int' int>>(Expression.Add(parameterLeft' parameterRight)' parameterLeft' parameterRight); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,NoOperatorClass,The length of the statement  "            AssertEx.Throws<InvalidOperationException>(() => Expression.Add(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 141.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedFromNullableToNullableAdd,The length of the statement  "            var compiled = Expression.Lambda<Func<SlotFromNullableToNullable?' SlotFromNullableToNullable?' SlotFromNullableToNullable?>>(binaryExpression' parameterLeft' parameterRight).Compile(); " is 185.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedToNullableAdd,The length of the statement  "            var compiled = Expression.Lambda<Func<SlotToNullable' SlotToNullable' SlotToNullable?>>(binaryExpression' parameterLeft' parameterRight).Compile(); " is 147.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAddChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AddChecked.cs,ArgTypesDifferent,The length of the statement  "            AssertEx.Throws<InvalidOperationException>(() => Expression.AddChecked(Expression.Constant(ValueLeft)' Expression.Constant(ValueRight))); " is 137.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAddChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AddChecked.cs,Boolean,The length of the statement  "            AssertEx.Throws<InvalidOperationException>(() => Expression.AddChecked(Expression.Constant(ValueLeft)' Expression.Constant(ValueRight))); " is 137.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAddChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AddChecked.cs,NoOperatorClass,The length of the statement  "            AssertEx.Throws<InvalidOperationException>(() => Expression.AddChecked(Expression.Constant(valueLeft)' Expression.Constant(valueRight))); " is 137.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAddChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AddChecked.cs,UserDefinedStruct,The length of the statement  "            var additionExpression = Expression.AddChecked(Expression.Constant(new OpStruct())' Expression.Constant(new OpStruct())); " is 121.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAnd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_And.cs,AndBoolNullableTest,The length of the statement  "            var lambda = Expression.Lambda<Func<bool?' bool?' bool?>>(Expression.And(parameterLeft' parameterRight)' parameterLeft' parameterRight); " is 136.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAnd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_And.cs,AndBoolTest,The length of the statement  "            var lambda = Expression.Lambda<Func<bool' bool' bool>>(Expression.And(parameterLeft' parameterRight)' parameterLeft' parameterRight); " is 133.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAnd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_And.cs,AndIntNullableTest,The length of the statement  "            var compiled = Expression.Lambda<Func<int?' int?' int?>>(Expression.And(parameterLeft' parameterRight)' parameterLeft' parameterRight).Compile(); " is 145.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAnd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_And.cs,AndIntTest,The length of the statement  "            var compiled = Expression.Lambda<Func<int' int' int>>(Expression.And(parameterLeft' parameterRight)' parameterLeft' parameterRight).Compile(); " is 142.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAnd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_And.cs,ArgTypesDifferent,The length of the statement  "            AssertEx.Throws<InvalidOperationException>(() => Expression.And(Expression.Constant(ValueLeft)' Expression.Constant(ValueRight))); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAnd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_And.cs,Double,The length of the statement  "            AssertEx.Throws<InvalidOperationException>(() => Expression.And(Expression.Constant(ValueLeft)' Expression.Constant(ValueRight))); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAnd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_And.cs,NoOperatorClass,The length of the statement  "            AssertEx.Throws<InvalidOperationException>(() => Expression.And(Expression.Constant(valueLeft)' Expression.Constant(valueRight))); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,AndAlsoTest,The length of the statement  "            var lambda = Expression.Lambda<Func<bool' bool' bool>>(Expression.AndAlso(parameterLeft' parameterRight)' parameterLeft' parameterRight); " is 137.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,AndAlsoTestNullable,The length of the statement  "            var lambda = Expression.Lambda<Func<bool?' bool?' bool?>>(Expression.AndAlso(parameterLeft' parameterRight)' parameterLeft' parameterRight); " is 140.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,MismatchedTypes,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.AndAlso(Expression.Constant(new OpClass())' Expression.Constant(true))); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.AndAlso(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 143.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CreateArrayAccess,The length of the statement  "            return Expression.Lambda<Func<T[]' int' T>>(Expression.ArrayIndex(parameterArray' parameterIndex)' parameterArray' parameterIndex).Compile(); " is 141.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,Arg1NotArray,The length of the statement  "            AssertEx.Throws<ArgumentException>(() => Expression.ArrayIndex(Expression.Constant(Value)' Expression.Constant(Index))); " is 120.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,Arg2Null1,The length of the statement  "            AssertEx.Throws<ArgumentNullException>(() => Expression.ArrayIndex(Expression.Constant(new int[Size])' (Expression)null)); " is 122.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,Arg2Null2,The length of the statement  "            AssertEx.Throws<ArgumentNullException>(() => Expression.ArrayIndex(Expression.Constant(new int[Size])' (IEnumerable<Expression>)null)); " is 135.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,Arg2Null3,The length of the statement  "            AssertEx.Throws<ArgumentNullException>(() => Expression.ArrayIndex(Expression.Constant(new int[Size])' (Expression[])null)); " is 124.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,Arg2WrongType1,The length of the statement  "            AssertEx.Throws<ArgumentException>(() => Expression.ArrayIndex(Expression.Constant(new int[size])' Expression.Constant(Index))); " is 128.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Bind.cs,Arg2Null,The length of the statement  "            AssertEx.Throws<ArgumentNullException>(() => Expression.Bind(typeof(MemberClass).GetField(nameof(MemberClass.TestField2))' null)); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Bind.cs,BindValueTypes,The length of the statement  "            var compiled = Expression.Lambda<Func<int' short' Slot>>(memberInitExpression' parameterLeft' parameterRight).Compile(); " is 120.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Bind.cs,FieldRo,The length of the statement  "            var expression = Expression.Bind(typeof(MemberClass).GetField(nameof(MemberClass.TestField1))' Expression.Constant(Value)); " is 123.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Bind.cs,FieldRw,The length of the statement  "            var expression = Expression.Bind(typeof(MemberClass).GetField(nameof(MemberClass.TestField2))' Expression.Constant(Value)); " is 123.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Bind.cs,FieldStatic,The length of the statement  "            var expression = Expression.Bind(typeof(MemberClass).GetField(nameof(MemberClass.StaticField))' Expression.Constant(Value)); " is 124.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Bind.cs,Method,The length of the statement  "            AssertEx.Throws<ArgumentException>(() => Expression.Bind(new Func<int' int>(new MemberClass().TestMethod).GetMethodInfo()' Expression.Constant(Value))); " is 152.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Bind.cs,PropertyRo,The length of the statement  "            AssertEx.Throws<ArgumentException>(() => Expression.Bind(typeof(MemberClass).GetProperty(nameof(MemberClass.TestProperty1))' Expression.Constant(1))); " is 150.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Bind.cs,PropertyRw,The length of the statement  "            var expression = Expression.Bind(typeof(MemberClass).GetProperty(nameof(MemberClass.TestProperty2))' Expression.Constant(Value)); " is 129.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Bind.cs,PropertyStatic,The length of the statement  "            var expression = Expression.Bind(typeof(MemberClass).GetProperty(nameof(MemberClass.StaticProperty))' Expression.Constant(Value)); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,Arg4WrongType,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Call(typeof(MemberClass)' nameof(StaticMethod)' null' Expression.Constant(true))); " is 140.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CheckTypeArgsIsNotUsedForParameterLookup,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Call(GetType()' "EineMethod"' new[] {typeof(string)' typeof(int)}' "foo".ToConstant()' 2.ToConstant())); " is 162.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CheckTypeArgsIsUsedForGenericArguments,The length of the statement  "            var m = Expression.Call(GetType()' nameof(AGenericMethod)' new[] {typeof(string)' typeof(int)}' "foo".ToConstant()' 2.ToConstant()); " is 132.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,InstanceMethod,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Call(typeof(MemberClass)' "TestMethod"' null' Expression.Constant(1))); " is 129.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,MethodArgumentCountDoesNotMatchParameterLength,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.Call(Expression.Constant(new object())' typeof(object).GetMethod("ToString")' Expression.Constant(new object()))); " is 164.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,MethodArgumentDoesNotMatchParameterType,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.Call(Expression.New(typeof(Foo))' typeof(Foo).GetMethod(nameof(Foo.Bar))' Expression.Constant(42))); " is 150.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,MethodHasNullArgument,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => Expression.Call(Expression.New(typeof(Foo))' typeof(Foo).GetMethod(nameof(Foo.Bar))' null as Expression)); " is 149.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,StaticGenericMethod,The length of the statement  "            Expression.Call(typeof(MemberClass)' nameof(MemberClass.StaticGenericMethod)' new[] {typeof(int)}' Expression.Constant(1)); " is 123.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,Arg2Null,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => Expression.Condition(Expression.Equal(Expression.Constant(42)' Expression.Constant(42))' null' Expression.Constant(0))); " is 163.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,Arg3Null,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => Expression.Condition(Expression.Equal(Expression.Constant(42)' Expression.Constant(42))' Expression.Constant(1)' null)); " is 163.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,TestNotBool,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.Condition(Expression.Constant(42)' Expression.Constant(1)' Expression.Constant(0))); " is 134.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,TestSimpleConditional,The length of the statement  "            var cond = Expression.Condition(Expression.GreaterThan(Expression.Constant(2)' Expression.Constant(1))' Expression.Constant(1)' Expression.Constant(0)); " is 152.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,TrueBlockTypeNotFalseBlockType,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.Condition(Expression.Constant(42)' Expression.Constant(1.1)' Expression.Constant(0))); " is 136.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ConvertInt32ToBool,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Convert(Expression.Parameter(typeof(int)' "")' typeof(bool))); " is 120.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ConvertStructToFoo,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Convert(Expression.Parameter(typeof(EineStrukt)' "")' typeof(Foo))); " is 126.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestDivide,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Divide.cs,Boolean,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Divide(Expression.Constant(true)' Expression.Constant(false))); " is 121.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestDivide,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Divide.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Divide(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 142.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestElementInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ElementInit.cs,MethodHasNullArgument,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => Expression.ElementInit(typeof(Foo).GetMethod("Add")' new Expression[] {null})); " is 122.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Equal(Expression.Constant(new D())' Expression.Constant(new D()))); " is 125.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestExclusiveOr,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ExclusiveOr.cs,ArgTypesDifferent,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.ExclusiveOr(Expression.Constant(1)' Expression.Constant(true))); " is 122.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestExclusiveOr,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ExclusiveOr.cs,Double,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.ExclusiveOr(Expression.Constant(1.0)' Expression.Constant(2.0))); " is 123.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestExclusiveOr,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ExclusiveOr.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.ExclusiveOr(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 147.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThan.cs,Boolean,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.GreaterThan(Expression.Constant(true)' Expression.Constant(false))); " is 126.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThan.cs,MismatchedTypes,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.GreaterThan(Expression.Constant(new OpClass())' Expression.Constant(true))); " is 134.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThan.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.GreaterThan(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 147.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThan.cs,StringS,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.GreaterThan(Expression.Constant("")' Expression.Constant(""))); " is 121.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThan.cs,UserDefinedClass,The length of the statement  "            Assert.AreEqual("(value(MonoTests.System.Linq.Expressions.OpClass) > value(MonoTests.System.Linq.Expressions.OpClass))"' expr.ToString()); " is 138.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThanOrEqual.cs,Boolean,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.GreaterThanOrEqual(Expression.Constant(true)' Expression.Constant(false))); " is 133.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThanOrEqual.cs,MismatchedTypes,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.GreaterThanOrEqual(Expression.Constant(new OpClass())' Expression.Constant(true))); " is 141.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThanOrEqual.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.GreaterThanOrEqual(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 154.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThanOrEqual.cs,UserDefinedClass,The length of the statement  "            Assert.AreEqual("(value(MonoTests.System.Linq.Expressions.OpClass) >= value(MonoTests.System.Linq.Expressions.OpClass))"' expr.ToString()); " is 139.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestInvoke,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Invoke.cs,ArgumentCountDoesntMatchParametersLength,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Invoke(CreateInvokable<Action<int>>()' 1.ToConstant()' 2.ToConstant())); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestLambda,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Lambda.cs,LambdaType,The length of the statement  "            l = Expression.Lambda(Expression.Call(null' GetType().GetMethod("Foo"))' Expression.Parameter(typeof(string)' "foofoo")); " is 121.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestLambda,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Lambda.cs,NullParameter,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => Expression.Lambda<Func<int' int>>(Expression.Constant(1)' new ParameterExpression[] {null})); " is 136.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,Boolean,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.LeftShift(Expression.Constant(true)' Expression.Constant(1))); " is 120.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.LeftShift(Expression.Constant(new NoOpClass())' Expression.Constant(1))); " is 131.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestLessThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThan.cs,Boolean,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.LessThan(Expression.Constant(true)' Expression.Constant(false))); " is 123.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestLessThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThan.cs,MismatchedTypes,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.LessThan(Expression.Constant(new OpClass())' Expression.Constant(true))); " is 131.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestLessThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThan.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.LessThan(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 144.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestLessThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThan.cs,UserDefinedClass,The length of the statement  "            Assert.AreEqual("(value(MonoTests.System.Linq.Expressions.OpClass) < value(MonoTests.System.Linq.Expressions.OpClass))"' expr.ToString()); " is 138.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestLessThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThanOrEqual.cs,Boolean,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.LessThanOrEqual(Expression.Constant(true)' Expression.Constant(false))); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestLessThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThanOrEqual.cs,MismatchedTypes,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.LessThanOrEqual(Expression.Constant(new OpClass())' Expression.Constant(true))); " is 138.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestLessThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThanOrEqual.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.LessThanOrEqual(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 151.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestLessThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThanOrEqual.cs,UserDefinedClass,The length of the statement  "            Assert.AreEqual("(value(MonoTests.System.Linq.Expressions.OpClass) <= value(MonoTests.System.Linq.Expressions.OpClass))"' expr.ToString()); " is 139.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestListBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ListBind.cs,ListBindToString,The length of the statement  "            Assert.AreEqual("List = {Void Add(System.String)(\"foo\")' Void Add(System.String)(\"bar\")' Void Add(System.String)(\"baz\")}"' binding.ToString()); " is 149.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestListBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ListBind.cs,MethodeGetImplementIEnumerable2,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.ListBind(typeof(Foo).GetProperty(nameof(Foo.BarBar)).GetGetMethod()' new List<ElementInit>())); " is 145.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestListBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ListBind.cs,MethodMustBeAnAccessor,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.ListBind(typeof(Foo).GetMethod(nameof(Foo.Test))' new List<ElementInit>())); " is 126.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestMemberBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MemberBind.cs,MemberNotFieldOrProp,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.MemberBind(typeof(Gazonk).GetMethod(nameof(Gazonk.Bang)) as MemberInfo)); " is 123.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestMemberBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MemberBind.cs,MemberTypeMismatch,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.MemberBind(typeof(Gazonk).GetField(nameof(Gazonk.Klang))' Expression.Bind(typeof(Foo).GetField(nameof(Foo.Bar))' "bar".ToConstant()))); " is 185.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestMemberInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MemberInit.cs,InitFields,The length of the statement  "                Expression.New(typeof(Foo))' Expression.Bind(typeof(Foo).GetField(nameof(Foo.Bar))' "bar".ToConstant())' Expression.Bind(typeof(Foo).GetField(nameof(Foo.Baz))' "baz".ToConstant()) " is 179.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestModulo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Modulo.cs,Boolean,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Modulo(Expression.Constant(true)' Expression.Constant(false))); " is 121.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestModulo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Modulo.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Modulo(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 142.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestMultiply,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Multiply.cs,Boolean,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Multiply(Expression.Constant(true)' Expression.Constant(false))); " is 123.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestMultiply,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Multiply.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Multiply(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 144.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestMultiplyChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MultiplyChecked.cs,ArgTypesDifferent,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.MultiplyChecked(Expression.Constant(1)' Expression.Constant(2.0))); " is 125.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestMultiplyChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MultiplyChecked.cs,Boolean,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.MultiplyChecked(Expression.Constant(true)' Expression.Constant(false))); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestMultiplyChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MultiplyChecked.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.MultiplyChecked(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 151.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,MethodArgNotStatic,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.Negate(Expression.Constant(new object())' typeof(OpClass).GetMethod("WrongUnaryNotStatic"))); " is 143.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,MethodArgParameterCount,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.Negate(Expression.Constant(new object())' typeof(OpClass).GetMethod("WrongUnaryParameterCount"))); " is 148.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,MethodArgReturnsVoid,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.Negate(Expression.Constant(new object())' typeof(OpClass).GetMethod("WrongUnaryReturnVoid"))); " is 144.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNew,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_New.cs,HasNullArgument,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => Expression.New(typeof(Foo).GetConstructor(new[] {typeof(string)})' null as Expression)); " is 131.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNew,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_New.cs,HasWrongArgument,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.New(typeof(Foo).GetConstructor(new[] {typeof(string)})' Expression.Constant(12))); " is 132.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNew,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_New.cs,MemberArgumentMiscount,The length of the statement  "                        new[] {"FooValue".ToConstant()}' typeof(FakeAnonymousType).GetProperty(nameof(FakeAnonymousType.FooValue))' typeof(FakeAnonymousType).GetProperty("BarValue") " is 157.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNew,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_New.cs,NewFakeAnonymousType,The length of the statement  "                new[] {"FooValue".ToConstant()' "BarValue".ToConstant()' "BazValue".ToConstant()}' typeof(FakeAnonymousType).GetProperty("FooValue")' typeof(FakeAnonymousType).GetProperty("BarValue")' typeof(FakeAnonymousType).GetProperty("BazValue") " is 234.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNew,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_New.cs,NewFakeAnonymousType,The length of the statement  "            Assert.AreEqual("new FakeAnonymousType(FooValue = \"FooValue\"' BarValue = \"BarValue\"' BazValue = \"BazValue\")"' n.ToString()); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayInit.cs,WrongInitializer,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.NewArrayInit(typeof(int)' 1.ToConstant()' "2".ToConstant()' 3.ToConstant())); " is 135.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNot,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Not.cs,MethodArgNotStatic,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.Not(Expression.Constant(new object())' typeof(OpClass).GetMethod("WrongUnaryNotStatic"))); " is 140.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNot,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Not.cs,MethodArgParameterCount,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.Not(Expression.Constant(new object())' typeof(OpClass).GetMethod("WrongUnaryParameterCount"))); " is 145.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNot,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Not.cs,MethodArgReturnsVoid,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.Not(Expression.Constant(new object())' typeof(OpClass).GetMethod("WrongUnaryReturnVoid"))); " is 141.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNotEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NotEqual.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.NotEqual(Expression.Constant(new D())' Expression.Constant(new D()))); " is 128.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestNotEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NotEqual.cs,UserDefinedClass,The length of the statement  "            Assert.AreEqual("(value(MonoTests.System.Linq.Expressions.OpClass) != value(MonoTests.System.Linq.Expressions.OpClass))"' expr.ToString()); " is 139.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestOr,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Or.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Or(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 138.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestOrElse,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_OrElse.cs,MismatchedTypes,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.OrElse(Expression.Constant(new OpClass())' Expression.Constant(true))); " is 129.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestOrElse,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_OrElse.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.OrElse(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 142.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,ArgTypesFloat,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Power(Expression.Constant((float)1)' Expression.Constant((float)2))); " is 127.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestProperty,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Property.cs,Arg2Null2,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => Expression.Property(Expression.Constant(new MemberClass())' (PropertyInfo)null)); " is 124.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestProperty,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Property.cs,Arg2Null3,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => Expression.Property(Expression.Constant(new MemberClass())' (MethodInfo)null)); " is 122.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestProperty,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Property.cs,InstanceProperty2,The length of the statement  "            var expr = Expression.Property(Expression.Constant(new MemberClass())' typeof(MemberClass).GetProperty(nameof(MemberClass.TestProperty1))); " is 139.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestPropertyOrField,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_PropertyOrField.cs,InstanceProperty,The length of the statement  "            Assert.AreEqual("value(MonoTests.System.Linq.Expressions.MemberClass).TestProperty1"' expr.ToString()' "PropertyOrField#04"); " is 125.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestPropertyOrField,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_PropertyOrField.cs,NoPropertyOrField,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.PropertyOrField(Expression.Constant(new MemberClass())' "NoPropertyOrField")); " is 128.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,Arg2WrongType,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.RightShift(Expression.Constant(1)' Expression.Constant(2.0))); " is 120.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,Boolean,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.RightShift(Expression.Constant(true)' Expression.Constant(1))); " is 121.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,Double,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.RightShift(Expression.Constant(2.0)' Expression.Constant(1))); " is 120.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.RightShift(Expression.Constant(new NoOpClass())' Expression.Constant(1))); " is 132.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestSubtract,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Subtract.cs,Boolean,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Subtract(Expression.Constant(true)' Expression.Constant(false))); " is 123.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestSubtract,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Subtract.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.Subtract(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 144.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestSubtractChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_SubtractChecked.cs,InvalidOperation,The length of the statement  "            throw new Exception(string.Format("SubtractChecked should have thrown for the creation of a tree with {0} operands"' v1.GetType())); " is 132.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestSubtractChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_SubtractChecked.cs,ArgTypesDifferent,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.SubtractChecked(Expression.Constant(1)' Expression.Constant(2.0))); " is 125.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestSubtractChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_SubtractChecked.cs,Boolean,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.SubtractChecked(Expression.Constant(true)' Expression.Constant(false))); " is 130.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestSubtractChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_SubtractChecked.cs,NoOperatorClass,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Expression.SubtractChecked(Expression.Constant(new NoOpClass())' Expression.Constant(new NoOpClass()))); " is 151.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestUnaryPlus,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_UnaryPlus.cs,MethodArgNotStatic,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.UnaryPlus(Expression.Constant(new object())' typeof(OpClass).GetMethod("WrongUnaryNotStatic"))); " is 146.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestUnaryPlus,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_UnaryPlus.cs,MethodArgParameterCount,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.UnaryPlus(Expression.Constant(new object())' typeof(OpClass).GetMethod("WrongUnaryParameterCount"))); " is 151.
Long Statement,MonoTests.System.Linq.Expressions,ExpressionTestUnaryPlus,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_UnaryPlus.cs,MethodArgReturnsVoid,The length of the statement  "            Assert.Throws<ArgumentException>(() => Expression.UnaryPlus(Expression.Constant(new object())' typeof(OpClass).GetMethod("WrongUnaryReturnVoid"))); " is 147.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareLong,The length of the statement  "            var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 9999999' 100000000000L' 0xAA00000000' long.MaxValue' long.MinValue }; " is 129.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LongCtorRoundTrip,The length of the statement  "                0' long.MinValue' long.MaxValue' -1' 1L + int.MaxValue' -1L + int.MinValue' 0x1234' 0xFFFFFFFFL' 0x1FFFFFFFFL' -0xFFFFFFFFL' -0x1FFFFFFFFL' " is 139.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The length of the statement  "            Assert.AreEqual("10000000000000000000000000000000000000000000000000000000"' BigInteger.Pow(10' 55).ToString("G")' "#8"); " is 120.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The length of the statement  "            Assert.AreEqual("10000000000000000000000000000000000000000000000000000000"' BigInteger.Pow(10' 55).ToString("R")' "#9"); " is 120.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLongCtorToByteArray,The length of the statement  "            Assert.AreEqual(new byte[] { 0x07' 0x06' 0x05' 0x04' 0x03' 0x2' 0x01 }' new BigInteger(0x01020304050607L).ToByteArray()' "#7"); " is 127.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLongCtorToByteArray,The length of the statement  "            Assert.AreEqual(new byte[] { 0x08' 0x07' 0x06' 0x05' 0x04' 0x03' 0x2' 0x01 }' new BigInteger(0x0102030405060708L).ToByteArray()' "#8"); " is 135.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLongCtorToByteArray,The length of the statement  "            Assert.AreEqual(new byte[] { 0xFA' 0xFA' 0xFB' 0xFC' 0xFD' 0xFE }' new BigInteger(-0x010203040506L).ToByteArray()' "#6m"); " is 122.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLongCtorToByteArray,The length of the statement  "            Assert.AreEqual(new byte[] { 0xF9' 0xF9' 0xFA' 0xFB' 0xFC' 0xFD' 0xFE }' new BigInteger(-0x01020304050607L).ToByteArray()' "#7m"); " is 130.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLongCtorToByteArray,The length of the statement  "            Assert.AreEqual(new byte[] { 0xF8' 0xF8' 0xF9' 0xFA' 0xFB' 0xFC' 0xFD' 0xFE }' new BigInteger(-0x0102030405060708L).ToByteArray()' "#8m"); " is 138.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLongCtorToByteArray,The length of the statement  "            Assert.AreEqual(new byte[] { 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0x7F }' new BigInteger(long.MaxValue).ToByteArray()' "#9"); " is 130.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLongCtorToByteArray,The length of the statement  "            Assert.AreEqual(new byte[] { 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x80 }' new BigInteger(long.MinValue).ToByteArray()' "#10"); " is 131.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The length of the statement  "            Assert.AreEqual(BitConverter.Int64BitsToDouble(6912920136897069886)' (double)(2278888483353476799 * BigInteger.Pow(2' 451))' "#18"); " is 132.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The length of the statement  "            Assert.AreEqual(-17' (int)BigInteger.Parse("   (17)   "' NumberStyles.AllowParentheses | NumberStyles.AllowLeadingWhite | NumberStyles.AllowTrailingWhite)' "#18"); " is 163.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The length of the statement  "            Assert.AreEqual(-23' (int)BigInteger.Parse("  -23  "' NumberStyles.AllowLeadingSign | NumberStyles.AllowLeadingWhite | NumberStyles.AllowTrailingWhite)' "#19"); " is 160.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The length of the statement  "            Assert.AreEqual(250' (int)BigInteger.Parse("2" + dsep + "5E2"' NumberStyles.AllowExponent | NumberStyles.AllowDecimalPoint)' "#21");//2.5E2 = 250 " is 145.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The length of the statement  "            Assert.AreEqual("136236974127783066520110477975349088954559032721408"' BigInteger.Parse("136236974127783066520110477975349088954559032721408"' NumberStyles.None).ToString()' "#23"); " is 181.
Long Statement,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The length of the statement  "            Assert.AreEqual("136236974127783066520110477975349088954559032721408"' BigInteger.Parse("136236974127783066520110477975349088954559032721408").ToString()' "#24"); " is 162.
Long Statement,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatC,The length of the statement  "            Assert.AreEqual(second.ToString("C3"' CultureInfo.GetCultureInfo("fr-FR"))' "100\u00A0000\u00A0090\u00A0000\u00A0000\u00A0010'000 €"); " is 134.
Long Statement,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatC,The length of the statement  "            Assert.AreEqual(second.ToString("c3"' CultureInfo.GetCultureInfo("fr-FR"))' "100\u00A0000\u00A0090\u00A0000\u00A0000\u00A0010'000 €"); " is 134.
Long Statement,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatP,The length of the statement  "            Assert.AreEqual(second.ToString("P20"' CultureInfo.InvariantCulture)' "10'000'009'000'000'001'000.00000000000000000000 %"); " is 123.
Long Statement,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatP,The length of the statement  "            Assert.AreEqual(second.ToString("p20"' CultureInfo.InvariantCulture)' "10'000'009'000'000'001'000.00000000000000000000 %"); " is 123.
Long Statement,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitWithCancellationTokenAndNotImmediateSetTest,The length of the statement  "                    Assert.IsTrue(manualResetEvent[0].Wait(TimeSpan.FromSeconds(10)' cts.Token)' "Wait returned false despite event was set."); " is 123.
Long Statement,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync2,The length of the statement  "                            "RunSemaphoreSlimTest1_WaitAsync2:  FAILED.  SemaphoreSlim.Release() seems to have synchronously invoked a continuation."); " is 123.
Long Statement,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The length of the statement  "                    var result = timeout is TimeSpan timeSpan ? semaphore.WaitAsync(timeSpan).Result : semaphore.WaitAsync((int)timeout).Result; " is 124.
Long Statement,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWithOnAnyTestCase,The length of the statement  "                Assert.IsTrue(cont.Wait(2000)' "Cont wait' (result' {0}) (parent status' {2}) (status' {1})"' result' cont.Status' t.Status); " is 125.
Long Statement,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ChildTaskWithUnscheduledContinuationAttachedToParent,The length of the statement  "            var child = Task.Factory.StartNew(() => inner = TaskEx.Run(() => throw new ApplicationException()).ContinueWith(_ => { }' TaskContinuationOptions.AttachedToParent | TaskContinuationOptions.NotOnFaulted | TaskContinuationOptions.ExecuteSynchronously)); " is 251.
Long Statement,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,LazyCancelationTest,The length of the statement  "                var cont = parent.ContinueWith(ActionHelper.GetNoopAction<Task>()' source.Token' TaskContinuationOptions.LazyCancellation' TaskScheduler.Default); " is 146.
Long Statement,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,CanceledContinuationExecuteSynchronouslyTest,The length of the statement  "                    var cont = task.ContinueWith(t => result = true' token' TaskContinuationOptions.ExecuteSynchronously' TaskScheduler.Default); " is 125.
Long Statement,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithInvalidArguments,The length of the statement  "                task.ContinueWith(ActionHelper.GetNoopAction<Task>()' TaskContinuationOptions.OnlyOnCanceled | TaskContinuationOptions.NotOnCanceled); " is 134.
Long Statement,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithInvalidArguments,The length of the statement  "                task.ContinueWith(ActionHelper.GetNoopAction<Task>()' TaskContinuationOptions.OnlyOnRanToCompletion | TaskContinuationOptions.NotOnRanToCompletion); " is 148.
Long Statement,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithOnAnyTestCase,The length of the statement  "                    Assert.IsTrue(cont.Wait(2000)' "Cont wait' (result' {0}) (parent status' {2}) (status' {1})"' result' cont.Status' t.Status); " is 125.
Long Statement,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ChildTaskWithUnscheduledContinuationAttachedToParent,The length of the statement  "                 }' TaskContinuationOptions.AttachedToParent | TaskContinuationOptions.NotOnFaulted | TaskContinuationOptions.ExecuteSynchronously); " is 131.
Long Statement,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,FromResult,The length of the statement  "                         // my philosophy is that Dispose should hold itself to higher standards' one able to be called safely by multiple threads " is 121.
Long Statement,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,FromResult,The length of the statement  "                         // If Dispose can be called concurrently by multiple threads without risk' it should be possible to call it serially too " is 120.
Long Statement,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAny,The length of the statement  "            // As you can see' if the task didn't complete' wait would have been false' and the task faulted' but that didn't happen " is 120.
Long Statement,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,DenyChildAttachTest,The length of the statement  "                var parent = Task.Factory.StartNew(() => nested = Task.Factory.StartNew(() => mre.Wait(2000)' TaskCreationOptions.AttachedToParent)' TaskCreationOptions.DenyChildAttach); " is 170.
Long Statement,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,ParallelForeachWithLocalAndIndex,The length of the statement  "            //                                                             Func<TSource' ParallelLoopState' Int64' TLocal' TLocal> body' " is 124.
Long Statement,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,ParallelForEachWithOptions,The length of the statement  "            // ParallelLoopResult ForEach<TSource>(IEnumerable<TSource> source'ParallelOptions parallelOptions' Action<TSource> body) " is 121.
Long Statement,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,ParallelForEachWithOptionsAndIndexAndState,The length of the statement  "            // ParallelLoopResult ForEach<TSource>(IEnumerable<TSource> source' ParallelOptions parallelOptions'' Action<TSource' ParallelLoopState' Int64> body) " is 149.
Long Statement,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,ParallelForEachWithOptionsAndLocalAndIndex,The length of the statement  "            //                                                             Func<TSource' ParallelLoopState' Int64' TLocal' TLocal> body' " is 124.
Long Statement,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,ParallelForEachWithOptionsAndLocalAndIndex,The length of the statement  "                    Parallel.ForEach(_rangePartitioner' _parallelOption' ThreadLocalInit' WorkWithLocalAndIndexPartitioner' ThreadLocalFinally); " is 124.
Long Statement,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,ParallelForEachWithOptionsAndState,The length of the statement  "            // ParallelLoopResult ForEach<TSource>(IEnumerable<TSource> source' ParallelOptions parallelOptions' Action<T' ParallelLoopState> body) " is 135.
Long Statement,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,RunParallelFor64Test,The length of the statement  "                    Parallel.For(_parameters.StartIndex64' _parameters.StartIndex64 + _parameters.Count' option' ThreadLocalInit' WorkWithLocal' ThreadLocalFinally); " is 145.
Long Statement,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,RunParallelFor64Test,The length of the statement  "                    Parallel.For(_parameters.StartIndex64' _parameters.StartIndex64 + _parameters.Count' ThreadLocalInit' WorkWithLocal' ThreadLocalFinally); " is 137.
Long Statement,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,RunParallelForeachTest,The length of the statement  "                _rangePartitioner = PartitionerFactory<Tuple<int' int>>.Create(_parameters.PartitionerType' _parameters.StartIndex' _parameters.StartIndex + _parameters.Count' _parameters.ChunkSize); " is 183.
Long Statement,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,RunParallelForTest,The length of the statement  "                    Parallel.For(_parameters.StartIndex' _parameters.StartIndex + _parameters.Count' option' ThreadLocalInit' WorkWithLocal' ThreadLocalFinally); " is 141.
Long Statement,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,RunParallelForTest,The length of the statement  "                    Parallel.For(_parameters.StartIndex' _parameters.StartIndex + _parameters.Count' ThreadLocalInit' WorkWithLocal' ThreadLocalFinally); " is 133.
Long Statement,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,Verify,The length of the statement  "                    string.Format("Incorrect results[{0}]. Expected result to lie between {1} and {2} but got {3})"' i' minLimit' maxLimit' _results[i])); " is 134.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupProgressiveBy(x => "test"' EqualityComparer<string>.Default)); " is 140.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupProgressiveBy(x => "test"' x => "test"' EqualityComparer<string>.Default)); " is 153.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupProgressiveBy(null' x => "test"' EqualityComparer<string>.Default)); " is 123.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupProgressiveBy(x => "test"' (Func<string' string>)null' EqualityComparer<string>.Default)); " is 145.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupProgressiveBy(x => "test"' (x' y) => "test")); " is 124.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupProgressiveBy(x => "test"' (Func<string' IEnumerable<string>' string>)null)); " is 132.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            // GroupProgressiveBy<string'string'string'string> (Func<string' string>' Func<string' string>' Func<string' IEnumerable<string>' string>) " is 138.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupProgressiveBy(x => "test"' x => "test"' (x' y) => "test")); " is 137.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupProgressiveBy<string' string' string' string>(null' x => "test"' (x' y) => "test")); " is 139.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupProgressiveBy<string' string' string' string>(x => "test"' null' (x' y) => "test")); " is 139.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupProgressiveBy<string' string' string' string>(x => "test"' x => "test"' null)); " is 134.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            // GroupProgressiveBy<string'string'string> (Func<string' string>' Func<string' IEnumerable<string>' string>' IEqualityComparer<string>) " is 136.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupProgressiveBy(x => "test"' (x' y) => "test"' EqualityComparer<string>.Default)); " is 158.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupProgressiveBy(null' (x' y) => "test"' EqualityComparer<string>.Default)); " is 128.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupProgressiveBy(x => "test"' (Func<string' IEnumerable<string>' string>)null' EqualityComparer<string>.Default)); " is 166.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            // GroupProgressiveBy<string'string'string'string> (Func<string' string>' Func<string' string>' Func<string' IEnumerable<string>' string>' IEqualityComparer<string>) " is 165.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => ((IEnumerable<string>)null).GroupProgressiveBy(x => "test"' x => "test"' (x' y) => "test"' EqualityComparer<string>.Default)); " is 171.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupProgressiveBy(null' x => "test"' (x' y) => "test"' EqualityComparer<string>.Default)); " is 141.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupProgressiveBy<string' string' string' string>(x => "test"' null' (x' y) => "test"' EqualityComparer<string>.Default)); " is 173.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByArgumentNullTest,The length of the statement  "            AssertException<ArgumentNullException>(() => data.GroupProgressiveBy<string' string' string' string>(x => "test"' x => "test"' null' EqualityComparer<string>.Default)); " is 168.
Long Statement,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadDEx,The length of the statement  "            var r = src.GroupProgressiveBy(i => i > 5' FuncHelper.GetIdentityFunc<int>()' (key' group) => StringEx.Concat(group.ToArray())' null); " is 134.
Long Statement,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ProgressiveLookupIsCached,The length of the statement  "            var b = ProgressiveLookup<bool' string>.Create(src' i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null); " is 127.
Long Statement,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The length of the statement  "            var r = ProgressiveLookup<bool' string>.Create(src' i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null); " is 127.
Long Statement,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The length of the statement  "            var r = ProgressiveLookup<bool' string>.Create(src' i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null); " is 127.
Long Statement,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The length of the statement  "            var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } }; " is 153.
Long Statement,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The length of the statement  "            expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 }; " is 126.
Long Statement,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The length of the statement  "            expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 }; " is 146.
Long Statement,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The length of the statement  "            expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 }; " is 220.
Long Statement,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The length of the statement  "            expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 }; " is 207.
Long Statement,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The length of the statement  "            expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 }; " is 211.
Long Statement,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The length of the statement  "            expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 }; " is 207.
Long Statement,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The length of the statement  "            expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 }; " is 219.
Long Statement,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The length of the statement  "            expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 }; " is 207.
Long Statement,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The length of the statement  "            expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 }; " is 410.
Long Statement,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The length of the statement  "            var input = new[] { 22141034' 146009798' 106447544' 66083576' 28048294' 3848650' 119601527' 182384611' 160860217' 52726162 }; " is 125.
Empty Catch Block,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AssertException,The method has an empty catch block.
Empty Catch Block,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,AssertException,The method has an empty catch block.
Magic Number,Tests.Helpers,CollectionStressTestHelper,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Helpers\CollectionStressTestHelper.cs,AddStressTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var amount = -1;                      const int itemsCount = 10;                      const int threadCount = 5;                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var t = Interlocked.Increment(ref amount);                              for (var i = itemsCount - 1; i >= 0; i--)                              {                                  collection.TryAdd(t);                              }                          }'                          threadCount                      );                        Assert.AreEqual(threadCount * itemsCount' collection.Count' "#-1");                      var values = new int[threadCount];                      while (collection.TryTake(out var temp))                      {                          values[temp]++;                      }                        for (var i = 0; i < threadCount; i++)                      {                          Assert.AreEqual(itemsCount' values[i]' "#" + i);                      }                  }              );
Magic Number,Tests.Helpers,CollectionStressTestHelper,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Helpers\CollectionStressTestHelper.cs,AddStressTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var amount = -1;                      const int itemsCount = 10;                      const int threadCount = 5;                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var t = Interlocked.Increment(ref amount);                              for (var i = itemsCount - 1; i >= 0; i--)                              {                                  collection.TryAdd(t);                              }                          }'                          threadCount                      );                        Assert.AreEqual(threadCount * itemsCount' collection.Count' "#-1");                      var values = new int[threadCount];                      while (collection.TryTake(out var temp))                      {                          values[temp]++;                      }                        for (var i = 0; i < threadCount; i++)                      {                          Assert.AreEqual(itemsCount' values[i]' "#" + i);                      }                  }              );
Magic Number,Tests.Helpers,CollectionStressTestHelper,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Helpers\CollectionStressTestHelper.cs,RemoveStressTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      const int count = 10;                      const int threads = 5;                      const int delta = 5;                        for (var i = 0; i < (count + delta) * threads; i++)                      {                          while (!collection.TryAdd(i))                          {                              // Empty                          }                      }                        var state = true;                        Assert.AreEqual((count + delta) * threads' collection.Count' "#0");                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var check = true;                              for (var i = 0; i < count; i++)                              {                                  check &= collection.TryTake(out _);                                  // try again in case it was a transient failure                                  if (!check && collection.TryTake(out _))                                  {                                      check = true;                                  }                              }                                state &= check;                          }'                          threads                      );                        Assert.IsTrue(state' "#1");                      Assert.AreEqual(delta * threads' collection.Count' "#2");                        var actual = string.Empty;                      var builder = new StringBuilder();                      builder.Append(actual);                      while (collection.TryTake(out var temp))                      {                          builder.Append(temp.ToString());                      }                        actual = builder.ToString();                        var range = Enumerable.Range(order == CheckOrderingType.Reversed ? 0 : count * threads' delta * threads);                      if (order == CheckOrderingType.Reversed)                      {                          range = range.Reverse();                      }                        var expected = range.Aggregate(string.Empty' (acc' v) => acc + v);                        if (order == CheckOrderingType.DoNotCare)                      {                          Assert.That(actual' new CollectionEquivalentConstraint(expected)' "#3");                      }                      else                      {                          Assert.AreEqual(expected' actual' "#3");                      }                  }' 10);
Magic Number,Tests.Helpers,CollectionStressTestHelper,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Helpers\CollectionStressTestHelper.cs,RemoveStressTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      const int count = 10;                      const int threads = 5;                      const int delta = 5;                        for (var i = 0; i < (count + delta) * threads; i++)                      {                          while (!collection.TryAdd(i))                          {                              // Empty                          }                      }                        var state = true;                        Assert.AreEqual((count + delta) * threads' collection.Count' "#0");                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var check = true;                              for (var i = 0; i < count; i++)                              {                                  check &= collection.TryTake(out _);                                  // try again in case it was a transient failure                                  if (!check && collection.TryTake(out _))                                  {                                      check = true;                                  }                              }                                state &= check;                          }'                          threads                      );                        Assert.IsTrue(state' "#1");                      Assert.AreEqual(delta * threads' collection.Count' "#2");                        var actual = string.Empty;                      var builder = new StringBuilder();                      builder.Append(actual);                      while (collection.TryTake(out var temp))                      {                          builder.Append(temp.ToString());                      }                        actual = builder.ToString();                        var range = Enumerable.Range(order == CheckOrderingType.Reversed ? 0 : count * threads' delta * threads);                      if (order == CheckOrderingType.Reversed)                      {                          range = range.Reverse();                      }                        var expected = range.Aggregate(string.Empty' (acc' v) => acc + v);                        if (order == CheckOrderingType.DoNotCare)                      {                          Assert.That(actual' new CollectionEquivalentConstraint(expected)' "#3");                      }                      else                      {                          Assert.AreEqual(expected' actual' "#3");                      }                  }' 10);
Magic Number,Tests.Helpers,CollectionStressTestHelper,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Helpers\CollectionStressTestHelper.cs,RemoveStressTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      const int count = 10;                      const int threads = 5;                      const int delta = 5;                        for (var i = 0; i < (count + delta) * threads; i++)                      {                          while (!collection.TryAdd(i))                          {                              // Empty                          }                      }                        var state = true;                        Assert.AreEqual((count + delta) * threads' collection.Count' "#0");                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var check = true;                              for (var i = 0; i < count; i++)                              {                                  check &= collection.TryTake(out _);                                  // try again in case it was a transient failure                                  if (!check && collection.TryTake(out _))                                  {                                      check = true;                                  }                              }                                state &= check;                          }'                          threads                      );                        Assert.IsTrue(state' "#1");                      Assert.AreEqual(delta * threads' collection.Count' "#2");                        var actual = string.Empty;                      var builder = new StringBuilder();                      builder.Append(actual);                      while (collection.TryTake(out var temp))                      {                          builder.Append(temp.ToString());                      }                        actual = builder.ToString();                        var range = Enumerable.Range(order == CheckOrderingType.Reversed ? 0 : count * threads' delta * threads);                      if (order == CheckOrderingType.Reversed)                      {                          range = range.Reverse();                      }                        var expected = range.Aggregate(string.Empty' (acc' v) => acc + v);                        if (order == CheckOrderingType.DoNotCare)                      {                          Assert.That(actual' new CollectionEquivalentConstraint(expected)' "#3");                      }                      else                      {                          Assert.AreEqual(expected' actual' "#3");                      }                  }' 10);
Magic Number,Tests.Helpers,CollectionStressTestHelper,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Helpers\CollectionStressTestHelper.cs,RemoveStressTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      const int count = 10;                      const int threads = 5;                      const int delta = 5;                        for (var i = 0; i < (count + delta) * threads; i++)                      {                          while (!collection.TryAdd(i))                          {                              // Empty                          }                      }                        var state = true;                        Assert.AreEqual((count + delta) * threads' collection.Count' "#0");                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var check = true;                              for (var i = 0; i < count; i++)                              {                                  check &= collection.TryTake(out _);                                  // try again in case it was a transient failure                                  if (!check && collection.TryTake(out _))                                  {                                      check = true;                                  }                              }                                state &= check;                          }'                          threads                      );                        Assert.IsTrue(state' "#1");                      Assert.AreEqual(delta * threads' collection.Count' "#2");                        var actual = string.Empty;                      var builder = new StringBuilder();                      builder.Append(actual);                      while (collection.TryTake(out var temp))                      {                          builder.Append(temp.ToString());                      }                        actual = builder.ToString();                        var range = Enumerable.Range(order == CheckOrderingType.Reversed ? 0 : count * threads' delta * threads);                      if (order == CheckOrderingType.Reversed)                      {                          range = range.Reverse();                      }                        var expected = range.Aggregate(string.Empty' (acc' v) => acc + v);                        if (order == CheckOrderingType.DoNotCare)                      {                          Assert.That(actual' new CollectionEquivalentConstraint(expected)' "#3");                      }                      else                      {                          Assert.AreEqual(expected' actual' "#3");                      }                  }' 10);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,BlockingCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\BlockingCollectionTest.cs,TryTakeFromEmptyBlockingCollectionWithTimeoutShouldWait,The following statement contains a magic number: a.TryTake(out _' 1000);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,BlockingCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\BlockingCollectionTest.cs,TryTakeFromEmptyBlockingCollectionWithTimeoutShouldWait,The following statement contains a magic number: Assert.IsTrue(elapsedMilliseconds + 16 > 1000' $"{elapsedMilliseconds}");
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,BlockingCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\BlockingCollectionTest.cs,TryTakeFromEmptyBlockingCollectionWithTimeoutShouldWait,The following statement contains a magic number: Assert.IsTrue(elapsedMilliseconds + 16 > 1000' $"{elapsedMilliseconds}");
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,BlockingCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\BlockingCollectionTest.cs,GetConsumingEnumerableTestImpl,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,BlockingCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\BlockingCollectionTest.cs,GetConsumingEnumerableTestImpl,The following statement contains a magic number: Assert.AreEqual(2' called);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,Setup,The following statement contains a magic number: map.TryAdd("bar"' 2);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,Setup,The following statement contains a magic number: map["foobar"] = 3;
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddOrUpdateTest,The following statement contains a magic number: Assert.AreEqual(11' map.AddOrUpdate("bar"' _ => 12' (_' __) => 11));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddOrUpdateTest,The following statement contains a magic number: Assert.AreEqual(11' map.AddOrUpdate("bar"' _ => 12' (_' __) => 11));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddOrUpdateTest,The following statement contains a magic number: Assert.AreEqual(11' map.AddOrUpdate("bar"' _ => 12' (_' __) => 11));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddOrUpdateTest,The following statement contains a magic number: Assert.AreEqual(12' map.AddOrUpdate("baz"' _ => 12' (_' __) => 11));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddOrUpdateTest,The following statement contains a magic number: Assert.AreEqual(12' map.AddOrUpdate("baz"' _ => 12' (_' __) => 11));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddOrUpdateTest,The following statement contains a magic number: Assert.AreEqual(12' map.AddOrUpdate("baz"' _ => 12' (_' __) => 11));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddParallelWithoutDuplicateTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var map = Setup();                      var index = 0;                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var own = Interlocked.Increment(ref index);                                while (!map.TryAdd("monkey" + own' own))                              {                                  // Empty                              }                          }' 4                      );                        Assert.AreEqual(7' map.Count);                        Assert.IsTrue(map.TryGetValue("monkey1"' out var value)' "#1");                      Assert.AreEqual(1' value' "#1b");                        Assert.IsTrue(map.TryGetValue("monkey2"' out value)' "#2");                      Assert.AreEqual(2' value' "#2b");                        Assert.IsTrue(map.TryGetValue("monkey3"' out value)' "#3");                      Assert.AreEqual(3' value' "#3b");                        Assert.IsTrue(map.TryGetValue("monkey4"' out value)' "#4");                      Assert.AreEqual(4' value' "#4b");                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddParallelWithoutDuplicateTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var map = Setup();                      var index = 0;                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var own = Interlocked.Increment(ref index);                                while (!map.TryAdd("monkey" + own' own))                              {                                  // Empty                              }                          }' 4                      );                        Assert.AreEqual(7' map.Count);                        Assert.IsTrue(map.TryGetValue("monkey1"' out var value)' "#1");                      Assert.AreEqual(1' value' "#1b");                        Assert.IsTrue(map.TryGetValue("monkey2"' out value)' "#2");                      Assert.AreEqual(2' value' "#2b");                        Assert.IsTrue(map.TryGetValue("monkey3"' out value)' "#3");                      Assert.AreEqual(3' value' "#3b");                        Assert.IsTrue(map.TryGetValue("monkey4"' out value)' "#4");                      Assert.AreEqual(4' value' "#4b");                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddParallelWithoutDuplicateTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var map = Setup();                      var index = 0;                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var own = Interlocked.Increment(ref index);                                while (!map.TryAdd("monkey" + own' own))                              {                                  // Empty                              }                          }' 4                      );                        Assert.AreEqual(7' map.Count);                        Assert.IsTrue(map.TryGetValue("monkey1"' out var value)' "#1");                      Assert.AreEqual(1' value' "#1b");                        Assert.IsTrue(map.TryGetValue("monkey2"' out value)' "#2");                      Assert.AreEqual(2' value' "#2b");                        Assert.IsTrue(map.TryGetValue("monkey3"' out value)' "#3");                      Assert.AreEqual(3' value' "#3b");                        Assert.IsTrue(map.TryGetValue("monkey4"' out value)' "#4");                      Assert.AreEqual(4' value' "#4b");                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddParallelWithoutDuplicateTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var map = Setup();                      var index = 0;                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var own = Interlocked.Increment(ref index);                                while (!map.TryAdd("monkey" + own' own))                              {                                  // Empty                              }                          }' 4                      );                        Assert.AreEqual(7' map.Count);                        Assert.IsTrue(map.TryGetValue("monkey1"' out var value)' "#1");                      Assert.AreEqual(1' value' "#1b");                        Assert.IsTrue(map.TryGetValue("monkey2"' out value)' "#2");                      Assert.AreEqual(2' value' "#2b");                        Assert.IsTrue(map.TryGetValue("monkey3"' out value)' "#3");                      Assert.AreEqual(3' value' "#3b");                        Assert.IsTrue(map.TryGetValue("monkey4"' out value)' "#4");                      Assert.AreEqual(4' value' "#4b");                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddParallelWithoutDuplicateTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var map = Setup();                      var index = 0;                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var own = Interlocked.Increment(ref index);                                while (!map.TryAdd("monkey" + own' own))                              {                                  // Empty                              }                          }' 4                      );                        Assert.AreEqual(7' map.Count);                        Assert.IsTrue(map.TryGetValue("monkey1"' out var value)' "#1");                      Assert.AreEqual(1' value' "#1b");                        Assert.IsTrue(map.TryGetValue("monkey2"' out value)' "#2");                      Assert.AreEqual(2' value' "#2b");                        Assert.IsTrue(map.TryGetValue("monkey3"' out value)' "#3");                      Assert.AreEqual(3' value' "#3b");                        Assert.IsTrue(map.TryGetValue("monkey4"' out value)' "#4");                      Assert.AreEqual(4' value' "#4b");                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddWithDuplicate,The following statement contains a magic number: Assert.IsFalse(map.TryAdd("foo"' 6));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddWithoutDuplicateTest,The following statement contains a magic number: map.TryAdd("baz"' 2);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddWithoutDuplicateTest,The following statement contains a magic number: Assert.AreEqual(2' val);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddWithoutDuplicateTest,The following statement contains a magic number: Assert.AreEqual(2' map["baz"]);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,AddWithoutDuplicateTest,The following statement contains a magic number: Assert.AreEqual(4' map.Count);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,DictionaryNullOnNonExistingKey,The following statement contains a magic number: var val = ((IDictionary)new ConcurrentDictionary<long' string>())[1234L];
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,GetOrAddTest,The following statement contains a magic number: Assert.AreEqual(1' map.GetOrAdd("foo"' _ => 12));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,GetOrAddTest,The following statement contains a magic number: Assert.AreEqual(13' map.GetOrAdd("baz"' _ => 13));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,GetOrAddTest,The following statement contains a magic number: Assert.AreEqual(13' map.GetOrAdd("baz"' _ => 13));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,GetValueTest,The following statement contains a magic number: Assert.AreEqual(2' map["bar"]' "#2");
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,GetValueTest,The following statement contains a magic number: Assert.AreEqual(3' map.Count' "#3");
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,InitWithEnumerableTest,The following statement contains a magic number: int[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,InitWithEnumerableTest,The following statement contains a magic number: int[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,InitWithEnumerableTest,The following statement contains a magic number: int[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,InitWithEnumerableTest,The following statement contains a magic number: int[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,InitWithEnumerableTest,The following statement contains a magic number: int[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,InitWithEnumerableTest,The following statement contains a magic number: int[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,InitWithEnumerableTest,The following statement contains a magic number: int[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,InitWithEnumerableTest,The following statement contains a magic number: int[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,InitWithEnumerableTest,The following statement contains a magic number: int[] data = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,IterateTest,The following statement contains a magic number: var occurence = new int[3];
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,IterateTest,The following statement contains a magic number: Assert.That(++occurence[index]' Is.LessThan(2)' "#c");
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,ModificationTest,The following statement contains a magic number: map["foo"] = 9;
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,ModificationTest,The following statement contains a magic number: Assert.AreEqual(9' map["foo"]' "#1");
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,ModificationTest,The following statement contains a magic number: Assert.AreEqual(9' val' "#4");
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,QueryWithSameHashCodeTest,The following statement contains a magic number: var ids = new[]              {                  34359738370'                  34359738371'                  34359738372'                  34359738373'                  34359738374'                  34359738375'                  34359738376'                  34359738377'                  34359738420              };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,QueryWithSameHashCodeTest,The following statement contains a magic number: var ids = new[]              {                  34359738370'                  34359738371'                  34359738372'                  34359738373'                  34359738374'                  34359738375'                  34359738376'                  34359738377'                  34359738420              };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,QueryWithSameHashCodeTest,The following statement contains a magic number: var ids = new[]              {                  34359738370'                  34359738371'                  34359738372'                  34359738373'                  34359738374'                  34359738375'                  34359738376'                  34359738377'                  34359738420              };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,QueryWithSameHashCodeTest,The following statement contains a magic number: var ids = new[]              {                  34359738370'                  34359738371'                  34359738372'                  34359738373'                  34359738374'                  34359738375'                  34359738376'                  34359738377'                  34359738420              };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,QueryWithSameHashCodeTest,The following statement contains a magic number: var ids = new[]              {                  34359738370'                  34359738371'                  34359738372'                  34359738373'                  34359738374'                  34359738375'                  34359738376'                  34359738377'                  34359738420              };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,QueryWithSameHashCodeTest,The following statement contains a magic number: var ids = new[]              {                  34359738370'                  34359738371'                  34359738372'                  34359738373'                  34359738374'                  34359738375'                  34359738376'                  34359738377'                  34359738420              };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,QueryWithSameHashCodeTest,The following statement contains a magic number: var ids = new[]              {                  34359738370'                  34359738371'                  34359738372'                  34359738373'                  34359738374'                  34359738375'                  34359738376'                  34359738377'                  34359738420              };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,QueryWithSameHashCodeTest,The following statement contains a magic number: var ids = new[]              {                  34359738370'                  34359738371'                  34359738372'                  34359738373'                  34359738374'                  34359738375'                  34359738376'                  34359738377'                  34359738420              };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,QueryWithSameHashCodeTest,The following statement contains a magic number: var ids = new[]              {                  34359738370'                  34359738371'                  34359738372'                  34359738373'                  34359738374'                  34359738375'                  34359738376'                  34359738377'                  34359738420              };
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,QueryWithSameHashCodeTest,The following statement contains a magic number: dict[-i] = -i * 1000;
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,QueryWithSameHashCodeTest,The following statement contains a magic number: i < 20
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,RemoveParallelTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var map = Setup();                      var index = 0;                      var r1 = false;                      var r2 = false;                      var r3 = false;                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var own = Interlocked.Increment(ref index);                              switch (own)                              {                                  case 1:                                      r1 = map.TryRemove("foo"' out _);                                      break;                                    case 2:                                      r2 = map.TryRemove("bar"' out _);                                      break;                                    case 3:                                      r3 = map.TryRemove("foobar"' out _);                                      break;                                    default:                                      break;                              }                          }'                          3                      );                        Assert.AreEqual(0' map.Count);                        Assert.IsTrue(r1' "1");                      Assert.IsTrue(r2' "2");                      Assert.IsTrue(r3' "3");                        Assert.IsFalse(map.TryGetValue("foo"' out var value)' "#1b " + value);                      Assert.IsFalse(map.TryGetValue("bar"' out value)' "#2b");                      Assert.IsFalse(map.TryGetValue("foobar"' out value)' "#3b");                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,RemoveParallelTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var map = Setup();                      var index = 0;                      var r1 = false;                      var r2 = false;                      var r3 = false;                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var own = Interlocked.Increment(ref index);                              switch (own)                              {                                  case 1:                                      r1 = map.TryRemove("foo"' out _);                                      break;                                    case 2:                                      r2 = map.TryRemove("bar"' out _);                                      break;                                    case 3:                                      r3 = map.TryRemove("foobar"' out _);                                      break;                                    default:                                      break;                              }                          }'                          3                      );                        Assert.AreEqual(0' map.Count);                        Assert.IsTrue(r1' "1");                      Assert.IsTrue(r2' "2");                      Assert.IsTrue(r3' "3");                        Assert.IsFalse(map.TryGetValue("foo"' out var value)' "#1b " + value);                      Assert.IsFalse(map.TryGetValue("bar"' out value)' "#2b");                      Assert.IsFalse(map.TryGetValue("foobar"' out value)' "#3b");                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,RemoveParallelTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var map = Setup();                      var index = 0;                      var r1 = false;                      var r2 = false;                      var r3 = false;                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var own = Interlocked.Increment(ref index);                              switch (own)                              {                                  case 1:                                      r1 = map.TryRemove("foo"' out _);                                      break;                                    case 2:                                      r2 = map.TryRemove("bar"' out _);                                      break;                                    case 3:                                      r3 = map.TryRemove("foobar"' out _);                                      break;                                    default:                                      break;                              }                          }'                          3                      );                        Assert.AreEqual(0' map.Count);                        Assert.IsTrue(r1' "1");                      Assert.IsTrue(r2' "2");                      Assert.IsTrue(r3' "3");                        Assert.IsFalse(map.TryGetValue("foo"' out var value)' "#1b " + value);                      Assert.IsFalse(map.TryGetValue("bar"' out value)' "#2b");                      Assert.IsFalse(map.TryGetValue("foobar"' out value)' "#3b");                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,SameHashCodeInsertTest,The following statement contains a magic number: var class2 = new DumbClass(2);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,TryUpdateTest,The following statement contains a magic number: Assert.IsFalse(map.TryUpdate("foo"' 12' 11));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,TryUpdateTest,The following statement contains a magic number: Assert.IsFalse(map.TryUpdate("foo"' 12' 11));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,TryUpdateTest,The following statement contains a magic number: Assert.IsTrue(map.TryUpdate("foo"' 11' 1));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,TryUpdateTest,The following statement contains a magic number: Assert.AreEqual(11' map["foo"]);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,DumbClass,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTests.cs,GetHashCode,The following statement contains a magic number: return 5;
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,NullOnNonExistingKey,The following statement contains a magic number: Assert.Throws<KeyNotFoundException>(() => GC.KeepAlive(new ConcurrentDictionary<long' string>()[1234L]));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,SimpleTest,The following statement contains a magic number: map.TryAdd("bar"' 2);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,SimpleTest,The following statement contains a magic number: Assert.AreEqual(2' map.Count);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,SimpleTest,The following statement contains a magic number: map["foobar"] = 3;
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,SimpleTest,The following statement contains a magic number: Assert.AreEqual(3' map.Count);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,UnexpectedContains,The following statement contains a magic number: Assert.IsFalse(((IDictionary)dict).Contains(8));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,EditWhileIterating,The following statement contains a magic number: var expectedCount = 2;
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,EditWhileIterating,The following statement contains a magic number: var found = new CircularBucket<string>(16);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,EditWhileIterating,The following statement contains a magic number: Assert.AreEqual(2' expectedCount);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,EditWhileIterating,The following statement contains a magic number: Assert.IsTrue(foundCount - expectedCount < 2' "foundCount: {0}' expectedCount:{1}"' foundCount' expectedCount);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,EditWhileIteratingThreaded,The following statement contains a magic number: int[] expectedCount = {2};
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,EditWhileIteratingThreaded,The following statement contains a magic number: var found = new CircularBucket<string>(16);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,EditWhileIteratingThreaded,The following statement contains a magic number: Assert.AreEqual(2' expectedCount[0]);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentDictionaryTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentDictionaryTestsEx.cs,EditWhileIteratingThreaded,The following statement contains a magic number: Assert.IsTrue(foundCount - expectedCount[0] < 2' "foundCount: {0}' expectedCount:{1}"' foundCount' expectedCount[0]);
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentQueueTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentQueueTests.cs,Setup,The following statement contains a magic number: i < 10
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentQueueTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentQueueTests.cs,CountTestCase,The following statement contains a magic number: Assert.AreEqual(10' queue.Count' "#1");
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentQueueTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentQueueTests.cs,CountTestCase,The following statement contains a magic number: Assert.AreEqual(8' queue.Count' "#2");
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentQueueTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentQueueTests.cs,StressTryPeekTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  delegate                  {                      var queue = new ConcurrentQueue<object>();                      queue.Enqueue(new object());                        const int Threads = 10;                      var threadCounter = 0;                      var success = true;                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var threadId = Interlocked.Increment(ref threadCounter);                              object temp;                              if (threadId < Threads)                              {                                  while (queue.TryPeek(out temp))                                  {                                      success &= temp != null;                                  }                              }                              else                              {                                  queue.TryDequeue(out temp);                              }                          }' Threads                      );                        Assert.IsTrue(success' "TryPeek returned unexpected null value.");                  }' 10              );
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentQueueTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentQueueTests.cs,StressTryPeekTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  delegate                  {                      var queue = new ConcurrentQueue<object>();                      queue.Enqueue(new object());                        const int Threads = 10;                      var threadCounter = 0;                      var success = true;                        ParallelTestHelper.ParallelStressTest                      (                          () =>                          {                              var threadId = Interlocked.Increment(ref threadCounter);                              object temp;                              if (threadId < Threads)                              {                                  while (queue.TryPeek(out temp))                                  {                                      success &= temp != null;                                  }                              }                              else                              {                                  queue.TryDequeue(out temp);                              }                          }' Threads                      );                        Assert.IsTrue(success' "TryPeek returned unexpected null value.");                  }' 10              );
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentQueueTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentQueueTests.cs,ToExistingArray_IndexOverflow,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => queue.CopyTo(new int[3]' 4));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentQueueTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentQueueTests.cs,ToExistingArray_IndexOverflow,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => queue.CopyTo(new int[3]' 4));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentQueueTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentQueueTests.cs,ToExistingArray_OutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => queue.CopyTo(new int[3]' -1));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentQueueTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentQueueTests.cs,ToExistingArray_Overflow,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => queue.CopyTo(new int[3]' 0));
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentQueueTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentQueueTests.cs,TryPeekTestCase,The following statement contains a magic number: Assert.AreEqual(2' value' $"#4 : {value}");
Magic Number,Tests.SystemTests.CollectionsTests.ConcurrentTests,ConcurrentQueueTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ConcurrentTests\ConcurrentQueueTests.cs,TryPeekTestCase,The following statement contains a magic number: Assert.AreEqual(2' value' $"#5 : {value}");
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestAdd,The following statement contains a magic number: Assert.IsTrue(set.Add(2));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestAdd,The following statement contains a magic number: Assert.IsTrue(set.Add(3));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestAdd,The following statement contains a magic number: Assert.IsTrue(set.Add(4));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestAdd,The following statement contains a magic number: Assert.IsFalse(set.Add(4));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestAdd,The following statement contains a magic number: Assert.IsFalse(set.Add(3));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestAdd,The following statement contains a magic number: Assert.IsFalse(set.Add(2));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemove,The following statement contains a magic number: Assert.IsTrue(set.Add(2));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemove,The following statement contains a magic number: Assert.IsTrue(set.Add(3));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemove,The following statement contains a magic number: Assert.IsTrue(set.Add(4));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemove,The following statement contains a magic number: Assert.IsTrue(set.Remove(2));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemove,The following statement contains a magic number: Assert.IsTrue(set.Remove(3));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemove,The following statement contains a magic number: AssertContainsOnly(new[] { 1' 4 }' set);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestMassiveAdd,The following statement contains a magic number: var massive = Enumerable.Range(0' 10000).ToArray();
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestMassiveRemove,The following statement contains a magic number: var massive = Enumerable.Range(0' 10000).ToArray();
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestCopyTo,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestCopyTo,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestCopyTo,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestCopyTo,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestClear,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestClear,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestClear,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestClear,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestClear,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestContains,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestContains,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestContains,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestContains,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestContains,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestModifySetWhileForeach,The following statement contains a magic number: Assert.Throws<InvalidOperationException>              (                  () =>                  {                      var set = new HashSet<int>(new[] {1' 2' 3' 4});                      foreach (var item in set)                      {                          set.Add(item + 2);                      }                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestModifySetWhileForeach,The following statement contains a magic number: Assert.Throws<InvalidOperationException>              (                  () =>                  {                      var set = new HashSet<int>(new[] {1' 2' 3' 4});                      foreach (var item in set)                      {                          set.Add(item + 2);                      }                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestModifySetWhileForeach,The following statement contains a magic number: Assert.Throws<InvalidOperationException>              (                  () =>                  {                      var set = new HashSet<int>(new[] {1' 2' 3' 4});                      foreach (var item in set)                      {                          set.Add(item + 2);                      }                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestModifySetWhileForeach,The following statement contains a magic number: Assert.Throws<InvalidOperationException>              (                  () =>                  {                      var set = new HashSet<int>(new[] {1' 2' 3' 4});                      foreach (var item in set)                      {                          set.Add(item + 2);                      }                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var result = new[] { 2' 4' 6' 8 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var result = new[] { 2' 4' 6' 8 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var result = new[] { 2' 4' 6' 8 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var result = new[] { 2' 4' 6' 8 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestRemoveWhere,The following statement contains a magic number: var removed = set.RemoveWhere(i => (i % 2) != 0);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestOverlaps,The following statement contains a magic number: var set = new HashSet<int>(new[] { 1' 2' 3' 4' 5 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestOverlaps,The following statement contains a magic number: var set = new HashSet<int>(new[] { 1' 2' 3' 4' 5 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestOverlaps,The following statement contains a magic number: var set = new HashSet<int>(new[] { 1' 2' 3' 4' 5 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestOverlaps,The following statement contains a magic number: var set = new HashSet<int>(new[] { 1' 2' 3' 4' 5 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestOverlaps,The following statement contains a magic number: Assert.IsTrue(set.Overlaps(new[] { 0' 2 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestIntersectWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestIntersectWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestIntersectWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestIntersectWith,The following statement contains a magic number: var other = new[] { 2' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestIntersectWith,The following statement contains a magic number: var other = new[] { 2' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestIntersectWith,The following statement contains a magic number: var other = new[] { 2' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestIntersectWith,The following statement contains a magic number: var other = new[] { 2' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestIntersectWith,The following statement contains a magic number: var result = new[] { 2' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestIntersectWith,The following statement contains a magic number: var result = new[] { 2' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestExceptWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestExceptWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestExceptWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestExceptWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestExceptWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestExceptWith,The following statement contains a magic number: var other = new[] { 2' 4' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestExceptWith,The following statement contains a magic number: var other = new[] { 2' 4' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestExceptWith,The following statement contains a magic number: var other = new[] { 2' 4' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestExceptWith,The following statement contains a magic number: var result = new[] { 1' 3' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestExceptWith,The following statement contains a magic number: var result = new[] { 1' 3' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestUnionWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var other = new[] { 4' 5' 6' 7' 8' 9' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSymmetricExceptWith,The following statement contains a magic number: var result = new[] { 1' 2' 3' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestEmptyHashSubsetOf,The following statement contains a magic number: Assert.IsTrue(set.IsSubsetOf(new[] { 1' 2 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSubsetOf,The following statement contains a magic number: var data = new[] { 1' 2' 3 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSubsetOf,The following statement contains a magic number: var data = new[] { 1' 2' 3 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSubsetOf,The following statement contains a magic number: var other = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSubsetOf,The following statement contains a magic number: var other = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSubsetOf,The following statement contains a magic number: var other = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSubsetOf,The following statement contains a magic number: var other = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSubsetOf,The following statement contains a magic number: var other2 = new[] { 1' 2' 3 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSubsetOf,The following statement contains a magic number: var other2 = new[] { 1' 2' 3 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSubsetOf,The following statement contains a magic number: var other3 = new[] { 0' 1' 2 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSubsetOf,The following statement contains a magic number: var data = new[] { 1' 2' 3 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSubsetOf,The following statement contains a magic number: var data = new[] { 1' 2' 3 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSubsetOf,The following statement contains a magic number: var other = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSubsetOf,The following statement contains a magic number: var other = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSubsetOf,The following statement contains a magic number: var other = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSubsetOf,The following statement contains a magic number: var other = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSubsetOf,The following statement contains a magic number: var other2 = new[] { 1' 2' 3 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSubsetOf,The following statement contains a magic number: var other2 = new[] { 1' 2' 3 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSubsetOf,The following statement contains a magic number: var other3 = new[] { 0' 1' 2 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var other = new[] { 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var other = new[] { 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var other = new[] { 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var other2 = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var other2 = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var other2 = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var other2 = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var other3 = new[] { 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var other3 = new[] { 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSupersetOf,The following statement contains a magic number: var other3 = new[] { 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var other = new[] { 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var other = new[] { 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var other = new[] { 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var other2 = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var other2 = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var other2 = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var other2 = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var other3 = new[] { 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var other3 = new[] { 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestProperSupersetOf,The following statement contains a magic number: var other3 = new[] { 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var other = new[] { 1' 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var other = new[] { 1' 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var other = new[] { 1' 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var other2 = new[] { 1' 2' 2' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var other2 = new[] { 1' 2' 2' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var other2 = new[] { 1' 2' 2' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var other3 = new[] { 1' 2 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var other4 = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var other4 = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var other4 = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestSetEquals,The following statement contains a magic number: var other4 = new[] { 1' 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestCopyToFull,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestCopyToFull,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestCopyToFull,The following statement contains a magic number: var data = new[] { 1' 2' 3' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestCopyToPrecise,The following statement contains a magic number: var set = new HashSet<int>              {                  42              };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestCopyToPrecise,The following statement contains a magic number: var dest = new int[12];
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestCopyToPrecise,The following statement contains a magic number: set.CopyTo(dest' 6' 1);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestCopyToPrecise,The following statement contains a magic number: Assert.AreEqual(42' dest[6]);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestCopyToPrecise,The following statement contains a magic number: Assert.AreEqual(42' dest[6]);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestICollection,The following statement contains a magic number: set.Add(42);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestICollection,The following statement contains a magic number: set.Add(42);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestNullsWithComparerThrowingException,The following statement contains a magic number: Assert.AreEqual(2' set.Count' "#3");
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestNullsWithComparerThrowingException,The following statement contains a magic number: Assert.AreEqual(5' set.Count' "#13");
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TestNullsWithComparerThrowingException,The following statement contains a magic number: Assert.AreEqual(3' set.Count' "#17");
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TrimWithoutChange,The following statement contains a magic number: i < 10000
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TrimWithoutChange,The following statement contains a magic number: lookup.Remove(3.ToString());
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTest.cs,TrimWithoutChange,The following statement contains a magic number: i < 1000
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTestEx.cs,NotSafeEnumerator,The following statement contains a magic number: var x = new HashSet<int> { 14 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,HashSetTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\HashSetTestEx.cs,NotSafeEnumerator,The following statement contains a magic number: Assert.Throws              (                  typeof(InvalidOperationException)'                  () =>                  {                      foreach (var item in x)                      {                          x.Add(item * 3);                      }                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Add,The following statement contains a magic number: Assert.IsTrue(set.Add(2));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Add,The following statement contains a magic number: Assert.IsTrue(set.Add(4));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Add,The following statement contains a magic number: Assert.IsTrue(set.Add(3));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Add,The following statement contains a magic number: Assert.AreEqual(3' set.Count);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Add,The following statement contains a magic number: Assert.IsFalse(set.Add(2));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Clear,The following statement contains a magic number: var set = new SortedSet<int> { 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Clear,The following statement contains a magic number: var set = new SortedSet<int> { 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Clear,The following statement contains a magic number: var set = new SortedSet<int> { 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Clear,The following statement contains a magic number: var set = new SortedSet<int> { 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Clear,The following statement contains a magic number: Assert.AreEqual(4' set.Count);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Contains,The following statement contains a magic number: var set = new SortedSet<int> { 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Contains,The following statement contains a magic number: var set = new SortedSet<int> { 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Contains,The following statement contains a magic number: var set = new SortedSet<int> { 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Contains,The following statement contains a magic number: var set = new SortedSet<int> { 2' 3' 4' 5 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Contains,The following statement contains a magic number: Assert.IsTrue(set.Contains(4));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Contains,The following statement contains a magic number: Assert.IsFalse(set.Contains(7));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: EmptySubView(new SortedSet<int> { 1' 3' 5' 7' 9 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: EmptySubView(new SortedSet<int> { 1' 3' 5' 7' 9 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: EmptySubView(new SortedSet<int> { 1' 3' 5' 7' 9 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: EmptySubView(new SortedSet<int> { 1' 3' 5' 7' 9 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: EmptySubView(new SortedSet<int> { -40' 40 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: EmptySubView(new SortedSet<int> { -40' 40 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: EmptySubView(new SortedSet<int> { -40' -10' 10' 40 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: EmptySubView(new SortedSet<int> { -40' -10' 10' 40 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: EmptySubView(new SortedSet<int> { -40' -10' 10' 40 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: EmptySubView(new SortedSet<int> { -40' -10' 10' 40 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: set.ExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: set.ExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: set.ExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: set.ExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: set.ExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: set.ExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: set.ExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: set.ExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ExceptWithItself,The following statement contains a magic number: var set = new SortedSet<int>(new[] { 1' 5 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetEnumerator,The following statement contains a magic number: var set = new SortedSet<int> { 5' 3' 1' 2' 6' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetEnumerator,The following statement contains a magic number: var set = new SortedSet<int> { 5' 3' 1' 2' 6' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetEnumerator,The following statement contains a magic number: var set = new SortedSet<int> { 5' 3' 1' 2' 6' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetEnumerator,The following statement contains a magic number: var set = new SortedSet<int> { 5' 3' 1' 2' 6' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetEnumerator,The following statement contains a magic number: var set = new SortedSet<int> { 5' 3' 1' 2' 6' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetEnumerator,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 3' 4' 5' 6 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetEnumerator,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 3' 4' 5' 6 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetEnumerator,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 3' 4' 5' 6 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetEnumerator,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 3' 4' 5' 6 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetEnumerator,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 3' 4' 5' 6 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetView,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetView,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetView,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetView,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetView,The following statement contains a magic number: var view = set.GetViewBetween(3' 7);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetView,The following statement contains a magic number: var view = set.GetViewBetween(3' 7);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetView,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 3' 5' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetView,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 3' 5' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetView,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 3' 5' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetViewBetweenLowerBiggerThanUpper,The following statement contains a magic number: Assert.Throws<ArgumentException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 2' 3' 4' 5' 6 };                      set.GetViewBetween(4' 2);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetViewBetweenLowerBiggerThanUpper,The following statement contains a magic number: Assert.Throws<ArgumentException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 2' 3' 4' 5' 6 };                      set.GetViewBetween(4' 2);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetViewBetweenLowerBiggerThanUpper,The following statement contains a magic number: Assert.Throws<ArgumentException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 2' 3' 4' 5' 6 };                      set.GetViewBetween(4' 2);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetViewBetweenLowerBiggerThanUpper,The following statement contains a magic number: Assert.Throws<ArgumentException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 2' 3' 4' 5' 6 };                      set.GetViewBetween(4' 2);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetViewBetweenLowerBiggerThanUpper,The following statement contains a magic number: Assert.Throws<ArgumentException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 2' 3' 4' 5' 6 };                      set.GetViewBetween(4' 2);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetViewBetweenLowerBiggerThanUpper,The following statement contains a magic number: Assert.Throws<ArgumentException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 2' 3' 4' 5' 6 };                      set.GetViewBetween(4' 2);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,GetViewBetweenLowerBiggerThanUpper,The following statement contains a magic number: Assert.Throws<ArgumentException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 2' 3' 4' 5' 6 };                      set.GetViewBetween(4' 2);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: set.IntersectWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: set.IntersectWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: set.IntersectWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: set.IntersectWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: set.IntersectWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: set.IntersectWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: set.IntersectWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: set.IntersectWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 3' 5' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 3' 5' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,IntersectWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 3' 5' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Max,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 12' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Max,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 12' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Max,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 12' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Max,The following statement contains a magic number: Assert.AreEqual(12' set.Max);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Min,The following statement contains a magic number: var set = new SortedSet<int> { 2' 3' 1' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Min,The following statement contains a magic number: var set = new SortedSet<int> { 2' 3' 1' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Min,The following statement contains a magic number: var set = new SortedSet<int> { 2' 3' 1' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Remove,The following statement contains a magic number: Assert.IsTrue(set.Add(2));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Remove,The following statement contains a magic number: Assert.IsTrue(set.Add(4));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Remove,The following statement contains a magic number: Assert.AreEqual(2' set.Count);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Remove,The following statement contains a magic number: Assert.IsTrue(set.Remove(4));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Remove,The following statement contains a magic number: Assert.IsTrue(set.Remove(2));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Remove,The following statement contains a magic number: Assert.IsFalse(set.Remove(4));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Remove,The following statement contains a magic number: Assert.IsFalse(set.Remove(2));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,RemoveWhere,The following statement contains a magic number: var set = new SortedSet<int> { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,RemoveWhere,The following statement contains a magic number: var set = new SortedSet<int> { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,RemoveWhere,The following statement contains a magic number: var set = new SortedSet<int> { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,RemoveWhere,The following statement contains a magic number: var set = new SortedSet<int> { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,RemoveWhere,The following statement contains a magic number: var set = new SortedSet<int> { 1' 2' 3' 4' 5' 6 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,RemoveWhere,The following statement contains a magic number: Assert.AreEqual(3' set.RemoveWhere(i => i % 2 == 0));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,RemoveWhere,The following statement contains a magic number: Assert.AreEqual(3' set.RemoveWhere(i => i % 2 == 0));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,RemoveWhere,The following statement contains a magic number: Assert.AreEqual(3' set.Count);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,RemoveWhere,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 5 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,RemoveWhere,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 5 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Reverse,The following statement contains a magic number: var set = new SortedSet<int> { 5' 3' 1' 2' 6' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Reverse,The following statement contains a magic number: var set = new SortedSet<int> { 5' 3' 1' 2' 6' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Reverse,The following statement contains a magic number: var set = new SortedSet<int> { 5' 3' 1' 2' 6' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Reverse,The following statement contains a magic number: var set = new SortedSet<int> { 5' 3' 1' 2' 6' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Reverse,The following statement contains a magic number: var set = new SortedSet<int> { 5' 3' 1' 2' 6' 4 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Reverse,The following statement contains a magic number: Assert.IsTrue(reversed.SequenceEqual(new[] { 6' 5' 4' 3' 2' 1 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Reverse,The following statement contains a magic number: Assert.IsTrue(reversed.SequenceEqual(new[] { 6' 5' 4' 3' 2' 1 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Reverse,The following statement contains a magic number: Assert.IsTrue(reversed.SequenceEqual(new[] { 6' 5' 4' 3' 2' 1 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Reverse,The following statement contains a magic number: Assert.IsTrue(reversed.SequenceEqual(new[] { 6' 5' 4' 3' 2' 1 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,Reverse,The following statement contains a magic number: Assert.IsTrue(reversed.SequenceEqual(new[] { 6' 5' 4' 3' 2' 1 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: set.SymmetricExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: set.SymmetricExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: set.SymmetricExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: set.SymmetricExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: set.SymmetricExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: set.SymmetricExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: set.SymmetricExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: set.SymmetricExceptWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 9' 11 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 9' 11 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 9' 11 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,SymmetricExceptWithItself,The following statement contains a magic number: var set = new SortedSet<int>(new[] { 1' 5 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var two = new SortedSet<int> { 2 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var trio = new SortedSet<int> { 0' 1' 2 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var odds = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var odds = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var odds = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var odds = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var evens = new SortedSet<int> { 2' 4' 6' 8 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var evens = new SortedSet<int> { 2' 4' 6' 8 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var evens = new SortedSet<int> { 2' 4' 6' 8 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var evens = new SortedSet<int> { 2' 4' 6' 8 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var squares = new SortedSet<int> { 0' 1' 4' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetCompares,The following statement contains a magic number: var squares = new SortedSet<int> { 0' 1' 4' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var trio = new SortedSet<int> { 0' 1' 2 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var odds = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var odds = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var odds = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var odds = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var evens = new SortedSet<int> { 2' 4' 6' 8 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var evens = new SortedSet<int> { 2' 4' 6' 8 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var evens = new SortedSet<int> { 2' 4' 6' 8 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var evens = new SortedSet<int> { 2' 4' 6' 8 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var squares = new SortedSet<int> { 0' 1' 4' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var squares = new SortedSet<int> { 0' 1' 4' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var nonPrimeOddDigit = odds.GetViewBetween(8' 42);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var nonPrimeOddDigit = odds.GetViewBetween(8' 42);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var nonTrio = digits.GetViewBetween(3' 42);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: var nonTrio = digits.GetViewBetween(3' 42);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: DoTestE(nonPrimeOddDigit' new[] { 9 }' true' true' false' false);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: DoTestE(nonTrio' new[] { 3' 4' 5' 6' 7' 8' 9 }' true' true' false' false);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: DoTestE(nonTrio' new[] { 3' 4' 5' 6' 7' 8' 9 }' true' true' false' false);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: DoTestE(nonTrio' new[] { 3' 4' 5' 6' 7' 8' 9 }' true' true' false' false);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: DoTestE(nonTrio' new[] { 3' 4' 5' 6' 7' 8' 9 }' true' true' false' false);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: DoTestE(nonTrio' new[] { 3' 4' 5' 6' 7' 8' 9 }' true' true' false' false);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: DoTestE(nonTrio' new[] { 3' 4' 5' 6' 7' 8' 9 }' true' true' false' false);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: DoTestE(nonTrio' new[] { 3' 4' 5' 6' 7' 8' 9 }' true' true' false' false);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesB,The following statement contains a magic number: DoTest(digits.GetViewBetween(0' 2)' trio' false' true' false' false);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: set.UnionWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: set.UnionWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: set.UnionWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: set.UnionWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: set.UnionWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: set.UnionWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: set.UnionWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: set.UnionWith(new[] { 5' 7' 3' 7' 11' 7' 5' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 3' 5' 7' 9' 11 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 3' 5' 7' 9' 11 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 3' 5' 7' 9' 11 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 3' 5' 7' 9' 11 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 3' 5' 7' 9' 11 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,UnionWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 2' 3' 5' 7' 9' 11 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAdd,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAdd,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAdd,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAdd,The following statement contains a magic number: var view = set.GetViewBetween(3' 5);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAdd,The following statement contains a magic number: var view = set.GetViewBetween(3' 5);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAdd,The following statement contains a magic number: Assert.IsTrue(view.Add(4));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAdd,The following statement contains a magic number: Assert.IsTrue(view.Contains(4));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAdd,The following statement contains a magic number: Assert.IsTrue(set.Contains(4));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAdd,The following statement contains a magic number: Assert.IsFalse(view.Add(5));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAddOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7 };                      var view = set.GetViewBetween(3' 5);                        view.Add(7);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAddOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7 };                      var view = set.GetViewBetween(3' 5);                        view.Add(7);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAddOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7 };                      var view = set.GetViewBetween(3' 5);                        view.Add(7);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAddOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7 };                      var view = set.GetViewBetween(3' 5);                        view.Add(7);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAddOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7 };                      var view = set.GetViewBetween(3' 5);                        view.Add(7);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewAddOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7 };                      var view = set.GetViewBetween(3' 5);                        view.Add(7);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewClear,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewClear,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewClear,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewClear,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewClear,The following statement contains a magic number: var view = set.GetViewBetween(3' 7);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewClear,The following statement contains a magic number: var view = set.GetViewBetween(3' 7);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewClear,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewContains,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewContains,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewContains,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewContains,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewContains,The following statement contains a magic number: var view = set.GetViewBetween(3' 7);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewContains,The following statement contains a magic number: var view = set.GetViewBetween(3' 7);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewContains,The following statement contains a magic number: Assert.IsFalse(view.Contains(4));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewContains,The following statement contains a magic number: Assert.IsTrue(view.Contains(3));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewContains,The following statement contains a magic number: Assert.IsTrue(view.Contains(5));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: Assert.AreEqual(5' view.Count);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: set.Remove(5);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: Assert.AreEqual(4' view.Count);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: set.Add(10);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: Assert.AreEqual(4' view.Count);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: set.Add(6);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: Assert.AreEqual(4' view.Count);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: set.Add(5);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewCount,The following statement contains a magic number: Assert.AreEqual(5' view.Count);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 5' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 5' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: view.ExceptWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: view.ExceptWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: view.ExceptWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: view.ExceptWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: view.ExceptWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: view.ExceptWith(new[] { 1' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetView,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetView,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetView,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetView,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetView,The following statement contains a magic number: var view = set.GetViewBetween(3' 7);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetView,The following statement contains a magic number: var view = set.GetViewBetween(3' 7);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetView,The following statement contains a magic number: view = view.GetViewBetween(4' 6);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetView,The following statement contains a magic number: view = view.GetViewBetween(4' 6);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetView,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 5 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewLowerOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(2' 5);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewLowerOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(2' 5);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewLowerOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(2' 5);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewLowerOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(2' 5);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewLowerOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(2' 5);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewLowerOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(2' 5);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewLowerOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(2' 5);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewLowerOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(2' 5);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewUpperOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(5' 9);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewUpperOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(5' 9);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewUpperOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(5' 9);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewUpperOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(5' 9);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewUpperOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(5' 9);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewUpperOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(5' 9);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewUpperOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(5' 9);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewGetViewUpperOutOfRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(3' 7);                      view.GetViewBetween(5' 9);                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: view.IntersectWith(new[] { 1' 5' 9 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: view.IntersectWith(new[] { 1' 5' 9 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 5 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 5' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 5' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 5' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: view.IntersectWith(new[] { 1' 2 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewIntersectWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMax,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMax,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMax,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMax,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMax,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMax,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMax,The following statement contains a magic number: Assert.AreEqual(7' view.Max);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMax,The following statement contains a magic number: view = set.GetViewBetween(4' 55);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMax,The following statement contains a magic number: view = set.GetViewBetween(4' 55);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMax,The following statement contains a magic number: Assert.AreEqual(9' view.Max);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMax,The following statement contains a magic number: view = set.GetViewBetween(1' 9);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMax,The following statement contains a magic number: Assert.AreEqual(9' view.Max);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMin,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMin,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMin,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMin,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMin,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMin,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMin,The following statement contains a magic number: Assert.AreEqual(5' view.Min);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMin,The following statement contains a magic number: view = set.GetViewBetween(-2' 4);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMin,The following statement contains a magic number: view = set.GetViewBetween(-2' 4);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewMin,The following statement contains a magic number: view = set.GetViewBetween(1' 9);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewRemove,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewRemove,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewRemove,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewRemove,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewRemove,The following statement contains a magic number: var view = set.GetViewBetween(3' 7);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewRemove,The following statement contains a magic number: var view = set.GetViewBetween(3' 7);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewRemove,The following statement contains a magic number: Assert.IsTrue(view.Remove(3));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewRemove,The following statement contains a magic number: Assert.IsFalse(view.Contains(3));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewRemove,The following statement contains a magic number: Assert.IsFalse(set.Contains(3));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewRemove,The following statement contains a magic number: Assert.IsFalse(view.Remove(9));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewRemove,The following statement contains a magic number: Assert.IsTrue(set.Contains(9));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: view.SymmetricExceptWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: view.SymmetricExceptWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: view.SymmetricExceptWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: view.SymmetricExceptWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: view.SymmetricExceptWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 4' 6' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 4' 6' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 4' 6' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 4' 6' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 4' 6' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 4' 6' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 4' 6' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 4' 6' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.SymmetricExceptWith(new[] { 2 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.SymmetricExceptWith(new[] { 2 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.SymmetricExceptWith(new[] { 2 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.SymmetricExceptWith(new[] { 2 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.SymmetricExceptWith(new[] { 2 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.SymmetricExceptWith(new[] { 2 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewSymmetricExceptWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.SymmetricExceptWith(new[] { 2 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: var set = new SortedSet<int> { 1' 3' 5' 7' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: var view = set.GetViewBetween(4' 8);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: view.UnionWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: view.UnionWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: view.UnionWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: view.UnionWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: view.UnionWith(new[] { 4' 5' 6' 6' 4 });
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 4' 5' 6' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 4' 5' 6' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 4' 5' 6' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: Assert.IsTrue(view.SequenceEqual(new[] { 4' 5' 6' 7 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 4' 5' 6' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 4' 5' 6' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 4' 5' 6' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 4' 5' 6' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 4' 5' 6' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith,The following statement contains a magic number: Assert.IsTrue(set.SequenceEqual(new[] { 1' 3' 4' 5' 6' 7' 9 }));
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.UnionWith(new[] { 1 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.UnionWith(new[] { 1 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.UnionWith(new[] { 1 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.UnionWith(new[] { 1 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.UnionWith(new[] { 1 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,ViewUnionWith_oor,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>              (                  () =>                  {                      var set = new SortedSet<int> { 1' 3' 5' 7' 9 };                      var view = set.GetViewBetween(4' 8);                      view.UnionWith(new[] { 1 });                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: var view = set.GetViewBetween(-20' -15);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: var view = set.GetViewBetween(-20' -15);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: view = set.GetViewBetween(15' 20);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,EmptySubView,The following statement contains a magic number: view = set.GetViewBetween(15' 20);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesC,The following statement contains a magic number: var trio = new SortedSet<int> { 0' 1' 2 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesC,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesC,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesC,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesC,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesC,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesC,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesC,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesC,The following statement contains a magic number: var digits = new SortedSet<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesC,The following statement contains a magic number: var nonTrio = digits.GetViewBetween(3' 42);
Magic Number,Tests.SystemTests.CollectionsTests.GenericTests,SortedSetTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\GenericTests\SortedSetTest.cs,TestSetComparesC,The following statement contains a magic number: var nonTrio = digits.GetViewBetween(3' 42);
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Constructor,The following statement contains a magic number: var list = new List<int> {3};
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Constructor,The following statement contains a magic number: GC.KeepAlive              (                  new ObservableCollection<int>(list)                  {                      5                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Constructor,The following statement contains a magic number: GC.KeepAlive              (                  new ObservableCollection<int>((IEnumerable<int>)list)                  {                      5                  }              );
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Insert,The following statement contains a magic number: col.CollectionChanged += (sender' e) =>              {                  No.Op(sender);                  reached = true;                  Assert.AreEqual(NotifyCollectionChangedAction.Add' e.Action' "INS_1");                  Assert.AreEqual(0' e.NewStartingIndex' "INS_2");                  Assert.AreEqual(-1' e.OldStartingIndex' "INS_3");                  Assert.AreEqual(1' e.NewItems.Count' "INS_4");                  Assert.AreEqual(5' (int)e.NewItems[0]' "INS_5");                  Assert.AreEqual(null' e.OldItems' "INS_6");              };
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Insert,The following statement contains a magic number: col.Insert(0' 5);
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Move,The following statement contains a magic number: col.Insert(2' 2);
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Move,The following statement contains a magic number: col.Insert(2' 2);
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Move,The following statement contains a magic number: col.Insert(3' 3);
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Move,The following statement contains a magic number: col.Insert(3' 3);
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Move,The following statement contains a magic number: col.CollectionChanged += (sender' e) =>              {                  No.Op(sender);                  reached = true;                  Assert.AreEqual(NotifyCollectionChangedAction.Move' e.Action' "MOVE_1");                  Assert.AreEqual(3' e.NewStartingIndex' "MOVE_2");                  Assert.AreEqual(1' e.OldStartingIndex' "MOVE_3");                  Assert.AreEqual(1' e.NewItems.Count' "MOVE_4");                  Assert.AreEqual(1' e.NewItems[0]' "MOVE_5");                  Assert.AreEqual(1' e.OldItems.Count' "MOVE_6");                  Assert.AreEqual(1' e.OldItems[0]' "MOVE_7");              };
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Move,The following statement contains a magic number: col.Move(1' 3);
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Reentrant,The following statement contains a magic number: collection[2] = 'I';
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Reentrant,The following statement contains a magic number: CollectionChangedEventValidators.ValidateReplaceOperation(args' new[] {'C'}' new[] {'I'}' 2' "REENT_3");
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,RemoveAt,The following statement contains a magic number: col.Insert(0' 5);
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,RemoveAt,The following statement contains a magic number: col.CollectionChanged += (sender' e) =>              {                  No.Op(sender);                  reached = true;                  Assert.AreEqual(NotifyCollectionChangedAction.Remove' e.Action' "REMAT_1");                  Assert.AreEqual(-1' e.NewStartingIndex' "REMAT_2");                  Assert.AreEqual(0' e.OldStartingIndex' "REMAT_3");                  Assert.AreEqual(null' e.NewItems' "REMAT_4");                  Assert.AreEqual(1' e.OldItems.Count' "REMAT_5");                  Assert.AreEqual(5' (int)e.OldItems[0]' "REMAT_6");              };
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Set,The following statement contains a magic number: collection[2] = 'I';
Magic Number,Tests.SystemTests.CollectionsTests.ObjectModelTests,ObservableCollectionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\ObjectModelTests\ObservableCollectionTest.cs,Set,The following statement contains a magic number: CollectionChangedEventValidators.ValidateReplaceOperation(args' new[] {'C'}' new[] {'I'}' 2' "SET_3");
Magic Number,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor10Test,The following statement contains a magic number: const int NewIndex = 2;
Magic Number,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor10Test,The following statement contains a magic number: const int OldIndex = 5;
Magic Number,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor10Test,The following statement contains a magic number: GC.KeepAlive(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Move' changed' -5' OldIndex));
Magic Number,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor11Test,The following statement contains a magic number: const int StartIndex = 5;
Magic Number,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor5Test,The following statement contains a magic number: const int StartingIndex = 5;
Magic Number,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor5Test,The following statement contains a magic number: GC.KeepAlive(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add' changedItems' -5));
Magic Number,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor5Test,The following statement contains a magic number: GC.KeepAlive(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove' changedItems' -5));
Magic Number,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor6Test,The following statement contains a magic number: const int StartingIndex = 5;
Magic Number,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor8Test,The following statement contains a magic number: const int StartIndex = 5;
Magic Number,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor9Test,The following statement contains a magic number: const int NewIndex = 2;
Magic Number,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor9Test,The following statement contains a magic number: const int OldIndex = 5;
Magic Number,Tests.SystemTests.CollectionsTests.SpecializedTests,NotifyCollectionChangedEventArgsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\SpecializedTests\NotifyCollectionChangedEventArgsTest.cs,NotifyCollectionChangedEventArgsConstructor9Test,The following statement contains a magic number: GC.KeepAlive(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Move' changed' -5' OldIndex));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTest.cs,EqualsTest,The following statement contains a magic number: var a1 = new[] {9' 1' 3' 4};
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTest.cs,EqualsTest,The following statement contains a magic number: var a1 = new[] {9' 1' 3' 4};
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTest.cs,EqualsTest,The following statement contains a magic number: var a1 = new[] {9' 1' 3' 4};
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTest.cs,EqualsTest,The following statement contains a magic number: var a2 = new[] {9' 1' 3' 4};
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTest.cs,EqualsTest,The following statement contains a magic number: var a2 = new[] {9' 1' 3' 4};
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTest.cs,EqualsTest,The following statement contains a magic number: var a2 = new[] {9' 1' 3' 4};
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTest.cs,EqualsTest,The following statement contains a magic number: Assert.IsTrue(StructuralComparisons.StructuralEqualityComparer.Equals(4' 4)' "#5");
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTest.cs,EqualsTest,The following statement contains a magic number: Assert.IsTrue(StructuralComparisons.StructuralEqualityComparer.Equals(4' 4)' "#5");
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTest.cs,EqualsTest,The following statement contains a magic number: Assert.IsFalse(StructuralComparisons.StructuralEqualityComparer.Equals(4' 5)' "#6");
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTest.cs,EqualsTest,The following statement contains a magic number: Assert.IsFalse(StructuralComparisons.StructuralEqualityComparer.Equals(4' 5)' "#6");
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentArrays,The following statement contains a magic number: Assert.IsFalse(StructuralComparisons.StructuralEqualityComparer.Equals(new[] { 0' 1' 2' 3 }' new[] { 1' 1' 2' 2 }));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentArrays,The following statement contains a magic number: Assert.IsFalse(StructuralComparisons.StructuralEqualityComparer.Equals(new[] { 0' 1' 2' 3 }' new[] { 1' 1' 2' 2 }));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentArrays,The following statement contains a magic number: Assert.IsFalse(StructuralComparisons.StructuralEqualityComparer.Equals(new[] { 0' 1' 2' 3 }' new[] { 1' 1' 2' 2 }));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentArrays,The following statement contains a magic number: Assert.IsFalse(StructuralComparisons.StructuralEqualityComparer.Equals(new[] { 0' 1' 2' 3 }' new[] { 1' 1' 2' 2 }));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentArrays,The following statement contains a magic number: Assert.IsFalse(StructuralComparisons.StructuralEqualityComparer.Equals(new[] { 0' 1 }' new[] { 3' 3' 3 }));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentArrays,The following statement contains a magic number: Assert.IsFalse(StructuralComparisons.StructuralEqualityComparer.Equals(new[] { 0' 1 }' new[] { 3' 3' 3 }));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentArrays,The following statement contains a magic number: Assert.IsFalse(StructuralComparisons.StructuralEqualityComparer.Equals(new[] { 0' 1 }' new[] { 3' 3' 3 }));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentRank,The following statement contains a magic number: Assert.Throws(typeof(ArgumentException)' () => GC.KeepAlive(StructuralComparisons.StructuralEqualityComparer.Equals(new['] { { 1' 1 }' { 2' 2 } }' new[] { 1' 1' 2' 2 })));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentRank,The following statement contains a magic number: Assert.Throws(typeof(ArgumentException)' () => GC.KeepAlive(StructuralComparisons.StructuralEqualityComparer.Equals(new['] { { 1' 1 }' { 2' 2 } }' new[] { 1' 1' 2' 2 })));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentRank,The following statement contains a magic number: Assert.Throws(typeof(ArgumentException)' () => GC.KeepAlive(StructuralComparisons.StructuralEqualityComparer.Equals(new['] { { 1' 1 }' { 2' 2 } }' new[] { 1' 1' 2' 2 })));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentRank,The following statement contains a magic number: Assert.Throws(typeof(ArgumentException)' () => GC.KeepAlive(StructuralComparisons.StructuralEqualityComparer.Equals(new['] { { 1' 1 }' { 2' 2 } }' new[] { 1' 1' 2' 2 })));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentRank,The following statement contains a magic number: Assert.Throws(typeof(ArgumentException)' () => GC.KeepAlive(StructuralComparisons.StructuralEqualityComparer.Equals(new['] { { 1' 1 }' { 2' 2 } }' new['] { { 1' 1 }' { 2' 2 } })));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentRank,The following statement contains a magic number: Assert.Throws(typeof(ArgumentException)' () => GC.KeepAlive(StructuralComparisons.StructuralEqualityComparer.Equals(new['] { { 1' 1 }' { 2' 2 } }' new['] { { 1' 1 }' { 2' 2 } })));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentRank,The following statement contains a magic number: Assert.Throws(typeof(ArgumentException)' () => GC.KeepAlive(StructuralComparisons.StructuralEqualityComparer.Equals(new['] { { 1' 1 }' { 2' 2 } }' new['] { { 1' 1 }' { 2' 2 } })));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,DifferentRank,The following statement contains a magic number: Assert.Throws(typeof(ArgumentException)' () => GC.KeepAlive(StructuralComparisons.StructuralEqualityComparer.Equals(new['] { { 1' 1 }' { 2' 2 } }' new['] { { 1' 1 }' { 2' 2 } })));
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,TupleToArray,The following statement contains a magic number: var a1 = new Tuple<int' int>(1' 2);
Magic Number,Tests.SystemTests.CollectionsTests,StructuralComparisonsTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\CollectionsTests\StructuralComparisonsTestEx.cs,TupleToArray,The following statement contains a magic number: var a2 = new[] { 1' 2 };
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncReadsExtracted,The following statement contains a magic number: var buffer = new byte[10];
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncReadsExtracted,The following statement contains a magic number: var x = await stream.ReadAsync(buffer' 0' 10).ConfigureAwait(false);
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncReadsExtracted,The following statement contains a magic number: Assert.AreEqual(10' x);
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncReadsExtracted,The following statement contains a magic number: AssertEx.CollectionEquals(buffer' new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 0});
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncReadsExtracted,The following statement contains a magic number: AssertEx.CollectionEquals(buffer' new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 0});
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncReadsExtracted,The following statement contains a magic number: AssertEx.CollectionEquals(buffer' new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 0});
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncReadsExtracted,The following statement contains a magic number: AssertEx.CollectionEquals(buffer' new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 0});
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncReadsExtracted,The following statement contains a magic number: AssertEx.CollectionEquals(buffer' new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 0});
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncReadsExtracted,The following statement contains a magic number: AssertEx.CollectionEquals(buffer' new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 0});
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncReadsExtracted,The following statement contains a magic number: AssertEx.CollectionEquals(buffer' new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 0});
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncReadsExtracted,The following statement contains a magic number: AssertEx.CollectionEquals(buffer' new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 0});
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncThrowsOnCanceledToken,The following statement contains a magic number: var buffer = new byte[10];
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,ReadAsyncThrowsOnCanceledToken,The following statement contains a magic number: AssertEx.AsyncThrows<OperationCanceledException>(() => stream[0].ReadAsync(buffer' 0' 10' tokenSource[0].Token));
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,WriteAsyncThrowsOnCanceledToken,The following statement contains a magic number: var buffer = new byte[10];
Magic Number,Tests.SystemTests.IOTests,StreamExtensionsTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\SystemTests\IOTests\StreamExtensionsTest.cs,WriteAsyncThrowsOnCanceledToken,The following statement contains a magic number: AssertEx.AsyncThrows<OperationCanceledException>(() => stream[0].ReadAsync(buffer' 0' 10' tokenSource[0].Token));
Magic Number,MonoTests.System,AggregateExceptionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\AggregateExceptionTests.cs,FlattenTestCase,The following statement contains a magic number: Assert.AreEqual(3' ex.InnerExceptions.Count' "#1");
Magic Number,MonoTests.System,AggregateExceptionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\AggregateExceptionTests.cs,FlattenTestCase,The following statement contains a magic number: Assert.AreEqual(3' ex.InnerExceptions.Count(exception => !(exception is AggregateException))' "#2");
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,DefaultCtor,The following statement contains a magic number: Assert.AreEqual(5' o.Prop);
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,NotThreadSafe,The following statement contains a magic number: var l2 = new Lazy<int>(() => 42);
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,NotThreadSafe,The following statement contains a magic number: Assert.AreEqual(42' l2.Value);
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,EnsureSingleThreadSafeExecution,The following statement contains a magic number: _counter = 42;
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,EnsureSingleThreadSafeExecution,The following statement contains a magic number: var threads = new Thread[10];
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,EnsureSingleThreadSafeExecution,The following statement contains a magic number: i < 10
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,EnsureSingleThreadSafeExecution,The following statement contains a magic number: i < 10
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,EnsureSingleThreadSafeExecution,The following statement contains a magic number: Assert.AreEqual(42' l.Value);
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ModeNone,The following statement contains a magic number: lz[0] = new Lazy<int>(() =>              {                  if (fail[0])                  {                      throw new Exception();                  }                  return 99;              }' LazyThreadSafetyMode.None);
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ModeNone,The following statement contains a magic number: lz[0] = new Lazy<int>(() => rec[0] ? lz[0].Value : 99' LazyThreadSafetyMode.None);
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ModePublicationOnly,The following statement contains a magic number: lz[0] = new Lazy<int>(() =>              {                  invoke[0]++;                  if (fail[0])                  {                      throw new Exception();                  }                  return 99;              }' LazyThreadSafetyMode.PublicationOnly);
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ModePublicationOnly,The following statement contains a magic number: Assert.AreEqual(2' invoke[0]' "#3");
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ModePublicationOnly,The following statement contains a magic number: Assert.AreEqual(99' lz[0].Value' "#4");
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ModePublicationOnly,The following statement contains a magic number: Assert.AreEqual(3' invoke[0]' "#5");
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ModePublicationOnly,The following statement contains a magic number: lz[0] = new Lazy<int>(() =>              {                  invoke[0]++;                  var r = rec;                  rec = false;                  return r ? lz[0].Value : 88;              }' LazyThreadSafetyMode.PublicationOnly);
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ModePublicationOnly,The following statement contains a magic number: Assert.AreEqual(88' lz[0].Value' "#6");
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ModePublicationOnly,The following statement contains a magic number: Assert.AreEqual(2' invoke[0]' "#7");
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ModeExecutionAndPublication,The following statement contains a magic number: lz[0] = new Lazy<int>(() =>              {                  ++invoke;                  if (fail[0])                  {                      throw new Exception();                  }                  return 99;              }' LazyThreadSafetyMode.ExecutionAndPublication);
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ModeExecutionAndPublication,The following statement contains a magic number: lz[0] = new Lazy<int>(() => rec[0] ? lz[0].Value : 99' LazyThreadSafetyMode.ExecutionAndPublication);
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,Return22,The following statement contains a magic number: return 22;
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,Trivial_Lazy,The following statement contains a magic number: Assert.AreEqual(22' x.Value' "#1");
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ConcurrentInitialization,The following statement contains a magic number: var lazy = new Lazy<string>(() =>                      {                          init[0].Set();                          Thread.Sleep(10);                          throw new ApplicationException();                      });
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ConcurrentInitialization,The following statement contains a magic number: Assert.IsTrue(init[0].WaitOne(3000)' "#1");
Magic Number,MonoTests.System,LazyTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,ConcurrentInitialization,The following statement contains a magic number: Assert.IsTrue(e1Set[0].WaitOne(3000)' "#2");
Magic Number,MonoTests.System,DefaultCtorClass,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTest.cs,DefaultCtorClass,The following statement contains a magic number: Prop = 5;
Magic Number,MonoTests.System,LazyTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,CacheException,The following statement contains a magic number: Assert.AreEqual(3' a.Value.Prop);
Magic Number,MonoTests.System,LazyTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,CacheException,The following statement contains a magic number: Assert.AreEqual(7' a.Value.Prop);
Magic Number,MonoTests.System,LazyTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,CacheException,The following statement contains a magic number: Assert.AreEqual(11' a.Value.Prop);
Magic Number,MonoTests.System,LazyTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,CacheException,The following statement contains a magic number: Assert.AreEqual(15' a.Value.Prop);
Magic Number,MonoTests.System,LazyTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,CacheException,The following statement contains a magic number: Assert.AreEqual(19' a.Value.Prop);
Magic Number,MonoTests.System,LazyTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,ConstructorWithValueFactory,The following statement contains a magic number: var needle = new Lazy<int>(() => 5);
Magic Number,MonoTests.System,LazyTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,ConstructorWithValueFactory,The following statement contains a magic number: Assert.AreEqual(needle.Value' 5);
Magic Number,MonoTests.System,LazyTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,InitializeOnlyOnce,The following statement contains a magic number: var needle = new Lazy<int>(() =>              {                  Interlocked.Increment(ref control);                  return 5;              });
Magic Number,MonoTests.System,LazyTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,InitializeOnlyOnce,The following statement contains a magic number: Assert.AreEqual(needle.Value' 5);
Magic Number,MonoTests.System,LazyTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,InitializeOnlyOnce,The following statement contains a magic number: Assert.AreEqual(threadDone' 3);
Magic Number,MonoTests.System,LazyTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,IsCompletedAndIsAlive,The following statement contains a magic number: var a = new Lazy<int>(() => 5);
Magic Number,MonoTests.System,LazyTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,IsCompletedAndIsAlive,The following statement contains a magic number: Assert.AreEqual(a.Value' 5);
Magic Number,MonoTests.System,DefectiveCtorClass,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,DefectiveCtorClass,The following statement contains a magic number: _count % 4 != 3
Magic Number,MonoTests.System,DefectiveCtorClass,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\LazyTestEx.cs,DefectiveCtorClass,The following statement contains a magic number: _count % 4 != 3
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,TupleWithRest_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  var tuple = new Tuple<int' int' int' int' int' int' int' int>(1' 2' 3' 4' 5' 6' 7' 8);                  GC.KeepAlive(tuple);              });
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,TupleWithRest_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  var tuple = new Tuple<int' int' int' int' int' int' int' int>(1' 2' 3' 4' 5' 6' 7' 8);                  GC.KeepAlive(tuple);              });
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,TupleWithRest_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  var tuple = new Tuple<int' int' int' int' int' int' int' int>(1' 2' 3' 4' 5' 6' 7' 8);                  GC.KeepAlive(tuple);              });
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,TupleWithRest_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  var tuple = new Tuple<int' int' int' int' int' int' int' int>(1' 2' 3' 4' 5' 6' 7' 8);                  GC.KeepAlive(tuple);              });
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,TupleWithRest_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  var tuple = new Tuple<int' int' int' int' int' int' int' int>(1' 2' 3' 4' 5' 6' 7' 8);                  GC.KeepAlive(tuple);              });
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,TupleWithRest_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  var tuple = new Tuple<int' int' int' int' int' int' int' int>(1' 2' 3' 4' 5' 6' 7' 8);                  GC.KeepAlive(tuple);              });
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,TupleWithRest_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  var tuple = new Tuple<int' int' int' int' int' int' int' int>(1' 2' 3' 4' 5' 6' 7' 8);                  GC.KeepAlive(tuple);              });
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,TupleWithRest_InvalidDueToNull,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  var tuple = new Tuple<int' object' int' int' int' int' int' Tuple<string' string>>(1' null' 3' 4' 5' 6'                      7' null);                  GC.KeepAlive(tuple);              });
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,TupleWithRest_InvalidDueToNull,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  var tuple = new Tuple<int' object' int' int' int' int' int' Tuple<string' string>>(1' null' 3' 4' 5' 6'                      7' null);                  GC.KeepAlive(tuple);              });
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,TupleWithRest_InvalidDueToNull,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  var tuple = new Tuple<int' object' int' int' int' int' int' Tuple<string' string>>(1' null' 3' 4' 5' 6'                      7' null);                  GC.KeepAlive(tuple);              });
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,TupleWithRest_InvalidDueToNull,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  var tuple = new Tuple<int' object' int' int' int' int' int' Tuple<string' string>>(1' null' 3' 4' 5' 6'                      7' null);                  GC.KeepAlive(tuple);              });
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,TupleWithRest_InvalidDueToNull,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>              {                  var tuple = new Tuple<int' object' int' int' int' int' int' Tuple<string' string>>(1' null' 3' 4' 5' 6'                      7' null);                  GC.KeepAlive(tuple);              });
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,ToStringTest,The following statement contains a magic number: var t1 = new Tuple<int' object' int' int' int' int' int' Tuple<string' string>>(1' null' 3' 4' 5' 6' 7' new Tuple<string' string>(null' null));
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,ToStringTest,The following statement contains a magic number: var t1 = new Tuple<int' object' int' int' int' int' int' Tuple<string' string>>(1' null' 3' 4' 5' 6' 7' new Tuple<string' string>(null' null));
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,ToStringTest,The following statement contains a magic number: var t1 = new Tuple<int' object' int' int' int' int' int' Tuple<string' string>>(1' null' 3' 4' 5' 6' 7' new Tuple<string' string>(null' null));
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,ToStringTest,The following statement contains a magic number: var t1 = new Tuple<int' object' int' int' int' int' int' Tuple<string' string>>(1' null' 3' 4' 5' 6' 7' new Tuple<string' string>(null' null));
Magic Number,MonoTests.System,TupleTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\TupleTest.cs,ToStringTest,The following statement contains a magic number: var t1 = new Tuple<int' object' int' int' int' int' int' Tuple<string' string>>(1' null' 3' 4' 5' 6' 7' new Tuple<string' string>(null' null));
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrAddTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrAddTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrAddTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrAddTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrAddTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrAddTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrAddTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrAddTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrAddTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrAddTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrSubtractTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrSubtractTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrSubtractTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrSubtractTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrSubtractTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrSubtractTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrSubtractTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrSubtractTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrSubtractTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,Tests.System,IntPtrTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\IntPtrTest.cs,IntPtrSubtractTest,The following statement contains a magic number: int[] arr = { 2' 4' 6' 8' 10' 12' 14' 16' 18' 20 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,MyTestCleanup,The following statement contains a magic number: _array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,MyTestCleanup,The following statement contains a magic number: _array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,MyTestCleanup,The following statement contains a magic number: _array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,MyTestCleanup,The following statement contains a magic number: _array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,MyTestCleanup,The following statement contains a magic number: _array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,MyTestCleanup,The following statement contains a magic number: _array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,MyTestCleanup,The following statement contains a magic number: _array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,MyTestCleanup,The following statement contains a magic number: _array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,MyTestCleanup,The following statement contains a magic number: _array = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,All,The following statement contains a magic number: Assert.AreEqual(_src.All(n => n < 11)' _array.All(n => n < 11));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,All,The following statement contains a magic number: Assert.AreEqual(_src.All(n => n < 11)' _array.All(n => n < 11));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,All,The following statement contains a magic number: Assert.AreEqual(_src.All(n => n < 10)' _array.All(n => n < 10));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,All,The following statement contains a magic number: Assert.AreEqual(_src.All(n => n < 10)' _array.All(n => n < 10));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Any,The following statement contains a magic number: Assert.AreEqual(_src.Any(i => i > 5)' _array.Any(i => i > 5));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Any,The following statement contains a magic number: Assert.AreEqual(_src.Any(i => i > 5)' _array.Any(i => i > 5));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Average,The following statement contains a magic number: Assert.AreEqual(_src.Average(n => 11)' _array.Average(n => 11));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Average,The following statement contains a magic number: Assert.AreEqual(_src.Average(n => 11)' _array.Average(n => 11));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Contains,The following statement contains a magic number: i < 20
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,ElementAt,The following statement contains a magic number: i < 10
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,ElementAtOrDefault,The following statement contains a magic number: i < 10
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,ElementAtOrDefault,The following statement contains a magic number: Assert.AreEqual(_src.ElementAtOrDefault(100)' _array.ElementAtOrDefault(100));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,ElementAtOrDefault,The following statement contains a magic number: Assert.AreEqual(_src.ElementAtOrDefault(100)' _array.ElementAtOrDefault(100));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Except,The following statement contains a magic number: int[] except = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Except,The following statement contains a magic number: int[] except = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,FirstOrDefault,The following statement contains a magic number: Assert.AreEqual(_src.FirstOrDefault(n => n > 5)' _array.FirstOrDefault(n => n > 5));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,FirstOrDefault,The following statement contains a magic number: Assert.AreEqual(_src.FirstOrDefault(n => n > 5)' _array.FirstOrDefault(n => n > 5));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,FirstOrDefault,The following statement contains a magic number: Assert.AreEqual(_src.FirstOrDefault(n => n > 10)' _array.FirstOrDefault(n => n > 10));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,FirstOrDefault,The following statement contains a magic number: Assert.AreEqual(_src.FirstOrDefault(n => n > 10)' _array.FirstOrDefault(n => n > 10));
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,GroupBy,The following statement contains a magic number: var grouping = _src.GroupBy(n => n > 5);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,GroupBy,The following statement contains a magic number: Assert.AreEqual(grouping.Count()' 2);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,GroupBy,The following statement contains a magic number: Assert.AreEqual(group.Count()' 5);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Intersect,The following statement contains a magic number: int[] subset = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Intersect,The following statement contains a magic number: int[] subset = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Single,The following statement contains a magic number: Assert.AreEqual(_src.Single(n => n == 10)' 10);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Single,The following statement contains a magic number: Assert.AreEqual(_src.Single(n => n == 10)' 10);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,SingleOrDefault,The following statement contains a magic number: Assert.AreEqual(_src.SingleOrDefault(n => n == 10)' 10);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,SingleOrDefault,The following statement contains a magic number: Assert.AreEqual(_src.SingleOrDefault(n => n == 10)' 10);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,SingleOrDefault,The following statement contains a magic number: Assert.AreEqual(_src.SingleOrDefault(n => n == 11)' 0);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Skip,The following statement contains a magic number: var arr1 = _array.Skip(5).ToArray();
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Skip,The following statement contains a magic number: var arr2 = _src.Skip(5).ToArray();
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,SkipWhile,The following statement contains a magic number: var arr1 = _src.SkipWhile(n => n < 6).ToArray();
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,SkipWhile,The following statement contains a magic number: var arr2 = _src.Skip(5).ToArray();
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Take,The following statement contains a magic number: var arr1 = _array.Take(3).ToArray();
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Take,The following statement contains a magic number: var arr2 = _src.Take(3).ToArray();
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,TakeWhile,The following statement contains a magic number: var arr1 = _array.TakeWhile(n => n < 6).ToArray();
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,TakeWhile,The following statement contains a magic number: var arr2 = _src.TakeWhile(n => n < 6).ToArray();
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Union,The following statement contains a magic number: int[] arr = { 11' 12' 13 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Union,The following statement contains a magic number: int[] arr = { 11' 12' 13 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Union,The following statement contains a magic number: int[] arr = { 11' 12' 13 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Where,The following statement contains a magic number: var oddArray1 = _array.Where(n => (n % 2) == 1).ToArray();
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,Where,The following statement contains a magic number: var oddArray2 = _src.Where(n => (n % 2) == 1).ToArray();
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,UserExtensionMethodNegative,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() =>              {                  const BindingFlags extensionFlags = BindingFlags.Static | BindingFlags.Public;                  var method = (from m in typeof(Ext).GetMethods(extensionFlags)                      where (m.Name == "UserQueryableExt3" &&                             m.GetParameters()[0].ParameterType.GetGenericTypeDefinition() == typeof(IQueryable<>))                      select m).FirstOrDefault().MakeGenericMethod(typeof(int));                  Expression<Func<int' int>> exp = i => i;                  Expression e = Expression.Call(method' _src.Expression' Expression.Quote(exp)' Expression.Constant(10));                  _src.Provider.Execute(e);              });
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,NonGenericEnumerable2,The following statement contains a magic number: IEnumerable<int> nonGen = new[] { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableAsQueryableTest.cs,NonGenericEnumerable2,The following statement contains a magic number: IEnumerable<int> nonGen = new[] { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByIsDeferred,The following statement contains a magic number: var src = new IterateAndCount(10);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByIsDeferred,The following statement contains a magic number: var a = src.GroupBy(i => i > 5' null);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByIsDeferred,The following statement contains a magic number: var b = src.GroupBy(i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByIsDeferred,The following statement contains a magic number: var c = src.GroupBy(i => i > 5' (key' group) => StringEx.Concat(group.ToArray())' null);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByIsDeferred,The following statement contains a magic number: var d = src.GroupBy(i => i > 5' j => j + 1' (key' group) => StringEx.Concat(group.ToArray())' null);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByIsDeferred,The following statement contains a magic number: Assert.AreEqual(src.Total' 40);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByIsDeferredToGetEnumerator,The following statement contains a magic number: var src = new IterateAndCount(10);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByIsDeferredToGetEnumerator,The following statement contains a magic number: var a = src.GroupBy(i => i > 5' null);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByIsDeferredToGetEnumerator,The following statement contains a magic number: Assert.AreEqual(src.Total' 10);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByIsDeferredToGetEnumerator,The following statement contains a magic number: Assert.AreEqual(src.Total' 10);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByIsDeferredToGetEnumerator,The following statement contains a magic number: Assert.AreEqual(src.Total' 20);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByIsDeferredToGetEnumerator,The following statement contains a magic number: Assert.AreEqual(src.Total' 20);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: var r = src.GroupBy(i => i > 5' null);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: Assert.AreEqual(count' 5);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadA,The following statement contains a magic number: Assert.AreEqual(index' 10);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadAEx,The following statement contains a magic number: var r = src.GroupBy(i => i > 5' null);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadAEx,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadAEx,The following statement contains a magic number: Assert.AreEqual(g.Count()' 5);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: var r = src.GroupBy(i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: Assert.AreEqual(count' 5);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadB,The following statement contains a magic number: Assert.AreEqual(index' 10);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadBEx,The following statement contains a magic number: var r = src.GroupBy(i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadBEx,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadBEx,The following statement contains a magic number: Assert.AreEqual(g.Count()' 5);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadC,The following statement contains a magic number: var r = src.GroupBy(i => i > 5' (key' group) => StringEx.Concat(group.ToArray())' null);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadC,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadD,The following statement contains a magic number: var r = src.GroupBy(i => i > 5' j => j + 1' (key' group) => StringEx.Concat(group.ToArray())' null);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadD,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadDEx,The following statement contains a magic number: var r = src.GroupBy(i => i > 5' FuncHelper.GetIdentityFunc<int>()' (key' group) => StringEx.Concat(group.ToArray())' null);
Magic Number,MonoTests.System.Linq,EnumerableAsQueryableTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableGroupByTestEx.cs,GroupByOverloadDEx,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstTest,The following statement contains a magic number: Assert.AreEqual(2' data.First());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstTest,The following statement contains a magic number: Assert.AreEqual(5' data.First(x => x == 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstTest,The following statement contains a magic number: Assert.AreEqual(5' data.First(x => x == 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstTest,The following statement contains a magic number: AssertException<InvalidOperationException>(() => empty.First(x => x == 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstTest,The following statement contains a magic number: AssertException<InvalidOperationException>(() => data.First(x => x == 6));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstOrDefaultTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstOrDefaultTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstOrDefaultTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstOrDefaultTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(2' data.FirstOrDefault());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(5' data.FirstOrDefault(x => x == 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(5' data.FirstOrDefault(x => x == 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(0' empty.FirstOrDefault(x => x == 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,FirstOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(0' data.FirstOrDefault(x => x == 6));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastTest,The following statement contains a magic number: int[] data = { 2' 1' 1' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastTest,The following statement contains a magic number: int[] data = { 2' 1' 1' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastTest,The following statement contains a magic number: int[] data = { 2' 1' 1' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastTest,The following statement contains a magic number: int[] data = { 2' 1' 1' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastTest,The following statement contains a magic number: Assert.AreEqual(5' data.Last());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastTest,The following statement contains a magic number: Assert.AreEqual(4' data.Last(x => x < 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastTest,The following statement contains a magic number: Assert.AreEqual(4' data.Last(x => x < 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastTest,The following statement contains a magic number: AssertException<InvalidOperationException>(() => empty.Last(x => x == 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastTest,The following statement contains a magic number: AssertException<InvalidOperationException>(() => data.Last(x => x == 6));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastOrDefaultTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastOrDefaultTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastOrDefaultTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastOrDefaultTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(4' data.LastOrDefault());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(3' data.LastOrDefault(x => x < 4));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(3' data.LastOrDefault(x => x < 4));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(0' empty.LastOrDefault(x => x == 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LastOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(0' data.LastOrDefault(x => x == 6));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleTest,The following statement contains a magic number: int[] data = { 2 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleTest,The following statement contains a magic number: int[] data2 = { 2' 3' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleTest,The following statement contains a magic number: int[] data2 = { 2' 3' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleTest,The following statement contains a magic number: int[] data2 = { 2' 3' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleTest,The following statement contains a magic number: Assert.AreEqual(2' data.Single());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleTest,The following statement contains a magic number: Assert.AreEqual(5' data2.Single(x => x == 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleTest,The following statement contains a magic number: Assert.AreEqual(5' data2.Single(x => x == 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleOrDefaultTest,The following statement contains a magic number: int[] data = { 2 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleOrDefaultTest,The following statement contains a magic number: int[] data2 = { 2' 3' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleOrDefaultTest,The following statement contains a magic number: int[] data2 = { 2' 3' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleOrDefaultTest,The following statement contains a magic number: int[] data2 = { 2' 3' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(2' data.SingleOrDefault());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(3' data2.SingleOrDefault(x => x == 3));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SingleOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(3' data2.SingleOrDefault(x => x == 3));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtTest,The following statement contains a magic number: int[] data = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtTest,The following statement contains a magic number: int[] data = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtTest,The following statement contains a magic number: int[] data = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtTest,The following statement contains a magic number: int[] data = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtTest,The following statement contains a magic number: Assert.AreEqual(2' data.ElementAt(0));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtTest,The following statement contains a magic number: Assert.AreEqual(4' data.ElementAt(2));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtTest,The following statement contains a magic number: Assert.AreEqual(4' data.ElementAt(2));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtTest,The following statement contains a magic number: AssertException<ArgumentOutOfRangeException>(() => data.ElementAt(4));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtTest,The following statement contains a magic number: AssertException<ArgumentOutOfRangeException>(() => data.ElementAt(6));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtOrDefaultTest,The following statement contains a magic number: int[] data = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtOrDefaultTest,The following statement contains a magic number: int[] data = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtOrDefaultTest,The following statement contains a magic number: int[] data = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtOrDefaultTest,The following statement contains a magic number: int[] data = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(2' data.ElementAtOrDefault(0));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(4' data.ElementAtOrDefault(2));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(4' data.ElementAtOrDefault(2));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(0' data.ElementAtOrDefault(4));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ElementAtOrDefaultTest,The following statement contains a magic number: Assert.AreEqual(0' empty.ElementAtOrDefault(4));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AnyTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AnyTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AnyTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AnyTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AnyTest,The following statement contains a magic number: Assert.IsTrue(data.Any(x => x == 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AnyTest,The following statement contains a magic number: Assert.IsFalse(data.Any(x => x == 9));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AllTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AllTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AllTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AllTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,CountTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,CountTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,CountTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,CountTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,CountTest,The following statement contains a magic number: Assert.AreEqual(5' data.Count());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,CountTest,The following statement contains a magic number: Assert.AreEqual(3' data.Count(x => x < 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,CountTest,The following statement contains a magic number: Assert.AreEqual(3' data.Count(x => x < 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LongCountTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LongCountTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LongCountTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LongCountTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LongCountTest,The following statement contains a magic number: Assert.AreEqual(5' data.LongCount());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LongCountTest,The following statement contains a magic number: Assert.AreEqual(5' Enumerable.Range(0' 5).LongCount());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LongCountTest,The following statement contains a magic number: Assert.AreEqual(5' Enumerable.Range(0' 5).LongCount());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LongCountTest,The following statement contains a magic number: Assert.AreEqual(3' data.LongCount(x => x < 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,LongCountTest,The following statement contains a magic number: Assert.AreEqual(3' data.LongCount(x => x < 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ContainsTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ContainsTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ContainsTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ContainsTest,The following statement contains a magic number: int[] data = { 5' 2' 3' 1' 6 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ContainsTest,The following statement contains a magic number: Assert.IsTrue(data.Contains(2));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ContainsTest,The following statement contains a magic number: i < 50
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ContainsTest,The following statement contains a magic number: Assert.IsTrue(data.Contains(2' EqualityComparer<int>.Default));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(15' data.Sum(x => int.Parse(x)));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(15' data.Sum(x => (int?)int.Parse(x)));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(15' data.Sum((Func<string' long>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(15' data.Sum((Func<string' long?>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(15' data.Sum((Func<string' float>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(15' data.Sum((Func<string' float?>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(15' data.Sum((Func<string' double>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(15' data.Sum((Func<string' double?>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(15' data.Sum((Func<string' decimal>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(15' data.Sum((Func<string' decimal?>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new int?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new int?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new int?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new long[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new long[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new long[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new long?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new long?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new long?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new float[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new float[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new float[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new float?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new float?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new float?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new double[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new double[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new double[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new double?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new double?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new double?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new decimal[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new decimal[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new decimal[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new decimal?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new decimal?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SumTest,The following statement contains a magic number: Assert.AreEqual(6' new decimal?[] { 1' 2' 3 }.Sum());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new int?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new int?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new int?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new int?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new long[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new long[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new long[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new long[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new long?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new long?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new long?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new long?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new float[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new float[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new float[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new float[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new float?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new float?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new float?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new float?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new double[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new double[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new double[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new double[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new double?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new double?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new double?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new double?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new decimal[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new decimal[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new decimal[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new decimal[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new decimal?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new decimal?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new decimal?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MinTest,The following statement contains a magic number: Assert.AreEqual(2' new decimal?[] { 2' 3' 4 }.Min());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(5' data.Max(x => int.Parse(x)));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(5' data.Max(x => (int?)int.Parse(x)));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(5' data.Max((Func<string' long>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(5' data.Max((Func<string' long?>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(5' data.Max((Func<string' float>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(5' data.Max((Func<string' float?>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(5' data.Max((Func<string' double>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(5' data.Max((Func<string' double?>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(5' data.Max((Func<string' decimal>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(5' data.Max((Func<string' decimal?>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new int?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new int?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new int?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new int?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new long[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new long[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new long[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new long[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new long?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new long?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new long?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new long?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new float[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new float[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new float[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new float[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new float?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new float?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new float?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new float?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new double[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new double[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new double[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new double[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new double?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new double?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new double?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new double?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new decimal[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new decimal[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new decimal[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new decimal[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new decimal?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new decimal?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new decimal?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,MaxTest,The following statement contains a magic number: Assert.AreEqual(4' new decimal?[] { 2' 3' 4 }.Max());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' data.Average(x => int.Parse(x)));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' data.Average(x => (int?)int.Parse(x)));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' data.Average((Func<string' long>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' data.Average((Func<string' long?>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' data.Average((Func<string' float>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' data.Average((Func<string' float?>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' data.Average((Func<string' double>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' data.Average((Func<string' double?>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' data.Average((Func<string' decimal>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' data.Average((Func<string' decimal?>)(x => int.Parse(x))));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new int?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new int?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new int?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new int?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new long[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new long[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new long[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new long[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new long?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new long?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new long?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new long?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new float[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new float[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new float[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new float[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new float?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new float?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new float?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new float?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new double[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new double[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new double[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new double[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new double?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new double?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new double?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new double?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new decimal[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new decimal[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new decimal[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new decimal[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new decimal?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new decimal?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new decimal?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AverageTest,The following statement contains a magic number: Assert.AreEqual(3' new decimal?[] { 2' 3' 4 }.Average());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,WhereTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,WhereTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,WhereTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,WhereTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,WhereTest,The following statement contains a magic number: int[] expected1 = { 2' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,WhereTest,The following statement contains a magic number: int[] expected2 = { 2 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,WhereTest,The following statement contains a magic number: AssertAreSame(expected1' data.Where(x => x < 3));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,WhereTest,The following statement contains a magic number: AssertAreSame(expected2' Enumerable.Where(data' (x' y) => x < 3 && y != 1));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,TakeTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,TakeTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,TakeTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,TakeTest,The following statement contains a magic number: int[] expected = { 2' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,TakeTest,The following statement contains a magic number: AssertAreSame(expected' data.Take(2));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,TakeTest,The following statement contains a magic number: AssertAreSame(empty' data.Take(-2));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,TakeWhileTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,TakeWhileTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,TakeWhileTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,TakeWhileTest,The following statement contains a magic number: int[] expected = { 2' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,TakeWhileTest,The following statement contains a magic number: AssertAreSame(expected' data.TakeWhile(x => x != 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,TakeWhileTest,The following statement contains a magic number: AssertAreSame(expected' data.TakeWhile((x' y) => y != 2));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipTest,The following statement contains a magic number: int[] expected = { 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipTest,The following statement contains a magic number: int[] expected = { 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipTest,The following statement contains a magic number: AssertAreSame(expected' data.Skip(2));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipTest,The following statement contains a magic number: AssertAreSame(data' data.Skip(-2));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipWhileTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipWhileTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipWhileTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipWhileTest,The following statement contains a magic number: int[] expected = { 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipWhileTest,The following statement contains a magic number: int[] expected = { 5' 3' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipWhileTest,The following statement contains a magic number: AssertAreSame(expected' data.SkipWhile(x => x != 5));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SkipWhileTest,The following statement contains a magic number: AssertAreSame(expected' data.SkipWhile((x' y) => y != 2));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByTest,The following statement contains a magic number: int[] expected = { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByTest,The following statement contains a magic number: int[] expected = { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByTest,The following statement contains a magic number: int[] expected = { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByTest,The following statement contains a magic number: int[] expected = { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByDescendingTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByDescendingTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByDescendingTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByDescendingTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByDescendingTest,The following statement contains a magic number: int[] expected = { 5' 4' 3' 2' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByDescendingTest,The following statement contains a magic number: int[] expected = { 5' 4' 3' 2' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByDescendingTest,The following statement contains a magic number: int[] expected = { 5' 4' 3' 2' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OrderByDescendingTest,The following statement contains a magic number: int[] expected = { 5' 4' 3' 2' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByTest,The following statement contains a magic number: int[] expected = { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByTest,The following statement contains a magic number: int[] expected = { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByTest,The following statement contains a magic number: int[] expected = { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByTest,The following statement contains a magic number: int[] expected = { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByDescendingTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByDescendingTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByDescendingTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByDescendingTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByDescendingTest,The following statement contains a magic number: int[] expected = { 5' 4' 3' 2' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByDescendingTest,The following statement contains a magic number: int[] expected = { 5' 4' 3' 2' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByDescendingTest,The following statement contains a magic number: int[] expected = { 5' 4' 3' 2' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ThenByDescendingTest,The following statement contains a magic number: int[] expected = { 5' 4' 3' 2' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByLastNullGroup,The following statement contains a magic number: var values = new List<Data>              {                  new Data(0' "a")'                  new Data(1' "a")'                  new Data(2' "b")'                  new Data(3' "b")'                  new Data(4' null)              };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByLastNullGroup,The following statement contains a magic number: var values = new List<Data>              {                  new Data(0' "a")'                  new Data(1' "a")'                  new Data(2' "b")'                  new Data(3' "b")'                  new Data(4' null)              };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByLastNullGroup,The following statement contains a magic number: var values = new List<Data>              {                  new Data(0' "a")'                  new Data(1' "a")'                  new Data(2' "b")'                  new Data(3' "b")'                  new Data(4' null)              };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByLastNullGroup,The following statement contains a magic number: switch (group.Key)                  {                      case "a":                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 0' 1 }));                          break;                        case "b":                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 2' 3 }));                          break;                        case null:                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 4 }));                          break;                        default:                          Assert.Fail();                          break;                  }
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByLastNullGroup,The following statement contains a magic number: switch (group.Key)                  {                      case "a":                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 0' 1 }));                          break;                        case "b":                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 2' 3 }));                          break;                        case null:                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 4 }));                          break;                        default:                          Assert.Fail();                          break;                  }
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByLastNullGroup,The following statement contains a magic number: switch (group.Key)                  {                      case "a":                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 0' 1 }));                          break;                        case "b":                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 2' 3 }));                          break;                        case null:                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 4 }));                          break;                        default:                          Assert.Fail();                          break;                  }
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,GroupByLastNullGroup,The following statement contains a magic number: Assert.AreEqual(3' count);
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ConcatTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4' 2' 5' 3' 1' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4' 2' 5' 3' 1' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4' 2' 5' 3' 1' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4' 2' 5' 3' 1' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4' 2' 5' 3' 1' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4' 2' 5' 3' 1' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4' 2' 5' 3' 1' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 3' 4' 2' 5' 3' 1' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,DistinctTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 7' 3' 4' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 7' 3' 4' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 7' 3' 4' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 7' 3' 4' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 7' 3' 4' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,UnionTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 7' 3' 4' 8 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,IntersectTest,The following statement contains a magic number: int[] expected = { 2' 1' 5' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptTest,The following statement contains a magic number: int[] data2 = { 1' 2' 3' 8' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptTest,The following statement contains a magic number: int[] expected = { 7 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ReverseTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ReverseTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ReverseTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ReverseTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ReverseTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ReverseTest,The following statement contains a magic number: int[] expected = { 4' 3' 7' 5' 1' 2 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ReverseTest,The following statement contains a magic number: int[] expected = { 4' 3' 7' 5' 1' 2 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ReverseTest,The following statement contains a magic number: int[] expected = { 4' 3' 7' 5' 1' 2 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ReverseTest,The following statement contains a magic number: int[] expected = { 4' 3' 7' 5' 1' 2 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ReverseTest,The following statement contains a magic number: int[] expected = { 4' 3' 7' 5' 1' 2 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data1 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data2 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data2 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data2 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data2 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data2 = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data3 = { 2' 1' 5' 7' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data3 = { 2' 1' 5' 7' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data3 = { 2' 1' 5' 7' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data3 = { 2' 1' 5' 7' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data3 = { 2' 1' 5' 7' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data3 = { 2' 1' 5' 7' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data4 = { 2' 1' 5' 7' 3 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data4 = { 2' 1' 5' 7' 3 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data4 = { 2' 1' 5' 7' 3 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data4 = { 2' 1' 5' 7' 3 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data5 = { 2' 1' 5' 8' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data5 = { 2' 1' 5' 8' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data5 = { 2' 1' 5' 8' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data5 = { 2' 1' 5' 8' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,SequenceEqualTest,The following statement contains a magic number: int[] data5 = { 2' 1' 5' 8' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AsEnumerableTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AsEnumerableTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AsEnumerableTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AsEnumerableTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,AsEnumerableTest,The following statement contains a magic number: int[] data = { 2' 1' 5' 7' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToArrayTest,The following statement contains a magic number: int[] data = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToArrayTest,The following statement contains a magic number: int[] data = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToArrayTest,The following statement contains a magic number: int[] data = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToArrayTest,The following statement contains a magic number: int[] data = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToArrayTest,The following statement contains a magic number: int[] expected = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToArrayTest,The following statement contains a magic number: int[] expected = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToArrayTest,The following statement contains a magic number: int[] expected = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToArrayTest,The following statement contains a magic number: int[] expected = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToListTest,The following statement contains a magic number: int[] data = { 2' 4' 5' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToListTest,The following statement contains a magic number: int[] data = { 2' 4' 5' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToListTest,The following statement contains a magic number: int[] data = { 2' 4' 5' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToListTest,The following statement contains a magic number: int[] expected = { 2' 4' 5' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToListTest,The following statement contains a magic number: int[] expected = { 2' 4' 5' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToListTest,The following statement contains a magic number: int[] expected = { 2' 4' 5' 1 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToLookupNullKeyTest,The following statement contains a magic number: Assert.AreEqual(2' l.Count);
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToLookupNullKeyTest,The following statement contains a magic number: Assert.AreEqual(2' l[null].Count());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ToLookupNullKeyTest,The following statement contains a magic number: Assert.AreEqual(3' l["numbers"].Count());
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,OfTypeTest,The following statement contains a magic number: object[] data = { "2"' 2' "1"' "5"' "3"' "4" };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,CastTest,The following statement contains a magic number: object[] data = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,CastTest,The following statement contains a magic number: object[] data = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,CastTest,The following statement contains a magic number: int[] expected = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,CastTest,The following statement contains a magic number: int[] expected = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,RangeTest,The following statement contains a magic number: int[] expected = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,RangeTest,The following statement contains a magic number: int[] expected = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,RangeTest,The following statement contains a magic number: int[] expected = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,RangeTest,The following statement contains a magic number: int[] expected = { 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,RangeTest,The following statement contains a magic number: AssertAreSame(expected' Enumerable.Range(2' 4));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,RangeTest,The following statement contains a magic number: AssertAreSame(expected' Enumerable.Range(2' 4));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,RangeTest,The following statement contains a magic number: AssertException<ArgumentOutOfRangeException>(() => Enumerable.Range(2' -3));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,RangeTest,The following statement contains a magic number: AssertException<ArgumentOutOfRangeException>(() => Enumerable.Range(2' -3));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,RangeTest,The following statement contains a magic number: AssertException<ArgumentOutOfRangeException>(() => Enumerable.Range(int.MaxValue - 5' 7));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,RangeTest,The following statement contains a magic number: AssertException<ArgumentOutOfRangeException>(() => Enumerable.Range(int.MaxValue - 5' 7));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,RangeTest,The following statement contains a magic number: Enumerable.Range(int.MaxValue - 5' 6);
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,RangeTest,The following statement contains a magic number: Enumerable.Range(int.MaxValue - 5' 6);
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var data = new[] { 1' 2' 2' 2' 3' 4' 5' 5' 6' 7' 8' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var expected = new[] { 2' 4' 6' 8' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var expected = new[] { 2' 4' 6' 8' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var expected = new[] { 2' 4' 6' 8' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var expected = new[] { 2' 4' 6' 8' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: var expected = new[] { 2' 4' 6' 8' 10 };
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: AssertAreSame(expected' data.Except(new[] { 1' 3' 5' 7' 9 }));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: AssertAreSame(expected' data.Except(new[] { 1' 3' 5' 7' 9 }));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: AssertAreSame(expected' data.Except(new[] { 1' 3' 5' 7' 9 }));
Magic Number,MonoTests.System.Linq,EnumerableMoreTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableMoreTest.cs,ExceptMultipleItems,The following statement contains a magic number: AssertAreSame(expected' data.Except(new[] { 1' 3' 5' 7' 9 }));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,ReverseArrays,The following statement contains a magic number: int[] source = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,ReverseArrays,The following statement contains a magic number: int[] source = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,ReverseArrays,The following statement contains a magic number: Assert.AreEqual(3' enumerator.Current);
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,ReverseArrays,The following statement contains a magic number: source[1] = 42;
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,ReverseArrays,The following statement contains a magic number: Assert.AreEqual(2' enumerator.Current);
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnInt32,The following statement contains a magic number: Assert.AreEqual(23.25' (new[] { 24' 7' 28' 34 }).Average());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnInt32,The following statement contains a magic number: Assert.AreEqual(23.25' (new[] { 24' 7' 28' 34 }).Average());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnInt32,The following statement contains a magic number: Assert.AreEqual(23.25' (new[] { 24' 7' 28' 34 }).Average());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnInt32,The following statement contains a magic number: Assert.AreEqual(23.25' (new[] { 24' 7' 28' 34 }).Average());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnInt32,The following statement contains a magic number: Assert.AreEqual(23.25' (new[] { 24' 7' 28' 34 }).Average());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnInt64,The following statement contains a magic number: Assert.AreEqual(23.25' (new long[] { 24' 7' 28' 34 }).Average());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnInt64,The following statement contains a magic number: Assert.AreEqual(23.25' (new long[] { 24' 7' 28' 34 }).Average());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnInt64,The following statement contains a magic number: Assert.AreEqual(23.25' (new long[] { 24' 7' 28' 34 }).Average());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnInt64,The following statement contains a magic number: Assert.AreEqual(23.25' (new long[] { 24' 7' 28' 34 }).Average());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnInt64,The following statement contains a magic number: Assert.AreEqual(23.25' (new long[] { 24' 7' 28' 34 }).Average());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnLongNullable,The following statement contains a magic number: var list = new List<long?>              {                  2'                  3              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnLongNullable,The following statement contains a magic number: var list = new List<long?>              {                  2'                  3              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestAverageOnLongNullable,The following statement contains a magic number: Assert.AreEqual(2.5d' list.Average());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestCastToImplementedType,The following statement contains a magic number: var ints = new[] { 42' 12 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestCastToImplementedType,The following statement contains a magic number: var ints = new[] { 42' 12 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestFirst,The following statement contains a magic number: int[] data = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestFirst,The following statement contains a magic number: int[] data = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestLast,The following statement contains a magic number: int[] data = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestLast,The following statement contains a magic number: int[] data = { 1' 2' 3 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestLast,The following statement contains a magic number: Assert.AreEqual(3' data.Last());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestMax,The following statement contains a magic number: int[] data = { 1' 3' 5' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestMax,The following statement contains a magic number: int[] data = { 1' 3' 5' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestMax,The following statement contains a magic number: int[] data = { 1' 3' 5' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestMax,The following statement contains a magic number: Assert.AreEqual(5' data.Max());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestMaxNullableInt32,The following statement contains a magic number: data = new int?[] { null' 1' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestMin,The following statement contains a magic number: int[] data = { 3' 5' 2' 6' 1' 7 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestMin,The following statement contains a magic number: int[] data = { 3' 5' 2' 6' 1' 7 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestMin,The following statement contains a magic number: int[] data = { 3' 5' 2' 6' 1' 7 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestMin,The following statement contains a magic number: int[] data = { 3' 5' 2' 6' 1' 7 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestMin,The following statement contains a magic number: int[] data = { 3' 5' 2' 6' 1' 7 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestMinNullableInt32,The following statement contains a magic number: data = new int?[] { null' 1' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestMinNullableInt32,The following statement contains a magic number: Assert.AreEqual(-2' data.Min(x => -x));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderBy,The following statement contains a magic number: int[] array = { 14' 53' 3' 9' 11' 14' 5' 32' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderBy,The following statement contains a magic number: int[] array = { 14' 53' 3' 9' 11' 14' 5' 32' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderBy,The following statement contains a magic number: int[] array = { 14' 53' 3' 9' 11' 14' 5' 32' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderBy,The following statement contains a magic number: int[] array = { 14' 53' 3' 9' 11' 14' 5' 32' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderBy,The following statement contains a magic number: int[] array = { 14' 53' 3' 9' 11' 14' 5' 32' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderBy,The following statement contains a magic number: int[] array = { 14' 53' 3' 9' 11' 14' 5' 32' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderBy,The following statement contains a magic number: int[] array = { 14' 53' 3' 9' 11' 14' 5' 32' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderBy,The following statement contains a magic number: int[] array = { 14' 53' 3' 9' 11' 14' 5' 32' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderBy,The following statement contains a magic number: int[] array = { 14' 53' 3' 9' 11' 14' 5' 32' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByAgeAscendingTheByNameDescending,The following statement contains a magic number: var expected = new[] {                  new Baz ("jb"' 7)'                  new Baz ("ana"' 20)'                  new Baz ("ro"' 25)'                  new Baz ("jb"' 25)'                  new Baz ("reg"' 28)'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByAgeAscendingTheByNameDescending,The following statement contains a magic number: var expected = new[] {                  new Baz ("jb"' 7)'                  new Baz ("ana"' 20)'                  new Baz ("ro"' 25)'                  new Baz ("jb"' 25)'                  new Baz ("reg"' 28)'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByAgeAscendingTheByNameDescending,The following statement contains a magic number: var expected = new[] {                  new Baz ("jb"' 7)'                  new Baz ("ana"' 20)'                  new Baz ("ro"' 25)'                  new Baz ("jb"' 25)'                  new Baz ("reg"' 28)'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByAgeAscendingTheByNameDescending,The following statement contains a magic number: var expected = new[] {                  new Baz ("jb"' 7)'                  new Baz ("ana"' 20)'                  new Baz ("ro"' 25)'                  new Baz ("jb"' 25)'                  new Baz ("reg"' 28)'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByAgeAscendingTheByNameDescending,The following statement contains a magic number: var expected = new[] {                  new Baz ("jb"' 7)'                  new Baz ("ana"' 20)'                  new Baz ("ro"' 25)'                  new Baz ("jb"' 25)'                  new Baz ("reg"' 28)'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var data = new[] {                  new { Key = true' Value = 1}'                                                  new { Key = false' Value = 2}'                  new { Key = true' Value = 3}'                                                  new { Key = false' Value = 4}'                  new { Key = true' Value = 5}'                                                  new { Key = false' Value = 6}'                  new { Key = true' Value = 7}'                                                  new { Key = false' Value = 8}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var data = new[] {                  new { Key = true' Value = 1}'                                                  new { Key = false' Value = 2}'                  new { Key = true' Value = 3}'                                                  new { Key = false' Value = 4}'                  new { Key = true' Value = 5}'                                                  new { Key = false' Value = 6}'                  new { Key = true' Value = 7}'                                                  new { Key = false' Value = 8}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var data = new[] {                  new { Key = true' Value = 1}'                                                  new { Key = false' Value = 2}'                  new { Key = true' Value = 3}'                                                  new { Key = false' Value = 4}'                  new { Key = true' Value = 5}'                                                  new { Key = false' Value = 6}'                  new { Key = true' Value = 7}'                                                  new { Key = false' Value = 8}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var data = new[] {                  new { Key = true' Value = 1}'                                                  new { Key = false' Value = 2}'                  new { Key = true' Value = 3}'                                                  new { Key = false' Value = 4}'                  new { Key = true' Value = 5}'                                                  new { Key = false' Value = 6}'                  new { Key = true' Value = 7}'                                                  new { Key = false' Value = 8}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var data = new[] {                  new { Key = true' Value = 1}'                                                  new { Key = false' Value = 2}'                  new { Key = true' Value = 3}'                                                  new { Key = false' Value = 4}'                  new { Key = true' Value = 5}'                                                  new { Key = false' Value = 6}'                  new { Key = true' Value = 7}'                                                  new { Key = false' Value = 8}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var data = new[] {                  new { Key = true' Value = 1}'                                                  new { Key = false' Value = 2}'                  new { Key = true' Value = 3}'                                                  new { Key = false' Value = 4}'                  new { Key = true' Value = 5}'                                                  new { Key = false' Value = 6}'                  new { Key = true' Value = 7}'                                                  new { Key = false' Value = 8}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var data = new[] {                  new { Key = true' Value = 1}'                                                  new { Key = false' Value = 2}'                  new { Key = true' Value = 3}'                                                  new { Key = false' Value = 4}'                  new { Key = true' Value = 5}'                                                  new { Key = false' Value = 6}'                  new { Key = true' Value = 7}'                                                  new { Key = false' Value = 8}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var data = new[] {                  new { Key = true' Value = 1}'                                                  new { Key = false' Value = 2}'                  new { Key = true' Value = 3}'                                                  new { Key = false' Value = 4}'                  new { Key = true' Value = 5}'                                                  new { Key = false' Value = 6}'                  new { Key = true' Value = 7}'                                                  new { Key = false' Value = 8}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var data = new[] {                  new { Key = true' Value = 1}'                                                  new { Key = false' Value = 2}'                  new { Key = true' Value = 3}'                                                  new { Key = false' Value = 4}'                  new { Key = true' Value = 5}'                                                  new { Key = false' Value = 6}'                  new { Key = true' Value = 7}'                                                  new { Key = false' Value = 8}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var expected = new[] {                  new { Key = true' Value = 1}'                  new { Key = true' Value = 3}'                  new { Key = true' Value = 5}'                  new { Key = true' Value = 7}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 2}'                                                  new { Key = false' Value = 4}'                                                  new { Key = false' Value = 6}'                                                  new { Key = false' Value = 8}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var expected = new[] {                  new { Key = true' Value = 1}'                  new { Key = true' Value = 3}'                  new { Key = true' Value = 5}'                  new { Key = true' Value = 7}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 2}'                                                  new { Key = false' Value = 4}'                                                  new { Key = false' Value = 6}'                                                  new { Key = false' Value = 8}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var expected = new[] {                  new { Key = true' Value = 1}'                  new { Key = true' Value = 3}'                  new { Key = true' Value = 5}'                  new { Key = true' Value = 7}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 2}'                                                  new { Key = false' Value = 4}'                                                  new { Key = false' Value = 6}'                                                  new { Key = false' Value = 8}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var expected = new[] {                  new { Key = true' Value = 1}'                  new { Key = true' Value = 3}'                  new { Key = true' Value = 5}'                  new { Key = true' Value = 7}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 2}'                                                  new { Key = false' Value = 4}'                                                  new { Key = false' Value = 6}'                                                  new { Key = false' Value = 8}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var expected = new[] {                  new { Key = true' Value = 1}'                  new { Key = true' Value = 3}'                  new { Key = true' Value = 5}'                  new { Key = true' Value = 7}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 2}'                                                  new { Key = false' Value = 4}'                                                  new { Key = false' Value = 6}'                                                  new { Key = false' Value = 8}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var expected = new[] {                  new { Key = true' Value = 1}'                  new { Key = true' Value = 3}'                  new { Key = true' Value = 5}'                  new { Key = true' Value = 7}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 2}'                                                  new { Key = false' Value = 4}'                                                  new { Key = false' Value = 6}'                                                  new { Key = false' Value = 8}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var expected = new[] {                  new { Key = true' Value = 1}'                  new { Key = true' Value = 3}'                  new { Key = true' Value = 5}'                  new { Key = true' Value = 7}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 2}'                                                  new { Key = false' Value = 4}'                                                  new { Key = false' Value = 6}'                                                  new { Key = false' Value = 8}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var expected = new[] {                  new { Key = true' Value = 1}'                  new { Key = true' Value = 3}'                  new { Key = true' Value = 5}'                  new { Key = true' Value = 7}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 2}'                                                  new { Key = false' Value = 4}'                                                  new { Key = false' Value = 6}'                                                  new { Key = false' Value = 8}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByDescendingStability,The following statement contains a magic number: var expected = new[] {                  new { Key = true' Value = 1}'                  new { Key = true' Value = 3}'                  new { Key = true' Value = 5}'                  new { Key = true' Value = 7}'                  new { Key = true' Value = 9}'                                                  new { Key = false' Value = 2}'                                                  new { Key = false' Value = 4}'                                                  new { Key = false' Value = 6}'                                                  new { Key = false' Value = 8}'                                                  new { Key = false' Value = 10}'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByIdDescendingThenByNameAscending,The following statement contains a magic number: Assert.AreEqual("bcd"' list[2].Name);
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestOrderByIdDescendingThenByNameAscending,The following statement contains a magic number: Assert.AreEqual("Zyx"' list[3].Name);
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestRange,The following statement contains a magic number: AssertAreSame(new[] { 1' 2' 3' 4 }' Enumerable.Range(1' 4));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestRange,The following statement contains a magic number: AssertAreSame(new[] { 1' 2' 3' 4 }' Enumerable.Range(1' 4));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestRange,The following statement contains a magic number: AssertAreSame(new[] { 1' 2' 3' 4 }' Enumerable.Range(1' 4));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestRange,The following statement contains a magic number: AssertAreSame(new[] { 1' 2' 3' 4 }' Enumerable.Range(1' 4));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestRange,The following statement contains a magic number: AssertAreSame(new[] { 0' 1' 2' 3 }' Enumerable.Range(0' 4));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestRange,The following statement contains a magic number: AssertAreSame(new[] { 0' 1' 2' 3 }' Enumerable.Range(0' 4));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestRange,The following statement contains a magic number: AssertAreSame(new[] { 0' 1' 2' 3 }' Enumerable.Range(0' 4));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestReverse,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestReverse,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestReverse,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestReverse,The following statement contains a magic number: int[] result = { 4' 3' 2' 1' 0 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestReverse,The following statement contains a magic number: int[] result = { 4' 3' 2' 1' 0 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestReverse,The following statement contains a magic number: int[] result = { 4' 3' 2' 1' 0 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestReverse,The following statement contains a magic number: AssertAreSame(result' Enumerable.Range(0' 5).Reverse());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: int[] result = { 1' 3' 5' 7' 9 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: int[] result = { 1' 3' 5' 7' 9 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: int[] result = { 1' 3' 5' 7' 9 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: int[] result = { 1' 3' 5' 7' 9 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSelect,The following statement contains a magic number: AssertAreSame(result' data.Where(i => i % 2 != 0));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSequenceEqual,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSequenceEqual,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSequenceEqual,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSequenceEqual,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSequenceEqual,The following statement contains a magic number: int[] second = { 0' 1' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSequenceEqual,The following statement contains a magic number: int[] third = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSequenceEqual,The following statement contains a magic number: int[] third = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSequenceEqual,The following statement contains a magic number: int[] third = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSequenceEqual,The following statement contains a magic number: int[] third = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleExcept,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleExcept,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleExcept,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleExcept,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleExcept,The following statement contains a magic number: int[] second = { 2' 4' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleExcept,The following statement contains a magic number: int[] second = { 2' 4' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleExcept,The following statement contains a magic number: int[] second = { 2' 4' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleExcept,The following statement contains a magic number: int[] result = { 0' 1' 3' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleExcept,The following statement contains a magic number: int[] result = { 0' 1' 3' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleIntersect,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleIntersect,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleIntersect,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleIntersect,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleIntersect,The following statement contains a magic number: int[] second = { 2' 4' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleIntersect,The following statement contains a magic number: int[] second = { 2' 4' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleIntersect,The following statement contains a magic number: int[] second = { 2' 4' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleIntersect,The following statement contains a magic number: int[] result = { 2' 4 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleIntersect,The following statement contains a magic number: int[] result = { 2' 4 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleUnion,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleUnion,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleUnion,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleUnion,The following statement contains a magic number: int[] first = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleUnion,The following statement contains a magic number: int[] second = { 2' 4' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleUnion,The following statement contains a magic number: int[] second = { 2' 4' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleUnion,The following statement contains a magic number: int[] second = { 2' 4' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleUnion,The following statement contains a magic number: int[] result = { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleUnion,The following statement contains a magic number: int[] result = { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleUnion,The following statement contains a magic number: int[] result = { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleUnion,The following statement contains a magic number: int[] result = { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSimpleUnion,The following statement contains a magic number: int[] result = { 0' 1' 2' 3' 4' 5' 6 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkip,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkip,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkip,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkip,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkip,The following statement contains a magic number: int[] result = { 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkip,The following statement contains a magic number: int[] result = { 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkip,The following statement contains a magic number: int[] result = { 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkip,The following statement contains a magic number: AssertAreSame(result' data.Skip(3));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkipWhile,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkipWhile,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkipWhile,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkipWhile,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkipWhile,The following statement contains a magic number: int[] result = { 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkipWhile,The following statement contains a magic number: int[] result = { 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkipWhile,The following statement contains a magic number: int[] result = { 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSkipWhile,The following statement contains a magic number: AssertAreSame(result' data.SkipWhile(i => i < 3));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSum,The following statement contains a magic number: int[] data = { 1' 2' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSum,The following statement contains a magic number: int[] data = { 1' 2' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSum,The following statement contains a magic number: int[] data = { 1' 2' 3' 4 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestSum,The following statement contains a magic number: Assert.AreEqual(10' data.Sum());
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTake,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTake,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTake,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTake,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTake,The following statement contains a magic number: int[] result = { 0' 1' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTake,The following statement contains a magic number: AssertAreSame(result' data.Take(3));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTakeTakesProperNumberOfItems,The following statement contains a magic number: var stream = new MemoryStream(new byte[] { 1' 2' 3' 4' 0 });
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTakeTakesProperNumberOfItems,The following statement contains a magic number: var stream = new MemoryStream(new byte[] { 1' 2' 3' 4' 0 });
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTakeTakesProperNumberOfItems,The following statement contains a magic number: var stream = new MemoryStream(new byte[] { 1' 2' 3' 4' 0 });
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTakeTakesProperNumberOfItems,The following statement contains a magic number: AsEnumerable(stream).Take(2)
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTakeTakesProperNumberOfItems,The following statement contains a magic number: Assert.AreEqual(2' stream.Position);
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTakeWhile,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTakeWhile,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTakeWhile,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTakeWhile,The following statement contains a magic number: int[] data = { 0' 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTakeWhile,The following statement contains a magic number: int[] result = { 0' 1' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestTakeWhile,The following statement contains a magic number: AssertAreSame(result' data.TakeWhile(i => i < 3));
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestToArray,The following statement contains a magic number: ICollection<int> coll = new List<int>              {                  0'                  1'                  2              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestToArray,The following statement contains a magic number: int[] result = { 0' 1' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestToList,The following statement contains a magic number: int[] data = { 3' 5' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestToList,The following statement contains a magic number: int[] data = { 3' 5' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,TestToList,The following statement contains a magic number: int[] data = { 3' 5' 2 };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,CreateBazCollection,The following statement contains a magic number: return new[] {                  new Baz ("jb"' 25)'                  new Baz ("ana"' 20)'                  new Baz ("reg"' 28)'                  new Baz ("ro"' 25)'                  new Baz ("jb"' 7)'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,CreateBazCollection,The following statement contains a magic number: return new[] {                  new Baz ("jb"' 25)'                  new Baz ("ana"' 20)'                  new Baz ("reg"' 28)'                  new Baz ("ro"' 25)'                  new Baz ("jb"' 7)'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,CreateBazCollection,The following statement contains a magic number: return new[] {                  new Baz ("jb"' 25)'                  new Baz ("ana"' 20)'                  new Baz ("reg"' 28)'                  new Baz ("ro"' 25)'                  new Baz ("jb"' 7)'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,CreateBazCollection,The following statement contains a magic number: return new[] {                  new Baz ("jb"' 25)'                  new Baz ("ana"' 20)'                  new Baz ("reg"' 28)'                  new Baz ("ro"' 25)'                  new Baz ("jb"' 7)'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,CreateBazCollection,The following statement contains a magic number: return new[] {                  new Baz ("jb"' 25)'                  new Baz ("ana"' 20)'                  new Baz ("reg"' 28)'                  new Baz ("ro"' 25)'                  new Baz ("jb"' 7)'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,CreateData,The following statement contains a magic number: return new[] {                  new Data { Id = 10' Name = "bcd" }'                  new Data { Id = 20' Name = "Abcd" }'                  new Data { Id = 20' Name = "Ab" }'                  new Data { Id = 10' Name = "Zyx" }'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,CreateData,The following statement contains a magic number: return new[] {                  new Data { Id = 10' Name = "bcd" }'                  new Data { Id = 20' Name = "Abcd" }'                  new Data { Id = 20' Name = "Ab" }'                  new Data { Id = 10' Name = "Zyx" }'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,CreateData,The following statement contains a magic number: return new[] {                  new Data { Id = 10' Name = "bcd" }'                  new Data { Id = 20' Name = "Abcd" }'                  new Data { Id = 20' Name = "Ab" }'                  new Data { Id = 10' Name = "Zyx" }'              };
Magic Number,MonoTests.System.Linq,EnumerableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,CreateData,The following statement contains a magic number: return new[] {                  new Data { Id = 10' Name = "bcd" }'                  new Data { Id = 20' Name = "Abcd" }'                  new Data { Id = 20' Name = "Ab" }'                  new Data { Id = 10' Name = "Zyx" }'              };
Magic Number,MonoTests.System.Linq,Bingo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,GetEnumerator,The following statement contains a magic number: yield return 42;
Magic Number,MonoTests.System.Linq,Bingo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\EnumerableTest.cs,GetEnumerator,The following statement contains a magic number: yield return 12;
Magic Number,MonoTests.System.Linq,LookupTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTest.cs,LookupNullKeyNone,The following statement contains a magic number: Assert.AreEqual(2' lookup.Count);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupIsImmediate,The following statement contains a magic number: var src = new IterateAndCount(10);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupIsImmediate,The following statement contains a magic number: var a = src.ToLookup(i => i > 5' null);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupIsImmediate,The following statement contains a magic number: var b = src.ToLookup(i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupIsImmediate,The following statement contains a magic number: Assert.AreEqual(src.Total' 20);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupIsImmediate,The following statement contains a magic number: Assert.AreEqual(src.Total' 20);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var r = src.ToLookup(i => i > 5' null);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: Assert.AreEqual(count' 5);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: Assert.AreEqual(index' 10);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var r = src.ToLookup(i => i > 5' null);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: Assert.AreEqual(g.Count()' 5);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var r = src.ToLookup(i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: Assert.AreEqual(count' 5);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: Assert.AreEqual(index' 10);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var r = src.ToLookup(i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,MonoTests.System.Linq,LookUpTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\LookUpTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: Assert.AreEqual(g.Count()' 5);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest.cs,CompileActionDiscardingRetValue,The following statement contains a magic number: const int Value = 42;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest.cs,GetActionTypeArgTooBig,The following statement contains a magic number: const int Value = 45;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest.cs,GetFuncTypeArgTooBig,The following statement contains a magic number: const int Value = 64;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest.cs,HoistedParameter,The following statement contains a magic number: const int Value = 42;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,AddTestNullable,The following statement contains a magic number: const int ValueRight = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,ArgTypesDifferent,The following statement contains a magic number: const double ValueRight = 2.0;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,CompileAdd,The following statement contains a magic number: var input = new[]              {                  (Left: 6' Right: 6)'                  (Left: -1' Right: 1)'                  (Left: 1' Right: -3)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,CompileAdd,The following statement contains a magic number: var input = new[]              {                  (Left: 6' Right: 6)'                  (Left: -1' Right: 1)'                  (Left: 1' Right: -3)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,CompileAdd,The following statement contains a magic number: var input = new[]              {                  (Left: 6' Right: 6)'                  (Left: -1' Right: 1)'                  (Left: 1' Right: -3)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,Nullable,The following statement contains a magic number: int? valueRight = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,Numeric,The following statement contains a magic number: const int ValueRight = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,TestMethodAddition,The following statement contains a magic number: const int ValueRight = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedAdd,The following statement contains a magic number: var input = new[]              {                  (Left: 21' Right: 21)'                  (Left: 1' Right: -1)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedAdd,The following statement contains a magic number: var input = new[]              {                  (Left: 21' Right: 21)'                  (Left: 1' Right: -1)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedAddLifted,The following statement contains a magic number: const int ValueLeft = 21;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedAddLifted,The following statement contains a magic number: const int ValueRight = 21;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedFromNullableToNullableAdd,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: null' Right: null)'                  (Left: 2' Right: null)'                  (Left: null' Right: 2)'                  (Left: 2' Right: 2)'                  (Left: 2' Right: -2)'              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedFromNullableToNullableAdd,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: null' Right: null)'                  (Left: 2' Right: null)'                  (Left: null' Right: 2)'                  (Left: 2' Right: 2)'                  (Left: 2' Right: -2)'              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedFromNullableToNullableAdd,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: null' Right: null)'                  (Left: 2' Right: null)'                  (Left: null' Right: 2)'                  (Left: 2' Right: 2)'                  (Left: 2' Right: -2)'              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedFromNullableToNullableAdd,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: null' Right: null)'                  (Left: 2' Right: null)'                  (Left: null' Right: 2)'                  (Left: 2' Right: 2)'                  (Left: 2' Right: -2)'              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedFromNullableToNullableAdd,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: null' Right: null)'                  (Left: 2' Right: null)'                  (Left: null' Right: 2)'                  (Left: 2' Right: 2)'                  (Left: 2' Right: -2)'              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedFromNullableToNullableAdd,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: null' Right: null)'                  (Left: 2' Right: null)'                  (Left: null' Right: 2)'                  (Left: 2' Right: 2)'                  (Left: 2' Right: -2)'              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedToNullableAdd,The following statement contains a magic number: var input = new[]              {                  (Left: 2' Right: 2)'                  (Left: 2' Right: -2)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedToNullableAdd,The following statement contains a magic number: var input = new[]              {                  (Left: 2' Right: 2)'                  (Left: 2' Right: -2)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedToNullableAdd,The following statement contains a magic number: var input = new[]              {                  (Left: 2' Right: 2)'                  (Left: 2' Right: -2)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAdd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,UserDefinedToNullableAdd,The following statement contains a magic number: var input = new[]              {                  (Left: 2' Right: 2)'                  (Left: 2' Right: -2)              };
Magic Number,MonoTests.System.Linq.Expressions,S,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Add.cs,MyAdder,The following statement contains a magic number: return 1000;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAddChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AddChecked.cs,ArgTypesDifferent,The following statement contains a magic number: const double ValueRight = 2.0;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAddChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AddChecked.cs,Nullable,The following statement contains a magic number: int? valueRight = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAddChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AddChecked.cs,Numeric,The following statement contains a magic number: const int ValueRight = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAddChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AddChecked.cs,TestNoOverflow,The following statement contains a magic number: MustNotOverflow(10' 20);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAddChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AddChecked.cs,TestNoOverflow,The following statement contains a magic number: MustNotOverflow(10' 20);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAddChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AddChecked.cs,TestNoOverflow,The following statement contains a magic number: InvalidOperation<byte>(byte.MaxValue' 2);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAddChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AddChecked.cs,TestNoOverflow,The following statement contains a magic number: InvalidOperation<sbyte>(sbyte.MaxValue' 2);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAddChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AddChecked.cs,TestOverflows,The following statement contains a magic number: MustOverflow(int.MinValue' -11);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAnd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_And.cs,Double,The following statement contains a magic number: const double ValueRight = 2.0;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAnd,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_And.cs,Integer,The following statement contains a magic number: const int ValueRight = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,Double,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.AndAlso(Expression.Constant(1.0)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,Integer,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.AndAlso(Expression.Constant(1)' Expression.Constant(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlso,The following statement contains a magic number: var input = new[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlso,The following statement contains a magic number: var input = new[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlso,The following statement contains a magic number: var input = new[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlso,The following statement contains a magic number: var input = new[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlso,The following statement contains a magic number: var input = new[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlso,The following statement contains a magic number: var input = new[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlso,The following statement contains a magic number: var input = new[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlso,The following statement contains a magic number: var input = new[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlsoLiftedToNull,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)'                  (Left: null' Right: 64)'                  (Left: 64' Right: null)'                  (Left: null' Right: null)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlsoLiftedToNull,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)'                  (Left: null' Right: 64)'                  (Left: 64' Right: null)'                  (Left: null' Right: null)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlsoLiftedToNull,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)'                  (Left: null' Right: 64)'                  (Left: 64' Right: null)'                  (Left: null' Right: null)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlsoLiftedToNull,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)'                  (Left: null' Right: 64)'                  (Left: 64' Right: null)'                  (Left: null' Right: null)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlsoLiftedToNull,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)'                  (Left: null' Right: 64)'                  (Left: 64' Right: null)'                  (Left: null' Right: null)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlsoLiftedToNull,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)'                  (Left: null' Right: 64)'                  (Left: 64' Right: null)'                  (Left: null' Right: null)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlsoLiftedToNull,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)'                  (Left: null' Right: 64)'                  (Left: 64' Right: null)'                  (Left: null' Right: null)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlsoLiftedToNull,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)'                  (Left: null' Right: 64)'                  (Left: 64' Right: null)'                  (Left: null' Right: null)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlsoLiftedToNull,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)'                  (Left: null' Right: 64)'                  (Left: 64' Right: null)'                  (Left: null' Right: null)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestAndAlso,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_AndAlso.cs,UserDefinedAndAlsoLiftedToNull,The following statement contains a magic number: var input = new (int? Left' int? Right)[]              {                  (Left: 64' Right: 64)'                  (Left: 64' Right: 32)'                  (Left: 32' Right: 64)'                  (Left: 32' Right: 32)'                  (Left: null' Right: 64)'                  (Left: 64' Right: null)'                  (Left: null' Right: null)              };
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileClassArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[2]' compiled(array' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileClassArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[2]' compiled(array' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileClassArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[3]' compiled(array' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileClassArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[3]' compiled(array' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileEnumArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[2]' compiled(array' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileEnumArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[2]' compiled(array' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileEnumArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[3]' compiled(array' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileEnumArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[3]' compiled(array' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileIntArrayAccess,The following statement contains a magic number: var array = new[] {1' 2' 3' 4};
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileIntArrayAccess,The following statement contains a magic number: var array = new[] {1' 2' 3' 4};
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileIntArrayAccess,The following statement contains a magic number: var array = new[] {1' 2' 3' 4};
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileIntArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[2]' compiled(array' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileIntArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[2]' compiled(array' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileIntArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[3]' compiled(array' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileIntArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[3]' compiled(array' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileShortArrayAccess,The following statement contains a magic number: var array = new short[] {1' 2' 3' 4};
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileShortArrayAccess,The following statement contains a magic number: var array = new short[] {1' 2' 3' 4};
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileShortArrayAccess,The following statement contains a magic number: var array = new short[] {1' 2' 3' 4};
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileShortArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[2]' compiled(array' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileShortArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[2]' compiled(array' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileShortArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[3]' compiled(array' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileShortArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[3]' compiled(array' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileStructArrayAccess,The following statement contains a magic number: var array = new[] {new Bar(0)' new Bar(1)' new Bar(2)' new Bar(3)};
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileStructArrayAccess,The following statement contains a magic number: var array = new[] {new Bar(0)' new Bar(1)' new Bar(2)' new Bar(3)};
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileStructArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[3]' compiled(array' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileStructArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[3]' compiled(array' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileStructArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[2]' compiled(array' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileStructArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[2]' compiled(array' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileStructArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[3].Value' compiled(array' 3).Value);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileStructArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[3].Value' compiled(array' 3).Value);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileStructArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[2].Value' compiled(array' 2).Value);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,CompileStructArrayAccess,The following statement contains a magic number: Assert.AreEqual(array[2].Value' compiled(array' 2).Value);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,Rank1Struct,The following statement contains a magic number: const int Value = 42;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayIndex,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayIndex.cs,Rank2Struct,The following statement contains a magic number: const int Value = 42;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayLength,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayLength.cs,CompileObjectArrayLengthB,The following statement contains a magic number: Assert.AreEqual(2' compiled(new object[] {ValueA' ValueB}));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestArrayLength,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ArrayLength.cs,CompileStringArrayLengthB,The following statement contains a magic number: Assert.AreEqual(2' compiled(new[] {ValueA' ValueB}));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Bind.cs,BindValueTypes,The following statement contains a magic number: const int Left = 42;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,OneStaticMethod,The following statement contains a magic number: return 42;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,DoSomethingWith,The following statement contains a magic number: return a + 4;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,FooOut2,The following statement contains a magic number: x = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,FooOut2,The following statement contains a magic number: return 3;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,Truc,The following statement contains a magic number: return 42;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CallNullableGetValueOrDefault,The following statement contains a magic number: Assert.AreEqual(2' compiled(null' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CallNullableGetValueOrDefault,The following statement contains a magic number: Assert.AreEqual(2' compiled(null' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CallNullableGetValueOrDefault,The following statement contains a magic number: Assert.AreEqual(4' compiled(4' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CallNullableGetValueOrDefault,The following statement contains a magic number: Assert.AreEqual(4' compiled(4' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CallNullableGetValueOrDefault,The following statement contains a magic number: Assert.AreEqual(4' compiled(4' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CallQueryableWhere,The following statement contains a magic number: var queryable = new[] {1' 2' 3}.AsQueryable();
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CallQueryableWhere,The following statement contains a magic number: var queryable = new[] {1' 2' 3}.AsQueryable();
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CallQueryableWhere,The following statement contains a magic number: var lambda = Expression.Lambda<Func<int' bool>>              (                  Expression.LessThan(parameter' Expression.Constant(2))'                  parameter              );
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CallStaticMethodWithRefParameter,The following statement contains a magic number: Assert.AreEqual(42' compiled(38));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CallStaticMethodWithRefParameter,The following statement contains a magic number: Assert.AreEqual(42' compiled(38));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CallStaticMethodWithRefParameterAndOtherParameter,The following statement contains a magic number: Assert.AreEqual("foo42"' compiled(42' "foo"));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CheckTypeArgsIsNotUsedForParameterLookup,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.Call(GetType()' "EineMethod"' new[] {typeof(string)' typeof(int)}' "foo".ToConstant()' 2.ToConstant()));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CheckTypeArgsIsUsedForGenericArguments,The following statement contains a magic number: var m = Expression.Call(GetType()' nameof(AGenericMethod)' new[] {typeof(string)' typeof(int)}' "foo".ToConstant()' 2.ToConstant());
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CompileSimpleStaticCall,The following statement contains a magic number: Assert.AreEqual(2' compiled(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,CompileSimpleStaticCall,The following statement contains a magic number: Assert.AreEqual(2' compiled(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,Connect282702,The following statement contains a magic number: Assert.AreEqual(42' compiled().Invoke());
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,Connect290278,The following statement contains a magic number: Assert.AreEqual(3' compiled(data));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,Connect290278,The following statement contains a magic number: Assert.AreEqual(2' data[0' 0]);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCall,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Call.cs,MethodArgumentDoesNotMatchParameterType,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Expression.Call(Expression.New(typeof(Foo))' typeof(Foo).GetMethod(nameof(Foo.Bar))' Expression.Constant(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableInt,The following statement contains a magic number: Assert.AreEqual((int?)1' compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableInt,The following statement contains a magic number: Assert.AreEqual((int?)2' compiled(null' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableInt,The following statement contains a magic number: Assert.AreEqual((int?)2' compiled(null' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableInt,The following statement contains a magic number: Assert.AreEqual((int?)2' compiled(2' null));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableInt,The following statement contains a magic number: Assert.AreEqual((int?)2' compiled(2' null));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableSlotIntoInteger,The following statement contains a magic number: var compiled = Expression.Lambda<Func<Slot?' int>>              (                  Expression.Coalesce                  (                      s'                      Expression.Constant(-3)'                      Expression.Lambda                      (                          Expression.Convert(s' typeof(int)' method)'                          s                      )                  )' s              ).Compile();
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableSlotIntoInteger,The following statement contains a magic number: Assert.AreEqual(-3' compiled(null));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableSlotIntoInteger,The following statement contains a magic number: Assert.AreEqual(42' compiled(new Slot(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableSlotIntoInteger,The following statement contains a magic number: Assert.AreEqual(42' compiled(new Slot(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableToNonNullable,The following statement contains a magic number: var node = Expression.Coalesce(a' Expression.Constant(99' typeof(int)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableToNonNullable,The following statement contains a magic number: Assert.AreEqual(5' compiled(5));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableToNonNullable,The following statement contains a magic number: Assert.AreEqual(5' compiled(5));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceNullableToNonNullable,The following statement contains a magic number: Assert.AreEqual(99' compiled(null));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceUserDefinedConversion,The following statement contains a magic number: var compiled = Expression.Lambda<Func<string' int>>              (                  Expression.Coalesce                  (                      s'                      Expression.Constant(42)'                      Expression.Lambda<Func<string' int>>                      (                          Expression.Call(typeof(int).GetMethod("Parse"' new[] {typeof(string)})' s)' s                      )                  )' s              ).Compile();
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceUserDefinedConversion,The following statement contains a magic number: Assert.AreEqual(12' compiled("12"));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceUserDefinedConversion,The following statement contains a magic number: Assert.AreEqual(42' compiled(null));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,CoalesceVoidUserDefinedConversion,The following statement contains a magic number: Assert.Throws<ArgumentException>              (                  () =>                  {                      var s = Expression.Parameter(typeof(string)' "s");                        Expression.Coalesce                      (                          s'                          42.ToConstant()'                          Expression.Lambda<Action<string>>                          (                              Expression.Call(typeof(int).GetMethod("Parse"' new[] {typeof(string)})' s)' s                          )                      );                  }              );
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,NonNullLeftParameter,The following statement contains a magic number: Assert.Throws<InvalidOperationException>              (                  () =>                  {                      // This throws because they are both doubles' which are never                      Expression.Coalesce(Expression.Constant(1.0)' Expression.Constant(2.0));                  }              );
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,WrongCoalesceConversionParameterCount,The following statement contains a magic number: Assert.Throws<ArgumentException>              (                  () =>                  {                      var s = Expression.Parameter(typeof(string)' "s");                      var p = Expression.Parameter(typeof(string)' "foo");                        Expression.Coalesce                      (                          s'                          42.ToConstant()'                          Expression.Lambda<Func<string' string' int>>                          (                              Expression.Call(typeof(int).GetMethod("Parse"' new[] {typeof(string)})' s)' s' p                          )                      );                  }              );
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,WrongCoalesceConversionParameterType,The following statement contains a magic number: Assert.Throws<InvalidOperationException>              (                  () =>                  {                      var s = Expression.Parameter(typeof(string)' "s");                      var i = Expression.Parameter(typeof(int)' "i");                        Expression.Coalesce                      (                          s'                          42.ToConstant()'                          Expression.Lambda<Func<int' int>>                          (                              i' i                          )                      );                  }              );
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCoalesce,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Coalesce.cs,WrongCoalesceConversionReturnType,The following statement contains a magic number: Assert.Throws<InvalidOperationException>              (                  () =>                  {                      var s = Expression.Parameter(typeof(string)' "s");                        Expression.Coalesce                      (                          s'                          42.ToConstant()'                          Expression.Lambda<Func<string' string>>                          (                              s' s                          )                      );                  }              );
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,Arg2Null,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => Expression.Condition(Expression.Equal(Expression.Constant(42)' Expression.Constant(42))' null' Expression.Constant(0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,Arg2Null,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => Expression.Condition(Expression.Equal(Expression.Constant(42)' Expression.Constant(42))' null' Expression.Constant(0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,Arg3Null,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => Expression.Condition(Expression.Equal(Expression.Constant(42)' Expression.Constant(42))' Expression.Constant(1)' null));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,Arg3Null,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => Expression.Condition(Expression.Equal(Expression.Constant(42)' Expression.Constant(42))' Expression.Constant(1)' null));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,TestNotBool,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Expression.Condition(Expression.Constant(42)' Expression.Constant(1)' Expression.Constant(0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,TestSimpleConditional,The following statement contains a magic number: var cond = Expression.Condition(Expression.GreaterThan(Expression.Constant(2)' Expression.Constant(1))' Expression.Constant(1)' Expression.Constant(0));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,TrueBlockTypeNotFalseBlockType,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Expression.Condition(Expression.Constant(42)' Expression.Constant(1.1)' Expression.Constant(0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestCondition,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Condition.cs,TrueBlockTypeNotFalseBlockType,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Expression.Condition(Expression.Constant(42)' Expression.Constant(1.1)' Expression.Constant(0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check(128)' 128' "int2");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check(128)' 128' "int2");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check(-128)' -128' "int3");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check(-128)' -128' "int3");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check<uint>(128)' 128' "uint");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check<uint>(128)' 128' "uint");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check<byte>(10)' 10' "byte");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check<byte>(10)' 10' "byte");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check<short>(128)' 128' "short");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check<short>(128)' 128' "short");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check<short>(-128)' -128' "short");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check<short>(-128)' -128' "short");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check<ushort>(128)' 128' "ushort");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check<ushort>(128)' 128' "ushort");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check<ushort>(200)' 200' "ushort");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check<ushort>(200)' 200' "ushort");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check(2.0f)' 2.0f' "float");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check(2.0f)' 2.0f' "float");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check(2.312)' 2.312' "double");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check(2.312)' 2.312' "double");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check(1.3m)' 1.3m' "");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check(1.3m)' 1.3m' "");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check(3147483647m)' 3147483647m' "decimal");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,ConstantCodeGen,The following statement contains a magic number: Assert.AreEqual(Check(3147483647m)' 3147483647m' "decimal");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,DateTimeValue,The following statement contains a magic number: var expr = Expression.Constant(new DateTime(1971' 10' 19));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,DateTimeValue,The following statement contains a magic number: var expr = Expression.Constant(new DateTime(1971' 10' 19));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,DateTimeValue,The following statement contains a magic number: var expr = Expression.Constant(new DateTime(1971' 10' 19));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,DateTimeValue,The following statement contains a magic number: Assert.AreEqual(new DateTime(1971' 10' 19)' expr.Value' "Constant#26");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,DateTimeValue,The following statement contains a magic number: Assert.AreEqual(new DateTime(1971' 10' 19)' expr.Value' "Constant#26");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,DateTimeValue,The following statement contains a magic number: Assert.AreEqual(new DateTime(1971' 10' 19)' expr.Value' "Constant#26");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,DateTimeValue,The following statement contains a magic number: Assert.AreEqual(new DateTime(1971' 10' 19).ToString()' expr.ToString()' "Constant#28");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,DateTimeValue,The following statement contains a magic number: Assert.AreEqual(new DateTime(1971' 10' 19).ToString()' expr.ToString()' "Constant#28");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,DateTimeValue,The following statement contains a magic number: Assert.AreEqual(new DateTime(1971' 10' 19).ToString()' expr.ToString()' "Constant#28");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,EmitDateTimeConstant,The following statement contains a magic number: var date = new DateTime(1983' 2' 6);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,EmitDateTimeConstant,The following statement contains a magic number: var date = new DateTime(1983' 2' 6);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,EmitDateTimeConstant,The following statement contains a magic number: var date = new DateTime(1983' 2' 6);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,EmitNullableInt,The following statement contains a magic number: var compiled = Expression.Lambda<Func<int?>>              (                  Expression.Constant((int?)42' typeof(int?))              ).Compile();
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConstant,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Constant.cs,EmitNullableInt,The following statement contains a magic number: Assert.AreEqual((int?)42' compiled());
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ChainedNullableConvert,The following statement contains a magic number: Assert.AreEqual((long?)3' compiled((sbyte?)3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ChainedNullableConvert,The following statement contains a magic number: Assert.AreEqual((long?)3' compiled((sbyte?)3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompileConvertClassWithExplicitOp,The following statement contains a magic number: Assert.AreEqual(42' compiled(new Klang(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompileConvertClassWithExplicitOp,The following statement contains a magic number: Assert.AreEqual(42' compiled(new Klang(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompileConvertStructWithImplicitOp,The following statement contains a magic number: Assert.AreEqual(42' compiled(new Kling(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompileConvertStructWithImplicitOp,The following statement contains a magic number: Assert.AreEqual(42' compiled(new Kling(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompiledBoxing,The following statement contains a magic number: var compiled = Expression.Lambda<Func<object>>              (                  Expression.Convert(42.ToConstant()' typeof(object))              ).Compile();
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompiledBoxing,The following statement contains a magic number: Assert.AreEqual(42' compiled());
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompiledConvertNullableToNullable,The following statement contains a magic number: Assert.AreEqual((short?)12' compiled(12));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompiledConvertNullableToNullable,The following statement contains a magic number: Assert.AreEqual((short?)12' compiled(12));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompiledConvertToSameType,The following statement contains a magic number: var k = new Klang(42);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompiledNullableBoxing,The following statement contains a magic number: Assert.AreEqual((int?)42' compiled(42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompiledNullableBoxing,The following statement contains a magic number: Assert.AreEqual((int?)42' compiled(42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompiledNullableUnboxing,The following statement contains a magic number: Assert.AreEqual((int?)42' compiled((int?)42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompiledNullableUnboxing,The following statement contains a magic number: Assert.AreEqual((int?)42' compiled((int?)42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompiledUnBoxing,The following statement contains a magic number: Assert.AreEqual(42' compiled(42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompiledUnBoxing,The following statement contains a magic number: Assert.AreEqual(42' compiled(42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompileNotNullableToNullable,The following statement contains a magic number: Assert.AreEqual((int?)42' compiled(42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompileNotNullableToNullable,The following statement contains a magic number: Assert.AreEqual((int?)42' compiled(42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompileNullableToNotNullable,The following statement contains a magic number: Assert.AreEqual(42' compiled(42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,CompileNullableToNotNullable,The following statement contains a magic number: Assert.AreEqual(42' compiled(42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ConvertCheckedInt32ToInt64,The following statement contains a magic number: var c = Expression.ConvertChecked              (                  Expression.Constant(2' typeof(int))' typeof(long)              );
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ConvertImplicitToShortToNullableInt,The following statement contains a magic number: Assert.AreEqual((int?)42' compiled(new ImplicitToShort(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ConvertImplicitToShortToNullableInt,The following statement contains a magic number: Assert.AreEqual((int?)42' compiled(new ImplicitToShort(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ConvertLongToDecimal,The following statement contains a magic number: Assert.AreEqual(42' compiled(42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ConvertLongToDecimal,The following statement contains a magic number: Assert.AreEqual(42' compiled(42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ConvertNullableImplictToIntToNullableLong,The following statement contains a magic number: Assert.AreEqual((long?)42' compiled(new ImplicitToInt(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ConvertNullableImplictToIntToNullableLong,The following statement contains a magic number: Assert.AreEqual((long?)42' compiled(new ImplicitToInt(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ConvertNullableULongToNullableDecimal,The following statement contains a magic number: Assert.AreEqual(42' compiled(42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,ConvertNullableULongToNullableDecimal,The following statement contains a magic number: Assert.AreEqual(42' compiled(42));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,NullableImplicitToShort,The following statement contains a magic number: Assert.AreEqual((short?)42' compiled(new ImplicitToShort(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestConvert,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Convert.cs,NullableImplicitToShort,The following statement contains a magic number: Assert.AreEqual((short?)42' compiled(new ImplicitToShort(42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestDivide,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Divide.cs,ArgTypesDifferent,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.Divide(Expression.Constant(1)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestDivide,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Divide.cs,Nullable,The following statement contains a magic number: int? b = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestDivide,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Divide.cs,Numeric,The following statement contains a magic number: var expr = Expression.Divide(Expression.Constant(1)' Expression.Constant(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,ArgTypesDifferent,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.Equal(Expression.Constant(1)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,Nullable_LiftToNull_SetToFalse,The following statement contains a magic number: int? b = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,Nullable_LiftToNull_SetToTrue,The following statement contains a magic number: int? b = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,Nullable_Mixed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>              (                  () =>                  {                      int? a = 1;                      const int B = 2;                        Expression.Equal                      (                          Expression.Constant(a' typeof(int?))'                          Expression.Constant(B' typeof(int))                      );                  }              );
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,NullableInt32Equal,The following statement contains a magic number: Assert.IsFalse(compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,NullableInt32EqualLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)false' compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,Numeric,The following statement contains a magic number: var expr = Expression.Equal(Expression.Constant(1)' Expression.Constant(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedEqual,The following statement contains a magic number: Assert.AreEqual(true' compiled(new Slot(21)' new Slot(21)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedEqual,The following statement contains a magic number: Assert.AreEqual(true' compiled(new Slot(21)' new Slot(21)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedEqualLifted,The following statement contains a magic number: Assert.AreEqual(false' compiled(new Slot(2)' null));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedEqualLifted,The following statement contains a magic number: Assert.AreEqual(false' compiled(null' new Slot(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedEqualLifted,The following statement contains a magic number: Assert.AreEqual(true' compiled(new Slot(21)' new Slot(21)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedEqualLifted,The following statement contains a magic number: Assert.AreEqual(true' compiled(new Slot(21)' new Slot(21)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedEqualLiftedToNull,The following statement contains a magic number: Assert.AreEqual(null' compiled(new Slot(2)' null));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedEqualLiftedToNull,The following statement contains a magic number: Assert.AreEqual(null' compiled(null' new Slot(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedEqualLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)true' compiled(new Slot(21)' new Slot(21)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedEqualLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)true' compiled(new Slot(21)' new Slot(21)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedEqualLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)false' compiled(new Slot(21)' new Slot(-21)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedEqualLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)false' compiled(new Slot(21)' new Slot(-21)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedToNullableEqual,The following statement contains a magic number: Assert.AreEqual((bool?)true' compiled(new SlotToNullable(2)' new SlotToNullable(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedToNullableEqual,The following statement contains a magic number: Assert.AreEqual((bool?)true' compiled(new SlotToNullable(2)' new SlotToNullable(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedToNullableEqual,The following statement contains a magic number: Assert.AreEqual((bool?)false' compiled(new SlotToNullable(2)' new SlotToNullable(-2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Equal.cs,UserDefinedToNullableEqual,The following statement contains a magic number: Assert.AreEqual((bool?)false' compiled(new SlotToNullable(2)' new SlotToNullable(-2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestExclusiveOr,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ExclusiveOr.cs,Double,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.ExclusiveOr(Expression.Constant(1.0)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestExclusiveOr,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ExclusiveOr.cs,Integer,The following statement contains a magic number: var expr = Expression.ExclusiveOr(Expression.Constant(1)' Expression.Constant(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThan.cs,Double,The following statement contains a magic number: var expr = Expression.GreaterThan(Expression.Constant(2.0)' Expression.Constant(1.0));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThan.cs,Integer,The following statement contains a magic number: var expr = Expression.GreaterThan(Expression.Constant(2)' Expression.Constant(1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThan.cs,NullableInt32GreaterThan,The following statement contains a magic number: Assert.IsFalse(compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThan.cs,NullableInt32GreaterThan,The following statement contains a magic number: Assert.IsTrue(compiled(2' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThan.cs,NullableInt32GreaterThanLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)false' compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThan.cs,NullableInt32GreaterThanLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)true' compiled(2' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThan.cs,TestCompiled,The following statement contains a magic number: Assert.AreEqual(true' compiled(10' 1)' "tc1");
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThanOrEqual.cs,Double,The following statement contains a magic number: var expr = Expression.GreaterThanOrEqual(Expression.Constant(2.0)' Expression.Constant(1.0));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThanOrEqual.cs,Integer,The following statement contains a magic number: var expr = Expression.GreaterThanOrEqual(Expression.Constant(2)' Expression.Constant(1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThanOrEqual.cs,NullableInt32GreaterThanOrEqual,The following statement contains a magic number: Assert.IsFalse(compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThanOrEqual.cs,NullableInt32GreaterThanOrEqual,The following statement contains a magic number: Assert.IsTrue(compiled(2' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThanOrEqual.cs,NullableInt32GreaterThanOrEqualLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)false' compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestGreaterThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_GreaterThanOrEqual.cs,NullableInt32GreaterThanOrEqualLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)true' compiled(2' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestInvoke,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Invoke.cs,ArgumentCountDoesntMatchParametersLength,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.Invoke(CreateInvokable<Action<int>>()' 1.ToConstant()' 2.ToConstant()));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestInvoke,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Invoke.cs,InvokeFunc,The following statement contains a magic number: Assert.AreEqual(2' invoke.Arguments.Count);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLambda,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Lambda.cs,CallDelegate,The following statement contains a magic number: return e(42);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLambda,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Lambda.cs,LambdaPassedAsDelegate,The following statement contains a magic number: Assert.AreEqual(42' compiled());
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLambda,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Lambda.cs,LambdaPassedAsDelegateUsingParentParameter,The following statement contains a magic number: Assert.AreEqual(84' compiled(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLambda,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Lambda.cs,LambdaPassedAsDelegateUsingParentParameter,The following statement contains a magic number: Assert.AreEqual(84' compiled(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLambda,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Lambda.cs,NestedParentParameterUse,The following statement contains a magic number: Assert.AreEqual(5' compiled(1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLambda,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Lambda.cs,ParameterRefTest,The following statement contains a magic number: var res = compiled(10' 20);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLambda,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Lambda.cs,ParameterRefTest,The following statement contains a magic number: var res = compiled(10' 20);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLambda,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Lambda.cs,ParameterRefTest,The following statement contains a magic number: Assert.AreEqual(res' 30);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,Arg2WrongType,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.LeftShift(Expression.Constant(1)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,CompileLeftShift,The following statement contains a magic number: Assert.AreEqual(12' compiled(6' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,CompileLeftShift,The following statement contains a magic number: Assert.AreEqual(12' compiled(6' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,CompileLeftShift,The following statement contains a magic number: Assert.AreEqual(96' compiled(12' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,CompileLeftShift,The following statement contains a magic number: Assert.AreEqual(96' compiled(12' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,CompileLeftShift,The following statement contains a magic number: Assert.AreEqual(96' compiled(12' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,Double,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.LeftShift(Expression.Constant(2.0)' Expression.Constant(1)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,Integer,The following statement contains a magic number: var expr = Expression.LeftShift(Expression.Constant(2)' Expression.Constant(1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,LeftShiftNullableLongAndInt,The following statement contains a magic number: Assert.AreEqual(null' compiled(null' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,LeftShiftNullableLongAndInt,The following statement contains a magic number: Assert.AreEqual(2048' compiled(1024' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,LeftShiftNullableLongAndInt,The following statement contains a magic number: Assert.AreEqual(2048' compiled(1024' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLeftShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LeftShift.cs,Nullable,The following statement contains a magic number: int? b = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLessThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThan.cs,Double,The following statement contains a magic number: var expr = Expression.LessThan(Expression.Constant(2.0)' Expression.Constant(1.0));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLessThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThan.cs,Integer,The following statement contains a magic number: var expr = Expression.LessThan(Expression.Constant(2)' Expression.Constant(1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLessThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThan.cs,NullableInt32LessThan,The following statement contains a magic number: Assert.IsTrue(compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLessThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThan.cs,NullableInt32LessThan,The following statement contains a magic number: Assert.IsFalse(compiled(2' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLessThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThan.cs,NullableInt32LessThanLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)true' compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLessThan,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThan.cs,NullableInt32LessThanLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)false' compiled(2' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLessThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThanOrEqual.cs,Double,The following statement contains a magic number: var expr = Expression.LessThanOrEqual(Expression.Constant(2.0)' Expression.Constant(1.0));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLessThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThanOrEqual.cs,Integer,The following statement contains a magic number: var expr = Expression.LessThanOrEqual(Expression.Constant(2)' Expression.Constant(1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLessThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThanOrEqual.cs,NullableInt32LessThanOrEqual,The following statement contains a magic number: Assert.IsTrue(compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLessThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThanOrEqual.cs,NullableInt32LessThanOrEqual,The following statement contains a magic number: Assert.IsFalse(compiled(2' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLessThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThanOrEqual.cs,NullableInt32LessThanOrEqualLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)true' compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestLessThanOrEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_LessThanOrEqual.cs,NullableInt32LessThanOrEqualLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)false' compiled(2' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestListBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ListBind.cs,CompiledListBinding,The following statement contains a magic number: Assert.AreEqual(3' foo.List.Count);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestListBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ListBind.cs,CompiledListBinding,The following statement contains a magic number: Assert.AreEqual("baz"' foo.List[2]);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestListInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ListInit.cs,CompileArrayListOfStringsInit,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestListInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_ListInit.cs,CompileListOfStringsInit,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' true' 10' 10);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' true' 10' 10);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<sbyte>(t' false' 1' 5);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' false' 10' 10);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' false' 10' 10);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<sbyte>(t' true' 1' 5);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' true' 5' 1);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' false' 10' 10);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' false' 10' 10);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<sbyte>(t' false' 1' 5);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' false' 5' 1);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' false' 10' 10);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' false' 10' 10);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<sbyte>(t' true' 1' 5);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' true' 5' 1);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' true' 10' 10);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' true' 10' 10);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<sbyte>(t' false' 1' 5);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' false' 5' 1);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' true' 10' 10);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<byte>(t' true' 10' 10);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,ComparisonTests,The following statement contains a magic number: CTest<sbyte>(t' true' 1' 5);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,MakeArrayIndex,The following statement contains a magic number: var array = Expression.Constant(new[] {1' 2}' typeof(int[]));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(30' CodeGen(Expression.Add' 10' 20));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(30' CodeGen(Expression.Add' 10' 20));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(30' CodeGen(Expression.Add' 10' 20));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(-12' CodeGen(Expression.Subtract' 11' 23));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(-12' CodeGen(Expression.Subtract' 11' 23));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(-12' CodeGen(Expression.Subtract' 11' 23));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(253' CodeGen(Expression.Multiply' 11' 23));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(253' CodeGen(Expression.Multiply' 11' 23));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(253' CodeGen(Expression.Multiply' 11' 23));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(33' CodeGen(Expression.Divide' 100' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(33' CodeGen(Expression.Divide' 100' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(33' CodeGen(Expression.Divide' 100' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(100.0 / 3' CodeGen<double>(Expression.Divide' 100' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(100.0 / 3' CodeGen<double>(Expression.Divide' 100' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(100.0 / 3' CodeGen<double>(Expression.Divide' 100' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMakeBinary,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MakeBinary.cs,TestOperations,The following statement contains a magic number: Assert.AreEqual(100.0 / 3' CodeGen<double>(Expression.Divide' 100' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMemberBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MemberBind.cs,CompiledMemberBinding,The following statement contains a magic number: var compiled = Expression.Lambda<Func<Foo>>              (                  Expression.MemberInit                  (                      Expression.New(typeof(Foo))'                      Expression.MemberBind                      (                          typeof(Foo).GetProperty("Gazoo")'                          Expression.Bind                          (                              typeof(Gazonk).GetField(nameof(Gazonk.Tzap))'                              "tzap".ToConstant()                          )'                          Expression.Bind                          (                              typeof(Gazonk).GetField(nameof(Gazonk.Klang))'                              42.ToConstant()                          )                      )                  )              ).Compile();
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMemberBind,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MemberBind.cs,CompiledMemberBinding,The following statement contains a magic number: Assert.AreEqual(42' foo.Gazoo.Klang);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestModulo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Modulo.cs,ArgTypesDifferent,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.Modulo(Expression.Constant(1)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestModulo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Modulo.cs,CompiledModulo,The following statement contains a magic number: Assert.AreEqual(0' compiled(4.0' 2.0));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestModulo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Modulo.cs,CompiledModulo,The following statement contains a magic number: Assert.AreEqual(0' compiled(4.0' 2.0));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestModulo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Modulo.cs,CompiledModulo,The following statement contains a magic number: Assert.AreEqual(2.0' compiled(5.0' 3.0));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestModulo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Modulo.cs,CompiledModulo,The following statement contains a magic number: Assert.AreEqual(2.0' compiled(5.0' 3.0));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestModulo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Modulo.cs,CompiledModulo,The following statement contains a magic number: Assert.AreEqual(2.0' compiled(5.0' 3.0));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestModulo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Modulo.cs,Double,The following statement contains a magic number: var expr = Expression.Modulo(Expression.Constant(1.0)' Expression.Constant(2.0));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestModulo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Modulo.cs,Nullable,The following statement contains a magic number: int? b = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestModulo,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Modulo.cs,Numeric,The following statement contains a magic number: var expr = Expression.Modulo(Expression.Constant(1)' Expression.Constant(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMultiply,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Multiply.cs,ArgTypesDifferent,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.Multiply(Expression.Constant(1)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMultiply,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Multiply.cs,Compile,The following statement contains a magic number: Assert.AreEqual(36' compiled(6' 6));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMultiply,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Multiply.cs,Compile,The following statement contains a magic number: Assert.AreEqual(36' compiled(6' 6));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMultiply,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Multiply.cs,Compile,The following statement contains a magic number: Assert.AreEqual(36' compiled(6' 6));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMultiply,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Multiply.cs,Compile,The following statement contains a magic number: Assert.AreEqual(-3' compiled(1' -3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMultiply,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Multiply.cs,Compile,The following statement contains a magic number: Assert.AreEqual(-3' compiled(1' -3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMultiply,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Multiply.cs,Nullable,The following statement contains a magic number: int? b = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMultiply,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Multiply.cs,Numeric,The following statement contains a magic number: var expr = Expression.Multiply(Expression.Constant(1)' Expression.Constant(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMultiplyChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MultiplyChecked.cs,ArgTypesDifferent,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.MultiplyChecked(Expression.Constant(1)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMultiplyChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MultiplyChecked.cs,Nullable,The following statement contains a magic number: int? b = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestMultiplyChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_MultiplyChecked.cs,Numeric,The following statement contains a magic number: var expr = Expression.MultiplyChecked(Expression.Constant(1)' Expression.Constant(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,CompiledNegateNullableInt32,The following statement contains a magic number: Assert.AreEqual((int?)-2' compiled(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,CompiledNegateNullableInt32,The following statement contains a magic number: Assert.AreEqual((int?)-2' compiled(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,CompiledNegateNullableInt32,The following statement contains a magic number: Assert.AreEqual((int?)3' compiled(-3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,CompiledNegateNullableInt32,The following statement contains a magic number: Assert.AreEqual((int?)3' compiled(-3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,CompileNegateInt32,The following statement contains a magic number: Assert.AreEqual(-2' compiled(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,CompileNegateInt32,The following statement contains a magic number: Assert.AreEqual(-2' compiled(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,CompileNegateInt32,The following statement contains a magic number: Assert.AreEqual(3' compiled(-3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,CompileNegateInt32,The following statement contains a magic number: Assert.AreEqual(3' compiled(-3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,NegateDecimal,The following statement contains a magic number: Assert.AreEqual(-2m' compiled(2m));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,NegateDecimal,The following statement contains a magic number: Assert.AreEqual(-2m' compiled(2m));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,NegateLiftedDecimal,The following statement contains a magic number: Assert.AreEqual(-2m' compiled(2m));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,NegateLiftedDecimal,The following statement contains a magic number: Assert.AreEqual(-2m' compiled(2m));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNegate,The following statement contains a magic number: Assert.AreEqual(new Slot(-2)' compiled(new Slot(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNegate,The following statement contains a magic number: Assert.AreEqual(new Slot(-2)' compiled(new Slot(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNegate,The following statement contains a magic number: Assert.AreEqual(new Slot(42)' compiled(new Slot(-42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNegate,The following statement contains a magic number: Assert.AreEqual(new Slot(42)' compiled(new Slot(-42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNegateFromNullable,The following statement contains a magic number: Assert.AreEqual(new SlotFromNullable(-2)' compiled(new SlotFromNullable(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNegateFromNullable,The following statement contains a magic number: Assert.AreEqual(new SlotFromNullable(-2)' compiled(new SlotFromNullable(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNegateFromNullable,The following statement contains a magic number: Assert.AreEqual(new SlotFromNullable(42)' compiled(new SlotFromNullable(-42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNegateFromNullable,The following statement contains a magic number: Assert.AreEqual(new SlotFromNullable(42)' compiled(new SlotFromNullable(-42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNegateFromNullableNotNullable,The following statement contains a magic number: Assert.AreEqual(new SlotFromNullableToNullable(-2)' compiled(new SlotFromNullableToNullable(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNegateFromNullableNotNullable,The following statement contains a magic number: Assert.AreEqual(new SlotFromNullableToNullable(-2)' compiled(new SlotFromNullableToNullable(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNegateFromNullableNotNullable,The following statement contains a magic number: Assert.AreEqual(new SlotFromNullableToNullable(42)' compiled(new SlotFromNullableToNullable(-42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNegateFromNullableNotNullable,The following statement contains a magic number: Assert.AreEqual(new SlotFromNullableToNullable(42)' compiled(new SlotFromNullableToNullable(-42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNotNullableNegateNullable,The following statement contains a magic number: Assert.AreEqual(new Slot(42)' compiled(new Slot(-42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNotNullableNegateNullable,The following statement contains a magic number: Assert.AreEqual(new Slot(42)' compiled(new Slot(-42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNotNullableNegateNullable,The following statement contains a magic number: Assert.AreEqual(new Slot(-2)' compiled(new Slot(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedNotNullableNegateNullable,The following statement contains a magic number: Assert.AreEqual(new Slot(-2)' compiled(new Slot(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedToNullableNegateNullable,The following statement contains a magic number: Assert.AreEqual((SlotToNullable?)new SlotToNullable(42)' compiled(new SlotToNullable(-42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedToNullableNegateNullable,The following statement contains a magic number: Assert.AreEqual((SlotToNullable?)new SlotToNullable(42)' compiled(new SlotToNullable(-42)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedToNullableNegateNullable,The following statement contains a magic number: Assert.AreEqual((SlotToNullable?)new SlotToNullable(-2)' compiled(new SlotToNullable(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNegate,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Negate.cs,UserDefinedToNullableNegateNullable,The following statement contains a magic number: Assert.AreEqual((SlotToNullable?)new SlotToNullable(-2)' compiled(new SlotToNullable(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNew,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_New.cs,CompileNewStructWithParameters,The following statement contains a magic number: var s = compiled(42' 12);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNew,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_New.cs,CompileNewStructWithParameters,The following statement contains a magic number: var s = compiled(42' 12);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNew,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_New.cs,CompileNewStructWithParameters,The following statement contains a magic number: Assert.AreEqual(42' s.Left);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNew,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_New.cs,CompileNewStructWithParameters,The following statement contains a magic number: Assert.AreEqual(12' s.Right);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNew,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_New.cs,HasWrongArgument,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Expression.New(typeof(Foo).GetConstructor(new[] {typeof(string)})' Expression.Constant(12)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayBounds,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayBounds.cs,CompileNewArrayMultiDimensional,The following statement contains a magic number: var factory = CreateNewArrayFactory<int>(3' 3);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayBounds,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayBounds.cs,CompileNewArrayMultiDimensional,The following statement contains a magic number: var factory = CreateNewArrayFactory<int>(3' 3);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayBounds,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayBounds.cs,CompileNewArrayMultiDimensional,The following statement contains a magic number: Assert.AreEqual(2' type.GetArrayRank());
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayBounds,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayBounds.cs,CompileNewArrayMultiDimensional,The following statement contains a magic number: Assert.AreEqual(9' array.Length);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayBounds,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayBounds.cs,CompileNewArraySingleDimensional,The following statement contains a magic number: var factory = CreateNewArrayFactory<int>(3);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayBounds,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayBounds.cs,CompileNewArraySingleDimensional,The following statement contains a magic number: Assert.AreEqual(3' array.Length);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayBounds,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayBounds.cs,TestArrayAssignability,The following statement contains a magic number: Expression.Lambda<Func<int[]>>              (                  Expression.NewArrayBounds                  (                      typeof(int)'                      4.ToConstant()                  )              );
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayBounds,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayBounds.cs,TestArrayBounds,The following statement contains a magic number: var ab = Expression.NewArrayBounds(typeof(int)' 1.ToConstant()' 2.ToConstant());
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayBounds,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayBounds.cs,TestArrayBounds,The following statement contains a magic number: Assert.AreEqual(2' ab.Expressions.Count);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayInit.cs,CompileInitArrayOfInt,The following statement contains a magic number: AssertCreatedArrayIsEqual(1' 2' 3' 4);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayInit.cs,CompileInitArrayOfInt,The following statement contains a magic number: AssertCreatedArrayIsEqual(1' 2' 3' 4);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayInit.cs,CompileInitArrayOfInt,The following statement contains a magic number: AssertCreatedArrayIsEqual(1' 2' 3' 4);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayInit.cs,CompileInitArrayOfStructs,The following statement contains a magic number: AssertCreatedArrayIsEqual(new Bar(1)' new Bar(2)' new Bar(3)' new Bar(4));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayInit.cs,CompileInitArrayOfStructs,The following statement contains a magic number: AssertCreatedArrayIsEqual(new Bar(1)' new Bar(2)' new Bar(3)' new Bar(4));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayInit.cs,CompileInitArrayOfStructs,The following statement contains a magic number: AssertCreatedArrayIsEqual(new Bar(1)' new Bar(2)' new Bar(3)' new Bar(4));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayInit.cs,InitializersContainNull,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => Expression.NewArrayInit(typeof(int)' 1.ToConstant()' null' 3.ToConstant()));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayInit.cs,TestArrayInit,The following statement contains a magic number: var a = Expression.NewArrayInit(typeof(int)' 1.ToConstant()' 2.ToConstant()' 3.ToConstant());
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayInit.cs,TestArrayInit,The following statement contains a magic number: var a = Expression.NewArrayInit(typeof(int)' 1.ToConstant()' 2.ToConstant()' 3.ToConstant());
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayInit.cs,TestArrayInit,The following statement contains a magic number: Assert.AreEqual(3' a.Expressions.Count);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNewArrayInit,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NewArrayInit.cs,WrongInitializer,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.NewArrayInit(typeof(int)' 1.ToConstant()' "2".ToConstant()' 3.ToConstant()));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNot,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Not.cs,CompiledNotNullableInt32,The following statement contains a magic number: Assert.AreEqual((int?)-4' compiled(3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNot,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Not.cs,CompiledNotNullableInt32,The following statement contains a magic number: Assert.AreEqual((int?)-4' compiled(3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNot,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Not.cs,CompiledNotNullableInt32,The following statement contains a magic number: Assert.AreEqual((int?)2' compiled(-3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNot,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Not.cs,CompiledNotNullableInt32,The following statement contains a magic number: Assert.AreEqual((int?)2' compiled(-3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNot,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Not.cs,CompileNotInt32,The following statement contains a magic number: Assert.AreEqual(-2' compiled(1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNot,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Not.cs,CompileNotInt32,The following statement contains a magic number: Assert.AreEqual(-4' compiled(3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNot,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Not.cs,CompileNotInt32,The following statement contains a magic number: Assert.AreEqual(-4' compiled(3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNot,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Not.cs,CompileNotInt32,The following statement contains a magic number: Assert.AreEqual(2' compiled(-3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNot,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Not.cs,CompileNotInt32,The following statement contains a magic number: Assert.AreEqual(2' compiled(-3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNotEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NotEqual.cs,ArgTypesDifferent,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.NotEqual(Expression.Constant(1)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNotEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NotEqual.cs,Nullable_LiftToNull_SetToFalse,The following statement contains a magic number: int? b = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNotEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NotEqual.cs,Nullable_LiftToNull_SetToTrue,The following statement contains a magic number: int? b = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNotEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NotEqual.cs,Nullable_Mixed,The following statement contains a magic number: Assert.Throws<InvalidOperationException>              (                  () =>                  {                      int? a = 1;                      const int B = 2;                        Expression.NotEqual                      (                          Expression.Constant(a' typeof(int?))'                          Expression.Constant(B' typeof(int))                      );                  }              );
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNotEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NotEqual.cs,NullableInt32NotEqual,The following statement contains a magic number: Assert.IsTrue(compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNotEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NotEqual.cs,NullableInt32NotEqualLiftedToNull,The following statement contains a magic number: Assert.AreEqual((bool?)true' compiled(1' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestNotEqual,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_NotEqual.cs,Numeric,The following statement contains a magic number: var expr = Expression.NotEqual(Expression.Constant(1)' Expression.Constant(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestOr,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Or.cs,Double,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.Or(Expression.Constant(1.0)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestOr,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Or.cs,Integer,The following statement contains a magic number: var expr = Expression.Or(Expression.Constant(1)' Expression.Constant(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestOrElse,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_OrElse.cs,Double,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.OrElse(Expression.Constant(1.0)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestOrElse,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_OrElse.cs,Integer,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.OrElse(Expression.Constant(1)' Expression.Constant(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestOrElse,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_OrElse.cs,UserDefinedOrElse,The following statement contains a magic number: Assert.AreEqual(new Slot(64)' compiled(new Slot(64)' new Slot(64)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestOrElse,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_OrElse.cs,UserDefinedOrElse,The following statement contains a magic number: Assert.AreEqual(new Slot(64)' compiled(new Slot(64)' new Slot(64)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestOrElse,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_OrElse.cs,UserDefinedOrElse,The following statement contains a magic number: Assert.AreEqual(new Slot(64)' compiled(new Slot(64)' new Slot(64)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestOrElse,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_OrElse.cs,UserDefinedOrElse,The following statement contains a magic number: Assert.AreEqual(new Slot(32)' compiled(new Slot(32)' new Slot(64)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestOrElse,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_OrElse.cs,UserDefinedOrElse,The following statement contains a magic number: Assert.AreEqual(new Slot(32)' compiled(new Slot(32)' new Slot(64)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestOrElse,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_OrElse.cs,UserDefinedOrElse,The following statement contains a magic number: Assert.AreEqual(new Slot(32)' compiled(new Slot(32)' new Slot(64)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,ArgTypesDifferent,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.Power(Expression.Constant(1)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,ArgTypesDouble,The following statement contains a magic number: var p = Expression.Power(Expression.Constant(1.0)' Expression.Constant(2.0));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,ArgTypesFloat,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.Power(Expression.Constant((float)1)' Expression.Constant((float)2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,ArgTypesInt,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.Power(Expression.Constant(1)' Expression.Constant(2)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,NullablePower,The following statement contains a magic number: Assert.AreEqual((double?)1' compiled(1' 10));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,NullablePower,The following statement contains a magic number: Assert.AreEqual((double?)16' compiled(2' 4));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,NullablePower,The following statement contains a magic number: Assert.AreEqual((double?)16' compiled(2' 4));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,NullablePower,The following statement contains a magic number: Assert.AreEqual((double?)16' compiled(2' 4));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,TestCompile,The following statement contains a magic number: Assert.AreEqual(1' compiled(1' 10));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,TestCompile,The following statement contains a magic number: Assert.AreEqual(16' compiled(2' 4));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,TestCompile,The following statement contains a magic number: Assert.AreEqual(16' compiled(2' 4));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestPower,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Power.cs,TestCompile,The following statement contains a magic number: Assert.AreEqual(16' compiled(2' 4));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestQuote,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Quote.cs,CompiledQuote,The following statement contains a magic number: var compiled = Expression.Lambda<Func<Expression<Func<int>>>>              (                  Expression.Quote                  (                      Expression.Lambda<Func<int>>                      (                          42.ToConstant()                      )                  )              ).Compile();
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestQuote,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Quote.cs,CompiledQuote,The following statement contains a magic number: Assert.AreEqual(42' compiledCompiled());
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,Arg2WrongType,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.RightShift(Expression.Constant(1)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,CompileRightShift,The following statement contains a magic number: Assert.AreEqual(3' compiled(6' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,CompileRightShift,The following statement contains a magic number: Assert.AreEqual(3' compiled(6' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,CompileRightShift,The following statement contains a magic number: Assert.AreEqual(1' compiled(12' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,CompileRightShift,The following statement contains a magic number: Assert.AreEqual(1' compiled(12' 3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,Double,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.RightShift(Expression.Constant(2.0)' Expression.Constant(1)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,Integer,The following statement contains a magic number: var expr = Expression.RightShift(Expression.Constant(2)' Expression.Constant(1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,Nullable,The following statement contains a magic number: int? b = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,RightShiftNullableLongAndInt,The following statement contains a magic number: Assert.AreEqual(null' compiled(null' 2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,RightShiftNullableLongAndInt,The following statement contains a magic number: Assert.AreEqual(512' compiled(1024' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestRightShift,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_RightShift.cs,RightShiftNullableLongAndInt,The following statement contains a magic number: Assert.AreEqual(512' compiled(1024' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtract,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Subtract.cs,ArgTypesDifferent,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.Subtract(Expression.Constant(1)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtract,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Subtract.cs,CompileSubtract,The following statement contains a magic number: Assert.AreEqual(0' compiled(6' 6));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtract,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Subtract.cs,CompileSubtract,The following statement contains a magic number: Assert.AreEqual(0' compiled(6' 6));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtract,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Subtract.cs,CompileSubtract,The following statement contains a magic number: Assert.AreEqual(-2' compiled(-1' 1));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtract,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Subtract.cs,CompileSubtract,The following statement contains a magic number: Assert.AreEqual(4' compiled(1' -3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtract,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Subtract.cs,CompileSubtract,The following statement contains a magic number: Assert.AreEqual(4' compiled(1' -3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtract,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Subtract.cs,Nullable,The following statement contains a magic number: int? b = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtract,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_Subtract.cs,Numeric,The following statement contains a magic number: var expr = Expression.Subtract(Expression.Constant(1)' Expression.Constant(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtractChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_SubtractChecked.cs,ArgTypesDifferent,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => Expression.SubtractChecked(Expression.Constant(1)' Expression.Constant(2.0)));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtractChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_SubtractChecked.cs,Nullable,The following statement contains a magic number: int? b = 2;
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtractChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_SubtractChecked.cs,Numeric,The following statement contains a magic number: var expr = Expression.SubtractChecked(Expression.Constant(1)' Expression.Constant(2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtractChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_SubtractChecked.cs,TestNoOverflow,The following statement contains a magic number: MustNotOverflow(10' 20);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtractChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_SubtractChecked.cs,TestNoOverflow,The following statement contains a magic number: MustNotOverflow(10' 20);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtractChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_SubtractChecked.cs,TestNoOverflow,The following statement contains a magic number: InvalidOperation<sbyte>(sbyte.MaxValue' 2);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtractChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_SubtractChecked.cs,TestNoOverflow,The following statement contains a magic number: MustNotOverflow<short>(short.MaxValue' 2);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestSubtractChecked,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_SubtractChecked.cs,TestNoOverflow,The following statement contains a magic number: MustNotOverflow<ushort>(ushort.MaxValue' 2);
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestUnaryPlus,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_UnaryPlus.cs,CompilePlusInt32,The following statement contains a magic number: Assert.AreEqual(-2' compiled(-2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestUnaryPlus,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_UnaryPlus.cs,CompilePlusInt32,The following statement contains a magic number: Assert.AreEqual(-2' compiled(-2));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestUnaryPlus,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_UnaryPlus.cs,CompilePlusInt32,The following statement contains a magic number: Assert.AreEqual(3' compiled(3));
Magic Number,MonoTests.System.Linq.Expressions,ExpressionTestUnaryPlus,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTest_UnaryPlus.cs,CompilePlusInt32,The following statement contains a magic number: Assert.AreEqual(3' compiled(3));
Magic Number,Tests.System.Linq.Expressions,ExpressionTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTestEx.cs,TestLamdaCompilation,The following statement contains a magic number: Assert.AreEqual(2' lambdaExpr.Compile().DynamicInvoke(1));
Magic Number,Tests.System.Linq.Expressions,ExpressionTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTestEx.cs,TestLamdaCompilationGenericDelegateType,The following statement contains a magic number: Assert.AreEqual(2' lambdaExpr.Compile().DynamicInvoke(1));
Magic Number,Tests.System.Linq.Expressions,ExpressionTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Linq\Expressions\ExpressionTestEx.cs,TestLamdaCompilationWithDelegateType,The following statement contains a magic number: Assert.AreEqual(2' lambdaExpr.Compile().DynamicInvoke(1));
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,SetUpFixture,The following statement contains a magic number: _nfiUser = new NumberFormatInfo              {                  CurrencyDecimalDigits = 3'                  CurrencyDecimalSeparator = ":"'                  CurrencyGroupSeparator = "/"'                  CurrencyGroupSizes = new[] { 2' 1' 0 }'                  CurrencyNegativePattern = 10'  // n $-                  CurrencyPositivePattern = 3'  // n $                  CurrencySymbol = "XYZ"'                  PercentDecimalDigits = 1'                  PercentDecimalSeparator = ";"'                  PercentGroupSeparator = "~"'                  PercentGroupSizes = new[] { 1 }'                  PercentNegativePattern = 2'                  PercentPositivePattern = 2'                  PercentSymbol = "%%%"'                  NumberDecimalSeparator = "."              };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,SetUpFixture,The following statement contains a magic number: _nfiUser = new NumberFormatInfo              {                  CurrencyDecimalDigits = 3'                  CurrencyDecimalSeparator = ":"'                  CurrencyGroupSeparator = "/"'                  CurrencyGroupSizes = new[] { 2' 1' 0 }'                  CurrencyNegativePattern = 10'  // n $-                  CurrencyPositivePattern = 3'  // n $                  CurrencySymbol = "XYZ"'                  PercentDecimalDigits = 1'                  PercentDecimalSeparator = ";"'                  PercentGroupSeparator = "~"'                  PercentGroupSizes = new[] { 1 }'                  PercentNegativePattern = 2'                  PercentPositivePattern = 2'                  PercentSymbol = "%%%"'                  NumberDecimalSeparator = "."              };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,SetUpFixture,The following statement contains a magic number: _nfiUser = new NumberFormatInfo              {                  CurrencyDecimalDigits = 3'                  CurrencyDecimalSeparator = ":"'                  CurrencyGroupSeparator = "/"'                  CurrencyGroupSizes = new[] { 2' 1' 0 }'                  CurrencyNegativePattern = 10'  // n $-                  CurrencyPositivePattern = 3'  // n $                  CurrencySymbol = "XYZ"'                  PercentDecimalDigits = 1'                  PercentDecimalSeparator = ";"'                  PercentGroupSeparator = "~"'                  PercentGroupSizes = new[] { 1 }'                  PercentNegativePattern = 2'                  PercentPositivePattern = 2'                  PercentSymbol = "%%%"'                  NumberDecimalSeparator = "."              };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,SetUpFixture,The following statement contains a magic number: _nfiUser = new NumberFormatInfo              {                  CurrencyDecimalDigits = 3'                  CurrencyDecimalSeparator = ":"'                  CurrencyGroupSeparator = "/"'                  CurrencyGroupSizes = new[] { 2' 1' 0 }'                  CurrencyNegativePattern = 10'  // n $-                  CurrencyPositivePattern = 3'  // n $                  CurrencySymbol = "XYZ"'                  PercentDecimalDigits = 1'                  PercentDecimalSeparator = ";"'                  PercentGroupSeparator = "~"'                  PercentGroupSizes = new[] { 1 }'                  PercentNegativePattern = 2'                  PercentPositivePattern = 2'                  PercentSymbol = "%%%"'                  NumberDecimalSeparator = "."              };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,SetUpFixture,The following statement contains a magic number: _nfiUser = new NumberFormatInfo              {                  CurrencyDecimalDigits = 3'                  CurrencyDecimalSeparator = ":"'                  CurrencyGroupSeparator = "/"'                  CurrencyGroupSizes = new[] { 2' 1' 0 }'                  CurrencyNegativePattern = 10'  // n $-                  CurrencyPositivePattern = 3'  // n $                  CurrencySymbol = "XYZ"'                  PercentDecimalDigits = 1'                  PercentDecimalSeparator = ";"'                  PercentGroupSeparator = "~"'                  PercentGroupSizes = new[] { 1 }'                  PercentNegativePattern = 2'                  PercentPositivePattern = 2'                  PercentSymbol = "%%%"'                  NumberDecimalSeparator = "."              };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,SetUpFixture,The following statement contains a magic number: _nfiUser = new NumberFormatInfo              {                  CurrencyDecimalDigits = 3'                  CurrencyDecimalSeparator = ":"'                  CurrencyGroupSeparator = "/"'                  CurrencyGroupSizes = new[] { 2' 1' 0 }'                  CurrencyNegativePattern = 10'  // n $-                  CurrencyPositivePattern = 3'  // n $                  CurrencySymbol = "XYZ"'                  PercentDecimalDigits = 1'                  PercentDecimalSeparator = ";"'                  PercentGroupSeparator = "~"'                  PercentGroupSizes = new[] { 1 }'                  PercentNegativePattern = 2'                  PercentPositivePattern = 2'                  PercentSymbol = "%%%"'                  NumberDecimalSeparator = "."              };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Mul,The following statement contains a magic number: var values = new[] { -1000000000L' -1000' -1' 0' 1' 1000' 100000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Mul,The following statement contains a magic number: var values = new[] { -1000000000L' -1000' -1' 0' 1' 1000' 100000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Mul,The following statement contains a magic number: var values = new[] { -1000000000L' -1000' -1' 0' 1' 1000' 100000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Mul,The following statement contains a magic number: var values = new[] { -1000000000L' -1000' -1' 0' 1' 1000' 100000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DivRem,The following statement contains a magic number: var values = new[] { -10000000330L' -5000' -1' 0' 1' 1000' 333' 10234544400L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DivRem,The following statement contains a magic number: var values = new[] { -10000000330L' -5000' -1' 0' 1' 1000' 333' 10234544400L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DivRem,The following statement contains a magic number: var values = new[] { -10000000330L' -5000' -1' 0' 1' 1000' 333' 10234544400L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DivRem,The following statement contains a magic number: var values = new[] { -10000000330L' -5000' -1' 0' 1' 1000' 333' 10234544400L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DivRem,The following statement contains a magic number: var values = new[] { -10000000330L' -5000' -1' 0' 1' 1000' 333' 10234544400L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Pow,The following statement contains a magic number: Assert.AreEqual(1' (int)BigInteger.Pow(99999' 0)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Pow,The following statement contains a magic number: Assert.AreEqual(99999' (int)BigInteger.Pow(99999' 1)' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Pow,The following statement contains a magic number: Assert.AreEqual(99999' (int)BigInteger.Pow(99999' 1)' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Pow,The following statement contains a magic number: Assert.AreEqual(59049' (int)BigInteger.Pow(3' 10)' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Pow,The following statement contains a magic number: Assert.AreEqual(59049' (int)BigInteger.Pow(3' 10)' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Pow,The following statement contains a magic number: Assert.AreEqual(59049' (int)BigInteger.Pow(3' 10)' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Pow,The following statement contains a magic number: Assert.AreEqual(177147' (int)BigInteger.Pow(3' 11)' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Pow,The following statement contains a magic number: Assert.AreEqual(177147' (int)BigInteger.Pow(3' 11)' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Pow,The following statement contains a magic number: Assert.AreEqual(177147' (int)BigInteger.Pow(3' 11)' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Pow,The following statement contains a magic number: Assert.AreEqual(-177147' (int)BigInteger.Pow(-3' 11)' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Pow,The following statement contains a magic number: Assert.AreEqual(-177147' (int)BigInteger.Pow(-3' 11)' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Pow,The following statement contains a magic number: Assert.AreEqual(-177147' (int)BigInteger.Pow(-3' 11)' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: BigInteger.ModPow(1' -1' 5);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: BigInteger.ModPow(1' 5' 0);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(4L' (long)BigInteger.ModPow(3' 2' 5)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(4L' (long)BigInteger.ModPow(3' 2' 5)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(4L' (long)BigInteger.ModPow(3' 2' 5)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(4L' (long)BigInteger.ModPow(3' 2' 5)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(20L' (long)BigInteger.ModPow(555' 10' 71)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(20L' (long)BigInteger.ModPow(555' 10' 71)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(20L' (long)BigInteger.ModPow(555' 10' 71)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(20L' (long)BigInteger.ModPow(555' 10' 71)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(20L' (long)BigInteger.ModPow(-555' 10' 71)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(20L' (long)BigInteger.ModPow(-555' 10' 71)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(20L' (long)BigInteger.ModPow(-555' 10' 71)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(20L' (long)BigInteger.ModPow(-555' 10' 71)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(-24L' (long)BigInteger.ModPow(-555' 11' 71)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(-24L' (long)BigInteger.ModPow(-555' 11' 71)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(-24L' (long)BigInteger.ModPow(-555' 11' 71)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ModPow,The following statement contains a magic number: Assert.AreEqual(-24L' (long)BigInteger.ModPow(-555' 11' 71)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(999999' (int)BigInteger.GreatestCommonDivisor(999999' 0)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(999999' (int)BigInteger.GreatestCommonDivisor(999999' 0)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(999999' (int)BigInteger.GreatestCommonDivisor(0' 999999)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(999999' (int)BigInteger.GreatestCommonDivisor(0' 999999)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(1' (int)BigInteger.GreatestCommonDivisor(999999' 1)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(1' (int)BigInteger.GreatestCommonDivisor(1' 999999)' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(1' (int)BigInteger.GreatestCommonDivisor(999999' -1)' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(1' (int)BigInteger.GreatestCommonDivisor(-1' 999999)' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(2' (int)BigInteger.GreatestCommonDivisor(12345678' 8765432)' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(2' (int)BigInteger.GreatestCommonDivisor(12345678' 8765432)' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(2' (int)BigInteger.GreatestCommonDivisor(12345678' 8765432)' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(2' (int)BigInteger.GreatestCommonDivisor(-12345678' 8765432)' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(2' (int)BigInteger.GreatestCommonDivisor(-12345678' 8765432)' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(2' (int)BigInteger.GreatestCommonDivisor(-12345678' 8765432)' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(2' (int)BigInteger.GreatestCommonDivisor(12345678' -8765432)' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(2' (int)BigInteger.GreatestCommonDivisor(12345678' -8765432)' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(2' (int)BigInteger.GreatestCommonDivisor(12345678' -8765432)' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(2' (int)BigInteger.GreatestCommonDivisor(-12345678' -8765432)' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(2' (int)BigInteger.GreatestCommonDivisor(-12345678' -8765432)' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(2' (int)BigInteger.GreatestCommonDivisor(-12345678' -8765432)' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(40' (int)BigInteger.GreatestCommonDivisor(5581 * 40' 6671 * 40)' "#15");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(40' (int)BigInteger.GreatestCommonDivisor(5581 * 40' 6671 * 40)' "#15");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(40' (int)BigInteger.GreatestCommonDivisor(5581 * 40' 6671 * 40)' "#15");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(40' (int)BigInteger.GreatestCommonDivisor(5581 * 40' 6671 * 40)' "#15");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(40' (int)BigInteger.GreatestCommonDivisor(5581 * 40' 6671 * 40)' "#15");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(5' (int)BigInteger.GreatestCommonDivisor(-5' 0)' "#16");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(5' (int)BigInteger.GreatestCommonDivisor(-5' 0)' "#16");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(5' (int)BigInteger.GreatestCommonDivisor(0' -5)' "#17");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,GCD,The following statement contains a magic number: Assert.AreEqual(5' (int)BigInteger.GreatestCommonDivisor(0' -5)' "#17");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Log,The following statement contains a magic number: const double Delta = 0.000000000000001d;
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Log,The following statement contains a magic number: Assert.AreEqual(2.3025850929940459d' BigInteger.Log(10)' Delta' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Log,The following statement contains a magic number: Assert.AreEqual(2.3025850929940459d' BigInteger.Log(10)' Delta' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Log,The following statement contains a magic number: Assert.AreEqual(6.9077552789821368d' BigInteger.Log(1000)' Delta' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Log,The following statement contains a magic number: Assert.AreEqual(6.9077552789821368d' BigInteger.Log(1000)' Delta' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Log,The following statement contains a magic number: Assert.AreEqual(double.NaN' BigInteger.Log(-234)' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LogN,The following statement contains a magic number: const double Delta = 0.000000000000001d;
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LogN,The following statement contains a magic number: Assert.AreEqual(double.NaN' BigInteger.Log(10' 1)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LogN,The following statement contains a magic number: Assert.AreEqual(double.NaN' BigInteger.Log(10' 0)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LogN,The following statement contains a magic number: Assert.AreEqual(double.NaN' BigInteger.Log(10' -1)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LogN,The following statement contains a magic number: Assert.AreEqual(double.NaN' BigInteger.Log(10' double.NaN)' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LogN,The following statement contains a magic number: Assert.AreEqual(double.NaN' BigInteger.Log(10' double.NegativeInfinity)' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LogN,The following statement contains a magic number: Assert.AreEqual(double.NaN' BigInteger.Log(10' double.PositiveInfinity)' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LogN,The following statement contains a magic number: Assert.AreEqual(-2.5129415947320606d' BigInteger.Log(10' 0.4)' Delta' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LogN,The following statement contains a magic number: Assert.AreEqual(-2.5129415947320606d' BigInteger.Log(10' 0.4)' Delta' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LogN,The following statement contains a magic number: Assert.AreEqual(-2.5129415947320606d' BigInteger.Log(10' 0.4)' Delta' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DivRemByZero,The following statement contains a magic number: GC.KeepAlive(BigInteger.DivRem(100' 0' out var d));
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestAdd2,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestAdd2,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestAdd2,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestAdd2,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestSub,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestSub,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestSub,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestSub,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestMin,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestMin,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestMin,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestMin,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestMax,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestMax,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestMax,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestMax,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestAbs,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestAbs,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestAbs,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestAbs,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestNegate,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestNegate,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestNegate,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestNegate,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestInc,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestInc,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestInc,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestInc,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestDec,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestDec,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestDec,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestDec,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestBitwiseOps,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L' 0xFFFF00000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestBitwiseOps,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L' 0xFFFF00000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestBitwiseOps,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L' 0xFFFF00000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestBitwiseOps,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L' 0xFFFF00000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLeftShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0x28 }'                  (new BigInteger(0x0A) << 10).ToByteArray()' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLeftShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0xD8 }'                  (new BigInteger(-10) << 10).ToByteArray()' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLeftShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0xD8 }'                  (new BigInteger(-10) << 10).ToByteArray()' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLeftShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0x00' 0xFF }'                  (new BigInteger(-1) << 16).ToByteArray()' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLeftShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x0A }'                  (new BigInteger(0x0A) << 80).ToByteArray()' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLeftShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0xF6 }'                  (new BigInteger(-10) << 80).ToByteArray()' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLeftShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0xF6 }'                  (new BigInteger(-10) << 80).ToByteArray()' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLeftShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0xFF }'                  (new BigInteger(-1) << 80).ToByteArray()' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLeftShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x70' 0xD9 }'                  (new BigInteger(-1234) << 75).ToByteArray()' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLeftShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x70' 0xD9 }'                  (new BigInteger(-1234) << 75).ToByteArray()' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLeftShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0xA0' 0x91' 0x00 }'                  (new BigInteger(0x1234) << 75).ToByteArray()' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLeftShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0xFF' 0x00 }' (new BigInteger(0xFF00) << -8).ToByteArray()' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x16' 0xB0' 0x4C' 0x02 }'                  (new BigInteger(1234567899L) >> 5).ToByteArray()' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x16' 0xB0' 0x4C' 0x02 }'                  (new BigInteger(1234567899L) >> 5).ToByteArray()' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x2C' 0x93' 0x00 }'                  (new BigInteger(1234567899L) >> 15).ToByteArray()' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x2C' 0x93' 0x00 }'                  (new BigInteger(1234567899L) >> 15).ToByteArray()' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0xFF' 0xFF' 0x7F }'                  (new BigInteger(long.MaxValue - 100) >> 40).ToByteArray()' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0xFF' 0xFF' 0x7F }'                  (new BigInteger(long.MaxValue - 100) >> 40).ToByteArray()' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0xE9' 0x4F' 0xB3' 0xFD }'                  (new BigInteger(-1234567899L) >> 5).ToByteArray()' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0xE9' 0x4F' 0xB3' 0xFD }'                  (new BigInteger(-1234567899L) >> 5).ToByteArray()' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0xD3' 0x6C' 0xFF }'                  (new BigInteger(-1234567899L) >> 15).ToByteArray()' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0xD3' 0x6C' 0xFF }'                  (new BigInteger(-1234567899L) >> 15).ToByteArray()' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0x00' 0x80 }'                  (new BigInteger(long.MinValue + 100) >> 40).ToByteArray()' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0x00' 0x80 }'                  (new BigInteger(long.MinValue + 100) >> 40).ToByteArray()' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0xFF }'                  (new BigInteger(-1234567899L) >> 90).ToByteArray()' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0xFF }'                  (new BigInteger(-1234567899L) >> 90).ToByteArray()' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00 }'                  (new BigInteger(999999) >> 90).ToByteArray()' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00 }'                  (new BigInteger(999999) >> 90).ToByteArray()' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestRightShift,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x00' 0x00' 0xFF' 0x00 }' (new BigInteger(0xFF00) >> -8).ToByteArray()' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareOps,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareOps,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareOps,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareOps,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareOps2,The following statement contains a magic number: var a = new BigInteger(100000000000L);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareOps2,The following statement contains a magic number: var b = new BigInteger(28282828282UL);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareULong,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L' 0xAA00000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareULong,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L' 0xAA00000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareULong,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L' 0xAA00000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareULong,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 100000000000L' 0xAA00000000L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareULong,The following statement contains a magic number: var uvalues = new ulong[] { 0' 1' 1000' 100000000000L' 999999' 28282828282' 0xAA00000000' ulong.MaxValue };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareULong,The following statement contains a magic number: var uvalues = new ulong[] { 0' 1' 1000' 100000000000L' 999999' 28282828282' 0xAA00000000' ulong.MaxValue };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareULong,The following statement contains a magic number: var uvalues = new ulong[] { 0' 1' 1000' 100000000000L' 999999' 28282828282' 0xAA00000000' ulong.MaxValue };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareULong,The following statement contains a magic number: var uvalues = new ulong[] { 0' 1' 1000' 100000000000L' 999999' 28282828282' 0xAA00000000' ulong.MaxValue };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareLong,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 9999999' 100000000000L' 0xAA00000000' long.MaxValue' long.MinValue };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareLong,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 9999999' 100000000000L' 0xAA00000000' long.MaxValue' long.MinValue };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareLong,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 9999999' 100000000000L' 0xAA00000000' long.MaxValue' long.MinValue };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareLong,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 9999999' 100000000000L' 0xAA00000000' long.MaxValue' long.MinValue };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareLong,The following statement contains a magic number: var values = new[] { -100000000000L' -1000' -1' 0' 1' 1000' 9999999' 100000000000L' 0xAA00000000' long.MaxValue' long.MinValue };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestEquals,The following statement contains a magic number: var a = new BigInteger(10);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestEquals,The following statement contains a magic number: var b = new BigInteger(10);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestEquals,The following statement contains a magic number: var c = new BigInteger(-10);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestEquals,The following statement contains a magic number: Assert.AreNotEqual(a' 10' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtor,The following statement contains a magic number: Assert.AreEqual(0' (int)new BigInteger(new byte[2])' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LongCtorRoundTrip,The following statement contains a magic number: var values = new[] {                  0' long.MinValue' long.MaxValue' -1' 1L + int.MaxValue' -1L + int.MinValue' 0x1234' 0xFFFFFFFFL' 0x1FFFFFFFFL' -0xFFFFFFFFL' -0x1FFFFFFFFL'                  0x100000000L' -0x100000000L' 0x100000001L' -0x100000001L' 4294967295L' -4294967295L' 4294967296L' -4294967296L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LongCtorRoundTrip,The following statement contains a magic number: var values = new[] {                  0' long.MinValue' long.MaxValue' -1' 1L + int.MaxValue' -1L + int.MinValue' 0x1234' 0xFFFFFFFFL' 0x1FFFFFFFFL' -0xFFFFFFFFL' -0x1FFFFFFFFL'                  0x100000000L' -0x100000000L' 0x100000001L' -0x100000001L' 4294967295L' -4294967295L' 4294967296L' -4294967296L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LongCtorRoundTrip,The following statement contains a magic number: var values = new[] {                  0' long.MinValue' long.MaxValue' -1' 1L + int.MaxValue' -1L + int.MinValue' 0x1234' 0xFFFFFFFFL' 0x1FFFFFFFFL' -0xFFFFFFFFL' -0x1FFFFFFFFL'                  0x100000000L' -0x100000000L' 0x100000001L' -0x100000001L' 4294967295L' -4294967295L' 4294967296L' -4294967296L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LongCtorRoundTrip,The following statement contains a magic number: var values = new[] {                  0' long.MinValue' long.MaxValue' -1' 1L + int.MaxValue' -1L + int.MinValue' 0x1234' 0xFFFFFFFFL' 0x1FFFFFFFFL' -0xFFFFFFFFL' -0x1FFFFFFFFL'                  0x100000000L' -0x100000000L' 0x100000001L' -0x100000001L' 4294967295L' -4294967295L' 4294967296L' -4294967296L };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: var arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: var arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: var arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: var arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: var arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: var arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: var arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: var arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 0xFF' 0x0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 0xFF' 0x0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 0xFF' 0x0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 0xFF' 0x0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 0xFF' 0x0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 0xFF' 0x0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 0xFF' 0x0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0xF0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0xF0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0xF0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0xF0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0xF0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0xF0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0xF0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 0xF0 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ByteArrayCtorRoundTrip,The following statement contains a magic number: arr = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestIntCtorProperties,The following statement contains a magic number: var a = new BigInteger(10);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestIntCtorProperties,The following statement contains a magic number: Assert.IsFalse(new BigInteger(11).IsEven' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestIntCtorProperties,The following statement contains a magic number: Assert.IsTrue(new BigInteger(32).IsPowerOfTwo' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestIntCtorProperties,The following statement contains a magic number: Assert.AreEqual(-1' new BigInteger(-99999).Sign' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestIntCtorProperties,The following statement contains a magic number: Assert.IsFalse(new BigInteger(-16).IsPowerOfTwo' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestIntCtorToString,The following statement contains a magic number: Assert.AreEqual("5555"' new BigInteger(5555).ToString()' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestIntCtorToString,The following statement contains a magic number: Assert.AreEqual("-99999"' new BigInteger(-99999).ToString()' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The following statement contains a magic number: Assert.AreEqual("123456789123456"' new BigInteger(123456789123456).ToString("D2")' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The following statement contains a magic number: Assert.AreEqual("0000000005"' new BigInteger(5).ToString("d10")' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The following statement contains a magic number: Assert.AreEqual("0A8"' new BigInteger(168).ToString("X")' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The following statement contains a magic number: Assert.AreEqual("0A"' new BigInteger(10).ToString("X")' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The following statement contains a magic number: Assert.AreEqual("F6"' new BigInteger(-10).ToString("X")' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The following statement contains a magic number: Assert.AreEqual("10000000000000000000000000000000000000000000000000000000"' BigInteger.Pow(10' 55).ToString("G")' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The following statement contains a magic number: Assert.AreEqual("10000000000000000000000000000000000000000000000000000000"' BigInteger.Pow(10' 55).ToString("G")' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The following statement contains a magic number: Assert.AreEqual("10000000000000000000000000000000000000000000000000000000"' BigInteger.Pow(10' 55).ToString("R")' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The following statement contains a magic number: Assert.AreEqual("10000000000000000000000000000000000000000000000000000000"' BigInteger.Pow(10' 55).ToString("R")' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The following statement contains a magic number: Assert.AreEqual("000000000A"' new BigInteger(10).ToString("X10")' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmt,The following statement contains a magic number: Assert.AreEqual("0000000010"' new BigInteger(10).ToString("G10")' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual("10"' new BigInteger(10).ToString(info)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual(">10"' new BigInteger(-10).ToString(info)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual("0A"' new BigInteger(10).ToString("X"' info)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual("F6"' new BigInteger(-10).ToString("X"' info)' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual("10"' new BigInteger(10).ToString("G"' info)' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual(">10"' new BigInteger(-10).ToString("G"' info)' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual("10"' new BigInteger(10).ToString("D"' info)' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual(">10"' new BigInteger(-10).ToString("D"' info)' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual("10"' new BigInteger(10).ToString("R"' info)' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual(">10"' new BigInteger(-10).ToString("R"' info)' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual("#$%10"' new BigInteger(-10).ToString(info)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual("#$%10"' new BigInteger(-10).ToString(null' info)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestToStringFmtProvider,The following statement contains a magic number: Assert.AreEqual("-10"' new BigInteger(-10).ToString(info)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestIntCtorToByteArray,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0xD4' 0xFE }' new BigInteger(-300).ToByteArray()' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestIntCtorToByteArray,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0x80' 0x00 }' new BigInteger(128).ToByteArray()' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestLongCtorToByteArray,The following statement contains a magic number: Assert.AreEqual(new byte[] { 0xFF' 0xFF' 0xFF' 0x7F' 0xFF }' new BigInteger(-2147483649L).ToByteArray()' "11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Comparable,The following statement contains a magic number: var a = new BigInteger(99);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Comparable,The following statement contains a magic number: Assert.AreEqual(-1' a.CompareTo(100)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ShortOperators,The following statement contains a magic number: Assert.AreEqual(22' (int)new BigInteger(22)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ShortOperators,The following statement contains a magic number: Assert.AreEqual(22' (int)new BigInteger(22)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ShortOperators,The following statement contains a magic number: Assert.AreEqual(-22' (int)new BigInteger(-22)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ShortOperators,The following statement contains a magic number: Assert.AreEqual(-22' (int)new BigInteger(-22)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ShortOperators,The following statement contains a magic number: GC.KeepAlive((short)new BigInteger(10000000));
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,ShortOperators,The following statement contains a magic number: GC.KeepAlive((short)new BigInteger(-10000000));
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleCtor,The following statement contains a magic number: Assert.AreEqual(10000' (int)new BigInteger(10000.2)' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleCtor,The following statement contains a magic number: Assert.AreEqual(10000' (int)new BigInteger(10000.2)' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleCtor,The following statement contains a magic number: Assert.AreEqual(10000' (int)new BigInteger(10000.9)' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleCtor,The following statement contains a magic number: Assert.AreEqual(10000' (int)new BigInteger(10000.9)' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleCtor,The following statement contains a magic number: Assert.AreEqual(10000' (int)new BigInteger(10000.2)' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleCtor,The following statement contains a magic number: Assert.AreEqual(10000' (int)new BigInteger(10000.2)' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleCtor,The following statement contains a magic number: Assert.AreEqual(0' (int)new BigInteger(0.9)' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleCtor,The following statement contains a magic number: Assert.AreEqual(12345678999L' (long)new BigInteger(12345678999.33)' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleCtor,The following statement contains a magic number: Assert.AreEqual(12345678999L' (long)new BigInteger(12345678999.33)' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(999d' (double)new BigInteger(999)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(999d' (double)new BigInteger(999)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(double.PositiveInfinity' (double)BigInteger.Pow(2' 1024)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(double.PositiveInfinity' (double)BigInteger.Pow(2' 1024)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(double.NegativeInfinity' (double)BigInteger.Pow(-2' 1025)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(double.NegativeInfinity' (double)BigInteger.Pow(-2' 1025)' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: var result1 = BitConverter.Int64BitsToDouble(-4337852273739220173);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result1' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198 })' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result1' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198 })' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result1' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198 })' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result1' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198 })' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result1' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198 })' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result1' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198 })' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result1' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198 })' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result1' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198 })' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: var result2 = BitConverter.Int64BitsToDouble(4893382453283402035);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result2' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198' 0 })' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result2' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198' 0 })' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result2' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198' 0 })' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result2' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198' 0 })' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result2' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198' 0 })' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result2' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198' 0 })' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result2' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198' 0 })' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result2' (double)new BigInteger(new byte[] { 53' 152' 137' 177' 240' 81' 75' 198' 0 })' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: var result3 = BitConverter.Int64BitsToDouble(5010775143622804480);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: var result4 = BitConverter.Int64BitsToDouble(5010775143622804481);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: var result5 = BitConverter.Int64BitsToDouble(5010775143622804482);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 16' 128' 208' 159' 60' 46' 59' 3 })' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 16' 128' 208' 159' 60' 46' 59' 3 })' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 16' 128' 208' 159' 60' 46' 59' 3 })' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 16' 128' 208' 159' 60' 46' 59' 3 })' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 16' 128' 208' 159' 60' 46' 59' 3 })' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 16' 128' 208' 159' 60' 46' 59' 3 })' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 16' 128' 208' 159' 60' 46' 59' 3 })' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 16' 128' 208' 159' 60' 46' 59' 3 })' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 17' 128' 208' 159' 60' 46' 59' 3 })' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 17' 128' 208' 159' 60' 46' 59' 3 })' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 17' 128' 208' 159' 60' 46' 59' 3 })' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 17' 128' 208' 159' 60' 46' 59' 3 })' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 17' 128' 208' 159' 60' 46' 59' 3 })' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 17' 128' 208' 159' 60' 46' 59' 3 })' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 17' 128' 208' 159' 60' 46' 59' 3 })' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 17' 128' 208' 159' 60' 46' 59' 3 })' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 24' 128' 208' 159' 60' 46' 59' 3 })' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 24' 128' 208' 159' 60' 46' 59' 3 })' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 24' 128' 208' 159' 60' 46' 59' 3 })' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 24' 128' 208' 159' 60' 46' 59' 3 })' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 24' 128' 208' 159' 60' 46' 59' 3 })' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 24' 128' 208' 159' 60' 46' 59' 3 })' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 24' 128' 208' 159' 60' 46' 59' 3 })' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result3' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 24' 128' 208' 159' 60' 46' 59' 3 })' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 32' 128' 208' 159' 60' 46' 59' 3 })' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 32' 128' 208' 159' 60' 46' 59' 3 })' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 32' 128' 208' 159' 60' 46' 59' 3 })' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 32' 128' 208' 159' 60' 46' 59' 3 })' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 32' 128' 208' 159' 60' 46' 59' 3 })' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 32' 128' 208' 159' 60' 46' 59' 3 })' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 32' 128' 208' 159' 60' 46' 59' 3 })' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 32' 128' 208' 159' 60' 46' 59' 3 })' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 48' 128' 208' 159' 60' 46' 59' 3 })' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 48' 128' 208' 159' 60' 46' 59' 3 })' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 48' 128' 208' 159' 60' 46' 59' 3 })' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 48' 128' 208' 159' 60' 46' 59' 3 })' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 48' 128' 208' 159' 60' 46' 59' 3 })' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 48' 128' 208' 159' 60' 46' 59' 3 })' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 48' 128' 208' 159' 60' 46' 59' 3 })' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result4' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 48' 128' 208' 159' 60' 46' 59' 3 })' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result5' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 64' 128' 208' 159' 60' 46' 59' 3 })' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result5' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 64' 128' 208' 159' 60' 46' 59' 3 })' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result5' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 64' 128' 208' 159' 60' 46' 59' 3 })' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result5' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 64' 128' 208' 159' 60' 46' 59' 3 })' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result5' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 64' 128' 208' 159' 60' 46' 59' 3 })' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result5' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 64' 128' 208' 159' 60' 46' 59' 3 })' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result5' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 64' 128' 208' 159' 60' 46' 59' 3 })' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(result5' (double)new BigInteger(new byte[] { 0' 0' 0' 0' 64' 128' 208' 159' 60' 46' 59' 3 })' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(BitConverter.Int64BitsToDouble(-2748107935317889142)' (double)new BigInteger(_hugeA)' "#15");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(BitConverter.Int64BitsToDouble(-2354774254443231289)' (double)new BigInteger(_hugeB)' "#16");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(BitConverter.Int64BitsToDouble(8737073938546854790)' (double)new BigInteger(_hugeMul)' "#17");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(BitConverter.Int64BitsToDouble(6912920136897069886)' (double)(2278888483353476799 * BigInteger.Pow(2' 451))' "#18");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(BitConverter.Int64BitsToDouble(6912920136897069886)' (double)(2278888483353476799 * BigInteger.Pow(2' 451))' "#18");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(BitConverter.Int64BitsToDouble(6912920136897069886)' (double)(2278888483353476799 * BigInteger.Pow(2' 451))' "#18");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(BitConverter.Int64BitsToDouble(6912920136897069886)' (double)(2278888483353476799 * BigInteger.Pow(2' 451))' "#18");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(double.PositiveInfinity' (double)(843942696292817306 * BigInteger.Pow(2' 965))' "#19");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(double.PositiveInfinity' (double)(843942696292817306 * BigInteger.Pow(2' 965))' "#19");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DoubleConversion,The following statement contains a magic number: Assert.AreEqual(double.PositiveInfinity' (double)(843942696292817306 * BigInteger.Pow(2' 965))' "#19");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DecimalCtor,The following statement contains a magic number: Assert.AreEqual(999' (int)new BigInteger(999.99m)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DecimalCtor,The following statement contains a magic number: Assert.AreEqual(999' (int)new BigInteger(999.99m)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DecimalCtor,The following statement contains a magic number: Assert.AreEqual(-10000' (int)new BigInteger(-10000m)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DecimalCtor,The following statement contains a magic number: Assert.AreEqual(-10000' (int)new BigInteger(-10000m)' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DecimalConversion,The following statement contains a magic number: Assert.AreEqual(999m' (decimal)new BigInteger(999)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DecimalConversion,The following statement contains a magic number: Assert.AreEqual(999m' (decimal)new BigInteger(999)' "#1");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DecimalConversion,The following statement contains a magic number: GC.KeepAlive((decimal)BigInteger.Pow(2' 1024));
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DecimalConversion,The following statement contains a magic number: GC.KeepAlive((decimal)BigInteger.Pow(2' 1024));
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DecimalConversion,The following statement contains a magic number: GC.KeepAlive((decimal)BigInteger.Pow(-2' 1025));
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DecimalConversion,The following statement contains a magic number: GC.KeepAlive((decimal)BigInteger.Pow(-2' 1025));
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DecimalConversion,The following statement contains a magic number: Assert.AreEqual(9999999999999999999999999999m'                  (decimal)new BigInteger(9999999999999999999999999999m)' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DecimalConversion,The following statement contains a magic number: Assert.AreEqual(9999999999999999999999999999m'                  (decimal)new BigInteger(9999999999999999999999999999m)' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(10' (int)BigInteger.Parse("+10")' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(10' (int)BigInteger.Parse("10 ")' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(-10' (int)BigInteger.Parse("-10 ")' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(10' (int)BigInteger.Parse("    10 ")' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(-10' (int)BigInteger.Parse("  -10 ")' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(-8' (int)BigInteger.Parse("8"' NumberStyles.AllowHexSpecifier)' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(8' (int)BigInteger.Parse("08"' NumberStyles.AllowHexSpecifier)' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(15' (int)BigInteger.Parse("0F"' NumberStyles.AllowHexSpecifier)' "#15");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(255' (int)BigInteger.Parse("0FF"' NumberStyles.AllowHexSpecifier)' "#17");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(-17' (int)BigInteger.Parse("   (17)   "' NumberStyles.AllowParentheses | NumberStyles.AllowLeadingWhite | NumberStyles.AllowTrailingWhite)' "#18");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(-23' (int)BigInteger.Parse("  -23  "' NumberStyles.AllowLeadingSign | NumberStyles.AllowLeadingWhite | NumberStyles.AllowTrailingWhite)' "#19");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(300000' (int)BigInteger.Parse("3E5"' NumberStyles.AllowExponent)' "#20");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(250' (int)BigInteger.Parse("2" + dsep + "5E2"' NumberStyles.AllowExponent | NumberStyles.AllowDecimalPoint)' "#21");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Parse,The following statement contains a magic number: Assert.AreEqual(25' (int)BigInteger.Parse("2500E-2"' NumberStyles.AllowExponent)' "#22");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TryParse,The following statement contains a magic number: Assert.AreEqual(99' (int)x' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TryParse,The following statement contains a magic number: Assert.AreEqual(133' (int)x' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TryParse,The following statement contains a magic number: Assert.AreEqual(-10' (int)x' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TryParse,The following statement contains a magic number: Assert.AreEqual(-10' (int)x' "#20");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TryParse,The following statement contains a magic number: Assert.AreEqual(-10' (int)x' "#22");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TryParse,The following statement contains a magic number: Assert.AreEqual(10' (int)x' "#24");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TryParse,The following statement contains a magic number: Assert.AreEqual(10' (int)x' "#26");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TryParse,The following statement contains a magic number: Assert.AreEqual(10' (int)x' "#31");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TryParse,The following statement contains a magic number: Assert.AreEqual(10' (int)x' "#33");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestUserCurrency,The following statement contains a magic number: const int Val1 = -1234567;
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TestUserCurrency,The following statement contains a magic number: const int Val2 = 1234567;
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TryParseWeirdCulture,The following statement contains a magic number: Assert.AreEqual(11' (int)x' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,TryParseWeirdCulture,The following statement contains a magic number: Assert.AreEqual(-11' (int)y' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareToLongToWithBigNumber,The following statement contains a magic number: Assert.AreEqual(1' a.CompareTo(2000));
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareToLongToWithBigNumber,The following statement contains a magic number: Assert.AreEqual(1' a.CompareTo(-2000));
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareToLongToWithBigNumber,The following statement contains a magic number: Assert.AreEqual(-1' b.CompareTo(2000));
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,CompareToLongToWithBigNumber,The following statement contains a magic number: Assert.AreEqual(-1' b.CompareTo(-2000));
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("923177645763711633004509814536"' (v << 2).ToString()' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("1846355291527423266009019629072"' (v << 3).ToString()' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("3692710583054846532018039258144"' (v << 4).ToString()' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("7385421166109693064036078516288"' (v << 5).ToString()' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("14770842332219386128072157032576"' (v << 6).ToString()' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("29541684664438772256144314065152"' (v << 7).ToString()' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("59083369328877544512288628130304"' (v << 8).ToString()' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("118166738657755089024577256260608"' (v << 9).ToString()' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("236333477315510178049154512521216"' (v << 10).ToString()' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("472666954631020356098309025042432"' (v << 11).ToString()' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("945333909262040712196618050084864"' (v << 12).ToString()' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("1890667818524081424393236100169728"' (v << 13).ToString()' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("3781335637048162848786472200339456"' (v << 14).ToString()' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("7562671274096325697572944400678912"' (v << 15).ToString()' "#15");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("15125342548192651395145888801357824"' (v << 16).ToString()' "#16");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("30250685096385302790291777602715648"' (v << 17).ToString()' "#17");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("60501370192770605580583555205431296"' (v << 18).ToString()' "#18");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("121002740385541211161167110410862592"' (v << 19).ToString()' "#19");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("242005480771082422322334220821725184"' (v << 20).ToString()' "#20");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("484010961542164844644668441643450368"' (v << 21).ToString()' "#21");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("968021923084329689289336883286900736"' (v << 22).ToString()' "#22");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("1936043846168659378578673766573801472"' (v << 23).ToString()' "#23");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("3872087692337318757157347533147602944"' (v << 24).ToString()' "#24");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("7744175384674637514314695066295205888"' (v << 25).ToString()' "#25");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("15488350769349275028629390132590411776"' (v << 26).ToString()' "#26");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("30976701538698550057258780265180823552"' (v << 27).ToString()' "#27");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("61953403077397100114517560530361647104"' (v << 28).ToString()' "#28");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("123906806154794200229035121060723294208"' (v << 29).ToString()' "#29");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("247813612309588400458070242121446588416"' (v << 30).ToString()' "#30");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("495627224619176800916140484242893176832"' (v << 31).ToString()' "#31");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("991254449238353601832280968485786353664"' (v << 32).ToString()' "#32");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("1982508898476707203664561936971572707328"' (v << 33).ToString()' "#33");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("3965017796953414407329123873943145414656"' (v << 34).ToString()' "#34");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("7930035593906828814658247747886290829312"' (v << 35).ToString()' "#35");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("15860071187813657629316495495772581658624"' (v << 36).ToString()' "#36");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("31720142375627315258632990991545163317248"' (v << 37).ToString()' "#37");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("63440284751254630517265981983090326634496"' (v << 38).ToString()' "#38");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("126880569502509261034531963966180653268992"' (v << 39).ToString()' "#39");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("253761139005018522069063927932361306537984"' (v << 40).ToString()' "#40");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("507522278010037044138127855864722613075968"' (v << 41).ToString()' "#41");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("1015044556020074088276255711729445226151936"' (v << 42).ToString()' "#42");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("2030089112040148176552511423458890452303872"' (v << 43).ToString()' "#43");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("4060178224080296353105022846917780904607744"' (v << 44).ToString()' "#44");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("8120356448160592706210045693835561809215488"' (v << 45).ToString()' "#45");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("16240712896321185412420091387671123618430976"' (v << 46).ToString()' "#46");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("32481425792642370824840182775342247236861952"' (v << 47).ToString()' "#47");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("64962851585284741649680365550684494473723904"' (v << 48).ToString()' "#48");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("129925703170569483299360731101368988947447808"' (v << 49).ToString()' "#49");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("259851406341138966598721462202737977894895616"' (v << 50).ToString()' "#50");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("519702812682277933197442924405475955789791232"' (v << 51).ToString()' "#51");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("1039405625364555866394885848810951911579582464"' (v << 52).ToString()' "#52");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("2078811250729111732789771697621903823159164928"' (v << 53).ToString()' "#53");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("4157622501458223465579543395243807646318329856"' (v << 54).ToString()' "#54");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("8315245002916446931159086790487615292636659712"' (v << 55).ToString()' "#55");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("16630490005832893862318173580975230585273319424"' (v << 56).ToString()' "#56");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("33260980011665787724636347161950461170546638848"' (v << 57).ToString()' "#57");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("66521960023331575449272694323900922341093277696"' (v << 58).ToString()' "#58");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("133043920046663150898545388647801844682186555392"' (v << 59).ToString()' "#59");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("266087840093326301797090777295603689364373110784"' (v << 60).ToString()' "#60");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("532175680186652603594181554591207378728746221568"' (v << 61).ToString()' "#61");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("1064351360373305207188363109182414757457492443136"' (v << 62).ToString()' "#62");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("2128702720746610414376726218364829514914984886272"' (v << 63).ToString()' "#63");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("4257405441493220828753452436729659029829969772544"' (v << 64).ToString()' "#64");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("8514810882986441657506904873459318059659939545088"' (v << 65).ToString()' "#65");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("17029621765972883315013809746918636119319879090176"' (v << 66).ToString()' "#66");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("34059243531945766630027619493837272238639758180352"' (v << 67).ToString()' "#67");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("68118487063891533260055238987674544477279516360704"' (v << 68).ToString()' "#68");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,LeftShiftByInt,The following statement contains a magic number: Assert.AreEqual("136236974127783066520110477975349088954559032721408"' (v << 69).ToString()' "#69");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: v *= BigInteger.Pow(2' 70);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: v *= BigInteger.Pow(2' 70);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("68118487063891533260055238987674544477279516360704"' (v >> 2).ToString()' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("34059243531945766630027619493837272238639758180352"' (v >> 3).ToString()' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("17029621765972883315013809746918636119319879090176"' (v >> 4).ToString()' "#4");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("8514810882986441657506904873459318059659939545088"' (v >> 5).ToString()' "#5");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("4257405441493220828753452436729659029829969772544"' (v >> 6).ToString()' "#6");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("2128702720746610414376726218364829514914984886272"' (v >> 7).ToString()' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("1064351360373305207188363109182414757457492443136"' (v >> 8).ToString()' "#8");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("532175680186652603594181554591207378728746221568"' (v >> 9).ToString()' "#9");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("266087840093326301797090777295603689364373110784"' (v >> 10).ToString()' "#10");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("133043920046663150898545388647801844682186555392"' (v >> 11).ToString()' "#11");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("66521960023331575449272694323900922341093277696"' (v >> 12).ToString()' "#12");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("33260980011665787724636347161950461170546638848"' (v >> 13).ToString()' "#13");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("16630490005832893862318173580975230585273319424"' (v >> 14).ToString()' "#14");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("8315245002916446931159086790487615292636659712"' (v >> 15).ToString()' "#15");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("4157622501458223465579543395243807646318329856"' (v >> 16).ToString()' "#16");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("2078811250729111732789771697621903823159164928"' (v >> 17).ToString()' "#17");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("1039405625364555866394885848810951911579582464"' (v >> 18).ToString()' "#18");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("519702812682277933197442924405475955789791232"' (v >> 19).ToString()' "#19");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("259851406341138966598721462202737977894895616"' (v >> 20).ToString()' "#20");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("129925703170569483299360731101368988947447808"' (v >> 21).ToString()' "#21");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("64962851585284741649680365550684494473723904"' (v >> 22).ToString()' "#22");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("32481425792642370824840182775342247236861952"' (v >> 23).ToString()' "#23");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("16240712896321185412420091387671123618430976"' (v >> 24).ToString()' "#24");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("8120356448160592706210045693835561809215488"' (v >> 25).ToString()' "#25");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("4060178224080296353105022846917780904607744"' (v >> 26).ToString()' "#26");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("2030089112040148176552511423458890452303872"' (v >> 27).ToString()' "#27");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("1015044556020074088276255711729445226151936"' (v >> 28).ToString()' "#28");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("507522278010037044138127855864722613075968"' (v >> 29).ToString()' "#29");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("253761139005018522069063927932361306537984"' (v >> 30).ToString()' "#30");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("126880569502509261034531963966180653268992"' (v >> 31).ToString()' "#31");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("63440284751254630517265981983090326634496"' (v >> 32).ToString()' "#32");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("31720142375627315258632990991545163317248"' (v >> 33).ToString()' "#33");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("15860071187813657629316495495772581658624"' (v >> 34).ToString()' "#34");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("7930035593906828814658247747886290829312"' (v >> 35).ToString()' "#35");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("3965017796953414407329123873943145414656"' (v >> 36).ToString()' "#36");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("1982508898476707203664561936971572707328"' (v >> 37).ToString()' "#37");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("991254449238353601832280968485786353664"' (v >> 38).ToString()' "#38");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("495627224619176800916140484242893176832"' (v >> 39).ToString()' "#39");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("247813612309588400458070242121446588416"' (v >> 40).ToString()' "#40");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("123906806154794200229035121060723294208"' (v >> 41).ToString()' "#41");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("61953403077397100114517560530361647104"' (v >> 42).ToString()' "#42");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("30976701538698550057258780265180823552"' (v >> 43).ToString()' "#43");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("15488350769349275028629390132590411776"' (v >> 44).ToString()' "#44");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("7744175384674637514314695066295205888"' (v >> 45).ToString()' "#45");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("3872087692337318757157347533147602944"' (v >> 46).ToString()' "#46");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("1936043846168659378578673766573801472"' (v >> 47).ToString()' "#47");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("968021923084329689289336883286900736"' (v >> 48).ToString()' "#48");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("484010961542164844644668441643450368"' (v >> 49).ToString()' "#49");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("242005480771082422322334220821725184"' (v >> 50).ToString()' "#50");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("121002740385541211161167110410862592"' (v >> 51).ToString()' "#51");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("60501370192770605580583555205431296"' (v >> 52).ToString()' "#52");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("30250685096385302790291777602715648"' (v >> 53).ToString()' "#53");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("15125342548192651395145888801357824"' (v >> 54).ToString()' "#54");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("7562671274096325697572944400678912"' (v >> 55).ToString()' "#55");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("3781335637048162848786472200339456"' (v >> 56).ToString()' "#56");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("1890667818524081424393236100169728"' (v >> 57).ToString()' "#57");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("945333909262040712196618050084864"' (v >> 58).ToString()' "#58");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("472666954631020356098309025042432"' (v >> 59).ToString()' "#59");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("236333477315510178049154512521216"' (v >> 60).ToString()' "#60");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("118166738657755089024577256260608"' (v >> 61).ToString()' "#61");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("59083369328877544512288628130304"' (v >> 62).ToString()' "#62");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("29541684664438772256144314065152"' (v >> 63).ToString()' "#63");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("14770842332219386128072157032576"' (v >> 64).ToString()' "#64");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("7385421166109693064036078516288"' (v >> 65).ToString()' "#65");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("3692710583054846532018039258144"' (v >> 66).ToString()' "#66");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("1846355291527423266009019629072"' (v >> 67).ToString()' "#67");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("923177645763711633004509814536"' (v >> 68).ToString()' "#68");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,RightShiftByInt,The following statement contains a magic number: Assert.AreEqual("461588822881855816502254907268"' (v >> 69).ToString()' "#69");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Bug10887,The following statement contains a magic number: b = (b * 256) + i;
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Bug10887,The following statement contains a magic number: i <= 16
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Bug10887,The following statement contains a magic number: var p = BigInteger.Pow(2' 32);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Bug10887,The following statement contains a magic number: var p = BigInteger.Pow(2' 32);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Bug10887,The following statement contains a magic number: Assert.AreEqual("1339673755198158349044581307228491536"' ((b << 32) / p).ToString()' "#2");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Bug10887,The following statement contains a magic number: Assert.AreEqual("1339673755198158349044581307228491536"' (b * p >> 32).ToString()' "#3");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,DefaultCtorWorks,The following statement contains a magic number: Assert.AreEqual(true' a < 10L' "#7");
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Bug16526,The following statement contains a magic number: var x = BigInteger.Pow(2' 63);
Magic Number,MonoTests.System.Numerics,BigIntegerTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTest.cs,Bug16526,The following statement contains a magic number: var x = BigInteger.Pow(2' 63);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatC,The following statement contains a magic number: var first = new BigInteger(123456789);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatD,The following statement contains a magic number: var first = new BigInteger(123456789);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatE1,The following statement contains a magic number: var first = new BigInteger(123456789);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatE2,The following statement contains a magic number: var first = new BigInteger(123456789);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatE3,The following statement contains a magic number: var first = new BigInteger(123456789000000000000000000d);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatF,The following statement contains a magic number: var first = new BigInteger(123456789);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatG,The following statement contains a magic number: var first = new BigInteger(123456789);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatN,The following statement contains a magic number: var first = new BigInteger(123456789);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatP,The following statement contains a magic number: var first = new BigInteger(123456789);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatR,The following statement contains a magic number: var first = new BigInteger(123456789);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FormatX,The following statement contains a magic number: var first = new BigInteger(123456789);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: long[] values =              {                  0'                  long.MinValue'                  long.MaxValue'                  -1'                  1L + int.MaxValue'                  -1L + int.MinValue'                  0x1234'                  0xFFFFFFFFL'                  0x1FFFFFFFFL'                  -0xFFFFFFFFL'                  -0x1FFFFFFFFL'                  0x100000000L'                  -0x100000000L'                  0x100000001L'                  -0x100000001L'                  4294967295L'                  -4294967295L'                  4294967296L'                  -4294967296L              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: long[] values =              {                  0'                  long.MinValue'                  long.MaxValue'                  -1'                  1L + int.MaxValue'                  -1L + int.MinValue'                  0x1234'                  0xFFFFFFFFL'                  0x1FFFFFFFFL'                  -0xFFFFFFFFL'                  -0x1FFFFFFFFL'                  0x100000000L'                  -0x100000000L'                  0x100000001L'                  -0x100000001L'                  4294967295L'                  -4294967295L'                  4294967296L'                  -4294967296L              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: long[] values =              {                  0'                  long.MinValue'                  long.MaxValue'                  -1'                  1L + int.MaxValue'                  -1L + int.MinValue'                  0x1234'                  0xFFFFFFFFL'                  0x1FFFFFFFFL'                  -0xFFFFFFFFL'                  -0x1FFFFFFFFL'                  0x100000000L'                  -0x100000000L'                  0x100000001L'                  -0x100000001L'                  4294967295L'                  -4294967295L'                  4294967296L'                  -4294967296L              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: long[] values =              {                  0'                  long.MinValue'                  long.MaxValue'                  -1'                  1L + int.MaxValue'                  -1L + int.MinValue'                  0x1234'                  0xFFFFFFFFL'                  0x1FFFFFFFFL'                  -0xFFFFFFFFL'                  -0x1FFFFFFFFL'                  0x100000000L'                  -0x100000000L'                  0x100000001L'                  -0x100000001L'                  4294967295L'                  -4294967295L'                  4294967296L'                  -4294967296L              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,FromByteArrayTest,The following statement contains a magic number: byte[][] arrays =              {                  new byte[]                  {                      0                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      0'                      0'                      0'                      128                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      255'                      255'                      255'                      127                  }'                  new byte[]                  {                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      128'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      127'                      255                  }'                  new byte[]                  {                      52'                      18                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      1                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      254                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      254                  }'                  new byte[]                  {                      255'                      255'                      255'                      255'                      0                  }'                  new byte[]                  {                      1'                      0'                      0'                      0'                      255                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      1                  }'                  new byte[]                  {                      0'                      0'                      0'                      0'                      255                  }              };
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              0'                              0'                              0'                              0'                              0'                              0'                              0'                              128                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              255'                              255'                              255'                              127                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              255'                              255'                              255'                              127                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              255'                              255'                              255'                              127                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              255'                              255'                              255'                              127                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              255'                              255'                              255'                              127                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              255'                              255'                              255'                              127                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              255'                              255'                              255'                              127                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              255'                              255'                              255'                              127                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              0'                              0'                              0'                              128'                              0                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              127'                              255                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              127'                              255                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              127'                              255                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              127'                              255                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              127'                              255                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              52'                              18                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              52'                              18                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              0                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              0                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              0                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              0                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              1                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              1                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              1                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              1                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              1'                              0'                              0'                              0'                              255                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              1'                              0'                              0'                              0'                              254                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              0'                              0'                              0'                              0'                              255                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              254                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              254                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              254                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              254                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              254                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: a = new BigInteger(4294967295L);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              0                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              0                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              0                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              255'                              255'                              255'                              255'                              0                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: a = new BigInteger(-4294967295L);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              1'                              0'                              0'                              0'                              255                          }                      )                  );
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: a = new BigInteger(4294967296L);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: a = new BigInteger(-4294967296L);
Magic Number,MonoTests.System.Numerics,BigIntegerTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Numerics\BigIntegerTestEx.cs,ToByteArrayTest,The following statement contains a magic number: Assert.IsTrue                  (                      a.ToByteArray().SequenceEqual                      (                          new byte[]                          {                              0'                              0'                              0'                              0'                              255                          }                      )                  );
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,FinalizableObjectsThatRetainDeadKeys,The following statement contains a magic number: Monitor.Wait(_lock2' 1000);
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,FinalizableObjectsThatRetainDeadKeys,The following statement contains a magic number: Assert.AreEqual(20' _reachable' "#1");
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,GetValue,The following statement contains a magic number: cwt.GetValue(20' null);
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,OldGenKeysMakeNewGenObjectsReachable,The following statement contains a magic number: x < 1000
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,OldGenKeysMakeNewGenObjectsReachable,The following statement contains a magic number: i < 1000
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,Reachability,The following statement contains a magic number: Assert.IsTrue(keys[2].IsAlive' "r2");
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,FillReachable,The following statement contains a magic number: i < 10
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,FillWithFinalizable,The following statement contains a magic number: i < 20
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,FillWithNetwork,The following statement contains a magic number: const int K = 500;
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,FillWithNetwork,The following statement contains a magic number: i < 10
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,ForceMinor,The following statement contains a magic number: i < 64000
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,ForcePromotion,The following statement contains a magic number: var o = new object[64000];
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,ForcePromotion,The following statement contains a magic number: o[i] = new int[10];
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,ForcePromotion,The following statement contains a magic number: i < 64000
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,FillTable3,The following statement contains a magic number: var a = (object)10;
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,FillTable3,The following statement contains a magic number: var b = (object)20;
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,FillTable3,The following statement contains a magic number: var k1 = (object)30;
Magic Number,MonoTests.System.Runtime.CompilerServices,ConditionalWeakTableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\ConditionalWeakTableTest.cs,FillTable3,The following statement contains a magic number: var k2 = (object)40;
Magic Number,MonoTests.System.Runtime.CompilerServices,YieldAwaitableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\YieldAwaitableTest.cs,OnCompleted_2,The following statement contains a magic number: Assert.IsTrue(mre.WaitOne(1000)' "#1");
Magic Number,MonoTests.System.Runtime.CompilerServices,YieldAwaitableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\YieldAwaitableTest.cs,OnCompleted_3,The following statement contains a magic number: var t = Task.Factory.StartNew(() =>              {                  using (var mre = new ManualResetEvent(false))                  {                      _a.OnCompleted(() =>                      {                          ranScheduler = TaskScheduler.Current;                          mre.Set();                      });                        mre.WaitOne(1000);                  }              }' CancellationToken.None' TaskCreationOptions.None' scheduler);
Magic Number,MonoTests.System.Runtime.CompilerServices,YieldAwaitableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\YieldAwaitableTest.cs,OnCompleted_3,The following statement contains a magic number: Assert.IsTrue(t.Wait(1000)' "#1");
Magic Number,MonoTests.System.Runtime.CompilerServices,YieldAwaitableTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Runtime\CompilationServices\YieldAwaitableTest.cs,OnCompleted_4,The following statement contains a magic number: Assert.IsTrue(mre.WaitOne(1000)' "#1");
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,Cancel,The following statement contains a magic number: cts.Token.Register(() => called[0] += 12);
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,Cancel,The following statement contains a magic number: Assert.AreEqual(12' called[0]' "#2");
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,CancelOrder,The following statement contains a magic number: cts.Token.Register(Action' 2);
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,ConcurrentCancelLinkedTokenSourceWhileDisposing,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var src = new CancellationTokenSource[1];                      using (src[0] = new CancellationTokenSource())                      {                          var linked = CancellationTokenSource.CreateLinkedTokenSource(src[0].Token);                          var countdownEvent = new CountdownEvent[1];                          using (countdownEvent[0] = new CountdownEvent(2))                          {                              var t1 = new Thread                              (                                  () =>                                  {                                      if (!countdownEvent[0].Signal())                                      {                                          countdownEvent[0].Wait(200);                                      }                                        src[0].Cancel();                                  }                              );                              var t2 = new Thread                              (                                  () =>                                  {                                      if (!countdownEvent[0].Signal())                                      {                                          countdownEvent[0].Wait(200);                                      }                                        linked.Dispose();                                  }                              );                                t1.Start();                              t2.Start();                                t1.Join();                              t2.Join();                          }                      }                  }'                  500              );
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,ConcurrentCancelLinkedTokenSourceWhileDisposing,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var src = new CancellationTokenSource[1];                      using (src[0] = new CancellationTokenSource())                      {                          var linked = CancellationTokenSource.CreateLinkedTokenSource(src[0].Token);                          var countdownEvent = new CountdownEvent[1];                          using (countdownEvent[0] = new CountdownEvent(2))                          {                              var t1 = new Thread                              (                                  () =>                                  {                                      if (!countdownEvent[0].Signal())                                      {                                          countdownEvent[0].Wait(200);                                      }                                        src[0].Cancel();                                  }                              );                              var t2 = new Thread                              (                                  () =>                                  {                                      if (!countdownEvent[0].Signal())                                      {                                          countdownEvent[0].Wait(200);                                      }                                        linked.Dispose();                                  }                              );                                t1.Start();                              t2.Start();                                t1.Join();                              t2.Join();                          }                      }                  }'                  500              );
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,ConcurrentCancelLinkedTokenSourceWhileDisposing,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var src = new CancellationTokenSource[1];                      using (src[0] = new CancellationTokenSource())                      {                          var linked = CancellationTokenSource.CreateLinkedTokenSource(src[0].Token);                          var countdownEvent = new CountdownEvent[1];                          using (countdownEvent[0] = new CountdownEvent(2))                          {                              var t1 = new Thread                              (                                  () =>                                  {                                      if (!countdownEvent[0].Signal())                                      {                                          countdownEvent[0].Wait(200);                                      }                                        src[0].Cancel();                                  }                              );                              var t2 = new Thread                              (                                  () =>                                  {                                      if (!countdownEvent[0].Signal())                                      {                                          countdownEvent[0].Wait(200);                                      }                                        linked.Dispose();                                  }                              );                                t1.Start();                              t2.Start();                                t1.Join();                              t2.Join();                          }                      }                  }'                  500              );
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,ConcurrentCancelLinkedTokenSourceWhileDisposing,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var src = new CancellationTokenSource[1];                      using (src[0] = new CancellationTokenSource())                      {                          var linked = CancellationTokenSource.CreateLinkedTokenSource(src[0].Token);                          var countdownEvent = new CountdownEvent[1];                          using (countdownEvent[0] = new CountdownEvent(2))                          {                              var t1 = new Thread                              (                                  () =>                                  {                                      if (!countdownEvent[0].Signal())                                      {                                          countdownEvent[0].Wait(200);                                      }                                        src[0].Cancel();                                  }                              );                              var t2 = new Thread                              (                                  () =>                                  {                                      if (!countdownEvent[0].Signal())                                      {                                          countdownEvent[0].Wait(200);                                      }                                        linked.Dispose();                                  }                              );                                t1.Start();                              t2.Start();                                t1.Join();                              t2.Join();                          }                      }                  }'                  500              );
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,RegisterThenDispose,The following statement contains a magic number: var src = new CancellationTokenSource[2];
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,CancelAfter,The following statement contains a magic number: cts.CancelAfter(50);
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,CancelAfter,The following statement contains a magic number: !manualResetEventBox[0].WaitOne(1000)
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,CancelAfter,The following statement contains a magic number: milliseconds > 0 && milliseconds < 50
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,CancelAfterDisposed,The following statement contains a magic number: cts.CancelAfter(50);
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,CancelAfterDisposed,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,CancelAfterInvalid,The following statement contains a magic number: cts.CancelAfter(-9);
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,DisposeRace,The following statement contains a magic number: i < 1000
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTest.cs,CtorTimeout,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTestEx.cs,CancelAfterDisposed,The following statement contains a magic number: cts.CancelAfter(1000);
Magic Number,MonoTests.System.Threading,CancellationTokenSourceTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CancellationTokenSourceTestEx.cs,CancelAfterDisposed,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,AddCountSignalStressTestCase,The following statement contains a magic number: var evt = new CountdownEvent(5);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,AddCountSignalStressTestCase,The following statement contains a magic number: ParallelTestHelper.ParallelStressTest              (                  () =>                  {                      var num = Interlocked.Increment(ref count);                      if (num % 2 == 0)                      {                          evt.AddCount();                      }                      else                      {                          evt.Signal();                      }                  }' 7              );
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,AddCountSignalStressTestCase,The following statement contains a magic number: ParallelTestHelper.ParallelStressTest              (                  () =>                  {                      var num = Interlocked.Increment(ref count);                      if (num % 2 == 0)                      {                          evt.AddCount();                      }                      else                      {                          evt.Signal();                      }                  }' 7              );
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,AddCountSignalStressTestCase,The following statement contains a magic number: Assert.AreEqual(4' evt.CurrentCount' "#1");
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,InitialTestCase,The following statement contains a magic number: Assert.AreEqual(5' evt.InitialCount' "#1");
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,InitialTestCase,The following statement contains a magic number: evt.Signal(3);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,InitialTestCase,The following statement contains a magic number: Assert.AreEqual(5' evt.InitialCount' "#2");
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,CurrentCountTestCase,The following statement contains a magic number: Assert.AreEqual(5' evt.CurrentCount' "#1");
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,CurrentCountTestCase,The following statement contains a magic number: Assert.AreEqual(6' evt.CurrentCount' "#2");
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,CurrentCountTestCase,The following statement contains a magic number: evt.TryAddCount(2);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,CurrentCountTestCase,The following statement contains a magic number: Assert.AreEqual(8' evt.CurrentCount' "#3");
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,CurrentCountTestCase,The following statement contains a magic number: evt.Signal(4);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,CurrentCountTestCase,The following statement contains a magic number: Assert.AreEqual(4' evt.CurrentCount' "#4");
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,CurrentCountTestCase,The following statement contains a magic number: Assert.AreEqual(5' evt.CurrentCount' "#5");
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,Dispose,The following statement contains a magic number: ce.Wait(5);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,IsSetTestCase,The following statement contains a magic number: evt.Signal(5);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,Reset_FullInitialized,The following statement contains a magic number: ev.Reset(4);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,Reset_FullInitialized,The following statement contains a magic number: Assert.AreEqual(4' ev.CurrentCount' "#4");
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,Signal_Negative,The following statement contains a magic number: ev.Signal(2);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,Signal_Concurrent,The following statement contains a magic number: Assert.IsTrue(ce.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,Signal_Concurrent,The following statement contains a magic number: r < 100
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,TryAddCountTestCase,The following statement contains a magic number: Assert.IsTrue(evt.TryAddCount(2)' "#1");
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,TryAddCountTestCase,The following statement contains a magic number: evt.Signal(7);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,TryAddCount_HasBeenSet,The following statement contains a magic number: ev.Signal(2);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,TryAddCount_HasBeenSet,The following statement contains a magic number: Assert.IsFalse(ev.TryAddCount(66)' "#3");
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,WaitTestCase,The following statement contains a magic number: var evt = new CountdownEvent(5);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,WaitTestCase,The following statement contains a magic number: ParallelTestHelper.ParallelStressTest              (                  () =>                  {                      if (Interlocked.Increment(ref count) % 2 == 0)                      {                          Thread.Sleep(100);                          while (!evt.IsSet)                          {                              evt.Signal();                          }                      }                      else                      {                          evt.Wait();                          s = true;                      }                  }' 3              );
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,WaitTestCase,The following statement contains a magic number: ParallelTestHelper.ParallelStressTest              (                  () =>                  {                      if (Interlocked.Increment(ref count) % 2 == 0)                      {                          Thread.Sleep(100);                          while (!evt.IsSet)                          {                              evt.Signal();                          }                      }                      else                      {                          evt.Wait();                          s = true;                      }                  }' 3              );
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,WaitTestCase,The following statement contains a magic number: ParallelTestHelper.ParallelStressTest              (                  () =>                  {                      if (Interlocked.Increment(ref count) % 2 == 0)                      {                          Thread.Sleep(100);                          while (!evt.IsSet)                          {                              evt.Signal();                          }                      }                      else                      {                          evt.Wait();                          s = true;                      }                  }' 3              );
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,ResetTest,The following statement contains a magic number: Assert.AreEqual(5' evt.CurrentCount);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,ResetTest,The following statement contains a magic number: Assert.AreEqual(4' evt.CurrentCount);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,ResetTest,The following statement contains a magic number: Assert.AreEqual(5' evt.CurrentCount);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,ResetTest,The following statement contains a magic number: Assert.AreEqual(5' evt.InitialCount);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,ResetTest,The following statement contains a magic number: Assert.AreEqual(3' evt.CurrentCount);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,ResetTest,The following statement contains a magic number: Assert.AreEqual(5' evt.InitialCount);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,ResetTest,The following statement contains a magic number: evt.Reset(10);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,ResetTest,The following statement contains a magic number: Assert.AreEqual(10' evt.CurrentCount);
Magic Number,MonoTests.System.Threading,CountdownEventTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\CountdownEventTests.cs,ResetTest,The following statement contains a magic number: Assert.AreEqual(10' evt.InitialCount);
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,ConstructorDefaults,The following statement contains a magic number: Assert.AreEqual(10' _mre.SpinCount' "#2");
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,SetAfterDisposeTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var countdownEvent = new CountdownEvent[2];                      using (countdownEvent[0] = new CountdownEvent(2))                      {                          using (countdownEvent[1] = new CountdownEvent(2))                          {                              Exception exception = null' setting = null;                                ThreadPool.QueueUserWorkItem(delegate                              {                                  try                                  {                                      countdownEvent[0].Signal();                                      countdownEvent[0].Wait(1000);                                      _mre.Dispose();                                  }                                  catch (Exception e)                                  {                                      exception = e;                                  }                                  countdownEvent[1].Signal();                              });                              ThreadPool.QueueUserWorkItem(delegate                              {                                  try                                  {                                      countdownEvent[0].Signal();                                      countdownEvent[0].Wait(1000);                                      _mre.Set();                                  }                                  catch (Exception e)                                  {                                      setting = e;                                  }                                  countdownEvent[1].Signal();                              });                                countdownEvent[1].Wait();                              Assert.IsNull(exception' "#1");                              Assert.IsNull(setting' "#2");                                countdownEvent[0].Dispose();                              countdownEvent[1].Dispose();                          }                      }                  }              );
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,SetAfterDisposeTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var countdownEvent = new CountdownEvent[2];                      using (countdownEvent[0] = new CountdownEvent(2))                      {                          using (countdownEvent[1] = new CountdownEvent(2))                          {                              Exception exception = null' setting = null;                                ThreadPool.QueueUserWorkItem(delegate                              {                                  try                                  {                                      countdownEvent[0].Signal();                                      countdownEvent[0].Wait(1000);                                      _mre.Dispose();                                  }                                  catch (Exception e)                                  {                                      exception = e;                                  }                                  countdownEvent[1].Signal();                              });                              ThreadPool.QueueUserWorkItem(delegate                              {                                  try                                  {                                      countdownEvent[0].Signal();                                      countdownEvent[0].Wait(1000);                                      _mre.Set();                                  }                                  catch (Exception e)                                  {                                      setting = e;                                  }                                  countdownEvent[1].Signal();                              });                                countdownEvent[1].Wait();                              Assert.IsNull(exception' "#1");                              Assert.IsNull(setting' "#2");                                countdownEvent[0].Dispose();                              countdownEvent[1].Dispose();                          }                      }                  }              );
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,SetAfterDisposeTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var countdownEvent = new CountdownEvent[2];                      using (countdownEvent[0] = new CountdownEvent(2))                      {                          using (countdownEvent[1] = new CountdownEvent(2))                          {                              Exception exception = null' setting = null;                                ThreadPool.QueueUserWorkItem(delegate                              {                                  try                                  {                                      countdownEvent[0].Signal();                                      countdownEvent[0].Wait(1000);                                      _mre.Dispose();                                  }                                  catch (Exception e)                                  {                                      exception = e;                                  }                                  countdownEvent[1].Signal();                              });                              ThreadPool.QueueUserWorkItem(delegate                              {                                  try                                  {                                      countdownEvent[0].Signal();                                      countdownEvent[0].Wait(1000);                                      _mre.Set();                                  }                                  catch (Exception e)                                  {                                      setting = e;                                  }                                  countdownEvent[1].Signal();                              });                                countdownEvent[1].Wait();                              Assert.IsNull(exception' "#1");                              Assert.IsNull(setting' "#2");                                countdownEvent[0].Dispose();                              countdownEvent[1].Dispose();                          }                      }                  }              );
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,SetAfterDisposeTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var countdownEvent = new CountdownEvent[2];                      using (countdownEvent[0] = new CountdownEvent(2))                      {                          using (countdownEvent[1] = new CountdownEvent(2))                          {                              Exception exception = null' setting = null;                                ThreadPool.QueueUserWorkItem(delegate                              {                                  try                                  {                                      countdownEvent[0].Signal();                                      countdownEvent[0].Wait(1000);                                      _mre.Dispose();                                  }                                  catch (Exception e)                                  {                                      exception = e;                                  }                                  countdownEvent[1].Signal();                              });                              ThreadPool.QueueUserWorkItem(delegate                              {                                  try                                  {                                      countdownEvent[0].Signal();                                      countdownEvent[0].Wait(1000);                                      _mre.Set();                                  }                                  catch (Exception e)                                  {                                      setting = e;                                  }                                  countdownEvent[1].Signal();                              });                                countdownEvent[1].Wait();                              Assert.IsNull(exception' "#1");                              Assert.IsNull(setting' "#2");                                countdownEvent[0].Dispose();                              countdownEvent[1].Dispose();                          }                      }                  }              );
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,SetAfterDisposeTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var countdownEvent = new CountdownEvent[2];                      using (countdownEvent[0] = new CountdownEvent(2))                      {                          using (countdownEvent[1] = new CountdownEvent(2))                          {                              Exception exception = null' setting = null;                                ThreadPool.QueueUserWorkItem(delegate                              {                                  try                                  {                                      countdownEvent[0].Signal();                                      countdownEvent[0].Wait(1000);                                      _mre.Dispose();                                  }                                  catch (Exception e)                                  {                                      exception = e;                                  }                                  countdownEvent[1].Signal();                              });                              ThreadPool.QueueUserWorkItem(delegate                              {                                  try                                  {                                      countdownEvent[0].Signal();                                      countdownEvent[0].Wait(1000);                                      _mre.Set();                                  }                                  catch (Exception e)                                  {                                      setting = e;                                  }                                  countdownEvent[1].Signal();                              });                                countdownEvent[1].Wait();                              Assert.IsNull(exception' "#1");                              Assert.IsNull(setting' "#2");                                countdownEvent[0].Dispose();                              countdownEvent[1].Dispose();                          }                      }                  }              );
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitDisposeWithCancel,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate                  {                      Thread.Sleep(10);                      _mre.Dispose();                      token[0].Cancel();                  });
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitDisposeWithCancel,The following statement contains a magic number: _mre.Wait(10000' token[0].Token);
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitExpired,The following statement contains a magic number: Assert.IsFalse(_mre.Wait(10));
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitSetConcurrent,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(state => b &= mre.Wait(1000));
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitSetConcurrent,The following statement contains a magic number: Assert.IsTrue(mre.Wait(1000)' $"{i}");
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitSetConcurrent,The following statement contains a magic number: i < 10000
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitTest,The following statement contains a magic number: ParallelTestHelper.ParallelStressTest              (                  () =>                  {                      if (Interlocked.Increment(ref count) % 2 == 0)                      {                          Thread.Sleep(50);                          for (var i = 0; i < 10; i++)                          {                              if (i % 2 == 0)                              {                                  _mre.Reset();                              }                              else                              {                                  _mre.Set();                              }                          }                      }                      else                      {                          _mre.Wait();                          s = true;                      }                  }'                  2              );
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitTest,The following statement contains a magic number: ParallelTestHelper.ParallelStressTest              (                  () =>                  {                      if (Interlocked.Increment(ref count) % 2 == 0)                      {                          Thread.Sleep(50);                          for (var i = 0; i < 10; i++)                          {                              if (i % 2 == 0)                              {                                  _mre.Reset();                              }                              else                              {                                  _mre.Set();                              }                          }                      }                      else                      {                          _mre.Wait();                          s = true;                      }                  }'                  2              );
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitTest,The following statement contains a magic number: ParallelTestHelper.ParallelStressTest              (                  () =>                  {                      if (Interlocked.Increment(ref count) % 2 == 0)                      {                          Thread.Sleep(50);                          for (var i = 0; i < 10; i++)                          {                              if (i % 2 == 0)                              {                                  _mre.Reset();                              }                              else                              {                                  _mre.Set();                              }                          }                      }                      else                      {                          _mre.Wait();                          s = true;                      }                  }'                  2              );
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitTest,The following statement contains a magic number: ParallelTestHelper.ParallelStressTest              (                  () =>                  {                      if (Interlocked.Increment(ref count) % 2 == 0)                      {                          Thread.Sleep(50);                          for (var i = 0; i < 10; i++)                          {                              if (i % 2 == 0)                              {                                  _mre.Reset();                              }                              else                              {                                  _mre.Set();                              }                          }                      }                      else                      {                          _mre.Wait();                          s = true;                      }                  }'                  2              );
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitTest,The following statement contains a magic number: ParallelTestHelper.ParallelStressTest              (                  () =>                  {                      if (Interlocked.Increment(ref count) % 2 == 0)                      {                          Thread.Sleep(50);                          for (var i = 0; i < 10; i++)                          {                              if (i % 2 == 0)                              {                                  _mre.Reset();                              }                              else                              {                                  _mre.Set();                              }                          }                      }                      else                      {                          _mre.Wait();                          s = true;                      }                  }'                  2              );
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitWithCancellationTokenAndCancel,The following statement contains a magic number: ThreadPool.QueueUserWorkItem                      (                          _ =>                          {                              Thread.Sleep(1000);                              cts[0].Cancel();                          }                      );
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitWithCancellationTokenAndCancel,The following statement contains a magic number: manualResetEvent[0].Wait(TimeSpan.FromSeconds(10)' cts[0].Token);
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitWithCancellationTokenAndNotImmediateSetTest,The following statement contains a magic number: ThreadPool.QueueUserWorkItem                      (                          _ =>                          {                              Thread.Sleep(1000);                              manualResetEvent[0].Set();                          }                      );
Magic Number,MonoTests.System.Threading,ManualResetEventSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ManualResetEventSlimTests.cs,WaitWithCancellationTokenAndNotImmediateSetTest,The following statement contains a magic number: Assert.IsTrue(manualResetEvent[0].Wait(TimeSpan.FromSeconds(10)' cts.Token)' "Wait returned false despite event was set.");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,TryEnterReadLock_OutOfRange,The following statement contains a magic number: v.TryEnterReadLock(-2);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,TryEnterUpgradeableReadLock_OutOfRange,The following statement contains a magic number: v.TryEnterUpgradeableReadLock(-2);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,TryEnterWriteLock_OutOfRange,The following statement contains a magic number: v.TryEnterWriteLock(-2);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterReadLock_MultiRead,The following statement contains a magic number: const int Local = 10;
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterReadLock_MultiRead,The following statement contains a magic number: var r = from i in Enumerable.Range(1' 30)                          select new Thread(() =>                          {                              // Just to cause some contention                              Thread.Sleep(100);                              v.EnterReadLock();                                Assert.AreEqual(10' Local);                          });
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterReadLock_MultiRead,The following statement contains a magic number: var r = from i in Enumerable.Range(1' 30)                          select new Thread(() =>                          {                              // Just to cause some contention                              Thread.Sleep(100);                              v.EnterReadLock();                                Assert.AreEqual(10' Local);                          });
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterReadLock_MultiRead,The following statement contains a magic number: var r = from i in Enumerable.Range(1' 30)                          select new Thread(() =>                          {                              // Just to cause some contention                              Thread.Sleep(100);                              v.EnterReadLock();                                Assert.AreEqual(10' Local);                          });
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,TryEnterWriteLock_WhileReading,The following statement contains a magic number: Assert.IsFalse(v.TryEnterWriteLock(100));
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,TryEnterWriteLock_WhileReading,The following statement contains a magic number: Assert.IsTrue(v.TryEnterWriteLock(100));
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterWriteLock_MultiRead,The following statement contains a magic number: var local = new[] { 10 };
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterWriteLock_MultiRead,The following statement contains a magic number: const int Thread_Count = 10;
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterWriteLock_MultiRead,The following statement contains a magic number: var r = from i in Enumerable.Range(1' Thread_Count)                          select new Thread(() =>                          {                              Interlocked.Increment(ref readyCount);                              v.EnterReadLock();                              v.ExitReadLock();                              Assert.AreEqual(11' local[0]);                          });
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterWriteLock_MultiRead,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterWriteLock_MultiRead,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterWriteLock_MultiRead,The following statement contains a magic number: i < 200 && v.WaitingReadCount != Thread_Count
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterWriteLock_MultiRead,The following statement contains a magic number: local[0] = 11;
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterWriteLock_After_ExitUpgradeableReadLock,The following statement contains a magic number: Assert.IsTrue(v.TryEnterWriteLock(100));
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,EnterWriteLock_After_ExitUpgradeableReadLock,The following statement contains a magic number: Assert.IsTrue(v.TryEnterWriteLock(100));
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveReadLockTest,The following statement contains a magic number: Assert.IsTrue(v.TryEnterReadLock(100)' "#1");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveReadLockTest,The following statement contains a magic number: Assert.IsTrue(v.TryEnterReadLock(100)' "#2");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveReadLockTest,The following statement contains a magic number: Assert.IsTrue(v.TryEnterReadLock(100)' "#3");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveReadLockTest,The following statement contains a magic number: Assert.AreEqual(3' v.RecursiveReadCount);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveWriteLockTest,The following statement contains a magic number: Assert.IsTrue(v.TryEnterWriteLock(100)' "#1");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveWriteLockTest,The following statement contains a magic number: Assert.IsTrue(v.TryEnterWriteLock(100)' "#2");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveWriteLockTest,The following statement contains a magic number: Assert.IsTrue(v.TryEnterWriteLock(100)' "#3");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveWriteLockTest,The following statement contains a magic number: Assert.AreEqual(3' v.RecursiveWriteCount);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveWritePlusReadLockTest,The following statement contains a magic number: Assert.IsTrue(v.TryEnterWriteLock(100)' "#1");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveWritePlusReadLockTest,The following statement contains a magic number: Assert.IsTrue(v.TryEnterReadLock(100)' "#2");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveWritePlusReadLockTest,The following statement contains a magic number: Assert.IsTrue(v.TryEnterReadLock(100)' "#3");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveWritePlusReadLockTest,The following statement contains a magic number: Assert.AreEqual(2' v.RecursiveReadCount' "3c");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveUpgradeableReadLockTest,The following statement contains a magic number: Assert.IsTrue(v.TryEnterUpgradeableReadLock(100)' "#1");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveUpgradeableReadLockTest,The following statement contains a magic number: Assert.IsTrue(v.TryEnterUpgradeableReadLock(100)' "#2");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveUpgradeableReadLockTest,The following statement contains a magic number: Assert.IsTrue(v.TryEnterUpgradeableReadLock(100)' "#3");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveUpgradeableReadLockTest,The following statement contains a magic number: Assert.AreEqual(3' v.RecursiveUpgradeCount);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveReadPropertiesTest,The following statement contains a magic number: Assert.AreEqual(2' v.RecursiveReadCount' "#3a");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveUpgradePropertiesTest,The following statement contains a magic number: Assert.AreEqual(2' v.RecursiveUpgradeCount' "#3a");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveWritePropertiesTest,The following statement contains a magic number: Assert.AreEqual(2' v.RecursiveWriteCount' "#3a");
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveEnterExitReadTest,The following statement contains a magic number: Assert.AreEqual(3' v.RecursiveReadCount);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveEnterExitReadTest,The following statement contains a magic number: Assert.AreEqual(2' v.RecursiveReadCount);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveEnterExitWriteTest,The following statement contains a magic number: Assert.AreEqual(3' v.RecursiveWriteCount);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveEnterExitUpgradableTest,The following statement contains a magic number: Assert.AreEqual(3' v.RecursiveUpgradeCount);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveEnterExitUpgradableTest,The following statement contains a magic number: Assert.AreEqual(2' v.RecursiveUpgradeCount);
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveWriteReadAcquisitionInterleaving,The following statement contains a magic number: var t = new Thread(() => result = v.TryEnterReadLock(100));
Magic Number,MonoTests.System.Threading,ReaderWriterLockSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ReaderWriterLockSlimTest.cs,RecursiveWriteReadAcquisitionInterleaving,The following statement contains a magic number: t = new Thread(() => result = v.TryEnterReadLock(100));
Magic Number,MonoTests.System.Threading,SpinLockTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SpinLockTests.cs,SimpleEnterExitSchemeTest,The following statement contains a magic number: i < 50000
Magic Number,MonoTests.System.Threading,SpinLockTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SpinLockTests.cs,LockUnicityTest,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  var currentCount = 0;                  var fail = false;                  var wrapper = new SpinLockWrapper();                    ParallelTestHelper.ParallelStressTest(delegate                  {                      var taken = false;                      wrapper.Lock.Enter(ref taken);                      var current = currentCount++;                      if (current != 0)                      {                          fail = true;                      }                        var sw = new SpinWait();                      for (var i = 0; i < 200; i++)                      {                          sw.SpinOnce();                      }                        currentCount--;                        wrapper.Lock.Exit();                  }' 4);                    Assert.IsFalse(fail);              }' 200);
Magic Number,MonoTests.System.Threading,SpinLockTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SpinLockTests.cs,LockUnicityTest,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  var currentCount = 0;                  var fail = false;                  var wrapper = new SpinLockWrapper();                    ParallelTestHelper.ParallelStressTest(delegate                  {                      var taken = false;                      wrapper.Lock.Enter(ref taken);                      var current = currentCount++;                      if (current != 0)                      {                          fail = true;                      }                        var sw = new SpinWait();                      for (var i = 0; i < 200; i++)                      {                          sw.SpinOnce();                      }                        currentCount--;                        wrapper.Lock.Exit();                  }' 4);                    Assert.IsFalse(fail);              }' 200);
Magic Number,MonoTests.System.Threading,SpinLockTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SpinLockTests.cs,LockUnicityTest,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  var currentCount = 0;                  var fail = false;                  var wrapper = new SpinLockWrapper();                    ParallelTestHelper.ParallelStressTest(delegate                  {                      var taken = false;                      wrapper.Lock.Enter(ref taken);                      var current = currentCount++;                      if (current != 0)                      {                          fail = true;                      }                        var sw = new SpinWait();                      for (var i = 0; i < 200; i++)                      {                          sw.SpinOnce();                      }                        currentCount--;                        wrapper.Lock.Exit();                  }' 4);                    Assert.IsFalse(fail);              }' 200);
Magic Number,MonoTests.System.Threading,ThreadLocalTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ThreadLocalTests.cs,PerThreadException,The following statement contains a magic number: _threadLocal = new ThreadLocal<int>(() =>              {                  if (callTime == 1)                  {                      throw new ApplicationException("foo");                  }                    Interlocked.Increment(ref callTime);                  return 43;              });
Magic Number,MonoTests.System.Threading,ThreadLocalTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ThreadLocalTests.cs,PerThreadException,The following statement contains a magic number: Assert.AreEqual(43' foo' "#3");
Magic Number,MonoTests.System.Threading,ThreadLocalTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ThreadLocalTests.cs,Setup,The following statement contains a magic number: _threadLocal = new ThreadLocal<int>(() =>              {                  Interlocked.Increment(ref _nTimes);                  return 42;              });
Magic Number,MonoTests.System.Threading,ThreadLocalTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ThreadLocalTests.cs,AssertThreadLocal,The following statement contains a magic number: Assert.AreEqual(42' _threadLocal.Value' "#2");
Magic Number,MonoTests.System.Threading,ThreadLocalTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\ThreadLocalTests.cs,AssertThreadLocal,The following statement contains a magic number: Assert.AreEqual(42' _threadLocal.Value' "#4");
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,ReadPrimitives,The following statement contains a magic number: byte v2 = 4;
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,ReadPrimitives,The following statement contains a magic number: Assert.AreEqual(4' Volatile.Read(ref v2)' "#v2");
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,ReadPrimitives,The following statement contains a magic number: sbyte v8 = 44;
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,ReadPrimitives,The following statement contains a magic number: Assert.AreEqual(44' Volatile.Read(ref v8)' "#v8");
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,ReadPrimitives,The following statement contains a magic number: short v9 = -999;
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,ReadPrimitives,The following statement contains a magic number: Assert.AreEqual(-999' Volatile.Read(ref v9)' "#v9");
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,WritePrimitives,The following statement contains a magic number: byte v2 = 2;
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,WritePrimitives,The following statement contains a magic number: Volatile.Write(ref v2' 4);
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,WritePrimitives,The following statement contains a magic number: Assert.AreEqual(4' v2' "#v2");
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,WritePrimitives,The following statement contains a magic number: double v3 = 55667;
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,WritePrimitives,The following statement contains a magic number: Volatile.Write(ref v6' new IntPtr(5));
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,WritePrimitives,The following statement contains a magic number: Assert.AreEqual(new IntPtr(5)' v6' "#v6");
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,WritePrimitives,The following statement contains a magic number: sbyte v8 = 2;
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,WritePrimitives,The following statement contains a magic number: Volatile.Write(ref v8' 44);
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,WritePrimitives,The following statement contains a magic number: Assert.AreEqual(44' v8' "#v8");
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,WritePrimitives,The following statement contains a magic number: short v9 = 3;
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,WritePrimitives,The following statement contains a magic number: Volatile.Write(ref v9' -999);
Magic Number,MonoTests.System.Threading,VolatileTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\VolatileTest.cs,WritePrimitives,The following statement contains a magic number: Assert.AreEqual(-999' v9' "#v9");
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,LockCancellationTestAsync,The following statement contains a magic number: var holdTime = TimeSpan.FromSeconds(2);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,LockCancellationTestAsync,The following statement contains a magic number: var delayTime = TimeSpan.FromMilliseconds(200);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest0_Ctor,The following statement contains a magic number: RunSemaphoreSlimTest0_Ctor(0' 10' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest0_Ctor,The following statement contains a magic number: RunSemaphoreSlimTest0_Ctor(5' 10' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest0_Ctor,The following statement contains a magic number: RunSemaphoreSlimTest0_Ctor(5' 10' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest0_Ctor,The following statement contains a magic number: RunSemaphoreSlimTest0_Ctor(10' 10' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest0_Ctor,The following statement contains a magic number: RunSemaphoreSlimTest0_Ctor(10' 10' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest0_Ctor_Negative,The following statement contains a magic number: RunSemaphoreSlimTest0_Ctor(10' 0' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest0_Ctor_Negative,The following statement contains a magic number: RunSemaphoreSlimTest0_Ctor(10' -1' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest0_Ctor_Negative,The following statement contains a magic number: RunSemaphoreSlimTest0_Ctor(-1' 10' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(10' 10' -1' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(10' 10' -1' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(1' 10' -1' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(10' 10' 0' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(10' 10' 0' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(1' 10' 0' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(0' 10' 0' false' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(10' 10' 10' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(10' 10' 10' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(10' 10' 10' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(1' 10' 10' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(1' 10' 10' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(0' 10' 10' false' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(0' 10' 10' false' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(10' 10' -10' true' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(10' 10' -10' true' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait(10' 10' -10' true' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait                 (10' 10' new TimeSpan(0' 0' int.MaxValue)' true' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest1_Wait                 (10' 10' new TimeSpan(0' 0' int.MaxValue)' true' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(10' 10' -1' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(10' 10' -1' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(1' 10' -1' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(10' 10' 0' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(10' 10' 0' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(1' 10' 0' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(0' 10' 0' false' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(10' 10' 10' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(10' 10' 10' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(10' 10' 10' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(1' 10' 10' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(1' 10' 10' true' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(0' 10' 10' false' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(0' 10' 10' false' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(10' 10' -10' true' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(10' 10' -10' true' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync(10' 10' -10' true' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync                 (10' 10' new TimeSpan(0' 0' int.MaxValue)' true' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest1_WaitAsync                 (10' 10' new TimeSpan(0' 0' int.MaxValue)' true' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_WaitAsync2,The following statement contains a magic number: const int asyncActions = 20;
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(5' 10' 1' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(5' 10' 1' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(0' 10' 1' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(5' 10' 5' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(5' 10' 5' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(5' 10' 5' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(5' 10' 0' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(5' 10' 0' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(5' 10' -1' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(5' 10' -1' typeof(ArgumentOutOfRangeException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(10' 10' 1' typeof(SemaphoreFullException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(10' 10' 1' typeof(SemaphoreFullException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(5' 10' 6' typeof(SemaphoreFullException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(5' 10' 6' typeof(SemaphoreFullException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(5' 10' 6' typeof(SemaphoreFullException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest2_Release_NegativeCases,The following statement contains a magic number: RunSemaphoreSlimTest2_Release(int.MaxValue - 1' int.MaxValue' 10' typeof(SemaphoreFullException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest4_Dispose,The following statement contains a magic number: RunSemaphoreSlimTest4_Dispose(5' 10' null' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest4_Dispose,The following statement contains a magic number: RunSemaphoreSlimTest4_Dispose(5' 10' null' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest4_Dispose,The following statement contains a magic number: RunSemaphoreSlimTest4_Dispose(5' 10' SemaphoreSlimActions.CurrentCount' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest4_Dispose,The following statement contains a magic number: RunSemaphoreSlimTest4_Dispose(5' 10' SemaphoreSlimActions.CurrentCount' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest4_Dispose,The following statement contains a magic number: RunSemaphoreSlimTest4_Dispose                 (5' 10' SemaphoreSlimActions.Wait' typeof(ObjectDisposedException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest4_Dispose,The following statement contains a magic number: RunSemaphoreSlimTest4_Dispose                 (5' 10' SemaphoreSlimActions.Wait' typeof(ObjectDisposedException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest4_Dispose,The following statement contains a magic number: RunSemaphoreSlimTest4_Dispose                 (5' 10' SemaphoreSlimActions.WaitAsync' typeof(ObjectDisposedException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest4_Dispose,The following statement contains a magic number: RunSemaphoreSlimTest4_Dispose                 (5' 10' SemaphoreSlimActions.WaitAsync' typeof(ObjectDisposedException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest4_Dispose,The following statement contains a magic number: RunSemaphoreSlimTest4_Dispose                (5' 10' SemaphoreSlimActions.Release' typeof(ObjectDisposedException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest4_Dispose,The following statement contains a magic number: RunSemaphoreSlimTest4_Dispose                (5' 10' SemaphoreSlimActions.Release' typeof(ObjectDisposedException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest4_Dispose,The following statement contains a magic number: RunSemaphoreSlimTest4_Dispose                (5' 10' SemaphoreSlimActions.AvailableWaitHandle' typeof(ObjectDisposedException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest4_Dispose,The following statement contains a magic number: RunSemaphoreSlimTest4_Dispose                (5' 10' SemaphoreSlimActions.AvailableWaitHandle' typeof(ObjectDisposedException));
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest5_CurrentCount,The following statement contains a magic number: RunSemaphoreSlimTest5_CurrentCount(5' 10' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest5_CurrentCount,The following statement contains a magic number: RunSemaphoreSlimTest5_CurrentCount(5' 10' null);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest5_CurrentCount,The following statement contains a magic number: RunSemaphoreSlimTest5_CurrentCount(5' 10' SemaphoreSlimActions.Wait);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest5_CurrentCount,The following statement contains a magic number: RunSemaphoreSlimTest5_CurrentCount(5' 10' SemaphoreSlimActions.Wait);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest5_CurrentCount,The following statement contains a magic number: RunSemaphoreSlimTest5_CurrentCount(5' 10' SemaphoreSlimActions.WaitAsync);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest5_CurrentCount,The following statement contains a magic number: RunSemaphoreSlimTest5_CurrentCount(5' 10' SemaphoreSlimActions.WaitAsync);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest5_CurrentCount,The following statement contains a magic number: RunSemaphoreSlimTest5_CurrentCount(5' 10' SemaphoreSlimActions.Release);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest5_CurrentCount,The following statement contains a magic number: RunSemaphoreSlimTest5_CurrentCount(5' 10' SemaphoreSlimActions.Release);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' null' true);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' null' true);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(0' 10' null' false);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' SemaphoreSlimActions.Wait' true);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' SemaphoreSlimActions.Wait' true);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(1' 10' SemaphoreSlimActions.Wait' false);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' SemaphoreSlimActions.Wait' true);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' SemaphoreSlimActions.Wait' true);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' SemaphoreSlimActions.WaitAsync' true);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' SemaphoreSlimActions.WaitAsync' true);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(1' 10' SemaphoreSlimActions.WaitAsync' false);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' SemaphoreSlimActions.WaitAsync' true);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' SemaphoreSlimActions.WaitAsync' true);
Magic Number,System.Threading.Tests,SemaphoreSlimTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTests.cs,RunSemaphoreSlimTest7_AvailableWaitHandle,The following statement contains a magic number: RunSemaphoreSlimTest7_AvailableWaitHandle(0' 10' SemaphoreSlimActions.Release' true);
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,LongWait,The following statement contains a magic number: var thread = new Thread              (                  () =>                  {                      Thread.Sleep(5000);                      semaphore1.Release();                      Thread.Sleep(5000);                      semaphore2.Release();                  }              );
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,LongWait,The following statement contains a magic number: var thread = new Thread              (                  () =>                  {                      Thread.Sleep(5000);                      semaphore1.Release();                      Thread.Sleep(5000);                      semaphore2.Release();                  }              );
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,LongWait,The following statement contains a magic number: var source1 = new CancellationTokenSource(10000);
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,LongWait,The following statement contains a magic number: var source2 = new CancellationTokenSource(10);
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,WaitAsyncWaitCorrectly,The following statement contains a magic number: WaitAsyncWaitCorrectlyExtracted(3' 3 + count);
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,WaitAsyncWaitCorrectly,The following statement contains a magic number: WaitAsyncWaitCorrectlyExtracted(3' 3 + count);
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,WaitAsyncWaitCorrectly,The following statement contains a magic number: count < 10
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,WaitAsyncWaitCorrectlyExtracted,The following statement contains a magic number: var log = new CircularBucket<string>((maxTasks * 4) + 2);
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,WaitAsyncWaitCorrectlyExtracted,The following statement contains a magic number: var log = new CircularBucket<string>((maxTasks * 4) + 2);
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,WaitAsyncWaitCorrectlyExtracted,The following statement contains a magic number: var logCount = new CircularBucket<int>((maxTasks * 2) + 2);
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,WaitAsyncWaitCorrectlyExtracted,The following statement contains a magic number: var logCount = new CircularBucket<int>((maxTasks * 2) + 2);
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,WaitAsyncWaitCorrectlyExtracted,The following statement contains a magic number: var tasks = Enumerable.Range(0' maxTasks)                          .Select                          (                              _ =>                              {                                  return Task.Factory.StartNew                                  (                                      async () =>                                      {                                          log.Add("a");                                          await semaphore.WaitAsync(source.Token);                                          Interlocked.Add(ref padding' 100);                                          logCount.Add(-1);                                          log.Add("b");                                          Thread.Sleep(1000 + padding);                                          // Calling release should give increasing results per chunk                                          log.Add("c");                                          var count = semaphore.Release();                                          logCount.Add(count);                                          log.Add("d");                                      }                                  ).Unwrap();                              }                          ).ToArray();
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,WaitAsyncWaitCorrectlyExtracted,The following statement contains a magic number: var tasks = Enumerable.Range(0' maxTasks)                          .Select                          (                              _ =>                              {                                  return Task.Factory.StartNew                                  (                                      async () =>                                      {                                          log.Add("a");                                          await semaphore.WaitAsync(source.Token);                                          Interlocked.Add(ref padding' 100);                                          logCount.Add(-1);                                          log.Add("b");                                          Thread.Sleep(1000 + padding);                                          // Calling release should give increasing results per chunk                                          log.Add("c");                                          var count = semaphore.Release();                                          logCount.Add(count);                                          log.Add("d");                                      }                                  ).Unwrap();                              }                          ).ToArray();
Magic Number,Tests.System.Threading,SemaphoreSlimTestsEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\SemaphoreSlimTestsEx.cs,WaitAsyncWaitCorrectlyExtracted,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(500));
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWithOnAnyTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  var result = false;                    var t = Task.Factory.StartNew(delegate                  {                      // Empty                  });                  var cont = t.ContinueWith(delegate                  {                      result = true;                  }' TaskContinuationOptions.None);                  Assert.IsTrue(t.Wait(2000)' "First wait' (status' {0})"' t.Status);                  Assert.IsTrue(cont.Wait(2000)' "Cont wait' (result' {0}) (parent status' {2}) (status' {1})"' result' cont.Status' t.Status);                  Assert.IsNull(cont.Exception' "#1");                  Assert.IsNotNull(cont' "#2");                  Assert.IsTrue(result' "#3");              });
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWithOnAnyTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  var result = false;                    var t = Task.Factory.StartNew(delegate                  {                      // Empty                  });                  var cont = t.ContinueWith(delegate                  {                      result = true;                  }' TaskContinuationOptions.None);                  Assert.IsTrue(t.Wait(2000)' "First wait' (status' {0})"' t.Status);                  Assert.IsTrue(cont.Wait(2000)' "Cont wait' (result' {0}) (parent status' {2}) (status' {1})"' result' cont.Status' t.Status);                  Assert.IsNull(cont.Exception' "#1");                  Assert.IsNotNull(cont' "#2");                  Assert.IsTrue(result' "#3");              });
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWithOnCompletedSuccessfullyTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  var result = false;                    var t = Task.Factory.StartNew(delegate                  {                      // Empty                  });                  var cont = t.ContinueWith(delegate                  {                      result = true;                  }' TaskContinuationOptions.OnlyOnRanToCompletion);                  Assert.IsTrue(t.Wait(1000)' "#4");                  Assert.IsTrue(cont.Wait(1000)' "#5");                    Assert.IsNull(cont.Exception' "#1");                  Assert.IsNotNull(cont' "#2");                  Assert.IsTrue(result' "#3");              });
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWithOnCompletedSuccessfullyTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  var result = false;                    var t = Task.Factory.StartNew(delegate                  {                      // Empty                  });                  var cont = t.ContinueWith(delegate                  {                      result = true;                  }' TaskContinuationOptions.OnlyOnRanToCompletion);                  Assert.IsTrue(t.Wait(1000)' "#4");                  Assert.IsTrue(cont.Wait(1000)' "#5");                    Assert.IsNull(cont.Exception' "#1");                  Assert.IsNotNull(cont' "#2");                  Assert.IsTrue(result' "#3");              });
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWithOnAbortedTestCase,The following statement contains a magic number: Assert.IsTrue(cont.Wait(1000)' "#3");
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWithOnFailedTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var result = false;                      var t = Task.Factory.StartNew(() => throw new Exception("foo"));                      var cont = t.ContinueWith(_ => result = true' TaskContinuationOptions.OnlyOnFaulted);                      Assert.IsTrue(cont.Wait(1000)' "#0");                      Assert.IsNotNull(t.Exception' "#1");                      Assert.IsNotNull(cont' "#2");                      Assert.IsTrue(result' "#3");                  }              );
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWithChildren,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  var result = false;                    var t = Task.Factory.StartNew(() => Task.Factory.StartNew(() =>                  {                      // Empty                  }' TaskCreationOptions.AttachedToParent));                    using (var mre = new ManualResetEvent(false))                  {                      t.ContinueWith                      (                          l =>                          {                              result = true;                              mre.Set();                          }                      );                      Assert.IsTrue(mre.WaitOne(1000)' "#1");                      Assert.IsTrue(result' "#2");                  }              }' 2);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWithChildren,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  var result = false;                    var t = Task.Factory.StartNew(() => Task.Factory.StartNew(() =>                  {                      // Empty                  }' TaskCreationOptions.AttachedToParent));                    using (var mre = new ManualResetEvent(false))                  {                      t.ContinueWith                      (                          l =>                          {                              result = true;                              mre.Set();                          }                      );                      Assert.IsTrue(mre.WaitOne(1000)' "#1");                      Assert.IsTrue(result' "#2");                  }              }' 2);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWithDifferentOptionsAreCanceledTest,The following statement contains a magic number: var task = Task.Factory.StartNew(() => mre.Wait(200));
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWithDifferentOptionsAreCanceledTest,The following statement contains a magic number: contSuccess.Wait(100);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,WaitingForChildrenToComplete,The following statement contains a magic number: _parentWfc = Task.Factory.StartNew(() =>                  {                      nested = Task.Factory.StartNew(() =>                      {                          Assert.IsTrue(mre.WaitOne(4000)' "parent_wfc needs to be set first");                          Assert.IsFalse(_parentWfc.Wait(10)' "#1a");                          Assert.AreEqual(TaskStatus.WaitingForChildrenToComplete' _parentWfc.Status' "#1b");                      }' TaskCreationOptions.AttachedToParent).ContinueWith(l =>                      {                          Assert.IsTrue(_parentWfc.Wait(2000)' "#2a");                          Assert.AreEqual(TaskStatus.RanToCompletion' _parentWfc.Status' "#2b");                      }' TaskContinuationOptions.ExecuteSynchronously);                  });
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,WaitingForChildrenToComplete,The following statement contains a magic number: _parentWfc = Task.Factory.StartNew(() =>                  {                      nested = Task.Factory.StartNew(() =>                      {                          Assert.IsTrue(mre.WaitOne(4000)' "parent_wfc needs to be set first");                          Assert.IsFalse(_parentWfc.Wait(10)' "#1a");                          Assert.AreEqual(TaskStatus.WaitingForChildrenToComplete' _parentWfc.Status' "#1b");                      }' TaskCreationOptions.AttachedToParent).ContinueWith(l =>                      {                          Assert.IsTrue(_parentWfc.Wait(2000)' "#2a");                          Assert.AreEqual(TaskStatus.RanToCompletion' _parentWfc.Status' "#2b");                      }' TaskContinuationOptions.ExecuteSynchronously);                  });
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,WaitingForChildrenToComplete,The following statement contains a magic number: _parentWfc = Task.Factory.StartNew(() =>                  {                      nested = Task.Factory.StartNew(() =>                      {                          Assert.IsTrue(mre.WaitOne(4000)' "parent_wfc needs to be set first");                          Assert.IsFalse(_parentWfc.Wait(10)' "#1a");                          Assert.AreEqual(TaskStatus.WaitingForChildrenToComplete' _parentWfc.Status' "#1b");                      }' TaskCreationOptions.AttachedToParent).ContinueWith(l =>                      {                          Assert.IsTrue(_parentWfc.Wait(2000)' "#2a");                          Assert.AreEqual(TaskStatus.RanToCompletion' _parentWfc.Status' "#2b");                      }' TaskContinuationOptions.ExecuteSynchronously);                  });
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,WaitingForChildrenToComplete,The following statement contains a magic number: Assert.IsTrue(_parentWfc.Wait(2000)' "#3");
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,WaitingForChildrenToComplete,The following statement contains a magic number: Assert.IsTrue(nested.Wait(2000)' "#4");
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,WaitChildWithContinuationAttachedTest,The following statement contains a magic number: var task = new Task              (                  () =>                  {                      Task.Factory.StartNew                      (                          () => Thread.Sleep(200)'                          TaskCreationOptions.AttachedToParent).ContinueWith                      (                          t =>                          {                              Thread.Sleep(200);                              result = true;                          }'                          TaskContinuationOptions.AttachedToParent                      );                  }              );
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,WaitChildWithContinuationAttachedTest,The following statement contains a magic number: var task = new Task              (                  () =>                  {                      Task.Factory.StartNew                      (                          () => Thread.Sleep(200)'                          TaskCreationOptions.AttachedToParent).ContinueWith                      (                          t =>                          {                              Thread.Sleep(200);                              result = true;                          }'                          TaskContinuationOptions.AttachedToParent                      );                  }              );
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,WaitChildWithContinuationNotAttachedTest,The following statement contains a magic number: var task = new Task                  (                      () =>                      {                          Task.Factory.StartNew                          (                              () => Thread.Sleep(200)'                              TaskCreationOptions.AttachedToParent                          ).ContinueWith                          (                              t => Thread.Sleep(3000)                          );                      }                  );
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,WaitChildWithContinuationNotAttachedTest,The following statement contains a magic number: var task = new Task                  (                      () =>                      {                          Task.Factory.StartNew                          (                              () => Thread.Sleep(200)'                              TaskCreationOptions.AttachedToParent                          ).ContinueWith                          (                              t => Thread.Sleep(3000)                          );                      }                  );
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,WaitChildWithContinuationNotAttachedTest,The following statement contains a magic number: Assert.IsTrue(task.Wait(400));
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,WhenChildTaskErrorIsThrownOnlyOnFaultedContinuationShouldExecute,The following statement contains a magic number: onErrorTask.Wait(200);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,WhenChildTaskSeveralLevelsDeepHandlesAggregateExceptionErrorStillBubblesToParent,The following statement contains a magic number: onErrorTask.Wait(1000);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,AlreadyCompletedChildTaskShouldRunContinuationImmediately,The following statement contains a magic number: var testTask = new Task              (                  () =>                  {                      var child = new Task<string>                      (                          () => "Success"'                          TaskCreationOptions.AttachedToParent                      );                      child.RunSynchronously();                      child.ContinueWith                      (                          x =>                          {                              Thread.Sleep(50);                              result = x.Result;                          }'                          TaskContinuationOptions.AttachedToParent | TaskContinuationOptions.NotOnFaulted                      );                  }              );
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinuationOnBrokenScheduler,The following statement contains a magic number: Assert.IsTrue(t3.Wait(2000)' "#0");
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValue,The following statement contains a magic number: var c = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "c-1");                  Assert.AreEqual(2' b' "c-2");              }' 2);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValue,The following statement contains a magic number: var c = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "c-1");                  Assert.AreEqual(2' b' "c-2");              }' 2);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValue,The following statement contains a magic number: var d = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "d-1");                  Assert.AreEqual(3' b' "d-2");                  return 77;              }' 3);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValue,The following statement contains a magic number: var d = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "d-1");                  Assert.AreEqual(3' b' "d-2");                  return 77;              }' 3);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValue,The following statement contains a magic number: var d = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "d-1");                  Assert.AreEqual(3' b' "d-2");                  return 77;              }' 3);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValue,The following statement contains a magic number: Assert.IsTrue(d.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValue,The following statement contains a magic number: Assert.AreEqual(2' c.AsyncState' "#3");
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValue,The following statement contains a magic number: Assert.AreEqual(3' d.AsyncState' "#4");
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: var t = Task.Factory.StartNew(l =>              {                  Assert.AreEqual(1' l' "a-1");                  return 80;              }' 1);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: var c = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "c-1");                  Assert.AreEqual(2' b' "c-2");                  return "c";              }' 2);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: var c = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "c-1");                  Assert.AreEqual(2' b' "c-2");                  return "c";              }' 2);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: var d = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "d-1");                  Assert.AreEqual(3' b' "d-2");                  return 'd';              }' 3);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: var d = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "d-1");                  Assert.AreEqual(3' b' "d-2");                  return 'd';              }' 3);
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: Assert.IsTrue(d.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: Assert.AreEqual(80' t.Result' "#2r");
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: Assert.AreEqual(2' c.AsyncState' "#3");
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: Assert.AreEqual(3' d.AsyncState' "#4");
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ContinueWith_CustomScheduleRejected,The following statement contains a magic number: Assert.IsTrue(t.Wait(5000));
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,ChildTaskWithUnscheduledContinuationAttachedToParent,The following statement contains a magic number: Assert.IsTrue(t.Wait(5000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,ContinueTaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ContinueWithTaskTests.cs,LazyCancelationTest,The following statement contains a magic number: Assert.IsTrue(cont.Wait(1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,ContinuationTest,The following statement contains a magic number: var t = _completionSource.Task.ContinueWith(p => result |= p.Result == 2);
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,ContinuationTest,The following statement contains a magic number: _completionSource.SetResult(2);
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,SetCanceledTest,The following statement contains a magic number: Assert.IsFalse(_completionSource.TrySetResult(42)' "#4");
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,SetCanceledWithTokenTest,The following statement contains a magic number: Assert.IsFalse(_completionSource.TrySetResult(42)' "#4");
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,SetExceptionAndUnobservedEvent,The following statement contains a magic number: Assert.IsTrue(mre.WaitOne(5000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,SetExceptionTest,The following statement contains a magic number: Assert.IsFalse(_completionSource.TrySetResult(42)' "#5");
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,SetResultExceptionTest,The following statement contains a magic number: Assert.IsTrue(_completionSource.TrySetResult(42)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,SetResultExceptionTest,The following statement contains a magic number: Assert.AreEqual(42' _completionSource.Task.Result' "#4");
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,SetResultExceptionTest,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => _completionSource.SetResult(43));
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,SetResultTest,The following statement contains a magic number: Assert.IsTrue(_completionSource.TrySetResult(42)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,SetResultTest,The following statement contains a magic number: Assert.AreEqual(42' _completionSource.Task.Result' "#4");
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,SetResultTest,The following statement contains a magic number: Assert.IsFalse(_completionSource.TrySetResult(43)' "#5");
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,SetResultTest,The following statement contains a magic number: Assert.AreEqual(42' _completionSource.Task.Result' "#7");
Magic Number,MonoTests.System.Threading.Tasks,TaskCompletionSourceTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskCompletionSourceTest.cs,WaitingTest,The following statement contains a magic number: var result = task.Wait(50);
Magic Number,MonoTests.System.Threading.Tasks,TaskContinuationChainLeakTester,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskContinuationChainLeakTester.cs,StartNewTask,The following statement contains a magic number: ++_counter == 50
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAny_ManyExceptions,The following statement contains a magic number: Assert.IsTrue(cde.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAny_ManyExceptions,The following statement contains a magic number: Assert.IsTrue(Task.WaitAll(tasks' 1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,AlreadyCompletedChildTaskShouldRunContinuationImmediately,The following statement contains a magic number: var testTask = new Task              (                  () =>                  {                      var child = new Task<string>                      (                          () => "Success"'                          TaskCreationOptions.AttachedToParent                      );                      child.RunSynchronously();                      child.ContinueWith                      (                          x =>                          {                              Thread.Sleep(50);                              result = x.Result;                          }'                          TaskContinuationOptions.AttachedToParent | TaskContinuationOptions.NotOnFaulted                      );                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,AsyncWaitHandleSet,The following statement contains a magic number: Assert.IsTrue(ar.AsyncWaitHandle.WaitOne(5000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,CanceledContinuationExecuteSynchronouslyTest,The following statement contains a magic number: var task = Task.Factory.StartNew(() => evt.Wait(100));
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,CanceledContinuationExecuteSynchronouslyTest,The following statement contains a magic number: task.Wait(100);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,CanceledContinuationExecuteSynchronouslyTest,The following statement contains a magic number: cont.Wait(100);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_CustomScheduleRejected,The following statement contains a magic number: Assert.IsTrue(t.Wait(5000));
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithChildren,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var result = false;                        var t = Task.Factory.StartNew(() => Task.Factory.StartNew(() =>                      {                          // Empty                      }' TaskCreationOptions.AttachedToParent));                        using (var mre = new ManualResetEvent(false))                      {                          t.ContinueWith(l =>                          {                              result = true;                              mre.Set();                          });                          Assert.IsTrue(mre.WaitOne(1000)' "#1");                          Assert.IsTrue(result' "#2");                      }                  }'                  2              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithChildren,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var result = false;                        var t = Task.Factory.StartNew(() => Task.Factory.StartNew(() =>                      {                          // Empty                      }' TaskCreationOptions.AttachedToParent));                        using (var mre = new ManualResetEvent(false))                      {                          t.ContinueWith(l =>                          {                              result = true;                              mre.Set();                          });                          Assert.IsTrue(mre.WaitOne(1000)' "#1");                          Assert.IsTrue(result' "#2");                      }                  }'                  2              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithDifferentOptionsAreCanceledTest,The following statement contains a magic number: var task = Task.Factory.StartNew(() => mre.Wait(200));
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithDifferentOptionsAreCanceledTest,The following statement contains a magic number: contSuccess.Wait(100);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithOnAbortedTestCase,The following statement contains a magic number: Assert.IsTrue(cont.Wait(1000)' "#3");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithOnAnyTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var result = false;                        var t = Task.Factory.StartNew(ActionHelper.GetNoopAction());                      var cont = t.ContinueWith(obj => result = true' TaskContinuationOptions.None);                      Assert.IsTrue(t.Wait(2000)' "First wait' (status' {0})"' t.Status);                      Assert.IsTrue(cont.Wait(2000)' "Cont wait' (result' {0}) (parent status' {2}) (status' {1})"' result' cont.Status' t.Status);                      Assert.IsNull(cont.Exception' "#1");                      Assert.IsNotNull(cont' "#2");                      Assert.IsTrue(result' "#3");                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithOnAnyTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var result = false;                        var t = Task.Factory.StartNew(ActionHelper.GetNoopAction());                      var cont = t.ContinueWith(obj => result = true' TaskContinuationOptions.None);                      Assert.IsTrue(t.Wait(2000)' "First wait' (status' {0})"' t.Status);                      Assert.IsTrue(cont.Wait(2000)' "Cont wait' (result' {0}) (parent status' {2}) (status' {1})"' result' cont.Status' t.Status);                      Assert.IsNull(cont.Exception' "#1");                      Assert.IsNotNull(cont' "#2");                      Assert.IsTrue(result' "#3");                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithOnCompletedSuccessfullyTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var result = false;                        var t = Task.Factory.StartNew(ActionHelper.GetNoopAction());                      var cont = t.ContinueWith(obj => result = true' TaskContinuationOptions.OnlyOnRanToCompletion);                      Assert.IsTrue(t.Wait(1000)' "#4");                      Assert.IsTrue(cont.Wait(1000)' "#5");                        Assert.IsNull(cont.Exception' "#1");                      Assert.IsNotNull(cont' "#2");                      Assert.IsTrue(result' "#3");                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithOnCompletedSuccessfullyTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var result = false;                        var t = Task.Factory.StartNew(ActionHelper.GetNoopAction());                      var cont = t.ContinueWith(obj => result = true' TaskContinuationOptions.OnlyOnRanToCompletion);                      Assert.IsTrue(t.Wait(1000)' "#4");                      Assert.IsTrue(cont.Wait(1000)' "#5");                        Assert.IsNull(cont.Exception' "#1");                      Assert.IsNotNull(cont' "#2");                      Assert.IsTrue(result' "#3");                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWithOnFailedTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var result = false;                      var t = Task.Factory.StartNew(() => throw new Exception("foo"));                      var cont = t.ContinueWith(obj => result = true' TaskContinuationOptions.OnlyOnFaulted);                      Assert.IsTrue(cont.Wait(1000)' "#0");                      Assert.IsNotNull(t.Exception' "#1");                      Assert.IsNotNull(cont' "#2");                      Assert.IsTrue(result' "#3");                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,DoubleTimeoutedWaitTest,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(state =>                  {                      r1 = !t.Wait(100);                      cntd.Signal();                  });
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,DoubleTimeoutedWaitTest,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(state =>                  {                      r2 = !t.Wait(100);                      cntd.Signal();                  });
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,DoubleTimeoutedWaitTest,The following statement contains a magic number: cntd.Wait(2000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,InlineNotTrashingParentRelationship,The following statement contains a magic number: var t = new Task              (                  () =>                  {                      new Task(() => r1 = true'                          TaskCreationOptions.AttachedToParent).RunSynchronously();                      Task.Factory.StartNew                      (                          () =>                          {                              Thread.Sleep(100);                              r2 = true;                          }'                          TaskCreationOptions.AttachedToParent                      );                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,LongRunning,The following statement contains a magic number: Assert.IsTrue(t.Wait(5000)' "#0");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,LongRunning,The following statement contains a magic number: Assert.IsTrue(t2.Wait(5000)' "#10");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,MultipleTasks,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var r1 = false;                      var r2 = false;                      var r3 = false;                        var t1 = Task.Factory.StartNew(() => r1 = true);                      var t2 = Task.Factory.StartNew(() => r2 = true);                      var t3 = Task.Factory.StartNew(() => r3 = true);                        t1.Wait(2000);                      t2.Wait(2000);                      t3.Wait(2000);                        Assert.IsTrue(r1' "#1");                      Assert.IsTrue(r2' "#2");                      Assert.IsTrue(r3' "#3");                  }'                  100              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,MultipleTasks,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var r1 = false;                      var r2 = false;                      var r3 = false;                        var t1 = Task.Factory.StartNew(() => r1 = true);                      var t2 = Task.Factory.StartNew(() => r2 = true);                      var t3 = Task.Factory.StartNew(() => r3 = true);                        t1.Wait(2000);                      t2.Wait(2000);                      t3.Wait(2000);                        Assert.IsTrue(r1' "#1");                      Assert.IsTrue(r2' "#2");                      Assert.IsTrue(r3' "#3");                  }'                  100              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,MultipleTasks,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var r1 = false;                      var r2 = false;                      var r3 = false;                        var t1 = Task.Factory.StartNew(() => r1 = true);                      var t2 = Task.Factory.StartNew(() => r2 = true);                      var t3 = Task.Factory.StartNew(() => r3 = true);                        t1.Wait(2000);                      t2.Wait(2000);                      t3.Wait(2000);                        Assert.IsTrue(r1' "#1");                      Assert.IsTrue(r2' "#2");                      Assert.IsTrue(r3' "#3");                  }'                  100              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,MultipleTasks,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var r1 = false;                      var r2 = false;                      var r3 = false;                        var t1 = Task.Factory.StartNew(() => r1 = true);                      var t2 = Task.Factory.StartNew(() => r2 = true);                      var t3 = Task.Factory.StartNew(() => r3 = true);                        t1.Wait(2000);                      t2.Wait(2000);                      t3.Wait(2000);                        Assert.IsTrue(r1' "#1");                      Assert.IsTrue(r2' "#2");                      Assert.IsTrue(r3' "#3");                  }'                  100              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,RunSynchronouslyWithAttachedChildren,The following statement contains a magic number: var t = new Task              (                  () =>                  {                      Task.Factory.StartNew(() =>                          {                              Thread.Sleep(500);                              result = true;                          }'                          TaskCreationOptions.AttachedToParent);                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,UnobservedExceptionOnFinalizerThreadTest,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,UnobservedExceptionOnFinalizerThreadTest,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Wait_CancelledTask,The following statement contains a magic number: t.Wait(1000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_ManyTasks,The following statement contains a magic number: var tasks = new Task[60];
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_ManyTasks,The following statement contains a magic number: Assert.IsTrue(Task.WaitAll(tasks' 5000));
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_ManyTasks,The following statement contains a magic number: r < 2000
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_StartedUnderWait,The following statement contains a magic number: ThreadPool.QueueUserWorkItem              (                  state =>                  {                      // Sleep little to let task to start and hit internal wait                      Thread.Sleep(20);                      task1.Start();                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_StartedUnderWait,The following statement contains a magic number: Assert.IsTrue(Task.WaitAll(new[] {task1}' 1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_TimeoutWithExceptionsAfter,The following statement contains a magic number: var tasks = new[] {                          Task.Factory.StartNew (()=>Assert.IsTrue (mre.WaitOne (1500)' "#0"))'                          Task.Factory.StartNew (()=>{ try { throw new ApplicationException (); } finally { cde.Signal (); } })'                          Task.Factory.StartNew (()=>{ try { throw new ApplicationException (); } finally { cde.Signal (); } })                      };
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_TimeoutWithExceptionsAfter,The following statement contains a magic number: Assert.IsTrue(cde.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_TimeoutWithExceptionsAfter,The following statement contains a magic number: Assert.IsFalse(Task.WaitAll(tasks' 1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_TimeoutWithExceptionsAfter,The following statement contains a magic number: Task.WaitAll(tasks' 1000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_TimeoutWithExceptionsBefore,The following statement contains a magic number: Assert.IsTrue(cde.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_TimeoutWithExceptionsBefore,The following statement contains a magic number: Assert.IsFalse(Task.WaitAll(tasks' 1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_TimeoutWithExceptionsBefore,The following statement contains a magic number: Assert.IsTrue(Task.WaitAll(tasks' 1000)' "#3");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_Zero,The following statement contains a magic number: Assert.IsFalse(Task.WaitAll(new[] { task }' 10)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAllTest,The following statement contains a magic number: ParallelTestHelper.Repeat(Action' 1000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAny_Cancelled,The following statement contains a magic number: Assert.AreEqual(1' Task.WaitAny(tasks' 1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAny_CancelledWithoutExecution,The following statement contains a magic number: ThreadPool.QueueUserWorkItem                      (                          state =>                          {                              res = Task.WaitAny(tasks' 20);                              mre.Set();                          }                      );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAny_CancelledWithoutExecution,The following statement contains a magic number: Assert.IsTrue(mre.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAny_ManyCanceled,The following statement contains a magic number: Assert.IsTrue(Task.WaitAll(tasks' 1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAny_OneException,The following statement contains a magic number: var tasks = new[] {                      Task.Factory.StartNew (()=>mre.Wait (5000))'                      Task.Factory.StartNew (()=> throw new ApplicationException())                  };
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAny_OneException,The following statement contains a magic number: Assert.AreEqual(1' Task.WaitAny(tasks' 3000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAny_SingleCanceled,The following statement contains a magic number: var t = Task.Factory.StartNew(() =>                  {                      Thread.Sleep(200);                      src.Cancel();                      src.Token.ThrowIfCancellationRequested();                  }' src.Token);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAny_Zero,The following statement contains a magic number: Assert.AreEqual(-1' Task.WaitAny(new[] { task }' 20)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAnyTest,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var flag = 0;                      var finished = 0;                        InitWithDelegate                      (                          () =>                          {                              var times = Interlocked.Exchange(ref flag' 1);                              if (times == 1)                              {                                  var sw = new SpinWait();                                  while (finished == 0)                                  {                                      sw.SpinOnce();                                  }                              }                              else                              {                                  Interlocked.Increment(ref finished);                              }                          }                      );                        var index = Task.WaitAny(_tasks' 1000);                        Assert.AreNotEqual(-1' index' "#3");                      Assert.AreEqual(1' flag' "#1");                      Assert.AreEqual(1' finished' "#2");                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitChildTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var r1 = false;                      var r2 = false;                      var r3 = false;                      using (var mre = new ManualResetEventSlim(false))                      {                          using (var mreStart = new ManualResetEventSlim(false))                          {                              var t = Task.Factory.StartNew                              (                                  () =>                                  {                                      Task.Factory.StartNew                                      (                                          () =>                                          {                                              mre.Wait(300);                                              r1 = true;                                          }'                                          TaskCreationOptions.AttachedToParent                                      );                                      Task.Factory.StartNew(() => r2 = true' TaskCreationOptions.AttachedToParent);                                      Task.Factory.StartNew(() => r3 = true' TaskCreationOptions.AttachedToParent);                                      mreStart.Set();                                  }                              );                                mreStart.Wait(300);                              Assert.IsFalse(t.Wait(10)' "#0a");                              mre.Set();                              Assert.IsTrue(t.Wait(500)' "#0b");                              Assert.IsTrue(r2' "#1");                              Assert.IsTrue(r3' "#2");                              Assert.IsTrue(r1' "#3");                              Assert.AreEqual(TaskStatus.RanToCompletion' t.Status' "#4");                          }                      }                  }'                  10              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitChildTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var r1 = false;                      var r2 = false;                      var r3 = false;                      using (var mre = new ManualResetEventSlim(false))                      {                          using (var mreStart = new ManualResetEventSlim(false))                          {                              var t = Task.Factory.StartNew                              (                                  () =>                                  {                                      Task.Factory.StartNew                                      (                                          () =>                                          {                                              mre.Wait(300);                                              r1 = true;                                          }'                                          TaskCreationOptions.AttachedToParent                                      );                                      Task.Factory.StartNew(() => r2 = true' TaskCreationOptions.AttachedToParent);                                      Task.Factory.StartNew(() => r3 = true' TaskCreationOptions.AttachedToParent);                                      mreStart.Set();                                  }                              );                                mreStart.Wait(300);                              Assert.IsFalse(t.Wait(10)' "#0a");                              mre.Set();                              Assert.IsTrue(t.Wait(500)' "#0b");                              Assert.IsTrue(r2' "#1");                              Assert.IsTrue(r3' "#2");                              Assert.IsTrue(r1' "#3");                              Assert.AreEqual(TaskStatus.RanToCompletion' t.Status' "#4");                          }                      }                  }'                  10              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitChildTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var r1 = false;                      var r2 = false;                      var r3 = false;                      using (var mre = new ManualResetEventSlim(false))                      {                          using (var mreStart = new ManualResetEventSlim(false))                          {                              var t = Task.Factory.StartNew                              (                                  () =>                                  {                                      Task.Factory.StartNew                                      (                                          () =>                                          {                                              mre.Wait(300);                                              r1 = true;                                          }'                                          TaskCreationOptions.AttachedToParent                                      );                                      Task.Factory.StartNew(() => r2 = true' TaskCreationOptions.AttachedToParent);                                      Task.Factory.StartNew(() => r3 = true' TaskCreationOptions.AttachedToParent);                                      mreStart.Set();                                  }                              );                                mreStart.Wait(300);                              Assert.IsFalse(t.Wait(10)' "#0a");                              mre.Set();                              Assert.IsTrue(t.Wait(500)' "#0b");                              Assert.IsTrue(r2' "#1");                              Assert.IsTrue(r3' "#2");                              Assert.IsTrue(r1' "#3");                              Assert.AreEqual(TaskStatus.RanToCompletion' t.Status' "#4");                          }                      }                  }'                  10              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitChildTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var r1 = false;                      var r2 = false;                      var r3 = false;                      using (var mre = new ManualResetEventSlim(false))                      {                          using (var mreStart = new ManualResetEventSlim(false))                          {                              var t = Task.Factory.StartNew                              (                                  () =>                                  {                                      Task.Factory.StartNew                                      (                                          () =>                                          {                                              mre.Wait(300);                                              r1 = true;                                          }'                                          TaskCreationOptions.AttachedToParent                                      );                                      Task.Factory.StartNew(() => r2 = true' TaskCreationOptions.AttachedToParent);                                      Task.Factory.StartNew(() => r3 = true' TaskCreationOptions.AttachedToParent);                                      mreStart.Set();                                  }                              );                                mreStart.Wait(300);                              Assert.IsFalse(t.Wait(10)' "#0a");                              mre.Set();                              Assert.IsTrue(t.Wait(500)' "#0b");                              Assert.IsTrue(r2' "#1");                              Assert.IsTrue(r3' "#2");                              Assert.IsTrue(r1' "#3");                              Assert.AreEqual(TaskStatus.RanToCompletion' t.Status' "#4");                          }                      }                  }'                  10              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitChildTestCase,The following statement contains a magic number: ParallelTestHelper.Repeat              (                  () =>                  {                      var r1 = false;                      var r2 = false;                      var r3 = false;                      using (var mre = new ManualResetEventSlim(false))                      {                          using (var mreStart = new ManualResetEventSlim(false))                          {                              var t = Task.Factory.StartNew                              (                                  () =>                                  {                                      Task.Factory.StartNew                                      (                                          () =>                                          {                                              mre.Wait(300);                                              r1 = true;                                          }'                                          TaskCreationOptions.AttachedToParent                                      );                                      Task.Factory.StartNew(() => r2 = true' TaskCreationOptions.AttachedToParent);                                      Task.Factory.StartNew(() => r3 = true' TaskCreationOptions.AttachedToParent);                                      mreStart.Set();                                  }                              );                                mreStart.Wait(300);                              Assert.IsFalse(t.Wait(10)' "#0a");                              mre.Set();                              Assert.IsTrue(t.Wait(500)' "#0b");                              Assert.IsTrue(r2' "#1");                              Assert.IsTrue(r3' "#2");                              Assert.IsTrue(r1' "#3");                              Assert.AreEqual(TaskStatus.RanToCompletion' t.Status' "#4");                          }                      }                  }'                  10              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitChildWithContinuationAttachedTest,The following statement contains a magic number: var task = new Task              (                  () =>                  {                      Task.Factory.StartNew(() => Thread.Sleep(200)' TaskCreationOptions.AttachedToParent).ContinueWith(                          t =>                          {                              Thread.Sleep(200);                              result = true;                          }' TaskContinuationOptions.AttachedToParent);                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitChildWithContinuationAttachedTest,The following statement contains a magic number: var task = new Task              (                  () =>                  {                      Task.Factory.StartNew(() => Thread.Sleep(200)' TaskCreationOptions.AttachedToParent).ContinueWith(                          t =>                          {                              Thread.Sleep(200);                              result = true;                          }' TaskContinuationOptions.AttachedToParent);                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitChildWithContinuationNotAttachedTest,The following statement contains a magic number: var task = new Task              (                  () =>                  {                      Task.Factory.StartNew                      (                          () => Thread.Sleep(200)'                          TaskCreationOptions.AttachedToParent                      ).ContinueWith                      (                          t => Thread.Sleep(3000)                      );                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitChildWithContinuationNotAttachedTest,The following statement contains a magic number: var task = new Task              (                  () =>                  {                      Task.Factory.StartNew                      (                          () => Thread.Sleep(200)'                          TaskCreationOptions.AttachedToParent                      ).ContinueWith                      (                          t => Thread.Sleep(3000)                      );                  }              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitChildWithContinuationNotAttachedTest,The following statement contains a magic number: Assert.IsTrue(task.Wait(400));
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitChildWithNesting,The following statement contains a magic number: var t = Task.Factory.StartNew(() =>              {                  Task.Factory.StartNew(() =>                  {                      Task.Factory.StartNew(() =>                      {                          Thread.Sleep(500);                          result = true;                      }' TaskCreationOptions.AttachedToParent);                  }' TaskCreationOptions.AttachedToParent);              });
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitChildWithNesting,The following statement contains a magic number: Assert.IsTrue(t.Wait(4000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitingForChildrenToComplete,The following statement contains a magic number: _parentWfc = Task.Factory.StartNew(() =>                  {                      nested = Task.Factory.StartNew(() =>                      {                          Assert.IsTrue(mre.WaitOne(4000)' "parent_wfc needs to be set first");                          Assert.IsFalse(_parentWfc.Wait(10)' "#1a");                          Assert.AreEqual(TaskStatus.WaitingForChildrenToComplete' _parentWfc.Status' "#1b");                      }' TaskCreationOptions.AttachedToParent).ContinueWith(l =>                      {                          Assert.IsTrue(_parentWfc.Wait(2000)' "#2a");                          Assert.AreEqual(TaskStatus.RanToCompletion' _parentWfc.Status' "#2b");                      }' TaskContinuationOptions.ExecuteSynchronously);                  });
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitingForChildrenToComplete,The following statement contains a magic number: _parentWfc = Task.Factory.StartNew(() =>                  {                      nested = Task.Factory.StartNew(() =>                      {                          Assert.IsTrue(mre.WaitOne(4000)' "parent_wfc needs to be set first");                          Assert.IsFalse(_parentWfc.Wait(10)' "#1a");                          Assert.AreEqual(TaskStatus.WaitingForChildrenToComplete' _parentWfc.Status' "#1b");                      }' TaskCreationOptions.AttachedToParent).ContinueWith(l =>                      {                          Assert.IsTrue(_parentWfc.Wait(2000)' "#2a");                          Assert.AreEqual(TaskStatus.RanToCompletion' _parentWfc.Status' "#2b");                      }' TaskContinuationOptions.ExecuteSynchronously);                  });
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitingForChildrenToComplete,The following statement contains a magic number: _parentWfc = Task.Factory.StartNew(() =>                  {                      nested = Task.Factory.StartNew(() =>                      {                          Assert.IsTrue(mre.WaitOne(4000)' "parent_wfc needs to be set first");                          Assert.IsFalse(_parentWfc.Wait(10)' "#1a");                          Assert.AreEqual(TaskStatus.WaitingForChildrenToComplete' _parentWfc.Status' "#1b");                      }' TaskCreationOptions.AttachedToParent).ContinueWith(l =>                      {                          Assert.IsTrue(_parentWfc.Wait(2000)' "#2a");                          Assert.AreEqual(TaskStatus.RanToCompletion' _parentWfc.Status' "#2b");                      }' TaskContinuationOptions.ExecuteSynchronously);                  });
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitingForChildrenToComplete,The following statement contains a magic number: Assert.IsTrue(_parentWfc.Wait(2000)' "#3");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitingForChildrenToComplete,The following statement contains a magic number: Assert.IsTrue(nested.Wait(2000)' "#4");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenChildTaskErrorIsThrownOnlyOnFaultedContinuationShouldExecute,The following statement contains a magic number: onErrorTask.Wait(100);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenChildTaskSeveralLevelsDeepHandlesAggregateExceptionErrorStillBubblesToParent,The following statement contains a magic number: onErrorTask.Wait(1000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ChildTaskWithUnscheduledContinuationAttachedToParent,The following statement contains a magic number: Assert.IsTrue(t.Wait(5000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinuationOnBrokenScheduler,The following statement contains a magic number: Assert.IsTrue(t3.Wait(2000)' "#0");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValue,The following statement contains a magic number: var c = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "c-1");                  Assert.AreEqual(2' b' "c-2");              }' 2);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValue,The following statement contains a magic number: var c = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "c-1");                  Assert.AreEqual(2' b' "c-2");              }' 2);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValue,The following statement contains a magic number: var d = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "d-1");                  Assert.AreEqual(3' b' "d-2");                  return 77;              }' 3);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValue,The following statement contains a magic number: var d = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "d-1");                  Assert.AreEqual(3' b' "d-2");                  return 77;              }' 3);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValue,The following statement contains a magic number: var d = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "d-1");                  Assert.AreEqual(3' b' "d-2");                  return 77;              }' 3);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValue,The following statement contains a magic number: Assert.IsTrue(d.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValue,The following statement contains a magic number: Assert.AreEqual(2' c.AsyncState' "#3");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValue,The following statement contains a magic number: Assert.AreEqual(3' d.AsyncState' "#4");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: var t = Task.Factory.StartNew(l =>              {                  Assert.AreEqual(1' l' "a-1");                  return 80;              }' 1);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: var c = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "c-1");                  Assert.AreEqual(2' b' "c-2");                  return "c";              }' 2);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: var c = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "c-1");                  Assert.AreEqual(2' b' "c-2");                  return "c";              }' 2);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: var d = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "d-1");                  Assert.AreEqual(3' b' "d-2");                  return 'd';              }' 3);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: var d = t.ContinueWith((a' b) =>              {                  Assert.AreEqual(t' a' "d-1");                  Assert.AreEqual(3' b' "d-2");                  return 'd';              }' 3);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: Assert.IsTrue(d.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: Assert.AreEqual(80' t.Result' "#2r");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: Assert.AreEqual(2' c.AsyncState' "#3");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,ContinueWith_StateValueGeneric,The following statement contains a magic number: Assert.AreEqual(3' d.AsyncState' "#4");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Delay_Cancelled,The following statement contains a magic number: var t = TaskEx.Delay(5000' cancelation.Token);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Delay_Cancelled,The following statement contains a magic number: t.Wait(1000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Delay_Cancelled,The following statement contains a magic number: t.Wait(1000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Delay_Invalid,The following statement contains a magic number: TaskEx.Delay(-100);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Delay_Simple,The following statement contains a magic number: var t = TaskEx.Delay(300);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Delay_Simple,The following statement contains a magic number: Assert.IsTrue(t.Wait(400)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Delay_Start,The following statement contains a magic number: var t = TaskEx.Delay(5000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Delay_TimeManagement,The following statement contains a magic number: var delay1 = TaskEx.Delay(50);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Delay_TimeManagement,The following statement contains a magic number: var delay2 = TaskEx.Delay(25);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Delay_TimeManagement,The following statement contains a magic number: Assert.IsTrue(TaskEx.WhenAny(delay1' delay2).Wait(1000));
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Run_ExistingTask,The following statement contains a magic number: t2.Wait(1000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Run_ExistingTaskT,The following statement contains a magic number: var t = new Task<int>(() => 5);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Run_ExistingTaskT,The following statement contains a magic number: Assert.IsTrue(t2.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,Run_ExistingTaskT,The following statement contains a magic number: Assert.AreEqual(5' t2.Result' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,RunSynchronously,The following statement contains a magic number: var t = new Task                  (                      () =>                      {                          Thread.Sleep(100);                          val = 1;                      }                  );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,RunSynchronously,The following statement contains a magic number: var t2 = new Task                  (                      () =>                      {                          Thread.Sleep(0);                          val = 2;                      }                  );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,RunSynchronously,The following statement contains a magic number: Assert.AreEqual(2' val' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_CancelledAndTimeout,The following statement contains a magic number: var t2 = TaskEx.Delay(3000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAll_CancelledAndTimeout,The following statement contains a magic number: Assert.IsFalse(Task.WaitAll(new[] {t1' t2}' 10));
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WaitAny_WithNull,The following statement contains a magic number: var tasks = new Task[] {                  TaskEx.FromResult (2)'                  null              };
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAll,The following statement contains a magic number: Assert.IsTrue(t.Wait(1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAll_Cancelled,The following statement contains a magic number: var result = t.Wait(10000);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAll_Empty,The following statement contains a magic number: Assert.IsTrue(t.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAll_Faulted,The following statement contains a magic number: Assert.IsTrue(t.Wait(1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAll_Start,The following statement contains a magic number: Task[] tasks = {                  TaskEx.FromResult (2)'              };
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAll_WithNull,The following statement contains a magic number: var tasks = new Task[] {                  TaskEx.FromResult (2)'                  null              };
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAllResult,The following statement contains a magic number: Assert.IsTrue(t.Wait(1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAllResult,The following statement contains a magic number: Assert.AreEqual(2' t.Result.Length' "#3");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAllResult_Cancelled,The following statement contains a magic number: var taskA = new Task<int>                      (                          () => 9                      );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAllResult_Cancelled,The following statement contains a magic number: Assert.IsTrue(t.Wait(1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAllResult_Completed,The following statement contains a magic number: var tasks = new[] {                  TaskEx.FromResult (1)'                  TaskEx.FromResult (2)              };
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAllResult_Completed,The following statement contains a magic number: Assert.AreEqual(2' t.Result.Length' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAllResult_Completed,The following statement contains a magic number: Assert.AreEqual(2' t.Result[1]' "#2b");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAllResult_Empty,The following statement contains a magic number: Assert.IsTrue(t.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAllResult_WithNull,The following statement contains a magic number: var tasks = new[] {                  TaskEx.FromResult (2)'                  null              };
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAny,The following statement contains a magic number: Assert.IsTrue(t.Wait(2000)' "#2a");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAny,The following statement contains a magic number: Assert.IsTrue(t2.Wait(1000)' "#2b");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAny_Cancelled,The following statement contains a magic number: Assert.IsTrue(t.Wait(1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAny_Faulted,The following statement contains a magic number: Assert.IsTrue(t.Wait(1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAny_Start,The following statement contains a magic number: Task[] tasks = {                  TaskEx.FromResult (2)'              };
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAny_WithNull,The following statement contains a magic number: var tasks = new Task[] {                  TaskEx.FromResult (2)'                  null              };
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAnyResult,The following statement contains a magic number: var t1 = new Task<byte>                  (                      () => 3                  );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAnyResult,The following statement contains a magic number: var t2 = new Task<byte>                  (                      () =>                      {                          t1.Start();                          return 2;                      }                  );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAnyResult,The following statement contains a magic number: Assert.IsTrue(t.Wait(1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAnyResult_Cancelled,The following statement contains a magic number: var taskA = new Task<double>                  (                      () => 1.1                  );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAnyResult_Cancelled,The following statement contains a magic number: var taskB = new Task<double>                  (                      () => -4.4'                      cancelation.Token                  );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAnyResult_Cancelled,The following statement contains a magic number: Assert.IsTrue(t.Wait(1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAnyResult_Faulted,The following statement contains a magic number: Assert.IsTrue(t.Wait(1000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAnyResult_Start,The following statement contains a magic number: var tasks = new[]              {                  TaskEx.FromResult(2)'              };
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAnyResult_Start,The following statement contains a magic number: var task = new Task<int>              (                  () => 55              );
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,WhenAnyResult_WithNull,The following statement contains a magic number: var tasks = new[] {                  TaskEx.FromResult (2)'                  null              };
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,DenyChildAttachTest,The following statement contains a magic number: var parent = Task.Factory.StartNew(() => nested = Task.Factory.StartNew(() => mre.Wait(2000)' TaskCreationOptions.AttachedToParent)' TaskCreationOptions.DenyChildAttach);
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,DenyChildAttachTest,The following statement contains a magic number: Assert.IsTrue(parent.Wait(1000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,DenyChildAttachTest,The following statement contains a magic number: Assert.IsTrue(nested.Wait(2000)' "#2");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,HideSchedulerTest,The following statement contains a magic number: Assert.IsTrue(mre.Wait(10000)' "#1");
Magic Number,MonoTests.System.Threading.Tasks,TaskTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\TaskTest.cs,LazyCancelationTest,The following statement contains a magic number: Assert.IsTrue(cont.Wait(1000)' "#2");
Magic Number,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,ParallelForTest,The following statement contains a magic number: _sequences = new List<int>[1024];
Magic Number,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,Verify,The following statement contains a magic number: double minLimit = 1.63;
Magic Number,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,Verify,The following statement contains a magic number: double maxLimit = 1.65;
Magic Number,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,WorkWithIndexAndLocal,The following statement contains a magic number: index > (_parameters.StartIndex + (_parameters.Count / 2))
Magic Number,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,WorkWithIndexAndLocal,The following statement contains a magic number: index > (_parameters.StartIndex + (_parameters.Count / 2))
Magic Number,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,WorkWithIndexAndStop,The following statement contains a magic number: index > (_parameters.Count / 2)
Magic Number,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,WorkWithLocal,The following statement contains a magic number: i > (_parameters.StartIndex + (_parameters.Count / 2))
Magic Number,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,WorkWithLocal,The following statement contains a magic number: i > (_parameters.StartIndex64 + (_parameters.Count / 2))
Magic Number,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,WorkWithLocal,The following statement contains a magic number: i > (_parameters.StartIndex64 + (_parameters.Count / 2))
Magic Number,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,WorkWithStop,The following statement contains a magic number: i > (_parameters.StartIndex + (_parameters.Count / 2))
Magic Number,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,WorkWithStop,The following statement contains a magic number: i > (_parameters.StartIndex64 + (_parameters.Count / 2))
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByIsDeferred,The following statement contains a magic number: var src = new IterateAndCount(10);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByIsDeferred,The following statement contains a magic number: var a = src.GroupProgressiveBy(i => i > 5' null);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByIsDeferred,The following statement contains a magic number: var b = src.GroupProgressiveBy(i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByIsDeferred,The following statement contains a magic number: var c = src.GroupProgressiveBy(i => i > 5' (key' group) => StringEx.Concat(group.ToArray())' null);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByIsDeferred,The following statement contains a magic number: var d = src.GroupProgressiveBy(i => i > 5' j => j + 1' (key' group) => StringEx.Concat(group.ToArray())' null);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByIsDeferred,The following statement contains a magic number: Assert.AreEqual(src.Total' 40);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByIsDeferredToGetEnumerator,The following statement contains a magic number: var src = new IterateAndCount(10);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByIsDeferredToGetEnumerator,The following statement contains a magic number: var a = src.GroupProgressiveBy(i => i > 5' null);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByLastNullGroup,The following statement contains a magic number: var values = new List<Data>              {                  new Data(0' "a")'                  new Data(1' "a")'                  new Data(2' "b")'                  new Data(3' "b")'                  new Data(4' null)              };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByLastNullGroup,The following statement contains a magic number: var values = new List<Data>              {                  new Data(0' "a")'                  new Data(1' "a")'                  new Data(2' "b")'                  new Data(3' "b")'                  new Data(4' null)              };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByLastNullGroup,The following statement contains a magic number: var values = new List<Data>              {                  new Data(0' "a")'                  new Data(1' "a")'                  new Data(2' "b")'                  new Data(3' "b")'                  new Data(4' null)              };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByLastNullGroup,The following statement contains a magic number: switch (group.Key)                  {                      case "a":                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 0' 1 }));                          break;                        case "b":                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 2' 3 }));                          break;                        case null:                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 4 }));                          break;                        default:                          Assert.Fail();                          break;                  }
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByLastNullGroup,The following statement contains a magic number: switch (group.Key)                  {                      case "a":                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 0' 1 }));                          break;                        case "b":                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 2' 3 }));                          break;                        case null:                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 4 }));                          break;                        default:                          Assert.Fail();                          break;                  }
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByLastNullGroup,The following statement contains a magic number: switch (group.Key)                  {                      case "a":                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 0' 1 }));                          break;                        case "b":                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 2' 3 }));                          break;                        case null:                          Assert.IsTrue(group.Select(item => item.Number).ToArray().SetEquals(new[] { 4 }));                          break;                        default:                          Assert.Fail();                          break;                  }
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByLastNullGroup,The following statement contains a magic number: Assert.AreEqual(3' count);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: var r = src.GroupProgressiveBy(i => i > 5' null);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: Assert.AreEqual(count' 5);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadA,The following statement contains a magic number: Assert.AreEqual(index' 10);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadAEx,The following statement contains a magic number: var r = src.GroupProgressiveBy(i => i > 5' null);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadAEx,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadAEx,The following statement contains a magic number: Assert.AreEqual(g.Count()' 5);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: var r = src.GroupProgressiveBy(i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: Assert.AreEqual(count' 5);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadB,The following statement contains a magic number: Assert.AreEqual(index' 10);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadBEx,The following statement contains a magic number: var r = src.GroupProgressiveBy(i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadBEx,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadBEx,The following statement contains a magic number: Assert.AreEqual(g.Count()' 5);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadC,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadC,The following statement contains a magic number: var r = src.GroupProgressiveBy(i => i > 5' (key' group) => StringEx.Concat(group.ToArray())' null);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadC,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadD,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadD,The following statement contains a magic number: var r = src.GroupProgressiveBy(i => i > 5' j => j + 1' (key' group) => StringEx.Concat(group.ToArray())' null);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadD,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadDEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadDEx,The following statement contains a magic number: var r = src.GroupProgressiveBy(i => i > 5' FuncHelper.GetIdentityFunc<int>()' (key' group) => StringEx.Concat(group.ToArray())' null);
Magic Number,Tests.Theraot.Collections,ExtensionsGroupProgressiveBy,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ExtensionsGroupProgressiveBy.cs,GroupProgressiveByOverloadDEx,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTest.cs,LookupNullKeyNone,The following statement contains a magic number: Assert.AreEqual(2' lookup.Count);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ProgressiveLookupIsCached,The following statement contains a magic number: var src = new IterateAndCount(10);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ProgressiveLookupIsCached,The following statement contains a magic number: var a = ProgressiveLookup<bool' int>.Create(src' i => i > 5' null);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ProgressiveLookupIsCached,The following statement contains a magic number: var b = ProgressiveLookup<bool' string>.Create(src' i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ProgressiveLookupIsCached,The following statement contains a magic number: Assert.AreEqual(src.Total' 20);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: var r = ProgressiveLookup<bool' int>.Create(src' i => i > 5' null);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: Assert.AreEqual(count' 5);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadA,The following statement contains a magic number: Assert.AreEqual(index' 10);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: var r = ProgressiveLookup<bool' int>.Create(src' i => i > 5' null);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadAEx,The following statement contains a magic number: Assert.AreEqual(g.Count()' 5);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: var r = ProgressiveLookup<bool' string>.Create(src' i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: Assert.AreEqual(count' 5);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadB,The following statement contains a magic number: Assert.AreEqual(index' 10);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var src = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: var r = ProgressiveLookup<bool' string>.Create(src' i => i > 5' j => "str: " + j.ToString(CultureInfo.InvariantCulture)' null);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: Assert.AreEqual(rArray.Length' 2);
Magic Number,Tests.Theraot.Collections,ProgressiveLookupTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressiveLookupTestEx.cs,ToLookupOverloadBEx,The following statement contains a magic number: Assert.AreEqual(g.Count()' 5);
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,EnumerableProgressor,The following statement contains a magic number: var source = new[] { 0' 1' 2' 3' 4' 5 };
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,EnumerableProgressor,The following statement contains a magic number: var source = new[] { 0' 1' 2' 3' 4' 5 };
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,EnumerableProgressor,The following statement contains a magic number: var source = new[] { 0' 1' 2' 3' 4' 5 };
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,EnumerableProgressor,The following statement contains a magic number: var source = new[] { 0' 1' 2' 3' 4' 5 };
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,EnumerableProgressor,The following statement contains a magic number: Assert.AreEqual(6' indexA);
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ObservableProgressor,The following statement contains a magic number: var source = Progressor<int>.CreateFromArray(new[] { 0' 1' 2' 3' 4' 5 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ObservableProgressor,The following statement contains a magic number: var source = Progressor<int>.CreateFromArray(new[] { 0' 1' 2' 3' 4' 5 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ObservableProgressor,The following statement contains a magic number: var source = Progressor<int>.CreateFromArray(new[] { 0' 1' 2' 3' 4' 5 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ObservableProgressor,The following statement contains a magic number: var source = Progressor<int>.CreateFromArray(new[] { 0' 1' 2' 3' 4' 5 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ObservableProgressor,The following statement contains a magic number: Assert.AreEqual(6' indexA);
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int> { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: var work = new WaitCallback                      (                          _ =>                          {                              Interlocked.Increment(ref count[0]);                              handle.WaitOne();                              foreach (var item in source)                              {                                  GC.KeepAlive(item);                                  Interlocked.Increment(ref count[2]);                              }                              Interlocked.Increment(ref count[1]);                          }                      );
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: Volatile.Read(ref count[0]) != 2
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: Volatile.Read(ref count[1]) != 2
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: Assert.AreEqual(10' Volatile.Read(ref count[2]));
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUse,The following statement contains a magic number: Assert.AreEqual(10' Volatile.Read(ref count[2]));
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: var source = Progressor<int>.CreateFromArray(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: var source = Progressor<int>.CreateFromArray(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: var source = Progressor<int>.CreateFromArray(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: var source = Progressor<int>.CreateFromArray(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: var source = Progressor<int>.CreateFromArray(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: var source = Progressor<int>.CreateFromArray(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: var source = Progressor<int>.CreateFromArray(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: var source = Progressor<int>.CreateFromArray(new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 });
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: var work = new WaitCallback                      (                          _ =>                          {                              Interlocked.Increment(ref count[0]);                              handle.WaitOne();                              foreach (var item in source)                              {                                  GC.KeepAlive(item);                                  Interlocked.Increment(ref count[2]);                              }                              Interlocked.Increment(ref count[1]);                          }                      );
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: Volatile.Read(ref count[0]) != 2
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: Volatile.Read(ref count[1]) != 2
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: Assert.AreEqual(10' Volatile.Read(ref count[2]));
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArray,The following statement contains a magic number: Assert.AreEqual(10' Volatile.Read(ref count[2]));
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseArrayLoop,The following statement contains a magic number: i < 100000
Magic Number,Tests.Theraot.Collections,ProgressorTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTest.cs,ThreadedUseLoop,The following statement contains a magic number: i < 100000
Magic Number,Tests.Theraot.Collections,ProgressorTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTestEx.cs,ObservableProgressorWithPauseLoop,The following statement contains a magic number: index < 100000
Magic Number,Tests.Theraot.Collections,ProgressorTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTestEx.cs,ObservableProgressorWithPause,The following statement contains a magic number: var source = new SlowObservable<int>(new[] { 0' 1' 2' 3' 4' 5 });
Magic Number,Tests.Theraot.Collections,ProgressorTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTestEx.cs,ObservableProgressorWithPause,The following statement contains a magic number: var source = new SlowObservable<int>(new[] { 0' 1' 2' 3' 4' 5 });
Magic Number,Tests.Theraot.Collections,ProgressorTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTestEx.cs,ObservableProgressorWithPause,The following statement contains a magic number: var source = new SlowObservable<int>(new[] { 0' 1' 2' 3' 4' 5 });
Magic Number,Tests.Theraot.Collections,ProgressorTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTestEx.cs,ObservableProgressorWithPause,The following statement contains a magic number: var source = new SlowObservable<int>(new[] { 0' 1' 2' 3' 4' 5 });
Magic Number,Tests.Theraot.Collections,ProgressorTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTestEx.cs,ObservableProgressorWithPause,The following statement contains a magic number: Assert.AreEqual(0' Volatile.Read(ref data[2]));
Magic Number,Tests.Theraot.Collections,ProgressorTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTestEx.cs,ObservableProgressorWithPause,The following statement contains a magic number: Volatile.Read(ref data[0]) != 6 || Volatile.Read(ref data[1]) != 6
Magic Number,Tests.Theraot.Collections,ProgressorTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTestEx.cs,ObservableProgressorWithPause,The following statement contains a magic number: Volatile.Read(ref data[0]) != 6 || Volatile.Read(ref data[1]) != 6
Magic Number,Tests.Theraot.Collections,ProgressorTestEx,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ProgressorTestEx.cs,ObservableProgressorWithPause,The following statement contains a magic number: Assert.AreEqual(6' Volatile.Read(ref data[0]));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: Assert.IsTrue(avl.Remove(30));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: Assert.IsFalse(avl.Remove(70));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: Assert.AreEqual(avl.Count' 4);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var expected = new[] { 10' 20' 40' 50 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var expected = new[] { 10' 20' 40' 50 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var expected = new[] { 10' 20' 40' 50 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddAndRemove,The following statement contains a magic number: var expected = new[] { 10' 20' 40' 50 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 9' 9 }' { 77' 77 }' { 50' 50 }' { 48' 48 }' { 24' 24 }' { 60' 60 }' { 72' 72 }' { 95' 95 }' { 66' 66 }' { 27' 27 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: Assert.IsFalse(avl.Remove(30));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: Assert.IsTrue(avl.Remove(77));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: Assert.IsTrue(avl.Remove(72));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: Assert.IsTrue(avl.Remove(27));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var expected = new[] { 9' 24' 48' 50' 60' 66' 95 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var expected = new[] { 9' 24' 48' 50' 60' 66' 95 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var expected = new[] { 9' 24' 48' 50' 60' 66' 95 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var expected = new[] { 9' 24' 48' 50' 60' 66' 95 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var expected = new[] { 9' 24' 48' 50' 60' 66' 95 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var expected = new[] { 9' 24' 48' 50' 60' 66' 95 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalance,The following statement contains a magic number: var expected = new[] { 9' 24' 48' 50' 60' 66' 95 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceDuplicates,The following statement contains a magic number: var values = new[]              {                                  9'                                  77'                                  50'                                  48'                                  24'                                  60'                                  72'                                  95'                                  66'                                  27'                                  28'                                  33'                                  50'                                  65'                                  37'                                  75'                                  58'                                  36'                                  74'                                  60                          };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 1' 1 }' { 3' 3 }' { 5' 5 }' { 7' 7 }' { 9' 9 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 1' 1 }' { 3' 3 }' { 5' 5 }' { 7' 7 }' { 9' 9 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 1' 1 }' { 3' 3 }' { 5' 5 }' { 7' 7 }' { 9' 9 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 1' 1 }' { 3' 3 }' { 5' 5 }' { 7' 7 }' { 9' 9 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 1' 1 }' { 3' 3 }' { 5' 5 }' { 7' 7 }' { 9' 9 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 1' 1 }' { 3' 3 }' { 5' 5 }' { 7' 7 }' { 9' 9 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 1' 1 }' { 3' 3 }' { 5' 5 }' { 7' 7 }' { 9' 9 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 1' 1 }' { 3' 3 }' { 5' 5 }' { 7' 7 }' { 9' 9 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: Assert.IsTrue(avl.Remove(5));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: Assert.IsTrue(avl.Remove(7));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: Assert.IsTrue(avl.Remove(3));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: Assert.IsFalse(avl.Remove(7));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: Assert.IsFalse(avl.Remove(11));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: Assert.IsFalse(avl.Remove(7));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: Assert.IsFalse(avl.Remove(5));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: Assert.IsFalse(avl.Remove(2));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,AddRemoveAndBalanceExtended,The following statement contains a magic number: var expected = new[] { 1' 9 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 4' 0 }' { 8' 0 }' { 12' 0 }' { 16' 0 }' { 18' 0 }' { 19' 0 }' { 21' 0 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 4' 0 }' { 8' 0 }' { 12' 0 }' { 16' 0 }' { 18' 0 }' { 19' 0 }' { 21' 0 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 4' 0 }' { 8' 0 }' { 12' 0 }' { 16' 0 }' { 18' 0 }' { 19' 0 }' { 21' 0 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 4' 0 }' { 8' 0 }' { 12' 0 }' { 16' 0 }' { 18' 0 }' { 19' 0 }' { 21' 0 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 4' 0 }' { 8' 0 }' { 12' 0 }' { 16' 0 }' { 18' 0 }' { 19' 0 }' { 21' 0 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 4' 0 }' { 8' 0 }' { 12' 0 }' { 16' 0 }' { 18' 0 }' { 19' 0 }' { 21' 0 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 4' 0 }' { 8' 0 }' { 12' 0 }' { 16' 0 }' { 18' 0 }' { 19' 0 }' { 21' 0 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: Assert.AreEqual(avl.Count' 7);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var expected = new[] { 4' 8' 12' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var expected = new[] { 4' 8' 12' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var expected = new[] { 4' 8' 12' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var expected = new[] { 4' 8' 12' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var expected = new[] { 4' 8' 12' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var expected = new[] { 4' 8' 12' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: var expected = new[] { 4' 8' 12' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(2' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(6' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(10' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(14' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(17' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(20' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(22' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 2' 4' 6' 8' 10' 12' 14' 16' 17' 18' 19' 20' 21' 22 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(3' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(5' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(7' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(9' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(11' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(13' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(15' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(23' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(23);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(20);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(17);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(22);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(9' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(31' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(27' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(26' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(24' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(28' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(30' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(32' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(29' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(25' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 25' 26' 27' 28' 29' 30' 31' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(31);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(30);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(25);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 21' 24' 26' 27' 28' 29' 32 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(20' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(10' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(30' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(35' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(31' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(33' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(32' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(34' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 24' 26' 27' 28' 29' 30' 31' 32' 32' 33' 34' 35 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(39' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(36' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(46' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(42' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(38' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(29' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(21' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(48' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(44' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(40' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(47' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(49' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(41' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(28' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(7' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(43' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(45' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(37' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 1' 2' 3' 4' 5' 6' 7' 7' 8' 9' 9' 10' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(7);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(9);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(10);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(17' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(21);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 24' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(22' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(23' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(25' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 28' 29' 29' 30' 31' 32' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(28);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(29);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Remove(32);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(50' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(51' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(52' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(53' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(54' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(55' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(56' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(57' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(58' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(59' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(60' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(61' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(62' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(63' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(64' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(65' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(66' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(67' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(68' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(69' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(70' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(71' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(72' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(73' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(74' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(75' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(76' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(77' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(78' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(79' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(80' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(81' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(82' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(83' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(84' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(85' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(86' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(87' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(88' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(89' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(90' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(91' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(92' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(93' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(94' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(95' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(96' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(97' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(98' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: avl.Add(99' 0);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,LargeTreeTest,The following statement contains a magic number: expected = new[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25' 26' 27' 28' 29' 30' 31' 32' 33' 34' 35' 36' 37' 38' 39' 40' 41' 42' 43' 44' 45' 46' 47' 48' 49' 50' 51' 52' 53' 54' 55' 56' 57' 58' 59' 60' 61' 62' 63' 64' 65' 66' 67' 68' 69' 70' 71' 72' 73' 74' 75' 76' 77' 78' 79' 80' 81' 82' 83' 84' 85' 86' 87' 88' 89' 90' 91' 92' 93' 94' 95' 96' 97' 98' 99 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(50' avl.GetNearestLeft(100).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(50' avl.GetNearestLeft(100).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestLeft(30).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestLeft(30).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(20' avl.GetNearestLeft(25).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(20' avl.GetNearestLeft(25).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(20' avl.GetNearestLeft(20).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(20' avl.GetNearestLeft(20).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.IsNull(avl.GetNearestLeft(5));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(50' avl.GetNearestLeft(100).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(50' avl.GetNearestLeft(100).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(60' avl.GetNearestLeft(100).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(60' avl.GetNearestLeft(100).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestLeft(30).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestLeft(30).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestLeft(30).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestLeft(30).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(10' avl.GetNearestLeft(25).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(10' avl.GetNearestLeft(25).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(20' avl.GetNearestLeft(25).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(20' avl.GetNearestLeft(25).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(10' avl.GetNearestLeft(20).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(10' avl.GetNearestLeft(20).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(20' avl.GetNearestLeft(20).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(20' avl.GetNearestLeft(20).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.IsNull(avl.GetNearestLeft(5));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(avl.GetNearestLeft(100).Value' avl.RemoveNearestLeft(100).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(avl.GetNearestLeft(100).Value' avl.RemoveNearestLeft(100).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(avl.GetNearestLeft(30).Value' avl.RemoveNearestLeft(30).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(avl.GetNearestLeft(30).Value' avl.RemoveNearestLeft(30).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(avl.GetNearestLeft(20).Value' avl.RemoveNearestLeft(25).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.AreEqual(avl.GetNearestLeft(20).Value' avl.RemoveNearestLeft(25).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchLeft,The following statement contains a magic number: Assert.IsNull(avl.RemoveNearestLeft(5));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: var avl = new AVLTree<int' int> { { 10' 10 }' { 20' 20 }' { 30' 30 }' { 40' 40 }' { 50' 50 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.IsNull(avl.GetNearestRight(100));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(30).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(30).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(25).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(25).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(20' avl.GetNearestRight(20).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(20' avl.GetNearestRight(20).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(10' avl.GetNearestRight(5).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(10' avl.GetNearestRight(5).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: avl = new AVLTree<int' int> { { 10' 10 }' { 10' 20 }' { 30' 30 }' { 30' 40 }' { 50' 50 }' { 50' 60 } };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.IsNull(avl.GetNearestRight(100));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(30).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(30).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(30).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(30).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(25).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(25).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(25).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(25).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(20).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(20).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(20).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(30' avl.GetNearestRight(20).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(10' avl.GetNearestRight(5).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(10' avl.GetNearestRight(5).Key);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(10' avl.GetNearestRight(5).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(10' avl.GetNearestRight(5).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.IsNull(avl.RemoveNearestRight(100));
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(avl.GetNearestRight(30).Value' avl.RemoveNearestRight(30).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(avl.GetNearestRight(30).Value' avl.RemoveNearestRight(30).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(avl.GetNearestRight(5).Value' avl.RemoveNearestRight(5).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,SearchRight,The following statement contains a magic number: Assert.AreEqual(avl.GetNearestRight(5).Value' avl.RemoveNearestRight(5).Value);
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIteration,The following statement contains a magic number: var data = new[] { 6' 4' 9' 1' 5' 8' 7 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIteration,The following statement contains a magic number: var data = new[] { 6' 4' 9' 1' 5' 8' 7 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIteration,The following statement contains a magic number: var data = new[] { 6' 4' 9' 1' 5' 8' 7 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIteration,The following statement contains a magic number: var data = new[] { 6' 4' 9' 1' 5' 8' 7 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIteration,The following statement contains a magic number: var data = new[] { 6' 4' 9' 1' 5' 8' 7 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIteration,The following statement contains a magic number: var data = new[] { 6' 4' 9' 1' 5' 8' 7 };
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 1' 2' 3' 4' 5 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 1' 2' 3' 4' 5 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 1' 2' 3' 4' 5 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 1' 2' 3' 4' 5 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 2' 1' 4' 3' 5 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 2' 1' 4' 3' 5 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 2' 1' 4' 3' 5 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 2' 1' 4' 3' 5 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 80 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 80 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 80 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 80 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 20' 10' 30' 80' 40' 60' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 20' 10' 30' 80' 40' 60' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 20' 10' 30' 80' 40' 60' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 20' 10' 30' 80' 40' 60' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 20' 10' 30' 80' 40' 60' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 20' 10' 30' 80' 40' 60' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 20' 10' 30' 80' 40' 60' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 20' 10' 30' 80' 40' 60' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 30' 20' 80' 10' 40' 80' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 30' 20' 80' 10' 40' 80' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 30' 20' 80' 10' 40' 80' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 30' 20' 80' 10' 40' 80' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 30' 20' 80' 10' 40' 80' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 30' 20' 80' 10' 40' 80' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 30' 20' 80' 10' 40' 80' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 30' 20' 80' 10' 40' 80' 50' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 30' 45' 60' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 15' 30' 45' 60' 25' 55 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 10' 40' 70' 5' 30' 45 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 10' 40' 70' 5' 30' 45 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 10' 40' 70' 5' 30' 45 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 10' 40' 70' 5' 30' 45 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 10' 40' 70' 5' 30' 45 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 10' 40' 70' 5' 30' 45 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 10' 40' 70' 5' 30' 45 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 10' 40' 70' 5' 30' 45 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 50' 20' 60' 10' 40' 70' 5' 30' 45 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 10' 30' 45' 60' 5' 25' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 10' 30' 45' 60' 5' 25' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 10' 30' 45' 60' 5' 25' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 10' 30' 45' 60' 5' 25' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 10' 30' 45' 60' 5' 25' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 10' 30' 45' 60' 5' 25' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 10' 30' 45' 60' 5' 25' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 10' 30' 45' 60' 5' 25' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 10' 30' 45' 60' 5' 25' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 40' 20' 50' 10' 30' 45' 60' 5' 25' 70 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 3' 4' 7' 9' 10' 11' 12' 13 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 3' 4' 7' 9' 10' 11' 12' 13 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 3' 4' 7' 9' 10' 11' 12' 13 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 3' 4' 7' 9' 10' 11' 12' 13 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 3' 4' 7' 9' 10' 11' 12' 13 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 3' 4' 7' 9' 10' 11' 12' 13 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 3' 4' 7' 9' 10' 11' 12' 13 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestAdditionAndIterationExtended,The following statement contains a magic number: AddAndIterate(new[] { 3' 4' 7' 9' 10' 11' 12' 13 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestBalance,The following statement contains a magic number: AddAndIterate(new[] { 42' 36' 72' 54' 41' 29' 21' 83' 59' 46' 81' 96' 51' 1' 28' 42' 7' 56' 71' 40 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 3' 5' 5' 9' 12' 14' 16' 17' 21' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 3' 5' 5' 9' 12' 14' 16' 17' 21' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 3' 5' 5' 9' 12' 14' 16' 17' 21' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 3' 5' 5' 9' 12' 14' 16' 17' 21' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 3' 5' 5' 9' 12' 14' 16' 17' 21' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 3' 5' 5' 9' 12' 14' 16' 17' 21' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 3' 5' 5' 9' 12' 14' 16' 17' 21' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 3' 5' 5' 9' 12' 14' 16' 17' 21' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 3' 5' 5' 9' 12' 14' 16' 17' 21' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 3' 5' 5' 9' 12' 14' 16' 17' 21' 25 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 1' 1' 2' 2' 3' 3' 5' 6' 9' 10' 10' 10 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 1' 1' 2' 2' 3' 3' 5' 6' 9' 10' 10' 10 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 1' 1' 2' 2' 3' 3' 5' 6' 9' 10' 10' 10 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 1' 1' 2' 2' 3' 3' 5' 6' 9' 10' 10' 10 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 1' 1' 2' 2' 3' 3' 5' 6' 9' 10' 10' 10 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 1' 1' 2' 2' 3' 3' 5' 6' 9' 10' 10' 10 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 1' 1' 2' 2' 3' 3' 5' 6' 9' 10' 10' 10 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 1' 1' 2' 2' 3' 3' 5' 6' 9' 10' 10' 10 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 1' 1' 2' 2' 3' 3' 5' 6' 9' 10' 10' 10 });
Magic Number,Tests.Theraot.Collections.Specialized,AVLTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\Specialized\AVLTest.cs,TestDuplicated,The following statement contains a magic number: AddAndIterateNonDuplicate(new[] { 1' 1' 2' 2' 3' 3' 5' 6' 9' 10' 10' 10 });
Magic Number,Tests.Theraot.Collections.ThreadSafe,FixesSizeQueueTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ThreadSafe\FixesSizeQueueTest.cs,Fill,The following statement contains a magic number: var queue = new FixedSizeQueue<int>(64);
Magic Number,Tests.Theraot.Collections.ThreadSafe,FixesSizeQueueTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ThreadSafe\FixesSizeQueueTest.cs,FillPass,The following statement contains a magic number: var queue = new FixedSizeQueue<int>(64);
Magic Number,Tests.Theraot.Collections.ThreadSafe,FixesSizeQueueTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ThreadSafe\FixesSizeQueueTest.cs,FillPass,The following statement contains a magic number: Assert.IsFalse(queue.TryAdd(999));
Magic Number,Tests.Theraot.Collections.ThreadSafe,FixesSizeQueueTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ThreadSafe\FixesSizeQueueTest.cs,FillEnumerable,The following statement contains a magic number: var queue = new FixedSizeQueue<int>(Enumerable.Range(0' 64));
Magic Number,Tests.Theraot.Collections.ThreadSafe,FixesSizeQueueTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Collections\ThreadSafe\FixesSizeQueueTest.cs,FillEnumerable,The following statement contains a magic number: Assert.IsFalse(queue.TryAdd(999));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var input = new[] { 22141034' 146009798' 106447544' 66083576' 28048294' 3848650' 119601527' 182384611' 160860217' 52726162 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var input = new[] { 22141034' 146009798' 106447544' 66083576' 28048294' 3848650' 119601527' 182384611' 160860217' 52726162 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var input = new[] { 22141034' 146009798' 106447544' 66083576' 28048294' 3848650' 119601527' 182384611' 160860217' 52726162 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var input = new[] { 22141034' 146009798' 106447544' 66083576' 28048294' 3848650' 119601527' 182384611' 160860217' 52726162 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var input = new[] { 22141034' 146009798' 106447544' 66083576' 28048294' 3848650' 119601527' 182384611' 160860217' 52726162 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var input = new[] { 22141034' 146009798' 106447544' 66083576' 28048294' 3848650' 119601527' 182384611' 160860217' 52726162 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var input = new[] { 22141034' 146009798' 106447544' 66083576' 28048294' 3848650' 119601527' 182384611' 160860217' 52726162 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var input = new[] { 22141034' 146009798' 106447544' 66083576' 28048294' 3848650' 119601527' 182384611' 160860217' 52726162 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var input = new[] { 22141034' 146009798' 106447544' 66083576' 28048294' 3848650' 119601527' 182384611' 160860217' 52726162 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var input = new[] { 22141034' 146009798' 106447544' 66083576' 28048294' 3848650' 119601527' 182384611' 160860217' 52726162 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var output = new[] { 24' 27' 26' 25' 24' 21' 26' 27' 27' 25 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var output = new[] { 24' 27' 26' 25' 24' 21' 26' 27' 27' 25 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var output = new[] { 24' 27' 26' 25' 24' 21' 26' 27' 27' 25 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var output = new[] { 24' 27' 26' 25' 24' 21' 26' 27' 27' 25 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var output = new[] { 24' 27' 26' 25' 24' 21' 26' 27' 27' 25 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var output = new[] { 24' 27' 26' 25' 24' 21' 26' 27' 27' 25 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var output = new[] { 24' 27' 26' 25' 24' 21' 26' 27' 27' 25 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var output = new[] { 24' 27' 26' 25' 24' 21' 26' 27' 27' 25 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var output = new[] { 24' 27' 26' 25' 24' 21' 26' 27' 27' 25 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Log2Tests,The following statement contains a magic number: var output = new[] { 24' 27' 26' 25' 24' 21' 26' 27' 27' 25 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var input = new[] { -1' 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var input = new[] { -1' 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var input = new[] { -1' 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var input = new[] { -1' 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var input = new[] { -1' 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var input = new[] { -1' 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var input = new[] { -1' 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var input = new[] { -1' 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var input = new[] { -1' 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var input = new[] { -1' 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var output = new[] { 1' 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var output = new[] { 1' 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var output = new[] { 1' 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var output = new[] { 1' 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var output = new[] { 1' 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var output = new[] { 1' 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var output = new[] { 1' 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var output = new[] { 1' 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var output = new[] { 1' 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Int,The following statement contains a magic number: var output = new[] { 1' 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var input = new uint[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var input = new uint[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var input = new uint[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var input = new uint[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var input = new uint[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var input = new uint[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var input = new uint[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var input = new uint[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var input = new uint[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var input = new uint[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var output = new uint[] { 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var output = new uint[] { 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var output = new uint[] { 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var output = new uint[] { 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var output = new uint[] { 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var output = new uint[] { 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var output = new uint[] { 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var output = new uint[] { 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var output = new uint[] { 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,NextPowerOf2Uint,The following statement contains a magic number: var output = new uint[] { 1024' 262144' 524288' 1048576' 1048576' 1048576' 2097152' 2097152' 2097152' 4194304 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var input = new[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var input = new[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var input = new[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var input = new[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var input = new[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var input = new[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var input = new[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var input = new[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var input = new[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var input = new[] { 835' 246444' 448905' 610268' 855701' 1017047' 1228188' 1717470' 1917025' 2130772 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var output = new[] { 28' 496' 670' 781' 925' 1008' 1108' 1310' 1384' 1459 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var output = new[] { 28' 496' 670' 781' 925' 1008' 1108' 1310' 1384' 1459 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var output = new[] { 28' 496' 670' 781' 925' 1008' 1108' 1310' 1384' 1459 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var output = new[] { 28' 496' 670' 781' 925' 1008' 1108' 1310' 1384' 1459 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var output = new[] { 28' 496' 670' 781' 925' 1008' 1108' 1310' 1384' 1459 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var output = new[] { 28' 496' 670' 781' 925' 1008' 1108' 1310' 1384' 1459 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var output = new[] { 28' 496' 670' 781' 925' 1008' 1108' 1310' 1384' 1459 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var output = new[] { 28' 496' 670' 781' 925' 1008' 1108' 1310' 1384' 1459 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var output = new[] { 28' 496' 670' 781' 925' 1008' 1108' 1310' 1384' 1459 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,Sqrt,The following statement contains a magic number: var output = new[] { 28' 496' 670' 781' 925' 1008' 1108' 1310' 1384' 1459 };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputLong = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputLong = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputLong = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputLong = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputLong = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputLong = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputLong = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputLong = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputLong = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputLong = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputDouble = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834'                  double.PositiveInfinity'                  double.NegativeInfinity'                  double.NaN              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputDouble = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834'                  double.PositiveInfinity'                  double.NegativeInfinity'                  double.NaN              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputDouble = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834'                  double.PositiveInfinity'                  double.NegativeInfinity'                  double.NaN              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputDouble = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834'                  double.PositiveInfinity'                  double.NegativeInfinity'                  double.NaN              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputDouble = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834'                  double.PositiveInfinity'                  double.NegativeInfinity'                  double.NaN              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputDouble = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834'                  double.PositiveInfinity'                  double.NegativeInfinity'                  double.NaN              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputDouble = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834'                  double.PositiveInfinity'                  double.NegativeInfinity'                  double.NaN              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputDouble = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834'                  double.PositiveInfinity'                  double.NegativeInfinity'                  double.NaN              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputDouble = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834'                  double.PositiveInfinity'                  double.NegativeInfinity'                  double.NaN              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,BuildDouble,The following statement contains a magic number: var inputDouble = new[]              {                  2318709486335437829'                  5863966414194722965'                  1901433884841312373'                  2370638483762077987'                  942754748826369726'                  -6658171829963888942'                  -7008354965981861999'                  -4082161363149237830'                  -3043789911413372093'                  -6411351321497233834'                  double.PositiveInfinity'                  double.NegativeInfinity'                  double.NaN              };
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDZero,The following statement contains a magic number: Assert.AreEqual(180' NumericHelper.GCD(0' 180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDZero,The following statement contains a magic number: Assert.AreEqual(180' NumericHelper.GCD(0' 180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDZero,The following statement contains a magic number: Assert.AreEqual(180' NumericHelper.GCD(0' -180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDZero,The following statement contains a magic number: Assert.AreEqual(180' NumericHelper.GCD(0' -180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDZero,The following statement contains a magic number: Assert.AreEqual(13456489866' NumericHelper.GCD(0' 13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDZero,The following statement contains a magic number: Assert.AreEqual(13456489866' NumericHelper.GCD(0' 13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDZero,The following statement contains a magic number: Assert.AreEqual(13456489866' NumericHelper.GCD(0' -13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDZero,The following statement contains a magic number: Assert.AreEqual(13456489866' NumericHelper.GCD(0' -13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(12' NumericHelper.GCD(48' 180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(12' NumericHelper.GCD(48' 180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(12' NumericHelper.GCD(48' 180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(12' NumericHelper.GCD(-48' 180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(12' NumericHelper.GCD(-48' 180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(12' NumericHelper.GCD(-48' 180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(12' NumericHelper.GCD(48' -180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(12' NumericHelper.GCD(48' -180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(12' NumericHelper.GCD(48' -180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(12' NumericHelper.GCD(-48' -180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(12' NumericHelper.GCD(-48' -180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(12' NumericHelper.GCD(-48' -180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(6' NumericHelper.GCD(48' 13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(6' NumericHelper.GCD(48' 13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(6' NumericHelper.GCD(48' 13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(6' NumericHelper.GCD(-48' 13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(6' NumericHelper.GCD(-48' 13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(6' NumericHelper.GCD(-48' 13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(6' NumericHelper.GCD(48' -13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(6' NumericHelper.GCD(48' -13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(6' NumericHelper.GCD(48' -13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(6' NumericHelper.GCD(-48' -13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(6' NumericHelper.GCD(-48' -13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDIgnoresSign,The following statement contains a magic number: Assert.AreEqual(6' NumericHelper.GCD(-48' -13456489866));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(1' NumericHelper.GCD(43154552' 521995751));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(1' NumericHelper.GCD(43154552' 521995751));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(3' NumericHelper.GCD(467216955' 136307028));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(3' NumericHelper.GCD(467216955' 136307028));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(3' NumericHelper.GCD(467216955' 136307028));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(676733084' 883191742));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(676733084' 883191742));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(676733084' 883191742));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(1' NumericHelper.GCD(461854585' 503034297));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(1' NumericHelper.GCD(461854585' 503034297));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(423541676' 978926918));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(423541676' 978926918));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(423541676' 978926918));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(17' NumericHelper.GCD(883027226' 914620757));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(17' NumericHelper.GCD(883027226' 914620757));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(17' NumericHelper.GCD(883027226' 914620757));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(843545372' 614288570));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(843545372' 614288570));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(843545372' 614288570));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(339473804' 955338346));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(339473804' 955338346));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(339473804' 955338346));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(1' NumericHelper.GCD(266469934' 670394525));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(1' NumericHelper.GCD(266469934' 670394525));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(412756198' 678862818));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(412756198' 678862818));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMics,The following statement contains a magic number: Assert.AreEqual(2' NumericHelper.GCD(412756198' 678862818));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMaxValue,The following statement contains a magic number: Assert.AreEqual(15' NumericHelper.GCD(ulong.MaxValue' 180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMaxValue,The following statement contains a magic number: Assert.AreEqual(15' NumericHelper.GCD(ulong.MaxValue' 180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMinValue,The following statement contains a magic number: Assert.AreEqual(4' NumericHelper.GCD(long.MinValue' 180));
Magic Number,Tests.Theraot.Core,NumericHelperTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Core\NumericHelperTest.cs,GCDMinValue,The following statement contains a magic number: Assert.AreEqual(4' NumericHelper.GCD(long.MinValue' 180));
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,CountdownEvent_Signal_Concurrent,The following statement contains a magic number: Assert.IsTrue(ce.Wait(1000)' "#1");
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,CountdownEvent_Signal_Concurrent,The following statement contains a magic number: r < 100
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,ManualResetEventSlim_SetAfterDisposeTest,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  Exception disp = null' setting = null;                    var evt = new CountdownEvent(2);                  var evtFinish = new CountdownEvent(2);                    Task.Factory.StartNew(delegate                  {                      try                      {                          evt.Signal();                          evt.Wait(1000);                          mre.Dispose();                      }                      catch (Exception e)                      {                          disp = e;                      }                      evtFinish.Signal();                  });                  Task.Factory.StartNew(delegate                  {                      try                      {                          evt.Signal();                          evt.Wait(1000);                          mre.Set();                      }                      catch (Exception e)                      {                          setting = e;                      }                      evtFinish.Signal();                  });                    var bb = evtFinish.Wait(1000);                  if (!bb)                  {                      Assert.AreEqual(true' evtFinish.IsSet);                  }                    Assert.IsTrue(bb' "#0");                  Assert.IsNull(disp' "#1");                  Assert.IsNull(setting' "#2");                    evt.Dispose();                  evtFinish.Dispose();              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,ManualResetEventSlim_SetAfterDisposeTest,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  Exception disp = null' setting = null;                    var evt = new CountdownEvent(2);                  var evtFinish = new CountdownEvent(2);                    Task.Factory.StartNew(delegate                  {                      try                      {                          evt.Signal();                          evt.Wait(1000);                          mre.Dispose();                      }                      catch (Exception e)                      {                          disp = e;                      }                      evtFinish.Signal();                  });                  Task.Factory.StartNew(delegate                  {                      try                      {                          evt.Signal();                          evt.Wait(1000);                          mre.Set();                      }                      catch (Exception e)                      {                          setting = e;                      }                      evtFinish.Signal();                  });                    var bb = evtFinish.Wait(1000);                  if (!bb)                  {                      Assert.AreEqual(true' evtFinish.IsSet);                  }                    Assert.IsTrue(bb' "#0");                  Assert.IsNull(disp' "#1");                  Assert.IsNull(setting' "#2");                    evt.Dispose();                  evtFinish.Dispose();              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,ManualResetEventSlim_SetAfterDisposeTest,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  Exception disp = null' setting = null;                    var evt = new CountdownEvent(2);                  var evtFinish = new CountdownEvent(2);                    Task.Factory.StartNew(delegate                  {                      try                      {                          evt.Signal();                          evt.Wait(1000);                          mre.Dispose();                      }                      catch (Exception e)                      {                          disp = e;                      }                      evtFinish.Signal();                  });                  Task.Factory.StartNew(delegate                  {                      try                      {                          evt.Signal();                          evt.Wait(1000);                          mre.Set();                      }                      catch (Exception e)                      {                          setting = e;                      }                      evtFinish.Signal();                  });                    var bb = evtFinish.Wait(1000);                  if (!bb)                  {                      Assert.AreEqual(true' evtFinish.IsSet);                  }                    Assert.IsTrue(bb' "#0");                  Assert.IsNull(disp' "#1");                  Assert.IsNull(setting' "#2");                    evt.Dispose();                  evtFinish.Dispose();              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,ManualResetEventSlim_SetAfterDisposeTest,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  Exception disp = null' setting = null;                    var evt = new CountdownEvent(2);                  var evtFinish = new CountdownEvent(2);                    Task.Factory.StartNew(delegate                  {                      try                      {                          evt.Signal();                          evt.Wait(1000);                          mre.Dispose();                      }                      catch (Exception e)                      {                          disp = e;                      }                      evtFinish.Signal();                  });                  Task.Factory.StartNew(delegate                  {                      try                      {                          evt.Signal();                          evt.Wait(1000);                          mre.Set();                      }                      catch (Exception e)                      {                          setting = e;                      }                      evtFinish.Signal();                  });                    var bb = evtFinish.Wait(1000);                  if (!bb)                  {                      Assert.AreEqual(true' evtFinish.IsSet);                  }                    Assert.IsTrue(bb' "#0");                  Assert.IsNull(disp' "#1");                  Assert.IsNull(setting' "#2");                    evt.Dispose();                  evtFinish.Dispose();              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,ManualResetEventSlim_SetAfterDisposeTest,The following statement contains a magic number: ParallelTestHelper.Repeat(delegate              {                  Exception disp = null' setting = null;                    var evt = new CountdownEvent(2);                  var evtFinish = new CountdownEvent(2);                    Task.Factory.StartNew(delegate                  {                      try                      {                          evt.Signal();                          evt.Wait(1000);                          mre.Dispose();                      }                      catch (Exception e)                      {                          disp = e;                      }                      evtFinish.Signal();                  });                  Task.Factory.StartNew(delegate                  {                      try                      {                          evt.Signal();                          evt.Wait(1000);                          mre.Set();                      }                      catch (Exception e)                      {                          setting = e;                      }                      evtFinish.Signal();                  });                    var bb = evtFinish.Wait(1000);                  if (!bb)                  {                      Assert.AreEqual(true' evtFinish.IsSet);                  }                    Assert.IsTrue(bb' "#0");                  Assert.IsNull(disp' "#1");                  Assert.IsNull(setting' "#2");                    evt.Dispose();                  evtFinish.Dispose();              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,ManualResetEventSlim_Wait_SetConcurrent,The following statement contains a magic number: Task.Factory.StartNew(delegate                      {                          b &= mre.Wait(1000);                      });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,ManualResetEventSlim_Wait_SetConcurrent,The following statement contains a magic number: Assert.IsTrue(mre.Wait(1000)' i.ToString());
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,ManualResetEventSlim_Wait_SetConcurrent,The following statement contains a magic number: i < 10000
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int>              {                  0'                  1'                  2'                  3'                  4'                  5'                  6'                  7'                  8'                  9              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int>              {                  0'                  1'                  2'                  3'                  4'                  5'                  6'                  7'                  8'                  9              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int>              {                  0'                  1'                  2'                  3'                  4'                  5'                  6'                  7'                  8'                  9              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int>              {                  0'                  1'                  2'                  3'                  4'                  5'                  6'                  7'                  8'                  9              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int>              {                  0'                  1'                  2'                  3'                  4'                  5'                  6'                  7'                  8'                  9              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int>              {                  0'                  1'                  2'                  3'                  4'                  5'                  6'                  7'                  8'                  9              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int>              {                  0'                  1'                  2'                  3'                  4'                  5'                  6'                  7'                  8'                  9              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: var source = Progressor<int>.CreateFromIList(new List<int>              {                  0'                  1'                  2'                  3'                  4'                  5'                  6'                  7'                  8'                  9              });
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: Interlocked.Increment(ref count[2]);
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: Volatile.Read(ref count[0]) != 2
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: Volatile.Read(ref count[1]) != 2
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: Assert.AreEqual(10' Volatile.Read(ref count[2]));
Magic Number,Tests.Theraot.Threading.Needles,WorkTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\Needles\WorkTest.cs,Progressor_ThreadedUse,The following statement contains a magic number: Assert.AreEqual(10' Volatile.Read(ref count[2]));
Magic Number,Tests.Theraot.Threading,ReentryGuardTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\ReentryGuardTests.cs,SingleThreadReentry,The following statement contains a magic number: action = () =>              {                  if (count < 255)                  {                      count++;                      guard.Execute(action);                  }              };
Magic Number,Tests.Theraot.Threading,ReentryGuardTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\ReentryGuardTests.cs,SingleThreadReentry,The following statement contains a magic number: Assert.AreEqual(255' count);
Magic Number,Tests.Theraot.Threading,ReentryGuardTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\ReentryGuardTests.cs,ThreadedReentry,The following statement contains a magic number: action = () =>              {                  if (count < 255)                  {                      count++;                      guard.Execute(action);                  }              };
Magic Number,Tests.Theraot.Threading,ReentryGuardTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\ReentryGuardTests.cs,ThreadedReentry,The following statement contains a magic number: Assert.AreEqual(255' count);
Magic Number,Theraot.Threading,TimeoutTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\TimeoutTests.cs,TimeoutCancel,The following statement contains a magic number: var timeout = RootedTimeout.Launch(() => value[0] = 1' 1000);
Magic Number,Theraot.Threading,TimeoutTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\TimeoutTests.cs,TimeoutCancelAndChange,The following statement contains a magic number: var timeout = RootedTimeout.Launch(() => value[0] = 1' 100);
Magic Number,Theraot.Threading,TimeoutTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\TimeoutTests.cs,TimeoutCancelAndChange,The following statement contains a magic number: Assert.IsFalse(timeout.Change(1000));
Magic Number,Theraot.Threading,TimeoutTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\TimeoutTests.cs,TimeoutChange,The following statement contains a magic number: var timeout = RootedTimeout.Launch(() => value[0] = DateTime.Now' 100);
Magic Number,Theraot.Threading,TimeoutTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\TimeoutTests.cs,TimeoutChange,The following statement contains a magic number: !timeout.Change(1000)
Magic Number,Theraot.Threading,TimeoutTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\TimeoutTests.cs,TimeoutChange,The following statement contains a magic number: Assert.Greater((value[0] - now).TotalMilliseconds' 100);
Magic Number,Theraot.Threading,TimeoutTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\TimeoutTests.cs,TimeoutFinishAndChange,The following statement contains a magic number: var timeout = RootedTimeout.Launch(() => value[0] = 1' 100);
Magic Number,Theraot.Threading,TimeoutTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\TimeoutTests.cs,TimeoutFinishAndChange,The following statement contains a magic number: Assert.IsFalse(timeout.Change(1000));
Magic Number,Theraot.Threading,TimeoutTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\TimeoutTests.cs,TimeoutRemaining,The following statement contains a magic number: var timeout = RootedTimeout.Launch(() => value[0] = DateTime.Now' 500);
Magic Number,Theraot.Threading,TimeoutTests,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\Theraot\Threading\TimeoutTests.cs,TimeoutRemaining,The following statement contains a magic number: Assert.LessOrEqual(remaining' 500);
Missing Default,System.Threading.Tasks.Tests,ParallelForTest,D:\research\architectureSmells\repos1\theraot_Theraot\Tests\System\Threading\Tasks\ParallelForTest.cs,InvokeZetaWorkload,The following switch statement is missing a default case: switch (_parameters.WorkloadPattern)                  {                      case WorkloadPattern.Similar:                          zetaIndex += i;                          break;                        case WorkloadPattern.Increasing:                          zetaIndex += i * s_zetaSeedOffset;                          break;                        case WorkloadPattern.Decreasing:                          zetaIndex += (_parameters.Count - i) * s_zetaSeedOffset;                          break;                        case WorkloadPattern.Random:                          zetaIndex += _random.Value.Next(0' _parameters.Count) * s_zetaSeedOffset;                          break;                  }
