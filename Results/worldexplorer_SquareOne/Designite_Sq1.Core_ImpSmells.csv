Implementation smell,Namespace,Class,File,Method,Description
Long Method,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The method has 104 lines of code.
Long Method,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_entryAlertWillBeFilled_byQuote,The method has 133 lines of code.
Long Method,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_exitAlertWillBeFilled_byQuote,The method has 177 lines of code.
Long Method,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,generateClosestQuote_forEachPendingAlert_onOurWayTo,The method has 153 lines of code.
Long Method,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,modelQuote_thatCouldFillAlert,The method has 146 lines of code.
Long Method,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,Order_modifyOrderType_priceRequesting_accordingToMarketOrderAs,The method has 147 lines of code.
Long Method,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The method has 140 lines of code.
Long Method,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,postProcess_invokeScript_scheduleReplacement,The method has 124 lines of code.
Long Method,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The method has 107 lines of code.
Long Method,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The method has 101 lines of code.
Long Method,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The method has 139 lines of code.
Long Method,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The method has 141 lines of code.
Long Method,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The method has 791 lines of code.
Long Method,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The method has 701 lines of code.
Long Method,Sq1.Core.Repositories,DllScanner<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\DllScanner.ChildrenDebug.cs,ScanListPrepared,The method has 107 lines of code.
Long Method,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The method has 151 lines of code.
Long Method,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The method has 119 lines of code.
Long Method,Sq1.Core.Execution,Alert,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Alert.cs,Alert,The method has 104 lines of code.
Long Method,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The method has 327 lines of code.
Long Method,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The method has 128 lines of code.
Long Method,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,updateAtomicStatsForPositionsClosedAtBar,The method has 150 lines of code.
Long Method,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pusherEntryPoint,The method has 125 lines of code.
Long Method,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The method has 111 lines of code.
Long Method,Sq1.Core.Streaming,SolidifierBarsEmulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SolidifierBarsEmulator.cs,Quote_cloneBind_enrichWithIntrabarSerno_updateStreamingBar_createNewBar,The method has 101 lines of code.
Long Method,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,GetBidOrAsk_aligned_forTidalOrCrossMarket_fromQuoteCurrent,The method has 110 lines of code.
Complex Method,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPreBarsSubstitute_overrideable,Cyclomatic complexity of the method is 11
Complex Method,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,generateQuotes_forBar_push,Cyclomatic complexity of the method is 16
Complex Method,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,SimulateFill_allPendingAlerts,Cyclomatic complexity of the method is 10
Complex Method,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,SimulateFill_pendingAlert,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,checkAlertFillable,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,simulatePendingFill_entry,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Backtesting,BacktestSpreadModeler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestSpreadModeler.cs,GeneratedQuoteFillBidAsk,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Backtesting,BacktestSpreadModeler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestSpreadModeler.cs,AlignBidAskToPriceLevel,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,InjectQuotes_toFillPendingAlerts_push,Cyclomatic complexity of the method is 12
Complex Method,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,generateClosestQuote_forEachPendingAlert_onOurWayTo,Cyclomatic complexity of the method is 23
Complex Method,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,Generate_quotesFromBar_avoidClearing,Cyclomatic complexity of the method is 11
Complex Method,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,AlertCounterparty_annihilate,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,Order_checkThrow_enrichPreSubmit,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,ScanEvidentLanes_forGuid_nullUnsafe,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,BrokerCallback_orderStateUpdate_mustBeDifferent_postProcess,Cyclomatic complexity of the method is 12
Complex Method,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,Cyclomatic complexity of the method is 19
Complex Method,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,isExitOrderConsistent_logInconsistency,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Broker,OrdersAutoTree,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrdersAutoTree.cs,scanDeserialized_moveDerivedsInside_buildTreeShadow,Cyclomatic complexity of the method is 11
Complex Method,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,ReplaceRejectedOrder,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,Cyclomatic complexity of the method is 35
Complex Method,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,AbsorbFrom,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Charting,DictionaryManyToOne<CHART;ALERTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\DictionaryManyToOne.cs,RenameKey,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,CalculateGlobals_runEachValueAgainstAllParametersFullyChosen_restoreChosenFromDeserialized,Cyclomatic complexity of the method is 12
Complex Method,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,SetParentForBackwardUpdate,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,CheckOHLCVthrow,Cyclomatic complexity of the method is 13
Complex Method,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,HasSameDOHLCVas,Cyclomatic complexity of the method is 11
Complex Method,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,ContainsBidAskForQuoteGenerated,Cyclomatic complexity of the method is 11
Complex Method,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,Clone_selectRange,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,Cyclomatic complexity of the method is 12
Complex Method,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetClearingTimespan_ifMarketSuspended,Cyclomatic complexity of the method is 15
Complex Method,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,ClearingIntervalsStretchingWholeBarsTotalled,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetReason_ifMarket_closedOrSuspended_at,Cyclomatic complexity of the method is 12
Complex Method,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,Cyclomatic complexity of the method is 15
Complex Method,Sq1.Core.Repositories,DllScanner<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\DllScanner.ChildrenDebug.cs,ScanListPrepared,Cyclomatic complexity of the method is 14
Complex Method,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,Cyclomatic complexity of the method is 10
Complex Method,Sq1.Core.Repositories,RepositorySerializerMarketInfos,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositorySerializerMarketInfos.cs,adjustIfClearingTimespanOutsideOpenClose,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Repositories,RepositorySerializerMarketInfos,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositorySerializerMarketInfos.cs,ParseDaysOfWeekCsv,Cyclomatic complexity of the method is 10
Complex Method,Sq1.Core.Repositories,RepositorySerializerSymbolInfos,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositorySerializerSymbolInfos.cs,Deserialize,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,FolderDelete,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Sequencing,SequencedBacktests,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SequencedBacktests.cs,CalculateProfitFactorAverage,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Sequencing,ParametersSequencer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ParametersSequencer.cs,nextMerged,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Execution,PositionList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionList.cs,AddOpened_step1of2,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillExitWith,Cyclomatic complexity of the method is 10
Complex Method,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,ToString,Cyclomatic complexity of the method is 10
Complex Method,Sq1.Core.Execution,Alert,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Alert.cs,Alert,Cyclomatic complexity of the method is 13
Complex Method,Sq1.Core.Execution,Order,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Order.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Indicators.HelperSeries,MovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\HelperSeries\MovingAverageSimple.cs,CalculateOwnValue,Cyclomatic complexity of the method is 10
Complex Method,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,canRunCalculation,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,OnNewStreamingQuote,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,DrawValueEntryPoint,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,DrawValueSingleLine,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,checkPopupOnResetAndSync,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,replaceWithClonesScriptAndIndicatorParameters,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,AbsorbOnlyScriptAndIndicatorParameterCurrentValues_toDisposableFromSequencer,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,AbsorbOnlyScriptAndIndicatorParameterCurrentValues_fromSequencer,Cyclomatic complexity of the method is 10
Complex Method,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,PushIndicatorParamsCurrentValuesIntoReflectedIndicators,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,AnnihilateCounterparty_forClosedPosition,Cyclomatic complexity of the method is 12
Complex Method,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,CreateStopLoss_fromPositionPrototype,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SwitchToDefaultContext_byAbsorbingScriptAndIndicatorParameters_fromSelfCloneConstructed,Cyclomatic complexity of the method is 10
Complex Method,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,Cyclomatic complexity of the method is 32
Complex Method,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,check_positionCanBeClosed,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,Cyclomatic complexity of the method is 18
Complex Method,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,EnrichAlerts_withQuoteCreated,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,SetBars,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,barDataSource_OnSymbolRenamed_eachExecutorShouldRenameItsBars_saveStrategyIfNotNull,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,CumulativeAppendOrReplaceForPositionClosedOrOpenNow,Cyclomatic complexity of the method is 11
Complex Method,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildStatsOnBacktestFinished,Cyclomatic complexity of the method is 19
Complex Method,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,updateAtomicStatsForPositionsClosedAtBar,Cyclomatic complexity of the method is 23
Complex Method,Sq1.Core.Streaming,LevelTwoHalfSortedFrozen,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\LevelTwoHalfSortedFrozen.cs,calc_LotsCumulative_allMinMaxProperties,Cyclomatic complexity of the method is 17
Complex Method,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,Quote_fixServerTime_absnoPerSymbol,Cyclomatic complexity of the method is 11
Complex Method,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,PushQuoteReceived,Cyclomatic complexity of the method is 10
Complex Method,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pusherEntryPoint,Cyclomatic complexity of the method is 18
Complex Method,Sq1.Core.Streaming,SolidifierBarsEmulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SolidifierBarsEmulator.cs,Quote_cloneBind_enrichWithIntrabarSerno_updateStreamingBar_createNewBar,Cyclomatic complexity of the method is 11
Complex Method,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,GetBidOrAsk_aligned_forTidalOrCrossMarket_fromQuoteCurrent,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,OnMouseMove,Cyclomatic complexity of the method is 17
Long Parameter List,Sq1.Core,CommissionCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\CommissionCalculator.cs,CalculateCommission,The method has 5 parameters. Parameters: direction' marketLimitStop' orderPrice' shares' bars
Long Parameter List,Sq1.Core.Backtesting,QuoteGenerated,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\QuoteGenerated.cs,QuoteGenerated,The method has 7 parameters. Parameters: serverTime' symbol' absno_perSymbol_perStreamingAdapter' bid' ask' size' tradedAt
Long Parameter List,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,GenerateNewQuote_childrenHelper,The method has 7 parameters. Parameters: intraBarSerno' symbol' serverTime' bidOrAsk' priceAligned' volume' barSimulated
Long Parameter List,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,modelQuote_thatCouldFillAlert,The method has 5 parameters. Parameters: alert' quoteServerTime' bar2simulate' errOut' checkAgainstPrevReceivedQuote
Long Parameter List,Sq1.Core.Broker,CommissionCalculatorZero,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\CommissionCalculatorZero.cs,CalculateCommission,The method has 5 parameters. Parameters: direction' marketLimitStop' orderPrice' shares' bars
Long Parameter List,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,LineDrawModify,The method has 8 parameters. Parameters: id' barStart' priceStart' barEnd' priceEnd' color' width' debugParametersDidntChange
Long Parameter List,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,ChartLabelDrawOnNextLineModify,The method has 5 parameters. Parameters: labelId' labelText' font' colorFore' colorBack
Long Parameter List,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,BarAnnotationDrawModify,The method has 9 parameters. Parameters: barIndex' barAnnotationId' barAnnotationText' font' colorForeground' colorBackground' aboveBar' verticalPadding' reportDidntChangeStatus
Long Parameter List,Sq1.Core.DataTypes,SymbolInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\SymbolInfo.EventGenerator.cs,GetSlippage_signAware_forLimitOrdersOnly,The method has 5 parameters. Parameters: priceAligned' direction' crossOrTidal' slippageIndex' isStreaming
Long Parameter List,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,SetOHLCValigned,The method has 6 parameters. Parameters: open' high' low' close' volume' symbolInfo
Long Parameter List,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,BarStatic_createAppendAttach,The method has 7 parameters. Parameters: dateTime' open' high' low' close' volume' exceptionPullUpstack
Long Parameter List,Sq1.Core.DataTypes,Quote,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Quote.cs,Quote,The method has 8 parameters. Parameters: localTime' serverTime' symbol' absno_perSymbol_perStreamingAdapter' bid' ask' size' tradedAt
Long Parameter List,Sq1.Core.Repositories,RepositoryJsonsInFolderSimple<SYSTEM_PERFORMANCE_RESTORE_ABLE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolderSimple.cs,Initialize,The method has 5 parameters. Parameters: rootPath' subfolder' mask' createNonExistingPath' createNonExistingFile
Long Parameter List,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,Initialize,The method has 6 parameters. Parameters: rootPath' subfolder' checkIfValidAndShouldBeAddedAfterDeserialized' mask' createNonExistingPath' createNonExistingFile
Long Parameter List,Sq1.Core.Repositories,RepositorySerializerMarketInfos,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositorySerializerMarketInfos.cs,Initialize,The method has 6 parameters. Parameters: rootPath' relFname' subfolder' workspaceName' createNonExistingPath' createNonExistingFile
Long Parameter List,Sq1.Core.Execution,AlertList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\AlertList.cs,AddRange,The method has 5 parameters. Parameters: alerts' lockOwner' lockPurpose' waitMillis' duplicateThrowsAnError
Long Parameter List,Sq1.Core.Execution,AlertList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\AlertList.cs,AddNoDupe,The method has 5 parameters. Parameters: alert' lockOwner' lockPurpose' waitMillis' duplicateThrowsAnError
Long Parameter List,Sq1.Core.Execution,AlertList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\AlertList.cs,Remove,The method has 5 parameters. Parameters: alert' owner' lockPurpose' waitMillis' absenseThrowsAnError
Long Parameter List,Sq1.Core.Execution,AlertList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\AlertList.cs,ContainsIdentical,The method has 5 parameters. Parameters: maybeAlready' owner' lockPurpose' waitMillis' onlyUnfilled
Long Parameter List,Sq1.Core.Execution,PositionList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionList.cs,AddOpened_step1of2,The method has 5 parameters. Parameters: positionOpened' owner' lockPurpose' waitMillis' duplicateThrowsAnError
Long Parameter List,Sq1.Core.Execution,PositionList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionList.cs,AddToClosedDictionary_step2of2,The method has 5 parameters. Parameters: positionClosed' lockOwner' lockPurpose' waitMillis' absenseThrowsAnError
Long Parameter List,Sq1.Core.Execution,PositionList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionList.cs,Remove,The method has 5 parameters. Parameters: position' lockOwner' lockPurpose' waitMillis' absenseThrowsAnError
Long Parameter List,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,Position,The method has 5 parameters. Parameters: bars' positionLongShort' strategyID' basisPrice' shares
Long Parameter List,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillEntryWith,The method has 5 parameters. Parameters: entryBar' entryFill_price' entryFill_qty' entryFill_slippage' entryFill_commission
Long Parameter List,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillExitWith,The method has 5 parameters. Parameters: exitBar' exitFill_price' exitFill_qty' exitFill_slippage' exitFill_commission
Long Parameter List,Sq1.Core.Execution,Alert,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Alert.cs,Alert,The method has 7 parameters. Parameters: bar' qty' priceScript_limitOrStop_zeroForMarket' signalName' direction' marketLimitStop' strategy
Long Parameter List,Sq1.Core.Execution,Alert,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Alert.cs,FillPositionAffected_entryOrExit_respectively,The method has 6 parameters. Parameters: barFill' barFillRelno' priceFill' qtyFill' slippageFill' commissionFill
Long Parameter List,Sq1.Core.Execution,ReporterPokeUnit,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ReporterPokeUnit.cs,ReporterPokeUnit,The method has 5 parameters. Parameters: quote' alertsNew' positionsOpened' positionsClosed' positionsOpenNow
Long Parameter List,Sq1.Core.Execution,PositionPrototype,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionPrototype.cs,PositionPrototype,The method has 9 parameters. Parameters: symbol' positionLongShort' priceEntry' takeProfitPositiveOffset' stopLossNegativeOffset' stopLossActivationNegativeOffset' signalEntry' signalStopLoss' signalTakeProfit
Long Parameter List,Sq1.Core.Indicators,IndicatorParameter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorParameter.cs,IndicatorParameter,The method has 5 parameters. Parameters: name' valueCurrent' valueMin' valueMax' valueIncrement
Long Parameter List,Sq1.Core.Serializers,Serializer<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Serializers\Serializer.cs,Initialize,The method has 6 parameters. Parameters: rootPath' relFname' subfolder' workspaceName' createNonExistingPath' createNonExistingFile
Long Parameter List,Sq1.Core.StrategyBase,KPIs,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\KPIs.cs,KPIs,The method has 10 parameters. Parameters: reasonToExist' positionsCountBoth' netProfitForClosedPositionsBoth' positionAvgProfit' winLossRatio' profitFactor' recoveryFactor' maxDrawDown' maxConsecWinners' maxConsecLosers
Long Parameter List,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,ChartConditionalBarAnnotationDrawModify,The method has 9 parameters. Parameters: barIndex' barAnnotationId' barAnnotationText' font' colorForeground' colorBackground' aboveBar' verticalPadding' reportDidntChangeStatus
Long Parameter List,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,ChartConditionalLineDrawModify,The method has 8 parameters. Parameters: id' barStart' priceStart' barEnd' priceEnd' color' width' debugParametersDidntChange
Long Parameter List,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,ChartConditionalChartLabelDrawOnNextLineModify,The method has 5 parameters. Parameters: labelId' labelText' font' colorFore' colorBack
Long Parameter List,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,CallbackAlertFilled_moveAround_invokeScriptNonReenterably,The method has 6 parameters. Parameters: alertFilled' quoteFilledThisAlert_nullForLive' priceFill' qtyFill' slippageFill' commissionFill
Long Parameter List,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The method has 6 parameters. Parameters: alertFilled' quoteFilledThisAlertNullForLive' priceFill' qtyFill' slippageFill' commissionFill
Long Parameter List,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BuyOrShort_alertCreateRegister,The method has 6 parameters. Parameters: entryBar' stopOrLimitPrice' entrySignalName' direction' entryMarketLimitStop' registerInNew
Long Parameter List,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,SellOrCover_alertCreate_dontRegisterInNew,The method has 6 parameters. Parameters: exitBar' position' stopOrLimitPrice' signalName' direction' exitMarketLimitStop
Long Parameter List,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,SellOrCover_alertCreateRegister,The method has 7 parameters. Parameters: exitBar' position' stopOrLimitPrice' signalName' direction' exitMarketLimitStop' registerInNewAfterExec
Long Parameter List,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,ChartConditional_barAnnotationDrawModify,The method has 9 parameters. Parameters: barIndex' barAnnotationId' barAnnotationText' font' colorForeground' colorBackground' aboveBar' verticalPadding' reportDidntChangeStatus
Long Parameter List,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,ChartConditional_lineDrawModify,The method has 8 parameters. Parameters: id' barStart' priceStart' barEnd' priceEnd' color' width' debugParametersDidntChange
Long Parameter List,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,ChartConditional_chartLabelDrawOnNextLineModify,The method has 5 parameters. Parameters: labelId' labelText' font' colorFore' colorBack
Long Parameter List,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,OrderCommissionCalculate,The method has 5 parameters. Parameters: direction' marketLimitStop' price' shares' bars
Long Parameter List,Sq1.Core.StrategyBase,ScriptParameter,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptParameter.cs,ScriptParameter,The method has 7 parameters. Parameters: id' name' current' min' max' increment' reasonToExist
Long Parameter List,Sq1.Core.StrategyBase,AlertFactory,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\AlertFactory.cs,EntryAlert_create,The method has 5 parameters. Parameters: entryBar' stopOrLimitPrice_zeroForMarket' entrySignalName' direction' entryMarketLimitStop
Long Parameter List,Sq1.Core.StrategyBase,AlertFactory,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\AlertFactory.cs,ExitAlert_create,The method has 6 parameters. Parameters: exitBar' position' stopOrLimitPrice_zeroForMarket' signalName' direction' exitMarketLimitStop
Long Parameter List,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,Remove,The method has 5 parameters. Parameters: priceLevel' lockOwner' lockPurpose' waitMillis' absenseThrowsAnError
Long Parameter List,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,Add,The method has 6 parameters. Parameters: priceLevel' totalLots' lockOwner' lockPurpose' waitMillis' duplicateThrowsAnError
Long Parameter List,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,UpdateAtKey,The method has 6 parameters. Parameters: priceLevel' totalLots' lockOwner' lockPurpose' waitMillis' absenceThrowsAnError
Long Parameter List,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,GetAtKey,The method has 5 parameters. Parameters: priceLevel' lockOwner' lockPurpose' waitMillis' absenceThrowsAnError
Long Parameter List,Sq1.Core.Support,ConcurrentList<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentList.cs,RemoveUnique,The method has 5 parameters. Parameters: position' owner' lockPurpose' waitMillis' absenseThrowsAnError
Long Parameter List,Sq1.Core.Support,ConcurrentList<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentList.cs,AppendUnique,The method has 5 parameters. Parameters: alertOrPosition' owner' lockPurpose' waitMillis' duplicateThrowsAnError
Long Parameter List,Sq1.Core.Support,ConcurrentList<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentList.cs,InsertUnique,The method has 6 parameters. Parameters: indexToInsertAt' alertOrPosition' owner' lockPurpose' waitMillis' duplicateThrowsAnError
Long Parameter List,Sq1.Core.Support,ConcurrentWatchdog,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentWatchdog.cs,UnLockFor,The method has 5 parameters. Parameters: lockOwner' releasingAfter' reportViolation' waitMillis' engageWaitingForEva
Long Identifier,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,Initialize,The length of the parameter usedOnlyToPopupExceptions_NPEunsafe is 35.
Long Identifier,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,,The length of the parameter RepositoryDllStreamingAdapters is 30.
Long Identifier,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,,The length of the parameter AssemblerDataSnapshotSerializer is 31.
Long Identifier,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,,The length of the parameter RepositoryJsonChartSettingsTemplates is 36.
Long Identifier,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,,The length of the parameter DateTimeFormatIndicatorHasNoValuesFor is 37.
Long Identifier,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,,The length of the parameter DateTimeFormatToMinutes_noYear is 30.
Long Identifier,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,,The length of the parameter DateTimeFormatToMinutesSeconds_noYear is 37.
Long Identifier,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,,The length of the parameter MainFormClosingIgnoreReLayoutDockedForms is 40.
Long Identifier,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,,The length of the parameter MainForm_dockFormsFullyDeserialized_layoutComplete is 50.
Long Identifier,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,,The length of the parameter ExceptionsDuringApplicationShutdown is 35.
Long Identifier,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,,The length of the parameter ExceptionsDuringApplicationShutdownSerializer is 45.
Long Identifier,Sq1.Core,AssemblerDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\AssemblerDataSnapshot.cs,,The length of the parameter SplitterEventsShouldBeIgnoredSecondsAfterAppLaunch is 50.
Long Identifier,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationRun,The length of the parameter excludeLastBarStreamingWillTriggerIt is 36.
Long Identifier,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,generateQuotes_forBar_push,The length of the parameter pendingsLeftAfterTargetQuoteGenerated is 37.
Long Identifier,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,generateQuotes_forBar_push,The length of the parameter targetQuoteIsntExpectedToFillAnything is 37.
Long Identifier,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,,The length of the parameter ExceptionsHappenedSinceBacktestStarted is 38.
Long Identifier,Sq1.Core.Backtesting,BacktestStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestStreamingConsumer.cs,ConsumeQuoteOfStreamingBar,The length of the parameter pokeUnit_nullUnsafe_dontForgetToDispose is 39.
Long Identifier,Sq1.Core.Backtesting,BacktestStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestStreamingConsumer.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the parameter pokeUnit_nullUnsafe_dontForgetToDispose is 39.
Long Identifier,Sq1.Core.Backtesting,BacktestQuotesGeneratorFourStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorFourStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The length of the parameter priceFromBar_granularStrokes_willBeAligned_upstack is 50.
Long Identifier,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The length of the parameter priceFromBar_granularStrokes_willBeAligned_upstack is 50.
Long Identifier,Sq1.Core.Backtesting,BacktestQuotesGeneratorSixteenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorSixteenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The length of the parameter priceFromBar_granularStrokes_willBeAligned_upstack is 50.
Long Identifier,Sq1.Core.Backtesting,QuoteGenerated,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\QuoteGenerated.cs,QuoteGenerated,The length of the parameter absno_perSymbol_perStreamingAdapter is 35.
Long Identifier,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,BacktestMarketsim,The length of the parameter broker_backtestOrLivesim_passed is 31.
Long Identifier,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Initialize,The length of the parameter fillOutsideQuoteSpreadParanoidCheckThrow is 40.
Long Identifier,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,SimulateFill_allPendingAlerts,The length of the parameter action_afterAlertFilled_beforeMovedAround is 41.
Long Identifier,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,SimulateFill_pendingAlert,The length of the parameter action_afterAlertFilled_beforeMovedAround is 41.
Long Identifier,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,simulatePendingFill_entry,The length of the parameter action_afterAlertFilled_beforeMovedAround is 41.
Long Identifier,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,,The length of the parameter stopLossesActivatedOnPreviousQuotes is 35.
Long Identifier,Sq1.Core.Backtesting,BacktestBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestBroker.cs,AlertCounterparty_annihilate,The length of the parameter alertCounterparty_toAnnihilate is 30.
Long Identifier,Sq1.Core.Backtesting,BacktestBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestBroker.cs,AlertPendings_kill,The length of the parameter alerts2kill_afterScript_onQuote_onBar is 37.
Long Identifier,Sq1.Core.Backtesting,BacktestSpreadModeler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestSpreadModeler.cs,GeneratedQuoteFillBidAsk,The length of the parameter priceAligned_fromBar_forSymmetricFill_atOpenOrClose is 51.
Long Identifier,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,generateClosestQuote_forEachPendingAlert_onOurWayTo,The length of the parameter quotePrev_QuoteGenerated_orQuoteQuikIrretraceableAfterDde is 57.
Long Identifier,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,modelQuote_thatCouldFillAlert,The length of the parameter quotePrev_QuoteGenerated_orQuoteQuik_irretraceableAfterDde is 58.
Long Identifier,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,Generate_quotesFromBar_avoidClearing,The length of the parameter timespanBarBeginningOffsetCumulative is 36.
Long Identifier,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,Generate_quotesFromBar_avoidClearing,The length of the parameter price_withGranularStrokes_requiresAlignement is 44.
Long Identifier,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,Generate_quotesFromBar_avoidClearing,The length of the parameter recalcShrunkenIncrementDueToIntrabarClearing is 44.
Long Identifier,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,Generate_quotesFromBar_avoidClearing,The length of the parameter timespanIncrementInterquoteOld is 30.
Long Identifier,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The length of the parameter priceFromBar_granularStrokes_willBeAligned_upstack is 50.
Long Identifier,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,,The length of the parameter Quotes_generatedForOneBar_amountDependsOnEngineType is 51.
Long Identifier,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,AlertCounterparty_annihilate,The length of the parameter alertCounterparty_toAnnihilate is 30.
Long Identifier,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,AlertCounterparty_annihilate,The length of the parameter orderCounterparty_toAnnihilate is 30.
Long Identifier,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,AlertCounterparty_annihilate,The length of the parameter omsg_counterParty_annihilating is 30.
Long Identifier,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,AlertPendings_kill,The length of the parameter alerts2kill_afterScript_onQuote_onBar is 37.
Long Identifier,Sq1.Core.Broker,BrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerEditor.EventConsumer.cs,,The length of the parameter IgnoreEditorFieldChangesWhileInitializingEditor is 47.
Long Identifier,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,BrokerCallback_orderStateUpdate_mustBeTheSame_dontPostProcess,The length of the parameter newState_isUnderscored_thatOrderNeverGets_asyncCallbacksFromBroker is 66.
Long Identifier,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the parameter ordersClosingPositionLongShort is 30.
Long Identifier,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the parameter ordersOpeningPositionLongShort is 30.
Long Identifier,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_stopLossMove_byKillingAndSubmittingNew,The length of the parameter stateBeforeActiveAssummingSubmitting is 36.
Long Identifier,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_stopLossMove_byKillingAndSubmittingNew,The length of the parameter stateBeforeKilledAssumingActive is 31.
Long Identifier,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_stopLossMove_byKillingAndSubmittingNew,The length of the parameter oppHook_stopLossReceived_WaitingBrokerFill_state is 48.
Long Identifier,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_takeProfitMove_byKillingAndSubmittingNew,The length of the parameter stateBeforeActiveAssummingSubmitting is 36.
Long Identifier,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_takeProfitMove_byKillingAndSubmittingNew,The length of the parameter stateBeforeKilledAssumingActive is 31.
Long Identifier,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_takeProfitMove_byKillingAndSubmittingNew,The length of the parameter oppHook_takeProfitReceived_WaitingForBrokerFill is 47.
Long Identifier,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_alertsPending_kill,The length of the parameter alerts2kill_afterScript_onQuote_onBar is 37.
Long Identifier,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,RaiseAsyncOrderRemoved_executionControlShouldRebuildOLV,The length of the parameter ordersStaleScreenedFromClearForNewThread is 40.
Long Identifier,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,ExecutionTreeControl_OnOrderDoubleClicked_OrderProcessorShouldKillOrder,The length of the parameter orderDeserialized_afterAppRestart is 33.
Long Identifier,Sq1.Core.Broker,OrderLane,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderLane.cs,suggestLane_popupException,The length of the parameter popupKoz_imNotSavingSuggestion_inOrderMessages is 46.
Long Identifier,Sq1.Core.Broker,OrderLane,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderLane.cs,ScanRecent_findAllForAccount,The length of the parameter ignoreExpectingCallbackFromBroker is 33.
Long Identifier,Sq1.Core.Broker,OrderProcessorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessorDataSnapshot.cs,OrdersRemove,The length of the parameter serializeSinceThisIsNotBatchRemove is 34.
Long Identifier,Sq1.Core.Broker,OrderProcessorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessorDataSnapshot.cs,,The length of the parameter OrdersExpectingBrokerUpdateCount is 32.
Long Identifier,Sq1.Core.Broker,OrderPostProcessorEmergency,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergency.cs,CreateEmergencyReplacement_resubmitFor,The length of the parameter rejectedExitOrderOrEmergencyCloseOrder is 38.
Long Identifier,Sq1.Core.Broker,OrderPostProcessorEmergency,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergency.cs,,The length of the parameter interruptedEmergencyLockReasons is 31.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter MultiSplitterRowsPropertiesByPanelName is 38.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter MultiSplitterColumnsPropertiesByPanelName is 41.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter brushGutterBottomNewDateForeground is 34.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter penPositionLineEntryExitConnectedUnknown is 40.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter penPositionLineEntryExitConnectedProfit is 39.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter penPositionLineEntryExitConnectedLoss is 37.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter penAlertPendingProtoTakeProfitEllipse is 37.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter penAlertPendingProtoStopLossEllipse is 35.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter penMousePositionTrackOnGutters is 30.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter brushMousePositionTrackOnGuttersBackground is 42.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter brushLevelTwoLotsColorBackground is 32.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter brushLevelTwoAskColorBackground is 31.
Long Identifier,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,,The length of the parameter brushLevelTwoBidColorBackground is 31.
Long Identifier,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,register,The length of the parameter dontAccessAssemblerWhileInDesignMode is 36.
Long Identifier,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,Initialize,The length of the parameter removeChartShadowFromOldSymbolAndAddToLoadingBars is 49.
Long Identifier,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,,The length of the parameter ColorBackground_inDataSourceTree is 32.
Long Identifier,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,StreamingUnsubscribe,The length of the parameter downstreamMustBeUnSubscribed_reReadingToBe100sure is 49.
Long Identifier,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,StreamingSubscribe,The length of the parameter downstreamBeforeWeStarted_mustBeUnSubscribed is 44.
Long Identifier,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,StreamingSubscribe,The length of the parameter downstreamAfterWeAttemptedToSubscribe_mustBeSubscribed is 54.
Long Identifier,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the parameter pokeUnit_nullUnsafe_dontForgetToDispose is 39.
Long Identifier,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the parameter pokeUnit_nullUnsafe_dontForgetToDispose is 39.
Long Identifier,Sq1.Core.Charting,DictionaryManyToOne<CHART;ALERTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\DictionaryManyToOne.cs,RenameKey,The length of the parameter chartShadowsAffected_alreadySavedStrategyOrCtx_invokedRaiseChartSettingsChangedContainerShouldSerialize is 103.
Long Identifier,Sq1.Core.Charting,DictionaryManyToOne<CHART;ALERTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\DictionaryManyToOne.cs,RenameKey,The length of the parameter chartShadowsOpenForSymbolOfDataSource is 37.
Long Identifier,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,CalculateGlobals_runEachValueAgainstAllParametersFullyChosen_restoreChosenFromDeserialized,The length of the parameter chosenWereFound_runCalculateLocalAndDeltas is 42.
Long Identifier,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,chooseAllOthersFullOnExcept,The length of the parameter varyingThisWhileOthersFullyChosen is 33.
Long Identifier,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,absorbChosenFlagFromDeserialized_restoreAfterAllWereChosenForGlobals,The length of the parameter chosenWereFound_runCalculateLocalAndDeltas is 42.
Long Identifier,Sq1.Core.Correlation,KPIsMomentum,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsMomentum.cs,,The length of the parameter KPIS_MOMENTUM_DISPERSION_GLOBAL is 31.
Long Identifier,Sq1.Core.Correlation,KPIsMomentum,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsMomentum.cs,,The length of the parameter KPIS_MOMENTUM_DISPERSION_LOCAL is 30.
Long Identifier,Sq1.Core.Correlation,KPIsAveraged,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsAveraged.cs,KPIsAveraged,The length of the parameter ignoreBacktestRunsWithZeroPositionCount is 39.
Long Identifier,Sq1.Core.Correlation,OneParameterAllValuesAveragedEventArgs,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\OneParameterAllValuesAveragedEventArgs.cs,OneParameterAllValuesAveragedEventArgs,The length of the parameter parameterChangedOptimizationCriterion is 37.
Long Identifier,Sq1.Core.Correlation,OneParameterAllValuesAveragedEventArgs,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\OneParameterAllValuesAveragedEventArgs.cs,,The length of the parameter parameterChangedOptimizationCriterion is 37.
Long Identifier,Sq1.Core.Correlation,OneParameterOneValue,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\OneParameterOneValue.cs,,The length of the parameter backtestsWithMyValueAndOnlyChosenOtherValues_cached is 51.
Long Identifier,Sq1.Core.Correlation,OneParameterOneValue,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\OneParameterOneValue.cs,,The length of the parameter kPIsMomentumDispersionDelta_cached is 34.
Long Identifier,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,Initialize,The length of the parameter relPathAndNameForCorrelatorResults is 34.
Long Identifier,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,rebuildParametersByName,The length of the parameter iterationCouter_fixBadDeserialization is 37.
Long Identifier,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,OneParameterOneValueUserSelectedChanged_recalculateLocalKPIsMomentums,The length of the parameter oneParameterOneValueUserSelectedChanged is 39.
Long Identifier,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,,The length of the parameter valuesUnchosenByParameter_cached is 32.
Long Identifier,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,,The length of the parameter sequencedBacktestsOriginalMinusParameterValuesUnchosen_cached is 61.
Long Identifier,Sq1.Core.Correlation,CorrelatorOneParameterSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\CorrelatorOneParameterSnapshot.cs,,The length of the parameter MniShowMomentumsAverageChecked is 30.
Long Identifier,Sq1.Core.Correlation,CorrelatorOneParameterSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\CorrelatorOneParameterSnapshot.cs,,The length of the parameter MniShowMomentumsDispersionGlobalChecked is 39.
Long Identifier,Sq1.Core.Correlation,CorrelatorOneParameterSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\CorrelatorOneParameterSnapshot.cs,,The length of the parameter MniShowMomentumsDispersionLocalChecked is 38.
Long Identifier,Sq1.Core.Correlation,CorrelatorOneParameterSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\CorrelatorOneParameterSnapshot.cs,,The length of the parameter MniShowMomentumsDispersionDeltaChecked is 38.
Long Identifier,Sq1.Core.Correlation,CorrelatorOneParameterSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\CorrelatorOneParameterSnapshot.cs,,The length of the parameter MniShowMomentumsVarianceChecked is 31.
Long Identifier,Sq1.Core.DataFeed,DataSourceSymbolRenamedEventArgs,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSourceSymbolRenamedEventArgs.cs,,The length of the parameter CancelRepositoryRename_oneExecutorRefusedToRename_wasStreamingTheseBars is 71.
Long Identifier,Sq1.Core.DataFeed,NamedObjectJsonSerializable,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\NamedObjectJsonSerializable.cs,,The length of the parameter NameImStoredUnder_asUniqueKeyForRename is 38.
Long Identifier,Sq1.Core.DataTypes,SymbolInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\SymbolInfo.EventGenerator.cs,PriceRound_fractionsBeyondDecimals,The length of the parameter decimalPointShifterBeforeRounding is 33.
Long Identifier,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,MergeExpandHLCV_whileCompressingManyBarsToOne,The length of the parameter addVolumeWeAreCompressingStaticBarsToLargerScaleInterval is 56.
Long Identifier,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,ContainsBidAskForQuoteGenerated,The length of the parameter feedingGarbageAndIknowItDontBreak is 33.
Long Identifier,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,BarIndexSinceTodayMarketOpenSuggestForwardFor,The length of the parameter forwardFromMarketOpenToCurrentBar is 33.
Long Identifier,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,GenerateAppend,The length of the parameter closeAwayFromOpenPotentialRange is 31.
Long Identifier,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,GenerateAppend,The length of the parameter shadowsLengthRelativelyToCandleBody is 35.
Long Identifier,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,isMarket_afterClose_serverTime,The length of the parameter GenericOrShortDayCloseTimeServer is 32.
Long Identifier,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,isMarket_BeforeOpen_serverTime,The length of the parameter GenericOrShortDayOpenTimeServer is 31.
Long Identifier,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,IsMarketSuspendedForClearing,The length of the parameter considerSuspendedIfFullBarIsWithinClearingTimespan_NYI is 54.
Long Identifier,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetClearingTimespan_ifMarketSuspended,The length of the parameter considerSuspendedIfFullBarIsWithinClearingTimespan_NYI is 54.
Long Identifier,Sq1.Core.DataTypes,Quote,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Quote.cs,Quote,The length of the parameter absno_perSymbol_perStreamingAdapter is 35.
Long Identifier,Sq1.Core.DataTypes,Quote,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Quote.cs,Bind_streamingBar_unattached,The length of the parameter streamingBar_fromFactory_forUnattachedBars is 42.
Long Identifier,Sq1.Core.DataTypes,Quote,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Quote.cs,,The length of the parameter IntraBarSernoShiftForGeneratedTowardsPendingFill is 48.
Long Identifier,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,ConsumeQuoteBoundUnattached_toFillPending,The length of the parameter quoteBoundUnattached_volatilePointer is 36.
Long Identifier,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,ConsumeQuoteBoundUnattached_toFillPending,The length of the parameter willBeFilled_minusAlreadyScheduled_volatilePointer is 50.
Long Identifier,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,ConsumeQuoteBoundUnattached_toFillPending,The length of the parameter willBeFilled_minusAlreadyScheduled_localScoped is 46.
Long Identifier,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,ConsumeQuoteBoundUnattached_toFillPending,The length of the parameter quoteBoundUnattached_localScoped is 32.
Long Identifier,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,consumeQuoteUnattached_attach_fillPendingAsync,The length of the parameter pokeUnit_nullUnsafe_dontForgetToDispose is 39.
Long Identifier,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,,The length of the parameter threadEntryLockToHaveQuoteSentToThread is 38.
Long Identifier,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,Initialize,The length of the parameter levelTwo_streamingsOwn_notQuikStreamings is 40.
Long Identifier,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,Initialize,The length of the parameter streamingAdapterInitialized_asString is 36.
Long Identifier,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,GenerateForQuote,The length of the parameter levelsToGenerate_fromLivesimSettings is 36.
Long Identifier,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,,The length of the parameter reasonToExist_whoseLevelTwoImFilling is 36.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingConsumer.cs,ConsumeQuoteOfStreamingBar,The length of the parameter pokeUnit_nullUnsafe_dontForgetToDispose is 39.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingConsumer.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the parameter pokeUnit_nullUnsafe_dontForgetToDispose is 39.
Long Identifier,Sq1.Core.Livesim,LivesimStreaming,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreaming.Paranoid.cs,PushSymbolInfo_toLevelTwoGenerator,The length of the parameter levelTwo_livesimsOwn_notQuikStreamings is 38.
Long Identifier,Sq1.Core.Livesim,LivesimStreaming,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreaming.Paranoid.cs,Original_SubstituteDistributor_forSymbolLivesimming_extractChartIntoSeparateDistributor_subscribe,The length of the parameter chartBars_subscribeSelected_cbxChecked_whenLivesimStarts is 56.
Long Identifier,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the parameter originalAdapter_fromDataSource is 30.
Long Identifier,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,CheckSubscribed_LivesimQuoteBarConsumer_toDistributor_replacedForLivesim,The length of the parameter mustBeChartSubscribedToQuotesAndBars is 36.
Long Identifier,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,,The length of the parameter LivesimStreamingIsSleepingNow_ReportersAndExecutionHaveTimeToRebuild is 68.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_PartialFillPercentageFilledMax is 34.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_PartialFillPercentageFilledMin is 34.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_PartialFillHappensOncePerQuoteMax is 37.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_PartialFillHappensOncePerQuoteMin is 37.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_OutOfOrderFillDeliveredXordersLaterMax is 42.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_OutOfOrderFillDeliveredXordersLaterMin is 42.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_OutOfOrderFillHappensOncePerQuoteMax is 40.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_OutOfOrderFillHappensOncePerQuoteMin is 40.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_OrderRejectionHappensOncePerXordersMax is 42.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_OrderRejectionHappensOncePerXordersMin is 42.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMax is 57.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMin is 57.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter cbx_PriceDeviationForMarketOrdersEnabled is 40.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_PriceDeviationForMarketOrdersHappensOncePerXordersMax is 57.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_PriceDeviationForMarketOrdersHappensOncePerXordersMin is 57.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_AdaperDisconnectReconnectsAfterMillisMax is 44.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_AdaperDisconnectReconnectsAfterMillisMin is 44.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_AdaperDisconnectHappensOncePerQuoteMax is 42.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,,The length of the parameter txt_AdaperDisconnectHappensOncePerQuoteMin is 42.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_QuoteGenerationFreezeMillisMax is 34.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_QuoteGenerationFreezeMillisMin is 34.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter cbx_QuoteGenerationFreezeEnabled is 32.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter cbx_DelayBetweenSerialQuotesEnabled is 35.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_DelayBetweenSerialQuotesMax is 31.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_DelayBetweenSerialQuotesMin is 31.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_AdaperDisconnectReconnectsAfterMillisMax is 44.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_AdaperDisconnectReconnectsAfterMillisMin is 44.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_AdaperDisconnectHappensOncePerQuoteMax is 42.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_AdaperDisconnectHappensOncePerQuoteMin is 42.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_OutOfOrderQuoteGenerationDelayMillisMax is 43.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_OutOfOrderQuoteGenerationDelayMillisMin is 43.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter cbx_OutOfOrderQuoteGenerationEnabled is 36.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMax is 51.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMin is 51.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_QuoteGenerationFreezeHappensOncePerQuoteMax is 47.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter txt_QuoteGenerationFreezeHappensOncePerQuoteMin is 47.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,,The length of the parameter cbx_GenerateWideSpreadWithZeroSize is 34.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerDataSnapshot.cs,,The length of the parameter AlertsPending_scheduledForDelayedFill is 37.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter OrderRejectionHappensOncePerXordersMin is 38.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter OrderRejectionHappensOncePerXordersMax is 38.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter PartialFillHappensOncePerQuoteMin is 33.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter PartialFillHappensOncePerQuoteMax is 33.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter PartialFillPercentageFilledMin is 30.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter PartialFillPercentageFilledMax is 30.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter OutOfOrderFillHappensOncePerQuoteMin is 36.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter OutOfOrderFillHappensOncePerQuoteMax is 36.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter OutOfOrderFillDeliveredXordersLaterMin is 38.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter OutOfOrderFillDeliveredXordersLaterMax is 38.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter PriceDeviationForMarketOrdersHappensOncePerXordersMin is 53.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter PriceDeviationForMarketOrdersHappensOncePerXordersMax is 53.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter PriceDeviationForMarketOrdersPercentageOfBestPriceMin is 53.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter PriceDeviationForMarketOrdersPercentageOfBestPriceMax is 53.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter PriceDeviationForMarketOrdersEnabled is 36.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter AdaperDisconnectHappensOncePerQuoteMin is 38.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter AdaperDisconnectHappensOncePerQuoteMax is 38.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter AdaperDisconnectReconnectsAfterMillisMin is 40.
Long Identifier,Sq1.Core.Livesim,LivesimBrokerSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerSettings.cs,,The length of the parameter AdaperDisconnectReconnectsAfterMillisMax is 40.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter DelayBetweenSerialQuotesEnabled is 31.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter OutOfOrderQuoteGenerationHappensOncePerQuoteMin is 47.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter OutOfOrderQuoteGenerationHappensOncePerQuoteMax is 47.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter OutOfOrderQuoteGenerationDelayMillisMin is 39.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter OutOfOrderQuoteGenerationDelayMillisMax is 39.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter OutOfOrderQuoteDeliveryEnabled is 30.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter QuoteGenerationFreezeHappensOncePerQuoteMin is 43.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter QuoteGenerationFreezeHappensOncePerQuoteMax is 43.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter QuoteGenerationFreezeMillisMin is 30.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter QuoteGenerationFreezeMillisMax is 30.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter AdaperDisconnectHappensOncePerQuoteMin is 38.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter AdaperDisconnectHappensOncePerQuoteMax is 38.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter AdaperDisconnectReconnectsAfterMillisMin is 40.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter AdaperDisconnectReconnectsAfterMillisMax is 40.
Long Identifier,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,,The length of the parameter GenerateWideSpreadWithZeroSize is 30.
Long Identifier,Sq1.Core.Repositories,DllScanner<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\DllScanner.ChildrenDebug.cs,Invoke_ChildrenDebug_onExtraDllFoundButNotExplicitlyNeeded,The length of the parameter dllFoundButNotExplicitlyNeeded is 30.
Long Identifier,Sq1.Core.Repositories,DllScanner<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\DllScanner.ChildrenDebug.cs,ScanListPrepared,The length of the parameter imInstantiatingTheParent_itMustBeAbstract is 41.
Long Identifier,Sq1.Core.Repositories,DllScanner<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\DllScanner.ChildrenDebug.cs,ScanListPrepared,The length of the parameter wannaAvoidCloneableInsancesToThrow is 34.
Long Identifier,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,BarsLoadAll_nullUnsafe_threadSafe,The length of the parameter saveBarsIfThereWasFailedCheckOHLCV is 34.
Long Identifier,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The length of the parameter resaveBarsIfThereWasFailedCheckOHLCV is 36.
Long Identifier,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The length of the parameter resaveRequiredByVersionMismatch is 31.
Long Identifier,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The length of the parameter barLastFormedStatic_orCurrentStreaming is 38.
Long Identifier,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The length of the parameter beyoundHeaderAndOneBar_seekToMergeOverwrite is 43.
Long Identifier,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The length of the parameter fileStreamPositionAfterSeekToLastBar is 36.
Long Identifier,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The length of the parameter fileStreamPositionAfterSeekToEnd is 32.
Long Identifier,Sq1.Core.Repositories,RepositoryBarsSameScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsSameScaleInterval.cs,SymbolDataFileAdd,The length of the parameter silentlyOverwriteExisting_dontThrow is 35.
Long Identifier,Sq1.Core.Repositories,RepositoryBarsSameScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsSameScaleInterval.cs,SymbolDataFileCopy,The length of the parameter abspathFromOtherRepositoryBars is 30.
Long Identifier,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,Initialize,The length of the parameter checkIfValidAndShouldBeAddedAfterDeserialized is 45.
Long Identifier,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,,The length of the parameter CheckIfValidAndShouldBeAddedAfterDeserialized is 45.
Long Identifier,Sq1.Core.Repositories,RepositorySerializerSymbolInfos,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositorySerializerSymbolInfos.cs,Deserialize,The length of the parameter dontOverwriteInstancesKozSubscribersWillLooseEventGenerators is 60.
Long Identifier,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,StrategiesScanFoldersAndDlls,The length of the parameter strategiesScanDllsInitDeserializedFromRootPath is 46.
Long Identifier,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,StrategiesScanFoldersAndDlls,The length of the parameter strategiesScanDllsInitDeserializedFromAppStartupPath is 52.
Long Identifier,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,storeInScriptsInDlls,The length of the parameter strategiesInitedFromScannedDll is 30.
Long Identifier,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,,The length of the parameter ScriptRepositoryFoundInFolderDataStrategies is 43.
Long Identifier,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,,The length of the parameter ScriptRepositoryFoundInFolderAppStartup is 39.
Long Identifier,Sq1.Core.Sequencing,SequencerDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SequencerSnapshot.cs,,The length of the parameter ShowOnlyCorrelatorChosenBacktests is 33.
Long Identifier,Sq1.Core.Sequencing,SequencedBacktests,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SequencedBacktests.cs,,The length of the parameter SEQUENCED_BACKTESTS_NO_FNAME__REINITIALIZE_REPOSITORY is 53.
Long Identifier,Sq1.Core.Sequencing,Sequencer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\Sequencer.cs,,The length of the parameter InitializedProperly_executorHasScript_readyToOptimize is 53.
Long Identifier,Sq1.Core.Sequencing,Sequencer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\Sequencer.cs,,The length of the parameter iWasRunForSymbolScaleIntervalAsString is 37.
Long Identifier,Sq1.Core.Sequencing,Sequencer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\Sequencer.cs,,The length of the parameter iWasRunForPositionSizeAsString is 30.
Long Identifier,Sq1.Core.Sequencing,Sequencer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\Sequencer.cs,,The length of the parameter OnScriptRecompiledUpdateHeaderPostponeColumnsRebuild is 52.
Long Identifier,Sq1.Core.Sequencing,ReusableExecutorsPool,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutorsPool.cs,,The length of the parameter executorEthalonWithDetachedBars is 31.
Long Identifier,Sq1.Core.Sequencing,SystemPerformanceRestoreAble,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SystemPerformanceRestoreAble.cs,CreateSubsetAboveWaterline__nullUnsafe,The length of the parameter lastCumulativeMinusWaterline_Clone is 34.
Long Identifier,Sq1.Core.Sequencing,SystemPerformanceRestoreAble,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SystemPerformanceRestoreAble.cs,CheckPositionsCountMustIncreaseOnly,The length of the parameter positionsCountMustIncreaseOnly is 30.
Long Identifier,Sq1.Core.Sequencing,SystemPerformanceRestoreAble,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SystemPerformanceRestoreAble.cs,,The length of the parameter DontForgetEverythingNonIgnoredIsSerialized is 42.
Long Identifier,Sq1.Core.Sequencing,SequencedBacktestsEventArgs,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SequencedBacktestsEventArgs.cs,SequencedBacktestsEventArgs,The length of the parameter systemPerformanceRestoreAbleList is 32.
Long Identifier,Sq1.Core.Execution,AlertList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\AlertList.cs,Substract_returnClone,The length of the parameter alertsPending_alreadyScheduledForDelayedFill is 44.
Long Identifier,Sq1.Core.Execution,ExecutorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ExecutorDataSnapshot.ScriptExecWatchdog.cs,MovePositionOpen_toClosed,The length of the parameter absenseInPositionsOpenNowIsAnError is 34.
Long Identifier,Sq1.Core.Execution,ExecutorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ExecutorDataSnapshot.ScriptExecWatchdog.cs,,The length of the parameter ScriptRunningOnAlertNotSubmitted is 32.
Long Identifier,Sq1.Core.Execution,ExecutorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ExecutorDataSnapshot.ScriptExecWatchdog.cs,,The length of the parameter ScriptRunningOnPositionOpenedPrototypeSlTpPlaced is 48.
Long Identifier,Sq1.Core.Execution,ExecutorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ExecutorDataSnapshot.ScriptExecWatchdog.cs,,The length of the parameter ScriptRunningOnStreamingTriggeringScriptTurnedOn is 48.
Long Identifier,Sq1.Core.Execution,ExecutorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ExecutorDataSnapshot.ScriptExecWatchdog.cs,,The length of the parameter ScriptRunningOnStreamingTriggeringScriptTurnedOff is 49.
Long Identifier,Sq1.Core.Execution,ExecutorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ExecutorDataSnapshot.ScriptExecWatchdog.cs,,The length of the parameter ScriptRunningOnStrategyEmittingOrdersTurnedOn is 45.
Long Identifier,Sq1.Core.Execution,ExecutorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ExecutorDataSnapshot.ScriptExecWatchdog.cs,,The length of the parameter ScriptRunningOnStrategyEmittingOrdersTurnedOff is 46.
Long Identifier,Sq1.Core.Execution,ExecutorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ExecutorDataSnapshot.ScriptExecWatchdog.cs,,The length of the parameter addingSynchronouslyToAlertsMasterPendingNew is 43.
Long Identifier,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillExitWith,The length of the parameter skipWhenRemovingPendingAlertBacktestLeftOpen is 44.
Long Identifier,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,,The length of the parameter QuoteLast_forMarketOrStopLimit_implicitPrice is 44.
Long Identifier,Sq1.Core.Execution,Alert,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Alert.cs,Alert,The length of the parameter priceScript_limitOrStop_zeroForMarket is 37.
Long Identifier,Sq1.Core.Execution,Alert,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Alert.cs,,The length of the parameter FORCEFULLY_CLOSED_BACKTEST_LAST_POSITION is 40.
Long Identifier,Sq1.Core.Execution,Alert,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Alert.cs,,The length of the parameter QuoteCreatedThisAlertServerTime is 31.
Long Identifier,Sq1.Core.Execution,Alert,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Alert.cs,,The length of the parameter QuoteCreatedThisAlert_deserializable is 36.
Long Identifier,Sq1.Core.Execution,Alert,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Alert.cs,,The length of the parameter QuoteLastWhenThisAlertFilled_deserializable is 43.
Long Identifier,Sq1.Core.Execution,Alert,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Alert.cs,,The length of the parameter QuoteFilledThisAlertDuringBacktestNotLive is 41.
Long Identifier,Sq1.Core.Execution,OrderStatesCollections,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\OrderStatesCollections.cs,,The length of the parameter AllowedForSubmissionToBrokerAdapter is 35.
Long Identifier,Sq1.Core.Execution,PositionPrototype,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionPrototype.cs,PositionPrototype,The length of the parameter stopLossActivationNegativeOffset is 32.
Long Identifier,Sq1.Core.Execution,PositionPrototype,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionPrototype.cs,SetNewStopLossOffsets,The length of the parameter stopLossActivationNegativeOffset is 32.
Long Identifier,Sq1.Core.Execution,PositionPrototype,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionPrototype.cs,checkSLOffsets_throwBeforeAbsorbing,The length of the parameter stopLossActivationNegativeOffset is 32.
Long Identifier,Sq1.Core.Execution,PositionPrototype,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionPrototype.cs,,The length of the parameter StopLossAlert_forMoveAndAnnihilation is 36.
Long Identifier,Sq1.Core.Execution,PositionPrototype,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionPrototype.cs,,The length of the parameter TakeProfitAlert_forMoveAndAnnihilation is 38.
Long Identifier,Sq1.Core.Execution,Order,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Order.cs,Order,The length of the parameter forceOverwriteAlertOrderFollowedToNewlyCreatedOrder is 51.
Long Identifier,Sq1.Core.Execution,Order,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Order.cs,DerivedOrdersAdd,The length of the parameter killerReplacementPositionclose is 30.
Long Identifier,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,FormatValueForBar,The length of the parameter ownValuesOrOverridenBandSeries is 30.
Long Identifier,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,,The length of the parameter parametersByName_ReflectionForced is 33.
Long Identifier,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,,The length of the parameter parametersAsStringShort_cached is 30.
Long Identifier,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,,The length of the parameter DotsDrawnForCurrentSlidingWindow is 32.
Long Identifier,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,checkPopupOnResetAndSync,The length of the parameter unsyncHappenedNotAsResultOfAbort is 32.
Long Identifier,Sq1.Core.Indicators,IndicatorParameter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorParameter.cs,AbsorbCurrentFixBoundariesIfChanged,The length of the parameter ctxParamToAbsorbCurrentAndFixBoundaries is 39.
Long Identifier,Sq1.Core.Serializers,SerializerLogrotate<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Serializers\SerializerLogrotate.cs,,The length of the parameter itemsBufferedWhileSerializingLock is 33.
Long Identifier,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,AbsorbFrom_duplicatedInSliders_or_importedFromSequencer,The length of the parameter absorbScriptAndIndicatorParams is 30.
Long Identifier,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,replaceWithClonesScriptAndIndicatorParameters,The length of the parameter scriptParametersByIdClonedReset is 31.
Long Identifier,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,replaceWithClonesScriptAndIndicatorParameters,The length of the parameter indicatorParametersByNameClonedReset is 36.
Long Identifier,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,AbsorbOnlyScriptAndIndicatorParameterCurrentValues_fromSequencer,The length of the parameter sperfParametersToAbsorbIntoDefault is 34.
Long Identifier,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,ScriptParametersReflectedAbsorbFromCurrentContextReplace,The length of the parameter scriptParametersById_ReflectedCached is 36.
Long Identifier,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,PushIndicatorParamsCurrentValuesIntoReflectedIndicators,The length of the parameter indicatorParametersByIndicator_ReflectedCached is 46.
Long Identifier,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,,The length of the parameter ReporterShortNamesUserInvokedJSONcheck is 38.
Long Identifier,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,,The length of the parameter BacktestOnTriggeringYesWhenNotSubscribed is 40.
Long Identifier,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,,The length of the parameter NoDecimalRoundingForLimitStopPrice is 34.
Long Identifier,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,,The length of the parameter FillOutsideQuoteSpreadParanoidCheckThrow is 40.
Long Identifier,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,,The length of the parameter MinimizeGuiExtensiveExecutionAllReportersForTheDurationOfLiveSim is 64.
Long Identifier,Sq1.Core.StrategyBase,KPIs,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\KPIs.cs,KPIs,The length of the parameter netProfitForClosedPositionsBoth is 31.
Long Identifier,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,AnnihilateCounterparty_forClosedPosition,The length of the parameter killedForBacktest_emittedForLive is 32.
Long Identifier,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newStopLossOffset_doesntMakeSense,The length of the parameter slDirectionAssumedOrActualIfFilled is 34.
Long Identifier,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,PositionClose_immediately,The length of the parameter annotateAtBars_forEachClosedPosition is 36.
Long Identifier,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,Initialize,The length of the parameter saveStrategy_falseForSequencer is 30.
Long Identifier,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,IndicatorParamsAbsorbMergeFromReflected_InitializeIndicatorsWithHostPanel,The length of the parameter saveStrategy_falseForSequencer is 30.
Long Identifier,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,PushChangedScriptParameterValueToScript,The length of the parameter indicatorParameterChangedDueToUserClickInSliders is 48.
Long Identifier,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,,The length of the parameter indicatorParametersByIndicator_ReflectionForced is 47.
Long Identifier,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,,The length of the parameter indicatorParametersByIndicator_ReflectedCached is 46.
Long Identifier,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,,The length of the parameter indicatorParameters_ReflectionForced is 36.
Long Identifier,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,,The length of the parameter indicatorsParameters_ReflectedCached is 36.
Long Identifier,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,,The length of the parameter indicatorsByName_ReflectionForced is 33.
Long Identifier,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,,The length of the parameter indicatorsByName_ReflectedCached is 32.
Long Identifier,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,,The length of the parameter scriptParametersById_ReflectionForced is 37.
Long Identifier,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,,The length of the parameter scriptParametersById_ReflectedCached is 36.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktestContext_initialize,The length of the parameter indicatorsHaveNoErrorsCanStartBacktesting is 41.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Livesim_compileRun_trampoline,The length of the parameter executeAfterSimulationEvenIfIFailed is 35.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,The length of the parameter executeAfterSimulationEvenIfIFailed is 35.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,The length of the parameter ThreadPoolAvailablePercentageLimit is 34.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,CallbackAlertFilled_moveAround_invokeScriptNonReenterably,The length of the parameter quoteFilledThisAlert_nullForLive is 32.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the parameter quoteFilledThisAlertNullForLive is 31.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the parameter positionOpenedAfterAlertFilled is 30.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the parameter positionClosedAfterAlertFilled is 30.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the parameter positionsOpenedAfterAlertFilled is 31.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the parameter positionsClosedAfterAlertFilled is 31.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,closePosition_withAlertClonedFromEntry_backtestEnded,The length of the parameter absenseInPositionsOpenNowIsAnError is 34.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,iShould_returnWithoutScriptInvocation_untilMarketOpen_orClearingFinished,The length of the parameter priorTo_marketClose_clearing_sec is 32.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The length of the parameter quoteBoundAttached_toEnrichAlerts is 33.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The length of the parameter alertsPending_atCurrentBar_safeCopy is 35.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The length of the parameter alertsDoomed_afterExec_safeCopy is 31.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The length of the parameter noNeedToUnpauseLivesim_kozItsNeverPaused is 40.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,CloseAllOpenPositions_killAllPendingAlerts,The length of the parameter alertsSubmittedToKill_forAllOpenPositions is 41.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,PositionClose_immediately,The length of the parameter annotateAtBars_forEachClosedPosition is 36.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Initialize,The length of the parameter saveStrategy_falseForSequencer is 30.
Long Identifier,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,RemovePendingExitAlerts_closePositionsBacktestLeftHanging,The length of the parameter absenseInPositionsOpenNowIsAnError is 34.
Long Identifier,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,checkThrowContextNameShouldNotExist,The length of the parameter scriptContextNameShouldNotExist is 31.
Long Identifier,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ScriptAndIndicatorParametersReflected_absorbMergeFromCurrentContext_saveStrategy,The length of the parameter saveStrategyFalseForDisposedExecutorsInSequencer is 48.
Long Identifier,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,PushChangedScriptParameterValueToScript,The length of the parameter indicatorParameterChangedDueToUserClickInSliders is 48.
Long Identifier,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,,The length of the parameter ExceptionsLimitToAbortBacktest is 30.
Long Identifier,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,,The length of the parameter PREFIX_FOR_UNSAVED_STRATEGY_SOURCE_CODE is 39.
Long Identifier,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,CumulativeAppendOrReplaceForPositionClosedOrOpenNow,The length of the parameter throwIfWasntAddedBeforeReplaceMode is 34.
Long Identifier,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildIncrementalOpenPositionsUpdatedDueToStreamingNewQuote_step2of3,The length of the parameter byEntryBarFilledSafeCopySafeCopy is 32.
Long Identifier,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildStatsOnBacktestFinished,The length of the parameter positionsOpenedAbsorbedToInternal is 33.
Long Identifier,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildStatsOnBacktestFinished,The length of the parameter positionsClosedAbsorbedToInternal is 33.
Long Identifier,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,,The length of the parameter NetProfitPctForClosedPositionsBoth is 34.
Long Identifier,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,,The length of the parameter NetProfitForClosedPositionsBoth is 31.
Long Identifier,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,,The length of the parameter BarsHeldTotalForClosedPositionsBoth is 35.
Long Identifier,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,,The length of the parameter NetProfitPctForClosedPositionsLong is 34.
Long Identifier,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,,The length of the parameter BarsHeldTotalForClosedPositionsWinners is 38.
Long Identifier,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,,The length of the parameter NetProfitPctForClosedPositionsLosers is 36.
Long Identifier,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,,The length of the parameter BarsHeldTotalForClosedPositionsLosers is 37.
Long Identifier,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,,The length of the parameter positionsCountPrevStep_MustIncreaseOnly is 39.
Long Identifier,Sq1.Core.StrategyBase,ScriptCompiler,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptCompiler.cs,,The length of the parameter avoidingMessIfInstantiatedInAssembler is 37.
Long Identifier,Sq1.Core.StrategyBase,AlertFactory,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\AlertFactory.cs,EntryAlert_create,The length of the parameter stopOrLimitPrice_zeroForMarket is 30.
Long Identifier,Sq1.Core.StrategyBase,AlertFactory,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\AlertFactory.cs,ExitAlert_create,The length of the parameter stopOrLimitPrice_zeroForMarket is 30.
Long Identifier,Sq1.Core.Streaming,BinderAttacher_perStreamingChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\BinderAttacher_perStreamingChart.cs,BarAttach,The length of the parameter barStreamingUnattached_clonedFromFactory is 40.
Long Identifier,Sq1.Core.Streaming,BinderAttacher_perStreamingChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\BinderAttacher_perStreamingChart.cs,QuoteBoundToStreamingBar__streamingBarAttach_toConsumerBars,The length of the parameter quoteClone_sernoEnriched_unbound is 32.
Long Identifier,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,ConsumerQuoteSubscribe_solidifiers,The length of the parameter quotePumpSeparatePushingThreadEnabled is 37.
Long Identifier,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,ConsumerQuoteSubscribe,The length of the parameter quotePumpSeparatePushingThreadEnabled is 37.
Long Identifier,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,ConsumerBarSubscribe,The length of the parameter barPumpSeparatePushingThreadEnabled is 35.
Long Identifier,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,ConsumerBarSubscribe_solidifiers,The length of the parameter quotePumpSeparatePushingThreadEnabled is 37.
Long Identifier,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,PumpUnpause_forSymbolLivesimming,The length of the parameter reasonForStoppingReplacedDistributor is 36.
Long Identifier,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,PumpStop_forSymbolLivesimming,The length of the parameter reasonForStoppingReplacedDistributor is 36.
Long Identifier,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,,The length of the parameter AllDistributorsEverCreated_total is 32.
Long Identifier,Sq1.Core.Streaming,DistributorCharts,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\DistributorCharts.cs,ConsumerQuoteSubscribe,The length of the parameter quotePumpSeparatePushingThreadEnabled is 37.
Long Identifier,Sq1.Core.Streaming,DistributorCharts,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\DistributorCharts.cs,ConsumerBarSubscribe,The length of the parameter quotePumpSeparatePushingThreadEnabled is 37.
Long Identifier,Sq1.Core.Streaming,DistributorSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\DistributorSolidifier.cs,ConsumerBarSubscribe_solidifiers,The length of the parameter quotePumpSeparatePushingThreadEnabled is 37.
Long Identifier,Sq1.Core.Streaming,DistributorSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\DistributorSolidifier.cs,ConsumerQuoteSubscribe_solidifiers,The length of the parameter quotePumpSeparatePushingThreadEnabled is 37.
Long Identifier,Sq1.Core.Streaming,LevelTwo,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\LevelTwo.cs,,The length of the parameter QuoteCurrent_unbound_notCloned_validAbsno_invalidIntrabarSerno is 62.
Long Identifier,Sq1.Core.Streaming,LevelTwoHalfSortedFrozen,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\LevelTwoHalfSortedFrozen.cs,calc_LotsCumulative_allMinMaxProperties,The length of the parameter sortedFromSpreadToTheEdgeOfMarket_toCalculateLotsCumulative is 59.
Long Identifier,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the parameter nonDefaultLivesimWasntSubscribed is 32.
Long Identifier,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the parameter willPushUsingPumpInSeparateThread is 33.
Long Identifier,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming_restoreOriginalDistributor,The length of the parameter reasonForStoppingReplacedDistributor is 36.
Long Identifier,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,Quote_fixServerTime_absnoPerSymbol,The length of the parameter serverTime_reconstructed_fromLastQuote is 38.
Long Identifier,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,Quote_fixServerTime_absnoPerSymbol,The length of the parameter diffMillis_willBeNegative_forSecondQuote_duringSameSecond is 57.
Long Identifier,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,ChartStreamingConsumer_Subscribe,The length of the parameter iWantChartToConsumeQuotesInSeparateThreadToLetStreamingGoWithoutWaitingForStrategyToFinish is 90.
Long Identifier,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,,The length of the parameter dataDistributorCharts_preLivesimForSymbolLivesimming is 52.
Long Identifier,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,,The length of the parameter dataDistributorSolidifier_preLivesimForSymbolLivesimming is 56.
Long Identifier,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,,The length of the parameter livesimStreaming_forWhomDistributors_areReplaced is 48.
Long Identifier,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pusherEntryPoint,The length of the parameter gotQuoteTrue_pausingUnpausingAbortingTrue_heartBeatExpiredFalse is 63.
Long Identifier,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,Push_straightOrBuffered,The length of the parameter quote_singleInstance_tillStreamBindsAll is 39.
Long Identifier,Sq1.Core.Streaming,QueuePerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\QueuePerSymbol.cs,Push_straightOrBuffered,The length of the parameter quote_singleInstance_tillStreamBindsAll is 39.
Long Identifier,Sq1.Core.Streaming,QueuePerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\QueuePerSymbol.cs,FlushQuotesQueued,The length of the parameter quoteDequeued_singleInstance_tillStreamBindsAll is 47.
Long Identifier,Sq1.Core.Streaming,QueuePerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\QueuePerSymbol.cs,,The length of the parameter UpdateThreadNameAfterMaxConsumersSubscribed is 43.
Long Identifier,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the parameter quoteClone_sernoEnriched_withStreamingBarUnattachedToParents is 60.
Long Identifier,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,QuoteCloned_bindAttach,The length of the parameter quoteCloned_intrabarSernoEnriched_unbound is 41.
Long Identifier,Sq1.Core.Streaming,SymbolScaleStreamSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamSolidifier.cs,Bar_lastStaticFormedAttached_consume,The length of the parameter quoteClone_sernoEnriched_withStreamingBarUnattachedToParents is 60.
Long Identifier,Sq1.Core.Streaming,SymbolScaleStreamSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamSolidifier.cs,QuoteCloned_bindAttach,The length of the parameter quoteCloned_intrabarSernoEnriched_unbound is 41.
Long Identifier,Sq1.Core.Streaming,StreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingEditor.EventConsumer.cs,,The length of the parameter IgnoreEditorFieldChangesWhileInitializingEditor is 47.
Long Identifier,Sq1.Core.Streaming,StreamingConsumerSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingConsumerSolidifier.cs,Initialize,The length of the parameter barStreamingDumpIntervalSeconds is 31.
Long Identifier,Sq1.Core.Streaming,StreamingConsumerSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingConsumerSolidifier.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the parameter barStaticLast_justFormed_byEarlyBinder is 38.
Long Identifier,Sq1.Core.Streaming,StreamingConsumerSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingConsumerSolidifier.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the parameter quoteForAlertsCreated_WILL_BE_NULL is 34.
Long Identifier,Sq1.Core.Streaming,StreamingConsumerSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingConsumerSolidifier.cs,barsSaveToFile_replaceStreamingBar,The length of the parameter ignoreInterval_forceReplaceBar_immediately is 42.
Long Identifier,Sq1.Core.Streaming,StreamingConsumerSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingConsumerSolidifier.cs,,The length of the parameter barStreamingDumpIntervalSeconds is 31.
Long Identifier,Sq1.Core.Streaming,StreamingConsumerSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingConsumerSolidifier.cs,,The length of the parameter barStreamingLastDumpedLocalAsString is 35.
Long Identifier,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,SymbolChannel,The length of the parameter quotePumpSeparatePushingThreadEnabled is 37.
Long Identifier,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,PushQuote_toStreams,The length of the parameter quoteDequeued_singleInstance_tillStreamBindsAll is 47.
Long Identifier,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,PushQuote_viaPumpOrQueue,The length of the parameter quoteDequeued_singleInstance_tillStreamBindsAll is 47.
Long Identifier,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,,The length of the parameter pump_separatePushingThread_enabled is 34.
Long Identifier,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,,The length of the parameter backtestersRunning_causingPumpingPause is 38.
Long Identifier,Sq1.Core.Streaming,SymbolScaleStream<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStream.EventGenerator.cs,Bar_lastStaticFormedAttached_consume,The length of the parameter quoteClone_sernoEnriched_withStreamingBarUnattachedToParents is 60.
Long Identifier,Sq1.Core.Streaming,SymbolScaleStream<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStream.EventGenerator.cs,QuoteCloned_bindAttach,The length of the parameter quoteCloned_intrabarSernoEnriched_unbound is 41.
Long Identifier,Sq1.Core.Streaming,SymbolScaleStream<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStream.EventGenerator.cs,,The length of the parameter ReasonIwasCreated_propagatedFromDistributor is 43.
Long Identifier,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,Initialize_levelTwo_lastPrevQuotes_forSymbol,The length of the parameter streamingAdapterInitialized_asString is 36.
Long Identifier,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,GetQuoteCurrent_forSymbol_nullUnsafe,The length of the parameter weirdAttachedToOriginalBarsInsteadOfRegeneratedGrowingCopy is 58.
Long Identifier,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,GetQuotePrev_forSymbol_nullUnsafe,The length of the parameter weirdAttachedToOriginalBarsInsteadOfRegeneratedGrowingCopy is 58.
Long Identifier,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,,The length of the parameter level2_lastPrevQuotesUnbound_bySymbol is 37.
Long Identifier,Sq1.Core.Support,ConcurrentWatchdog,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentWatchdog.cs,,The length of the parameter sameThreadLocksRequestedStackDepth is 34.
Long Identifier,Sq1.Core.Support,FontCache,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\FontCache.cs,,The length of the parameter fontsByStyle_dontDisposeReusableGDI is 35.
Long Identifier,Sq1.Core.Support,TimeredBlockTask,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\TimeredBlockTask.cs,TimeredBlockTask,The length of the parameter invokedInGuiThread_afterTimerExpired_passed is 43.
Long Identifier,Sq1.Core.Support,TimeredBlockTask,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\TimeredBlockTask.cs,switchToGui_executeCodeLinkingTwoUnrelatedDlls,The length of the parameter refreshDataSourceTree_invokedInGuiThread is 40.
Long Identifier,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,,The length of the parameter resizingTopCorner_invertMouseDeltaY is 35.
Long Identifier,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,,The length of the parameter resizingLeftCorner_invertMouseDeltaX is 36.
Long Statement,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,Initialize,The length of the statement  "					+ " to use Assembler.PopupException()' but no guarantee that OrderProcessor and DataSourceRepository will work properly"; " is 121.
Long Statement,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,Initialize,The length of the statement  "			//v1 this.RepositoryJsonDataSource	.DataSourcesDeserialize(this.MarketInfoRepository' this.OrderProcessor' this.StatusReporter); " is 128.
Long Statement,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,Initialize,The length of the statement  "			this.RepositoryJsonDataSources		.Initialize(this.AppDataPath' "DataSources"' this.RepositoryMarketInfos' this.OrderProcessor); " is 126.
Long Statement,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,Initialize,The length of the statement  "			//createdNewFile = this.RepositorySerializerChartSettingsTemplates.Initialize(this.AppDataPath' "MarketInfo.json"' ""' null); " is 125.
Long Statement,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,Initialize,The length of the statement  "				string msg = "NEVER_HAPPENED_UNDER_WINDOWS PLATFORM_DOESNT_SUPPORT_Process.GetCurrentProcess().StartTime_AS_DESCRIBED_IN_MSDN__LAUNCHING_STOPWATCH"; " is 148.
Long Statement,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,PopupException,The length of the statement  "//				//return;		// FIXED_IN_MAIN_FORM tmp hack for SHARP_DEVELOP_THROWS_WHEN_TRYING_TO_POPUP_EXCEPTION_FROM_QUIK_TERMINAL_MOCK_THREAD " is 134.
Long Statement,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,PopupException,The length of the statement  "				// this is gonna throw from a non-GUI thread' right?!... (moved to MainForm.PopupException() with base.BeginInvoke() as first step) " is 131.
Long Statement,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,exceptionsDuringApplicationShutdown_InsertAndSerialize,The length of the statement  "			//COLLECTION_MODIFIED_EXCEPTION__LAZY_TO_LOCK_MOVED_TO_PopupNotepad this.ExceptionsDuringApplicationShutdownSerializer.Serialize(); " is 131.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationRun,The length of the statement  "				// UNCOMMENTED_FOR_SHARP_DEVELOP_TO_NOT_FREAK_OUT_FULLY_EXPAND_LOCAL_VARIABLES_AT_BREAKPOINTS_RANDOMLY_CONTINUE_ETC IRRELATED_TO_EXCEPTIONS_THERE_WAS_NONE " is 154.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationRun,The length of the statement  "			// see Indicator.DrawValue() "DONT_WANT_TO_HACK_WILL_DRAW_LAST_STATIC_BARS_INDICATOR_VALUE_AFTER_YOU_TURN_ON_STREAMING_SO_I_WILL_HAVE_NEW_QUOTE_PROVING_THE_LAST_BAR_IS_FORMED" " is 175.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,AbortRunningBacktest_waitAborted,The length of the statement  "			string msig = " whyAborted=[" + whyAborted + "]: Strategy[" + this.Executor.Strategy + "] on Bars[" + this.Executor.Bars + "]"; " is 127.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,AbortBacktestIfExceptionsLimitReached,The length of the statement  "			this.AbortRunningBacktest_waitAborted("AbortBacktestIfExceptionsLimitReached[" + this.Executor.Strategy.ExceptionsLimitToAbortBacktest + "]"); " is 142.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,closePositionsLeftOpenAfterBacktest,The length of the statement  "			List<Alert> alertsSafe = this.Executor.ExecutionDataSnapshot.AlertsPending.SafeCopy(this' "closePositionsLeftOpenAfterBacktest(WAIT)"); " is 135.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,closePositionsLeftOpenAfterBacktest,The length of the statement  "					//	string msg = "checkPositionCanBeClosed() will later interrupt the flow saying {Sorry I don't serve alerts.IsExitAlert=true}"; " is 128.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,closePositionsLeftOpenAfterBacktest,The length of the statement  "					string msg = "NOT_AN_ERROR BACKTEST_POSITION_FINALIZER: check innerException: most likely you got POSITION_ALREADY_CLOSED on counterparty alert's force-close?"; " is 160.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,closePositionsLeftOpenAfterBacktest,The length of the statement  "			List<Position> positionsSafe = this.Executor.ExecutionDataSnapshot.PositionsOpenNow.SafeCopy(this' "closePositionsLeftOpenAfterBacktest(WAIT)"); " is 144.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,closePositionsLeftOpenAfterBacktest,The length of the statement  "				//v2 WONT_CLOSE_POSITION_EARLIER_THAN_OPENED Alert exitAlert = this.Executor.Strategy.Script.ExitAtMarket(this.Executor.Bars.BarStaticLast_nullUnsafe' positionOpen' "BACKTEST_ENDED_EXIT_FORCED"); " is 195.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,closePositionsLeftOpenAfterBacktest,The length of the statement  "				Alert exitAlert = this.Executor.Strategy.Script.ExitAtMarket(this.Executor.Bars.BarStreaming_nullUnsafe' positionOpen' "BACKTEST_ENDED_EXIT_FORCED"); " is 149.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,closePositionsLeftOpenAfterBacktest,The length of the statement  "				// BETTER WOULD BE TO KILL PREVIOUS PENDING ALERT FROM A CALLBACK AFTER MARKET EXIT ORDER GETS FILLED' IT'S UNRELIABLE EXIT IF WE KILL IT HERE " is 142.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,closePositionsLeftOpenAfterBacktest,The length of the statement  "				//List<Alert> alertsSubmittedToKill = this.Executor.Strategy.Script.PositionKillExitAlert(positionOpen' "BACKTEST_ENDED_EXIT_FORCED"); " is 134.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				//COPIED_UPSTACK_FOR_BLOCKING_MOUSEMOVE_AFTER_BACKTEST_NOW_CLICK__BUT_ALSO_STAYS_HERE_FOR_SLIDER_CHANGE_NON_INVALIDATION " is 120.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				if (this.Executor.ChartShadow != null) this.Executor.ChartShadow.PaintAllowedDuringLivesimOrAfterBacktestFinished = false; " is 122.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				// kept it on the surface and didn't pass ScriptContextCurrent.SpreadModelerPercent to "new BacktestDataSource()" because later BacktestDataSource: " is 147.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				// 3) will poke StreamingAdapter-derived implementations 12 times a bar with platform-generated quotes for backtests with regulated poke delay " is 142.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				// v1 this.BacktestDataSource.BacktestStreamingAdapter.InitializeSpreadModelerPercentage(this.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent); " is 155.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				//ALREADY_RAISED_INSIDE_CONTEXT_INITIALIZE() this.Executor.EventGenerator.RaiseOnBacktesterSimulationContextInitialized_step2of4(); " is 131.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				if (this.BacktestAbortedMre.WaitOne(0) == true) Thread.Sleep(10);	// let the Wait() in GUI thread to feel SIGNALLED' before I reset again to NON_SIGNALLED " is 154.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPostBarsRestore_overrideable,The length of the statement  "				string msg = "NOW_INSERT_BREAKPOINT_TO_this.channel.PushQuoteToConsumers(quoteDequeued) CATCHING_BACKTEST_END_UNPAUSE_PUMP"; " is 124.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPostBarsRestore_overrideable,The length of the statement  "				//	streamingOriginal.AbsorbStreamingBarFactoryFromBacktestComplete(streamingBacktest' this.BarsOriginal.Symbol' this.BarsOriginal.ScaleInterval); " is 145.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPostBarsRestore_overrideable,The length of the statement  "				this.BarsOriginal = null;	// I_RESTORED_CONTEXT__END_OF_BACKTEST_ORIGINAL_BECAME_NULL WILL_AFFECT_ChartForm.TsiProgressBarETA " is 125.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,generateQuotes_forBar_push,The length of the statement  "				string msg = "IRRELEVANT_PARTIAL_VALUES_WERE_DEPRECATED it's ok for Bars.LastBar from Repository to have no PartialValues;" " is 123.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,generateQuotes_forBar_push,The length of the statement  "				//		//string msg = "IRRELEVANT since GenerateQuotesFromBar() has been upgraded to return SortedList<int' QuoteGenerated> instead of randomized List<QuoteGenerated>"; " is 165.
Long Statement,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,generateQuotes_forBar_push,The length of the statement  "						string msg = "SEEMS_ONLY_STOP_ALERTS_FAR_BEYOND_TARGET_ARE_ON_THE_WAY; pendingsToFillInitially[" + pendingsToFillInitially + "]" " is 128.
Long Statement,Sq1.Core.Backtesting,BacktestStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestStreamingConsumer.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "				int pendingFilled	= this.backtester.Executor.DataSource_fromBars.BrokerAsBacktest_nullUnsafe.BacktestMarketsim.SimulateFill_allPendingAlerts(quoteClone_boundAttached' null); " is 173.
Long Statement,Sq1.Core.Backtesting,BacktestStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestStreamingConsumer.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "			ReporterPokeUnit pokeUnit_nullUnsafe_dontForgetToDispose = this.backtester.Executor.InvokeScript_onNewBar_onNewQuote(quoteClone_boundAttached); " is 143.
Long Statement,Sq1.Core.Backtesting,BacktestStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestStreamingConsumer.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "			//v3 ReporterPokeUnit pokeUnit_nullUnsafe_dontForgetToDispose = this.backtester.Executor.ConsumeQuoteOfStreamingBar(quote); " is 123.
Long Statement,Sq1.Core.Backtesting,BacktestStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestStreamingConsumer.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "			string msig = " //BacktestQuoteBarConsumer.ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended"; " is 122.
Long Statement,Sq1.Core.Backtesting,BacktestStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestStreamingConsumer.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "			//v1 this.backtester.Executor.Strategy.Script.OnBarStaticLastFormedWhileStreamingBarWithOneQuoteAlreadyAppendedCallback(barLastFormed); " is 135.
Long Statement,Sq1.Core.Backtesting,BacktestStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestStreamingConsumer.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "			ReporterPokeUnit pokeUnit_nullUnsafe_dontForgetToDispose = this.backtester.Executor.InvokeScript_onNewBar_onNewQuote(quote' false); " is 131.
Long Statement,Sq1.Core.Backtesting,BacktestStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestStreamingConsumer.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "			//v3 ReporterPokeUnit pokeUnit_nullUnsafe_dontForgetToDispose = this.backtester.Executor.ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended(barLastFormed' quote); " is 189.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGeneratorFourStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorFourStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The length of the statement  "					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS " is 126.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGeneratorFourStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorFourStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The length of the statement  "					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS " is 126.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The length of the statement  "					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS " is 126.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The length of the statement  "					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS " is 126.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGeneratorSixteenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorSixteenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The length of the statement  "				// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS " is 126.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGeneratorSixteenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorSixteenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The length of the statement  "				// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS " is 126.
Long Statement,Sq1.Core.Backtesting,QuoteGenerated,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\QuoteGenerated.cs,DeriveIdenticalButFresh,The length of the statement  "			//identicalButFresh.ParentBarSimulated = this.ParentBarSimulated;	// was there before I noticed "injected quotes don't seem to have ParentBarSimulated" " is 151.
Long Statement,Sq1.Core.Backtesting,QuoteGenerated,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\QuoteGenerated.cs,DeriveIdenticalButFresh,The length of the statement  "			//identicalButFresh.ParentBarStreaming	= this.ParentBarStreaming;	// this may fix it injected quotes don't seem to have ParentBarSimulated " is 138.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_entryAlertWillBeFilled_byQuote,The length of the statement  "					Sq1.Core.Streaming.StreamingDataSnapshot snap = this.scriptExecutor.DataSource_fromBars.StreamingAdapter.StreamingDataSnapshot; " is 127.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_entryAlertWillBeFilled_byQuote,The length of the statement  "					entryPriceOut = snap.GetBidOrAsk_forDirection_fromQuoteCurrent(entryAlert.Symbol' entryAlert.PositionLongShortFromDirection); " is 125.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_entryAlertWillBeFilled_byQuote,The length of the statement  "							throw new Exception("Check_entryAlertWillBeFilled_byQuote() NYI direction[" + entryAlert.Direction + "] for [" + entryAlert + "]"); " is 131.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_entryAlertWillBeFilled_byQuote,The length of the statement  "			// v1 for Stop/Limit you already hit "return false" above; market should get whatever crazy bid/ask and get the fill at first attempt now " is 137.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_entryAlertWillBeFilled_byQuote,The length of the statement  "			//if (entryAlert.Bars.BarStreaming.ContainsPrice(entryPriceOut) == false) {		// earlier version of same checkup as Position.FillEntryWith()  " is 139.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_exitAlertWillBeFilled_byQuote,The length of the statement  "							//dont check if (slippage > 0) throw new Exception("CoverAtLimit: slippage[" + slippage + "] should be negative <=0 -"); " is 120.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_exitAlertWillBeFilled_byQuote,The length of the statement  "								string msg = "DUPE simulateFillExit has previously completely filled Sell StopLimit (StopActivated+Limit) " + exitAlert; " is 120.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_exitAlertWillBeFilled_byQuote,The length of the statement  "								string msg = "DUPE simulateFillExit has previously completely filled Cover StopLimit (StopActivated+Limit) " + exitAlert; " is 121.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_exitAlertWillBeFilled_byQuote,The length of the statement  "							throw new Exception("Check_exitAlertWillBeFilled_byQuote() NYI direction[" + exitAlert.Direction + "] for [" + exitAlert + "]"); " is 128.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_exitAlertWillBeFilled_byQuote,The length of the statement  "					Sq1.Core.Streaming.StreamingDataSnapshot snap = this.scriptExecutor.DataSource_fromBars.StreamingAdapter.StreamingDataSnapshot; " is 127.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_exitAlertWillBeFilled_byQuote,The length of the statement  "					exitPriceOut = snap.GetBidOrAsk_forDirection_fromQuoteCurrent(exitAlert.Symbol' exitAlert.PositionLongShortFromDirection); " is 122.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_exitAlertWillBeFilled_byQuote,The length of the statement  "					if (quote.PriceBetweenBidAsk(exitPriceOut) == false && this.scriptExecutor.BacktesterOrLivesimulator.ImRunningChartlessBacktesting == true) { " is 141.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_exitAlertWillBeFilled_byQuote,The length of the statement  "						string msg = "exitPriceOut[" + exitPriceOut + "] must be inside the bar; we'll need to generate one more quote onTheWayTo exitPriceOut"; " is 136.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,Check_exitAlertWillBeFilled_byQuote,The length of the statement  "							throw new Exception("Check_exitAlertWillBeFilled_byQuote() NYI direction[" + exitAlert.Direction + "] for [" + exitAlert + "]"); " is 128.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,SimulateFill_allPendingAlerts,The length of the statement  "			List<Alert> alertsPendingSafeCopy = this.scriptExecutor.ExecutionDataSnapshot.AlertsPending.SafeCopy(this' "SimulateFill_allPendingAlerts(WAIT)"); " is 146.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,SimulateFill_pendingAlert,The length of the statement  "				string msg = "OrderProcessor.PostProcessOrderState() will invoke CallbackAlertFilledMoveAroundInvokeScript() for filled orders"; " is 128.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,SimulateFill_pendingAlert,The length of the statement  "			if (this.scriptExecutor.ExecutionDataSnapshot.AlertsPending.Contains(alert' this' "SimulateFillPendingAlert(WAIT)") == true) { " is 126.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,SimulateFill_pendingAlert,The length of the statement  "				bool removedForcibly = this.scriptExecutor.ExecutionDataSnapshot.AlertsPending.Remove(alert' this' "SimulateFillPendingAlert(WAIT)"); " is 133.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,checkThrow_realtimePendingQuote,The length of the statement  "				string msg = "YOU_DIDNT_INVOKE_this.BacktesterOrLivesimulator.BacktestDataSource.BrokerAsBacktest_nullUnsafe.InitializeBacktestBroker(this)_FROM_ScriptExecutor.Initialize()"; " is 174.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,checkThrow_realtimePendingQuote,The length of the statement  "			if (this.scriptExecutor.BacktesterOrLivesimulator.ImBacktestingOrLivesimming == false && this.scriptExecutor.BacktesterOrLivesimulator.WasBacktestAborted == false) { " is 165.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,checkThrow_realtimePendingQuote,The length of the statement  "				string msg = "Before you call me' Please check this.backtestBroker.ScriptExecutor.ExecutionDataSnapshot.AlertsPending.Count!=0"; " is 128.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,checkThrow_realtimePendingQuote,The length of the statement  "			if (this.scriptExecutor.BacktesterOrLivesimulator.ImLivesimulator == false && quote.ParentBarStreaming.ParentBarsIndex != this.scriptExecutor.Bars.Count - 1) { " is 159.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,checkThrow_realtimePendingQuote,The length of the statement  "					+ quote.ParentBarStreaming.ParentBarsIndex + "] != this.backtestBroker.ScriptExecutor.Bars.Count-1[" + (this.scriptExecutor.Bars.Count - 1) + "]"; " is 146.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,simulatePendingFill_entry,The length of the statement  "				string msg = "AVOIDING_ALL_SORT_OF_MOVE_AROUND_ERRORS MUST_BE_POSITIVE_GOT_-1_quote.ParentStreamingBar.ParentBarsIndex"; " is 120.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,simulatePendingFill_entry,The length of the statement  "				string msg = "OrderProcessor.PostProcessOrderState() will invoke CallbackAlertFilledMoveAroundInvokeScript() for filled orders"; " is 128.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,simulatePendingFill_entry,The length of the statement  "			if (this.broker_backtestOrLivesim is LivesimBroker) {		// LivesimBrokerDefault and any other BrokerOwnLivesimImplementation " is 123.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,simulatePendingFill_exit,The length of the statement  "				string msg = "AVOIDING_ALL_SORT_OF_MOVE_AROUND_ERRORS MUST_BE_POSITIVE_GOT_-1_quote.ParentStreamingBar.ParentBarsIndex"; " is 120.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,simulatePendingFill_exit,The length of the statement  "				string msg = "OrderProcessor.PostProcessOrderState() will invoke CallbackAlertFilledMoveAroundInvokeScript() for filled orders"; " is 128.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,simulatePendingFill_exit,The length of the statement  "			string msg2 = "below is a shortcut for Backtest+MarketSim to shorten realtime mutithreaded logic: Order.ctor()=>OrderSubmit()=>PostProcessOrderState=>CallbackAlertFilledMoveAroundInvokeScript()"; " is 195.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,simulatePendingFill_exit,The length of the statement  "			if (this.broker_backtestOrLivesim is LivesimBroker) {		// LivesimBrokerDefault and any other BrokerOwnLivesimImplementation " is 123.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,StopLoss_simulateMoved,The length of the statement  "			Alert replacement = this.scriptExecutor.PositionPrototypeActivator.CreateStopLoss_fromPositionPrototype(alertToBeKilled.PositionAffected); " is 138.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,TakeProfit_simulateMoved,The length of the statement  "			Alert replacement = this.scriptExecutor.PositionPrototypeActivator.CreateTakeProfit_fromPositionPrototype(alertToBeKilled.PositionAffected); " is 140.
Long Statement,Sq1.Core.Backtesting,BacktestMarketsim,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestMarketsim.cs,AlertCounterparty_annihilate,The length of the statement  "				string msg = "ANNIHILATE_COUNTERPARTY_ALREADY_REMOVED " + alert;	//ExecSnap.AlertsPending not synchronized: already removed " is 123.
Long Statement,Sq1.Core.Backtesting,BacktestBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestBroker.cs,Order_killPending_usingKiller,The length of the statement  "		    throw new Exception("please override BrokerAdapter::Order_killPending_usingKiller() for BrokerAdapter.Name=[" + Name + "]"); " is 124.
Long Statement,Sq1.Core.Backtesting,BacktestStreaming,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestStreaming.cs,PushQuoteGenerated,The length of the statement  "			//ALREADY_FILLED_BY_GENERATOR this.SpreadModeler.GeneratedQuoteFillBidAsk(quote' bar2simulate' priceForSymmetricFillAtOpenOrClose); " is 131.
Long Statement,Sq1.Core.Backtesting,BacktestSpreadModeler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestSpreadModeler.cs,GeneratedQuoteFillBidAsk,The length of the statement  "				double spreadAligned = this.FillBidAskSymmetrically(quote' priceAligned_fromBar_forSymmetricFill_atOpenOrClose' barSimulated); " is 126.
Long Statement,Sq1.Core.Backtesting,BacktestSpreadModeler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestSpreadModeler.cs,GeneratedQuoteFillBidAsk,The length of the statement  "				// QUOTEGEN_PROBLEM#2 : at Open/Close' when they are == to Low/High' the Symmetrical quote will go beoynd bar boundaries => MarketSim will freak out " is 148.
Long Statement,Sq1.Core.Backtesting,BacktestSpreadModeler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestSpreadModeler.cs,GeneratedQuoteFillBidAsk,The length of the statement  "					double pushDownAligned = barSimulated.ParentBars.SymbolInfo.AlignToPriceLevel(pushDown' PriceLevelRoundingMode.RoundToClosest); " is 127.
Long Statement,Sq1.Core.Backtesting,BacktestSpreadModeler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestSpreadModeler.cs,AlignBidAskToPriceLevel,The length of the statement  "				spreadAligned = symbolInfo.AlignToPriceLevel(spreadAlignedToMaintain' PriceLevelRoundingMode.RoundToClosest);	//changed to RoundToClosest and checking below; RoundUp so I wont' get spread = 0 " is 191.
Long Statement,Sq1.Core.Backtesting,BacktestSpreadModelerPercentage,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestSpreadModelerPercentage.cs,FillBidAskSymmetrically,The length of the statement  "			double spreadAligned = symbolInfo.AlignToPriceLevel(spread' PriceLevelRoundingMode.RoundToClosest);	//changed to RoundToClosest and checking below; RoundUp so I wont' get spread = 0 " is 181.
Long Statement,Sq1.Core.Backtesting,BacktestSpreadModelerPercentage,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestSpreadModelerPercentage.cs,FillBidAskSymmetrically,The length of the statement  "					string msg = "barSimulated.HighLowDistance[" + barSimulated.HighLowDistance + "] < spreadAligned[" + spreadAligned + "]..."; " is 124.
Long Statement,Sq1.Core.Backtesting,BacktestSpreadModelerPercentage,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestSpreadModelerPercentage.cs,FillAskBasedOnBid_aligned,The length of the statement  "			double spreadAligned = symbolInfo.AlignToPriceLevel(spread' PriceLevelRoundingMode.RoundToClosest);	//changed to RoundToClosest and checking below; RoundUp so I wont' get spread = 0 " is 181.
Long Statement,Sq1.Core.Backtesting,BacktestSpreadModelerPercentage,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestSpreadModelerPercentage.cs,FillBidBasedOnAsk_aligned,The length of the statement  "			double spreadAligned = symbolInfo.AlignToPriceLevel(spread' PriceLevelRoundingMode.RoundToClosest);	//changed to RoundToClosest and checking below; RoundUp so I wont' get spread = 0 " is 181.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,GenerateNewQuote_childrenHelper,The length of the statement  "			// see QUOTEGEN_PROBLEM#2 : at Open/Close' when they are == to Low/High' the Symmetrical quote will go beoynd bar boundaries => MarketSim will freak out " is 152.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,InjectQuotes_toFillPendingAlerts_push,The length of the statement  "				closestOnOurWay.AbsnoPerSymbol = ++this.LastGeneratedAbsnoPerSymbol;		// DONT_FORGET_TO_ASSIGN_LATEST_ABSNO_TO_QUOTE_TO_REACH " is 125.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,InjectQuotes_toFillPendingAlerts_push,The length of the statement  "				//v1 "Received" is for Quik/InteractiveBrokers; "Generated" is for Backtest/Livesim  this.backtester.BacktestDataSource.StreamingAsBacktest_nullUnsafe.PushQuoteReceived(closestOnOurWay); " is 186.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,InjectQuotes_toFillPendingAlerts_push,The length of the statement  "					if (this.backtester.ImLivesimulator && this.backtester.Executor.Strategy.LivesimBrokerSettings.DelayBeforeFillEnabled) { " is 120.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,InjectQuotes_toFillPendingAlerts_push,The length of the statement  "						msg = "SEPARATE_MARKET_MODEL_WOULD_HELP_LAZY NO_ORDER_MUST_HAVE_BEEN_FILLED_WHILE_INJECTING__KOZ_LIVESIM_BROKER_EXECUTION_IS_DELAYED" + msg; " is 140.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,generateClosestQuote_forEachPendingAlert_onOurWayTo,The length of the statement  "				//if (bar2simulate.HighLowDistance > quotePrev.Spread && bar2simulate.ContainsBidAskForQuoteGenerated(quotePrev) == false) { " is 124.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,generateClosestQuote_forEachPendingAlert_onOurWayTo,The length of the statement  "			List<Alert> alertsSafe = this.backtester.Executor.ExecutionDataSnapshot.AlertsPending.SafeCopy(this' "generateClosestQuote_forEachPendingAlert_onOurWayTo(WAIT)"); " is 162.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,generateClosestQuote_forEachPendingAlert_onOurWayTo,The length of the statement  "			//I_WILL_SPOIL_STREAMING_BAR_IF_I_ATTACH_LIKE_THIS QuoteGenerated quoteNextAttached = this.backtester.BacktestDataSource.BacktestStreamingAdapter.(quoteToReach.Clone()); " is 169.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,modelQuote_thatCouldFillAlert,The length of the statement  "			//double priceScriptAligned1 = this.backtester.Executor.AlertPrice_alignToPriceLevel(alert.Bars' alert.PriceScript' true' " is 121.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,modelQuote_thatCouldFillAlert,The length of the statement  "			//bool alignedDifferently_iHateDoublesComparison = Math.Round(priceScriptAligned' 1) != Math.Round(alert.PriceScriptAligned' 1); " is 128.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,modelQuote_thatCouldFillAlert,The length of the statement  "				case MarketLimitStop.StopLimit: // HACK one QuoteGenerated might satisfy SLactivation' the other one might fill it; time to introduce state of SL into Alert??? " is 159.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,modelQuote_thatCouldFillAlert,The length of the statement  "						+ "; pass SLActivation=0 to PositionPrototypeActivator so that it generates STOP instead of STOPLOSS which I can't generate yet"; " is 129.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,modelQuote_thatCouldFillAlert,The length of the statement  "					throw new Exception("ALERT_TYPE_UNKNOWN MarketLimitStop[" + alert.MarketLimitStop + "] is not Market/Limit/Stop modelQuote_thatCouldFillAlert()"); " is 146.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,Generate_quotesFromBar_avoidClearing,The length of the statement  "			MarketClearingTimespan clearing = marketInfo.GetSingleClearingTimespan_ifMarketSuspended_duringBar(barOpenOrResume' barOpenNext); " is 129.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,Generate_quotesFromBar_avoidClearing,The length of the statement  "			int incrementSeconds = ((int)(leftTillNextBar.TotalSeconds / this.BacktestStrokesPerBarAsInt));	// WRONG -1 one second less to not have exactly next bar opening at last stroke but 4 seconds before " is 196.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,Generate_quotesFromBar_avoidClearing,The length of the statement  "				this.Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke(barSimulated' stroke' out price_withGranularStrokes_requiresAlignement' out bidOrAsk); " is 149.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,Generate_quotesFromBar_avoidClearing,The length of the statement  "					string msg = "CLEARING_EXTENDS_BEOYND_BAR_SIMULATED SKIPPING_QUOTE_GENERATION_TILL_END_OF_BAR EXPECTING_BAR_INCREASE_UPSTACK"; " is 126.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,Generate_quotesFromBar_avoidClearing,The length of the statement  "				if (stroke == this.BacktestStrokesPerBarAsInt - 1) break;		// avoiding expensive {cumulativeOffset += increment} at last stroke  " is 127.
Long Statement,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,Generate_quotesFromBar_avoidClearing,The length of the statement  "				MarketClearingTimespan clearing1 = marketInfo.GetSingleClearingTimespan_ifMarketSuspended_duringBar(barSimulated.DateTimeOpen' barSimulated.DateTimeOpen); " is 154.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,BrokerEditorInitializeHelper,The length of the statement  "				string msg = "this.dataSourceEditor!=null' already initialized; should I overwrite it with another instance you provided?..."; " is 126.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,OrderMoveExisting_stopLoss_overrideable,The length of the statement  "			this.OrderProcessor.Emit_stopLossMove_byKillingAndSubmittingNew(proto' newActivation_negativeOffset' newStopLoss_negativeOffset); " is 129.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,AlertCounterparty_annihilate,The length of the statement  "			OrderStateMessage omsg_counterParty_annihilating = new OrderStateMessage(orderCounterparty_toAnnihilate' newState' whatWasTheTrigger); " is 134.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,checkOrder_throwIfInvalid,The length of the statement  "					(orderToCheck.Alert.MarketLimitStop == MarketLimitStop.Stop || orderToCheck.Alert.MarketLimitStop == MarketLimitStop.Limit)) { " is 126.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,checkOrder_throwIfInvalid,The length of the statement  "				throw new Exception("order[" + orderToCheck + "].Price[" + orderToCheck.PriceRequested + "] should be != 0 for Stop or Limit"); " is 127.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,Orders_submitOpeners_afterClosedUnlocked_threadEntry_delayed,The length of the statement  "				Assembler.PopupException("SubmitOrdersThreadEntry should get at least one order to place! List<Order>; got ordersFromAlerts.Count=0; returning"); " is 145.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,SubmitOrders_backtest_liveFromProcessor_OPPunlockedSequence_threadEntry,The length of the statement  "					Assembler.PopupException("SubmitOrdersThreadEntry should get at least one order to place! List<Order>; got ordersFromAlerts.Count=0; returning"); " is 145.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,SubmitOrders,The length of the statement  "					string msg = "Backtesting orders should not be routed to AnyBrokerAdapters' but simulated using MarketSim; order=[" + order + "]"; " is 130.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,SubmitOrders,The length of the statement  "				//string msg_order = " Guid[" + order.GUID + "]" + " SernoExchange[" + order.SernoExchange + "] SernoSession[" + order.SernoSession + "]"; " is 138.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,KillSelectedOrders,The length of the statement  "					string msg = "Backtesting orders should not be routed to MockBrokerAdapters' but simulated using MarketSim; victimOrder=[" + victimOrder + "]"; " is 143.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,Order_checkThrow_enrichPreSubmit,The length of the statement  "					orderSimilar = lane_withSimilarOrder.ScanRecent_forSimilarPendingOrder_notSame(order' out lane_withSimilarOrder' out suggestion_SimilarOrder); " is 142.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,Order_checkThrow_enrichPreSubmit,The length of the statement  "					string msg = "ORDER_DUPLICATE_IN_SUBMITTED: your strategy didnt check if it has already emitted a similar order [" + order + "]" " is 128.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,Order_modifyOrderType_priceRequesting_accordingToMarketOrderAs,The length of the statement  "					//	string msg1 = Name + "::OrderSubmit(): order[" + order + "] is MARKET' dropping Price[" + order.PriceRequested + "] replacing with current Bid/Ask "; " is 152.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,Order_modifyOrderType_priceRequesting_accordingToMarketOrderAs,The length of the statement  "						this.OrderProcessor.BrokerCallback_orderStateUpdate_mustBeDifferent_postProcess(new OrderStateMessage(order' OrderState.ErrorOrderInconsistent' msg)); " is 150.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,Order_modifyOrderType_priceRequesting_accordingToMarketOrderAs,The length of the statement  "							msg = "SYMBOL_INFO_CONVERSION_MarketZeroSentToBroker SymbolInfo[" + alert.Symbol + "/" + alert.SymbolClass + "].OverrideMarketPriceToZero==true" " is 144.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,Order_modifyOrderType_priceRequesting_accordingToMarketOrderAs,The length of the statement  "								msg = "BROKER_SPECIFIC_CONVERSION_MarketMinMaxSentToBroker: [" + beforeBrokerSpecific + "]=>[" + alert.MarketLimitStop + "](" + alert.MarketOrderAs " is 147.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,Order_modifyOrderType_priceRequesting_accordingToMarketOrderAs,The length of the statement  "								msg = "SYMBOL_INFO_CONVERSION_MarketMinMaxSentToBroker: [" + beforeBrokerSpecific + "]=>[" + alert.MarketLimitStop + "](" + alert.MarketOrderAs + ")"; " is 150.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,Order_modifyOrderType_priceRequesting_accordingToMarketOrderAs,The length of the statement  "					//		order.PriceRequested = alert.Bars.alignOrderPriceToPriceLevel(order.PriceRequested' alert.Direction' alert.MarketLimitStop); " is 128.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,ScanEvidentLanes_forGuid_nullUnsafe,The length of the statement  "				orderLanesSearchedAsString += orderLane.GetType().Name.Substring(5) + separator;	// removing "Orders" from "OrdersSubmitting" " is 125.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,ScanEvidentLanes_forGuid_nullUnsafe,The length of the statement  "			msig += ".FindOrderLaneOptimized_nullUnsafe(" + GUID + ")'orderLanesSearchedAsString[" + orderLanesSearchedAsString + "]"; " is 122.
Long Statement,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,ScanEvidentLanes_forGuid_nullUnsafe,The length of the statement  "				string msg = "ORDER_FOUND_HAS_ALERT_NULL_UNRECOVERABLE__RETURNING_ORDER_NULL orderFound[" + orderFound.ToString() + "]"; " is 120.
Long Statement,Sq1.Core.Broker,BrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerEditor.EventConsumer.cs,Initialize,The length of the statement  "			this.BrokerAdapter.OnBrokerConnectionStateChanged += new EventHandler<EventArgs>(this.BrokerAdapter_OnBrokerConnectionStateChanged); " is 132.
Long Statement,Sq1.Core.Broker,BrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerEditor.EventConsumer.cs,PushBrokerAdapterSettingsToEditor,The length of the statement  "			throw new Exception("please override BrokerAdapter::PushBrokerAdapterSettingsToEditor() for brokerAdapter=[" + BrokerAdapter + "]"); " is 132.
Long Statement,Sq1.Core.Broker,BrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerEditor.EventConsumer.cs,PushEditedSettingsToBrokerAdapter,The length of the statement  "			throw new Exception("please override BrokerAdapter::PushEditedSettingsToBrokerAdapter() for brokerAdapter=[" + BrokerAdapter + "]"); " is 132.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,BrokerCallback_orderStateUpdate_byGuid_ifDifferent_dontPostProcess_appendPropagateMessage,The length of the statement  "			Order orderFound = this.DataSnapshot.OrdersSubmitting.ScanRecent_forGuid(orderGUID' out suggestedLane' out suggestion' false); " is 126.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,BrokerCallback_orderStateUpdate_byGuid_ifDifferent_dontPostProcess_appendPropagateMessage,The length of the statement  "				string msg = "order[" + orderGUID + "] wasn't found; OrderProcessorDataSnapshot.OrderCount=[" + this.DataSnapshot.OrderCount + "]"; " is 131.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,BrokerCallback_orderStateUpdate_mustBeTheSame_dontPostProcess,The length of the statement  "			// append message in any case; in messages log it will have the underscored state (message log refreshed)' while the order itself will never have it (orders tree is not updated) " is 177.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,BrokerCallback_orderStateUpdate_mustBeTheSame_dontPostProcess,The length of the statement  "				string msg = "I_REFUSE_TO_UPDATE_ORDER_WITH_SAME_STATE USE_INSTEAD__OrderProcessor.AppendOrderMessage_propagateToGui()  //Order_updateState_switchLanes_appendMessage_propagateIfGuiHasTime__dontPostProcess()"; " is 208.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,BrokerCallback_orderStateUpdate_mustBeDifferent_postProcess,The length of the statement  "				string prePostErrorMsg = "BrokerAdapter CALLBACK DUPE: Status[" + newStateOmsg.State + "] delivered for EmergencyCloseLimitReached " " is 132.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,BrokerCallback_orderStateUpdate_mustBeDifferent_postProcess,The length of the statement  "				string msg = "I_REFUSE_TO_POST_PROCESS USE_INSTEAD__OrderProcessor.Order_appendPropagateMessage_updateStateIfDifferent_switchLanes___dontPostProcess()  //Order_appendPropagateMessage_updateStateMustBeDifferent_switchLanes_postProcess()"; " is 237.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the statement  "						alert.Strategy.Script.Executor.CallbackCreatedOrder_wontBePlacedPastDue_invokeScript_nonReenterably(alert' alert.Bars.Count); " is 125.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the statement  "					string msg = "Unexpected newOrder.State[" + newOrder.State + "] from CreatedOrder_wontBePlacedPastDue_invokeScript_nonReenterably()"; " is 133.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the statement  "							+ "; prevAlert.Broker[" + broker + "] while thisAlert.DataSource.BrokerAdapter[" + alert.DataSource_fromBars.BrokerAdapter + "]"; " is 129.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the statement  "							if (ordersClosingPositionLongShort != newOrder.Alert.PositionLongShortFromDirection) ordersClosingAllSameDirection = false; " is 123.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the statement  "							if (ordersOpeningPositionLongShort != newOrder.Alert.PositionLongShortFromDirection) ordersOpeningAllSameDirection = false; " is 123.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the statement  "			if (orders_polarSequenceAgnostic.Count == 0 && (orders_polarClosingFirst.Count + orders_polarOpeningSecond.Count) == 0) { " is 121.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the statement  "			if (orders_polarSequenceAgnostic.Count > 0 && (orders_polarClosingFirst.Count > 0 || orders_polarOpeningSecond.Count > 0)) { " is 124.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the statement  "					+ "orders_polarSequenceAgnostic[" + orders_polarSequenceAgnostic.Count + "] :: orders_polarClosingFirst[" + orders_polarClosingFirst.Count " is 138.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the statement  "				string msg = "Scheduling SubmitOrdersThreadEntry orders_polarSequenceAgnostic[" + orders_polarSequenceAgnostic.Count + "] through [" + broker + "]"; " is 148.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the statement  "				string msg = "Scheduling SubmitOrdersThreadEntry orders_polarClosingFirst[" + orders_polarClosingFirst.Count + "] through [" + broker + "]"; " is 140.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread,The length of the statement  "				string msg = "Scheduling SubmitOrdersThreadEntry orders_polarOpeningSecond[" + orders_polarOpeningSecond.Count + "] through [" + broker + "]"; " is 142.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_stopLossMove_byKillingAndSubmittingNew,The length of the statement  "					this.oppHook_onStopLossKilled_createNewStopLoss_andAddToPokeUnit(stopLossKilled' newActivation_negativeOffset' newStopLoss_negativeOffset' pokeUnit); " is 149.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_stopLossMove_byKillingAndSubmittingNew,The length of the statement  "			OrderPostProcessorStateHook oppHook_stopLossReceived_WaitingBrokerFill_state = new OrderPostProcessorStateHook("oppHook_stopLossReceived_WaitingBrokerFill_state"' " is 162.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_stopLossMove_byKillingAndSubmittingNew,The length of the statement  "			string TODO = "trigger the HOOK now against the order NOW!!! 99% chance the SL you wanna move is already ready to be changed"; " is 126.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_stopLossMove_byKillingAndSubmittingNew,The length of the statement  "			this.AppendMessage_propagateToGui(proto.StopLossAlert_forMoveAndAnnihilation.OrderFollowed' msig + "hooked stopLossReceivedActiveCallback() and stopLossGotKilledHook()"); " is 170.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,oppHook_onStopLossKilled_createNewStopLoss_andAddToPokeUnit,The length of the statement  "			// resetting position.ExitAlert is a legal permission to for SimulateRealtimeOrderFill() to not to throw "I refuse to tryFill an ExitOrder" " is 139.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,oppHook_onStopLossKilled_createNewStopLoss_andAddToPokeUnit,The length of the statement  "			// dont CreateAndSubmit' pokeUnit will be submitted with oneNewAlertPerState in InvokeHooksAndSubmitNewAlertsBackToBrokerAdapter(); " is 131.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_takeProfitMove_byKillingAndSubmittingNew,The length of the statement  "			string msig = " // OrderProcessor.Emit_takeProfitMove_byKillingAndSubmittingNew(" + proto.TakeProfit_positiveOffset + "=>" + newTakeProfit_positiveOffset + "): "; " is 162.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_takeProfitMove_byKillingAndSubmittingNew,The length of the statement  "					this.oppHook_onTakeProfitKilled_createNewTakeProfit_addToPokeUnit(takeProfitKilled' newTakeProfit_positiveOffset' pokeUnit); " is 124.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_takeProfitMove_byKillingAndSubmittingNew,The length of the statement  "			OrderPostProcessorStateHook oppHook_takeProfitReceived_WaitingForBrokerFill = new OrderPostProcessorStateHook("oppHook_takeProfitReceived_WaitingForBrokerFill"' " is 160.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_takeProfitMove_byKillingAndSubmittingNew,The length of the statement  "			string TODO = "trigger the HOOK now against the order NOW!!! 99% chance the TP you wanna move is already ready to be changed"; " is 126.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_takeProfitMove_byKillingAndSubmittingNew,The length of the statement  "			this.AppendMessage_propagateToGui(proto.TakeProfitAlert_forMoveAndAnnihilation.OrderFollowed' msig + ": hooked takeProfitReceivedActiveCallback() and takeProfitGotKilledHook()"); " is 178.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,oppHook_onTakeProfitKilled_createNewTakeProfit_addToPokeUnit,The length of the statement  "			// resetting position.ExitAlert is a legal permission to for SimulateRealtimeOrderFill() to not to throw "I refuse to tryFill an ExitOrder" " is 139.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,oppHook_onTakeProfitKilled_createNewTakeProfit_addToPokeUnit,The length of the statement  "			// dont CreateAndSubmit' pokeUnit will be submitted with oneNewAlertPerState in InvokeHooksAndSubmitNewAlertsBackToBrokerAdapter(); " is 131.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_killOrderPending_usingKiller,The length of the statement  "				string msg = "I_REFUSE_TO_KILL__STATE_NOT_IN {" + OrderStatesCollections.CanBeKilled.ToString() + "} [" + victimOrder + "]"; " is 124.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,Emit_killOrderPending_usingKiller,The length of the statement  "			OrderStateMessage osm_killer = new OrderStateMessage(killerOrder_withRefToVictim' OrderState.KillerBulletFlying' msg_killer); " is 125.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,RaiseAsyncOrderRemoved_executionControlShouldRebuildOLV,The length of the statement  "				//	string msg = "WILL_JUST_OrdersTreeOLV.RebuildAll(true)_IN_OrderRemoveFromListView() ordersToRemove already clear()ed before this task has started"; " is 150.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,RaiseAsyncOrderRemoved_executionControlShouldRebuildOLV,The length of the statement  "				this.OnAsyncOrderRemoved_executionControlShouldRebuildOLV(sender' new OrdersListEventArgs(ordersStaleScreenedFromClearForNewThread)); " is 133.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,GuiClick_killPendingAll,The length of the statement  "				string msg = "NO_PENDING_ORDERS_TO_CANCEL__SHOULD_I_CHECK_ANOTHER_LANE?... ordersPendingToKill.Count[" + ordersPendingToKill.Count + "]"; " is 137.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,ExecutionTreeControl_OnOrderDoubleClicked_OrderProcessorShouldKillOrder,The length of the statement  "				bool orderDeserialized_afterAppRestart = Assembler.InstanceInitialized.AlertsForChart.IsItemRegisteredForAnyContainer(orderToBeKilled.Alert) == false; " is 150.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,ExecutionTreeControl_OnOrderDoubleClicked_OrderProcessorShouldKillOrder,The length of the statement  "				bool emitted = this.Emit_killOrderPending_usingKiller(orderToBeKilled' "USER_DOUBLE_CLICKED_ON_ORDER_FROM_EXECUTION_FORM"); " is 123.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,isExitOrderConsistent_logInconsistency,The length of the statement  "				errormsg += "positionShouldBeFilled[" + positionShouldBeFilled + "]=null' ERROR filling order.Alert.PositionAffected !!! "; " is 123.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,isExitOrderConsistent_logInconsistency,The length of the statement  "				errormsg += "EntryAlert=null for positionShouldBeFilled[" + positionShouldBeFilled + "]; won't close position opened in backtest closing while in streaming "; " is 158.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,isExitOrderConsistent_logInconsistency,The length of the statement  "				errormsg += "EntryAlert.OrderFollowed=null for positionShouldBeFilled[" + positionShouldBeFilled + "]; won't close position opened in backtest closing while in streaming "; " is 172.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,createOrder_propagateToGui_fromAlert,The length of the statement  "				newborn.Alert.DataSource_fromBars.BrokerAdapter.Order_modifyOrderType_priceRequesting_accordingToMarketOrderAs(newborn); " is 120.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,createOrder_propagateToGui_fromAlert,The length of the statement  "			this.BrokerCallback_orderStateUpdate_mustBeTheSame_dontPostProcess(new OrderStateMessage(newborn' newbornOrderState' newbornMessage)); " is 134.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,postProcess_victimOrder,The length of the statement  "					string msg_killer = "orderKiller[" + killerOrder.SernoExchange + "]=>[" + OrderState.KillerDone + "] <= orderVictim[" + victimOrder.SernoExchange + "][" + victimOrder.State + "]"; " is 179.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,postProcess_victimOrder,The length of the statement  "					OrderStateMessage omg_done_killer = new OrderStateMessage(killerOrder' OrderState.KillerDone' msg_killer + " //postProcess_victimOrder()"); " is 139.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,postProcess_victimOrder,The length of the statement  "					this.BrokerCallback_pendingKilled_withKiller_postProcess_removeAlertsPending_fromExecutorDataSnapshot(victimOrder' msg_killer); " is 127.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,postProcess_victimOrder,The length of the statement  "					string msg = "postProcess_victimOrder() NO_HANDLER_FOR_ORDER_VICTIM [" + victimOrder + "]'s state[" + victimOrder.State + "]" " is 125.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,postProcess_killerOrder,The length of the statement  "					string msg = "postProcess_killerOrder(): NO_HANDLER_FOR_KILLE_ORDER [" + killerOrder + "]'s state[" + killerOrder.State + "]" " is 125.
Long Statement,Sq1.Core.Broker,OrderProcessor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessor.Accounting.cs,postProcess_invokeScript_scheduleReplacement,The length of the statement  "					// you should save it to SlippageEffective! calc "implied" slippage from executed price' instead of assumed for LimitCrossMarket " is 128.
Long Statement,Sq1.Core.Broker,OrdersAutoTree,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrdersAutoTree.cs,scanDeserialized_moveDerivedsInside_buildTreeShadow,The length of the statement  "			string stats = "DERIVEDS_MOVED[" + derivedsFound + "] = ordersFlat.Count[" + ordersFlat.Count + "] - base.Count[" + base.Count + "]"; " is 133.
Long Statement,Sq1.Core.Broker,OrdersAutoTree,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrdersAutoTree.cs,Remove_fromRootLevel_keepOrderPointers,The length of the statement  "						string msg = "ORDER_AUTOTREE_DOESNT_CONTAIN_ORDER_YOU_WILLING_TO_REMOVE " + this.ToStringCount() + " orderRemoving" + orderRemoving; " is 132.
Long Statement,Sq1.Core.Broker,OrderLane,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderLane.cs,RemoveAll,The length of the statement  "						string msg = "LANE_DOESNT_CONTAIN_ORDER_YOU_WILLING_TO_REMOVE " + this.ToStringCount() + " orderRemoving" + orderRemoving; " is 122.
Long Statement,Sq1.Core.Broker,OrderProcessorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessorDataSnapshot.cs,Initialize,The length of the statement  "				//this.OrdersTree.InitializeScanDeserializedMoveDerivedsInsideBuildTreeShadow(this.SerializerLogRotate.OrdersBuffered.ItemsMain); " is 129.
Long Statement,Sq1.Core.Broker,OrderProcessorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderProcessorDataSnapshot.cs,Initialize,The length of the statement  "				// the copy' this.OrdersAll will stay the longest orderlist (request this.OrdersAll.SafeCopy if you got CollectionModifiedException) " is 132.
Long Statement,Sq1.Core.Broker,OrderPostProcessorStateChangedTrigger,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorStateChangedTrigger.cs,InvokeOnceHooksForOrderStateAndDelete,The length of the statement  "					string msg = "hooksRemoved[" + hooksRemoved + "] != hooksInvoked[" + hooksInvoked + "]; I don't wanna be stuck on threading issues..."; " is 135.
Long Statement,Sq1.Core.Broker,OrderPostProcessorSequencerCloseThenOpen,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorSequencerCloseThenOpen.cs,ReplaceLockingCloseOrder,The length of the statement  "				Dictionary<List<Order>' List<Order>> sequencerLockCloseOpenCopy = new Dictionary<List<Order>' List<Order>>(this.sequencerLockCloseOpen); " is 136.
Long Statement,Sq1.Core.Broker,OrderPostProcessorEmergency,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergency.cs,CreateEmergencyReplacement_resubmitFor,The length of the statement  "			ThreadPool.QueueUserWorkItem(new WaitCallback(this.closeEmergency_threadWrapper)' new object[] { rejectedExitOrderOrEmergencyCloseOrder }); " is 139.
Long Statement,Sq1.Core.Broker,OrderPostProcessorEmergency,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergency.cs,submitReplacementOrderFor,The length of the statement  "				string msgNoReplacement = "got NULL from CreateEmergencyCloseOrderInsteadOfRejected() for (" + rejectedOrderToReplace + "); "; " is 126.
Long Statement,Sq1.Core.Broker,OrderPostProcessorEmergency,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergency.cs,submitReplacementOrderFor,The length of the statement  "					replacement.SlippageAppliedIndex = replacement.Alert.Bars.SymbolInfo.GetSlippage_maxIndex_forLimitOrdersOnly(replacement.Alert); " is 128.
Long Statement,Sq1.Core.Broker,OrderPostProcessorEmergency,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergency.cs,submitReplacementOrderFor,The length of the statement  "				double slippage = replacement.Alert.GetSlippage_signAware_forLimitAlertsOnly(priceScript' replacement.SlippageAppliedIndex); " is 124.
Long Statement,Sq1.Core.Broker,OrderPostProcessorEmergency,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergency.cs,createEmergencyCloseOrder_insteadOfRejected,The length of the statement  "			if (string.IsNullOrEmpty(rejectedOrderToReplace.EmergencyReplacementForGUID)) emergencyReplacement.SlippageAppliedIndex = 0; " is 124.
Long Statement,Sq1.Core.Broker,OrderPostProcessorEmergency,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergency.cs,createEmergencyCloseOrder_insteadOfRejected,The length of the statement  "			this.orderProcessor.RaiseOrderStateOrPropertiesChanged_executionControlShouldPopulate(this' new List<Order>(){rejectedOrderToReplace}); " is 135.
Long Statement,Sq1.Core.Broker,OrderPostProcessorEmergency,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergency.cs,findEmergencyReplacement_forRejectedOrder,The length of the statement  "			Order rejected = this.orderProcessor.DataSnapshot.OrdersAll.ScanRecent_forGuid(orderRejected.GUID' out suggestedLane' out suggestion' true); " is 140.
Long Statement,Sq1.Core.Broker,OrderPostProcessorEmergency,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergency.cs,findEmergencyReplacement_forRejectedOrder,The length of the statement  "			Order replacement = this.orderProcessor.DataSnapshot.OrdersAll.ScanRecent_forGuid(rejected.EmergencyReplacedByGUID' out suggestedLane' out suggestion' true); " is 157.
Long Statement,Sq1.Core.Broker,OrderPostProcessorEmergency,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergency.cs,throwLog_ifEmergencyCloseInterrupted,The length of the statement  "			string msg = "InterruptedEmergencyLockReasons.Contains reason4lock[" + reason4lock + "] for replacementOrder[" + replacementOrder + "]"; " is 136.
Long Statement,Sq1.Core.Broker,OrderPostProcessorEmergency,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergency.cs,throwLog_ifEmergencyCloseInterrupted,The length of the statement  "			OrderStateMessage newOrderStateRejected = new OrderStateMessage(replacementOrder' OrderState.EmergencyCloseUserInterrupted' msg); " is 129.
Long Statement,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,HandleReplaceRejected,The length of the statement  "				//Assembler.PopupException("Man' I resubmit  only REJECTED orders' you fed me with State=[" + order.State + "] for order[" + order+ "]"); " is 137.
Long Statement,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,HandleReplaceRejected,The length of the statement  "				//Assembler.PopupException("Symbol[" + order.Alert.Bars.Symbol + "] has ReSubmitRejected=[" + reSubmitRejected +  "]; returning"); " is 130.
Long Statement,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,ReplaceRejectedOrder,The length of the statement  "				string msg = "SymbolInfo[" + rejectedOrderToReplace.Alert.Symbol + "/" + rejectedOrderToReplace.Alert.SymbolClass + "].ReSubmitRejected==false" " is 143.
Long Statement,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,ReplaceRejectedOrder,The length of the statement  "			if (replacement.Alert.PositionAffected != null) {	// alert.PositionAffected = null when order created by chart-click-mni " is 120.
Long Statement,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,ReplaceRejectedOrder,The length of the statement  "			double slippage = replacement.Alert.GetSlippage_signAware_forLimitAlertsOnly(priceStreaming' replacement.SlippageAppliedIndex); " is 127.
Long Statement,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,CreateReplacementOrder_insteadOfRejected,The length of the statement  "				string msg = "Rejected[" + rejectedOrderToReplace + "] already has a replacement[" + replacement + "] with State[" + replacement.State + "]; ignored rejection duplicates from broker"; " is 183.
Long Statement,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,CreateReplacementOrder_insteadOfRejected,The length of the statement  "			//	string msg = "order[" + order.ToString() + "] was already replaced today by [" + order.ReplacedByGUID + "]; continuing generating new order"; " is 144.
Long Statement,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,CreateReplacementOrder_insteadOfRejected,The length of the statement  "			this.orderProcessor.RaiseOrderStateOrPropertiesChanged_executionControlShouldPopulate(this' new List<Order>(){rejectedOrderToReplace}); " is 135.
Long Statement,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,findReplacementOrder_forRejectedOrder,The length of the statement  "			Order rejected = this.orderProcessor.DataSnapshot.OrdersAll.ScanRecent_forGuid(orderRejected.GUID' out suggestedLane' out suggestion' true); " is 140.
Long Statement,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,findReplacementOrder_forRejectedOrder,The length of the statement  "			Order replacement = this.orderProcessor.DataSnapshot.OrdersAll.ScanRecent_forGuid(rejected.ReplacedByGUID' out suggestedLane' out suggestion' true); " is 148.
Long Statement,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,SubmitReplacementOrder_insteadOfRejected,The length of the statement  "				+ replacementOrder.SlippageAppliedIndex + "] through [" + replacementOrder.Alert.DataSource_fromBars.BrokerAdapter + "]"; " is 121.
Long Statement,Sq1.Core.Broker,OrderPostProcessorRejected,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorRejected.cs,SubmitReplacementOrder_insteadOfRejected,The length of the statement  "			//ThreadPool.QueueUserWorkItem(new WaitCallback(replacementOrder.Alert.DataSource.BrokerAdapter.SubmitOrdersThreadEntry)' " is 121.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penAlertPendingEllipse						!= null) { this.penAlertPendingEllipse					.Dispose(); this.penAlertPendingEllipse						= null; } " is 134.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penAlertPendingProtoStopLossEllipse		!= null) { this.penAlertPendingProtoStopLossEllipse		.Dispose(); this.penAlertPendingProtoStopLossEllipse		= null; } " is 162.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penAlertPendingProtoTakeProfitEllipse		!= null) { this.penAlertPendingProtoTakeProfitEllipse	.Dispose(); this.penAlertPendingProtoTakeProfitEllipse		= null; } " is 167.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penGridlinesHorizontal						!= null) { this.penGridlinesHorizontal					.Dispose(); this.penGridlinesHorizontal						= null; } " is 134.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penGridlinesVertical						!= null) { this.penGridlinesVertical					.Dispose(); this.penGridlinesVertical						= null; } " is 128.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penGridlinesVerticalNewDate				!= null) { this.penGridlinesVerticalNewDate				.Dispose(); this.penGridlinesVerticalNewDate				= null; } " is 144.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penLevelTwoAskColorContour					!= null) { this.penLevelTwoAskColorContour				.Dispose(); this.penLevelTwoAskColorContour					= null; } " is 143.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penLevelTwoBidColorContour					!= null) { this.penLevelTwoBidColorContour				.Dispose(); this.penLevelTwoBidColorContour					= null; } " is 143.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penMousePositionTrackOnGutters				!= null) { this.penMousePositionTrackOnGutters			.Dispose(); this.penMousePositionTrackOnGutters				= null; } " is 152.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.brushMousePositionTrackOnGuttersBackground	!= null) { this.brushMousePositionTrackOnGuttersBackground.Dispose(); this.brushMousePositionTrackOnGuttersBackground	= null; } " is 179.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penPositionFilledDot						!= null) { this.penPositionFilledDot					.Dispose(); this.penPositionFilledDot						= null; } " is 128.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penPositionLineEntryExitConnectedLoss		!= null) { this.penPositionLineEntryExitConnectedLoss	.Dispose(); this.penPositionLineEntryExitConnectedLoss		= null; } " is 167.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penPositionLineEntryExitConnectedProfit	!= null) { this.penPositionLineEntryExitConnectedProfit	.Dispose(); this.penPositionLineEntryExitConnectedProfit	= null; } " is 171.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penPositionLineEntryExitConnectedUnknown	!= null) { this.penPositionLineEntryExitConnectedUnknown.Dispose(); this.penPositionLineEntryExitConnectedUnknown	= null; } " is 173.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.penPositionPlannedEllipse					!= null) { this.penPositionPlannedEllipse				.Dispose(); this.penPositionPlannedEllipse					= null; } " is 140.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.brushGutterBottomBackground				!= null) { this.brushGutterBottomBackground				.Dispose(); this.brushGutterBottomBackground				= null; } " is 144.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.brushGutterBottomForeground				!= null) { this.brushGutterBottomForeground				.Dispose(); this.brushGutterBottomForeground				= null; } " is 144.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.brushGutterBottomNewDateForeground			!= null) { this.brushGutterBottomNewDateForeground		.Dispose(); this.brushGutterBottomNewDateForeground			= null; } " is 161.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.brushGutterRightBackground					!= null) { this.brushGutterRightBackground				.Dispose(); this.brushGutterRightBackground					= null; } " is 143.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.brushGutterRightForeground					!= null) { this.brushGutterRightForeground				.Dispose(); this.brushGutterRightForeground					= null; } " is 143.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.brushLevelTwoAskColorBackground			!= null) { this.brushLevelTwoAskColorBackground			.Dispose(); this.brushLevelTwoAskColorBackground			= null; } " is 153.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.brushLevelTwoBidColorBackground			!= null) { this.brushLevelTwoBidColorBackground			.Dispose(); this.brushLevelTwoBidColorBackground			= null; } " is 153.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.brushLevelTwoLotsColorBackground			!= null) { this.brushLevelTwoLotsColorBackground		.Dispose(); this.brushLevelTwoLotsColorBackground			= null; } " is 155.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.brushPositionFilledDot						!= null) { this.brushPositionFilledDot					.Dispose(); this.brushPositionFilledDot						= null; } " is 134.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.brushPriceBarDown							!= null) { this.brushPriceBarDown						.Dispose(); this.brushPriceBarDown							= null; } " is 122.
Long Statement,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,DisposeAllGDIs_handlesLeakHunter,The length of the statement  "			if (this.brushVolumeBarDown							!= null) { this.brushVolumeBarDown						.Dispose(); this.brushVolumeBarDown							= null; } " is 125.
Long Statement,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,ChartShadow_AddToDataSource,The length of the statement  "					string msg = "YOU_ALREADY_ADDED_CHART_SHADOW_TO_DATASOURCE this.Bars.DataSource[" + this.Bars.DataSource + "].ChartsOpenForSymbol[" + symbolOfDataSourceFound + "]"; " is 164.
Long Statement,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,ChartShadow_AddToDataSource,The length of the statement  "				string msg = "LIVESIM_HAS_OWN_DATASOURCE__YOU_DIDNT_ADD_SYMBOL_TO_DATASOURCE.ChartsOpenForSymbol.Keys this.Bars.DataSource[" + this.Bars.DataSource + "].ChartsOpenForSymbol[" + symbolOfDataSourceFound + "]"; " is 207.
Long Statement,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,ChartShadow_RemoveFromDataSource,The length of the statement  "			SymbolOfDataSource symbolOfDataSourceFound = chartsOpenForSymbol.FindSimilarKey(new SymbolOfDataSource(symbol' this.Bars.DataSource)); " is 134.
Long Statement,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,ChartShadow_RemoveFromDataSource,The length of the statement  "					string msg = "YOU_DIDNT_ADD_CHART_SHADOW_TO_DATASOURCE this.Bars.DataSource[" + this.Bars.DataSource + "].ChartsOpenForSymbol[" + symbol + "]"; " is 143.
Long Statement,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,ChartShadow_RemoveFromDataSource,The length of the statement  "				string msg = "YOU_DIDNT_ADD_SYMBOL_TO_DATASOURCE.ChartsOpenForSymbol.Keys this.Bars.DataSource[" + this.Bars.DataSource + "].ChartsOpenForSymbol[" + symbol + "]"; " is 162.
Long Statement,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,Initialize,The length of the statement  "				string msg = "AVOIDING_NPE LIVESIM_ABORTED_WITH_NO_BARS_TO_RESTORE //ChartShadow.Initialize(null' strategySavedInChartSettings[" + strategySavedInChartSettings + "])"; " is 167.
Long Statement,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,Initialize,The length of the statement  "			#region I loaded bars by click on the DataSourceTree=>Symbol; I want the ChartName to move from previous symbol to barsNotNull.Symbol " is 133.
Long Statement,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,Initialize,The length of the statement  "			//OBSOLETE_NOW__USE_STREAMING_CONSUMERS_INSTEAD if (this.Bars != null) this.Bars.OnBarStreamingUpdatedMerged -= new EventHandler<BarEventArgs>(this.bars_OnBarStreamingUpdatedMerged_invokedOnlyWhenUserSubscribedChart_tunneledToChartForm); " is 237.
Long Statement,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,Initialize,The length of the statement  "			// ChartForm wants to update last received quote datetime; FOR_NON_CORE_CONSUMERS_ONLY CORE_DEFINED_CONSUMERS_IMPLEMENT_IStreamingConsumer.ConsumeQuoteOfStreamingBar() " is 167.
Long Statement,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,Initialize,The length of the statement  "			//OBSOLETE_NOW__USE_STREAMING_CONSUMERS_INSTEAD this.Bars.OnBarStreamingUpdatedMerged += new EventHandler<BarEventArgs>(this.bars_OnBarStreamingUpdatedMerged_invokedOnlyWhenUserSubscribedChart_tunneledToChartForm); " is 214.
Long Statement,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,SelectPosition,The length of the statement  "			string msg = "ChartShadow::SelectPosition() TODO: implement HIGHLIGHTING for a position[" + position + "]; chart[" + this + "]"; " is 128.
Long Statement,Sq1.Core.Charting,ChartShadow,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartShadow.DataSourceTreeControl.ChartUnderSymbol.cs,PumpUnPaused_notification_switchLivesimmingThreadToGui,The length of the statement  "			if (this.prePauseWindowsTitle == "") return;	// I wasn't paused from brother livesimming and I don't wanna reset my title " is 121.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,StreamingUnsubscribe,The length of the statement  "				string msg = "ChartForm: BARS=>UNSUBSCRIBE_SHOULD_DISABLED_KOZ_NO_STREAMING_IN_DATASOURCE in PopulateBtnStreamingTriggersScript_afterBarsLoaded()"; " is 147.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,StreamingSubscribe,The length of the statement  "			this.ReasonToExist += (this.Executor.Strategy != null) ? "[" + this.Executor.ToString() + "]" : "[" + base.Symbol_nullReported + "]"; " is 133.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,StreamingSubscribe,The length of the statement  "				downstreamAfterWeAttemptedToSubscribe_mustBeSubscribed = this.DownstreamSubscribed == true;	// reReadingToBe100sure => will go to final msg2 " is 140.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,StreamingSubscribe,The length of the statement  "					string msg = "CHART_STREAMING_FAILED_SUBSCRIBE_BAR_OR_QUOTE_OR_BOTH StreamingAdapter[" + streaming_nullReported.ToString() + "]"; " is 129.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,StreamingSubscribe,The length of the statement  "				string msg = "ChartForm: BARS=>SUBSCRIBE_SHOULD_BE_DISABLED_KOZ_NO_STREAMING_IN_DATASOURCE in PopulateBtnStreamingTriggersScript_afterBarsLoaded()"; " is 148.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "			base.MsigForNpExceptions = " //ChartStreamingConsumer.ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended(" + barLastFormed.ToString() + ")"; " is 167.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "				string msg = "Streaming starts generating quotes => first StreamingBar is added; for first four Quotes there's no static barsFormed yet!! Isi"; " is 143.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "					//bool thereWereNeighbours = dataSourceSafe.QueuePauseIgnorePump_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst(executorSafe' wrongUsagePopup);		// NOW_FOR_LIVE_MOCK_BUFFERING " is 197.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "						.QueuePauseIgnorePump_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst_WRAPPER(executorSafe' barsSafe); " is 123.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "					ReporterPokeUnit pokeUnit_nullUnsafe_dontForgetToDispose = executorSafe.InvokeScript_onNewBar_onNewQuote(quoteForAlertsCreated' false);	//new Quote()); " is 151.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "					//v1 bool thereWereNeighbours = dataSourceSafe.QueueResumeIgnorePump_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst(executorSafe);	// NOW_FOR_LIVE_MOCK_BUFFERING " is 185.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "				string msg = "SHOULD_NEVER_HAPPEN IsBacktestingNoLivesimNow[true] //ChartStreamingConsumer.ConsumeBarLastStaticJustFormedWhileStreamingBarWithOneQuoteAlreadyAppended()"; " is 169.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "			base.MsigForNpExceptions = " //ChartStreamingConsumer.ConsumeQuoteOfStreamingBar(" + quoteClone_boundAttached.ToString() + ")"; " is 127.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "						+ " bars[" + barsSafe.ScaleInterval + "] quote.ParentStreamingBar[" + quoteClone_boundAttached.ParentBarStreaming.ScaleInterval + "]"; " is 134.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "						+ " bars[" + barsSafe.Symbol + "] quote.ParentStreamingBar[" + quoteClone_boundAttached.ParentBarStreaming.Symbol + "]"; " is 120.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "			bool sameDOHLCV = barsSafe.BarStreaming_nullUnsafe.HasSameDOHLCVas(quoteClone_boundAttached.ParentBarStreaming' "quote.ParentStreamingBar"' "barsSafe.BarStreaming"' ref msg2); " is 175.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "				string msg = "FIXME_MUST_BE_THE_SAME EARLY_BINDER_DIDNT_DO_ITS_JOB#3 [" + msg2 + "] this.Executor.Bars.BarStreaming[" + barsSafe.BarStreaming_nullUnsafe " is 152.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "			if (quoteClone_boundAttached.ParentBarStreaming.ParentBarsIndex > quoteClone_boundAttached.ParentBarStreaming.ParentBars.Count) { " is 129.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "			//MOVED_TO_chartControl_BarAddedUpdated_ShouldTriggerRepaint chartFormSafe.ChartControl.ScriptExecutorObjects.QuoteLast = quote.Clone(); " is 136.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "			// TUNNELLED_TO_CHART_FORMS_MANAGER chartFormSafe.PrintQuoteTimestampOnStrategyTriggeringButton_beforeExecution_switchToGuiThread(quote); " is 137.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "					//bool thereWereNeighbours = dataSourceSafe.QueuePauseIgnorePump_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst(executorSafe' wrongUsagePopup);		// NOW_FOR_LIVE_MOCK_BUFFERING " is 197.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "						.QueuePauseIgnorePump_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst_WRAPPER(executorSafe' barsSafe); " is 123.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "					ReporterPokeUnit pokeUnit_nullUnsafe_dontForgetToDispose = executorSafe.InvokeScript_onNewBar_onNewQuote(quoteClone_boundAttached' true); " is 137.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "					//v1 bool thereWereNeighbours = dataSourceSafe.QueueResumeIgnorePump_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst(executorSafe);	// NOW_FOR_LIVE_MOCK_BUFFERING " is 185.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "					// FROM_ChartStreamingConsumer.ConsumeQuoteOfStreamingBar() #4/4 notify Positions that it should update open positions' I wanna see current profit/loss and relevant red/green background " is 185.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "						executorSafe.PerformanceAfterBacktest.BuildIncrementalOpenPositionsUpdatedDueToStreamingNewQuote_step2of3(executorSafe.ExecutionDataSnapshot.PositionsOpenNow); " is 159.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "			//DOESNT_WORK_WHEN_LIVESIMMING_OWN_IMPLEMETATION_THER ALREADY_HANDLED_BY_chartControl_BarStreamingUpdatedMerged_ShouldTriggerRepaint_WontUpdateBtnTriggeringScriptTimeline " is 170.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "			// MOVED_TO_ScriptExecutor_USING_RaiseOpenPositionsUpdatedDueToStreamingNewQuote_step2of3() #4/4 notify Positions that it should update open positions' I wanna see current profit/loss and relevant red/green background " is 217.
Long Statement,Sq1.Core.Charting,StreamingConsumerChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\StreamingConsumerChart.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "			//	this.ChartFormManager.ReportersFormsManager.UpdateOpenPositionsDueToStreamingNewQuote_step2of3(positionsOpenNowSafeCopy); " is 124.
Long Statement,Sq1.Core.Charting,DictionaryManyToOne<CHART;ALERTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\DictionaryManyToOne.cs,ClearDependantsFor,The length of the statement  "					string msg = "position[" + dependant + "] is not found in this.Reverse' you should've gotten an exception during Add()? AlmostImpossible happened"; " is 147.
Long Statement,Sq1.Core.Charting,DictionaryManyToOne<CHART;ALERTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\DictionaryManyToOne.cs,FindContainerFor_throws,The length of the statement  "				throw new Exception(msg + msig);	// I hate nullable types alltogether; can't return null here koz CHART=null is nonsence for the Dictionary " is 139.
Long Statement,Sq1.Core.Charting,DictionaryManyToOne<CHART;ALERTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\DictionaryManyToOne.cs,FindContainerFor_throws,The length of the statement  "				//Assembler.PopupException(msg + msig);	// I hate nullable types alltogether; can't return null here koz CHART=null is nonsence for the Dictionary " is 146.
Long Statement,Sq1.Core.Charting,DictionaryManyToOne<CHART;ALERTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\DictionaryManyToOne.cs,RenameKey,The length of the statement  "			List<ALERTS> chartShadowsAffected_alreadySavedStrategyOrCtx_invokedRaiseChartSettingsChangedContainerShouldSerialize = new List<ALERTS>(); " is 138.
Long Statement,Sq1.Core.Charting,DictionaryManyToOne<CHART;ALERTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\DictionaryManyToOne.cs,RenameKey,The length of the statement  "				chartShadowsAffected_alreadySavedStrategyOrCtx_invokedRaiseChartSettingsChangedContainerShouldSerialize.Add(chartShadow); " is 121.
Long Statement,Sq1.Core.Charting,DictionaryManyToOne<CHART;ALERTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\DictionaryManyToOne.cs,RenameKey,The length of the statement  "				string msg = "MUST_BE_NO_CONTENT_FOR_THE_OLD_KEY[" + oldSymbolName + "] //RenameKey(" + oldSymbolName + "=>" + newSymbolName + ")"; " is 131.
Long Statement,Sq1.Core.Charting,DictionaryManyToOne<CHART;ALERTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\DictionaryManyToOne.cs,FindContentsForSimilarKey__nullUnsafe,The length of the statement  "				string msg = "NEVER_REGISTERED_IN_this.Lookup_WITH_SAME_.ToString() anotherInstance[" + anotherInstance.ToString() + "]"; " is 121.
Long Statement,Sq1.Core.Charting,DictionaryManyToOne<CHART;ALERTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\DictionaryManyToOne.cs,UnRegisterSimilar,The length of the statement  "				string msg = "NEVER_REGISTERED_IN_this.Lookup_WITH_SAME_.ToString() anotherInstance[" + existingKeyFound.ToString() + "]"; " is 122.
Long Statement,Sq1.Core.Charting,MultiSplitterProperties,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\MultiSplitterProperties.cs,ToString,The length of the statement  "			string ret = "[" + this.ManualOrder + "]:[" + splitterStart + ".." + splitterEnd + "]'[" + panelStart + ".." + panelEnd + "]"; " is 126.
Long Statement,Sq1.Core.Correlation,KPIsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsCalculator.cs,calculateGlobals,The length of the statement  "			// looks stupid' copypaste from rebuildParametersByName() AFFRAID_OF_LOSING_OnParameterRecalculatedLocalsAndDeltas_EVENT " is 120.
Long Statement,Sq1.Core.Correlation,KPIsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsCalculator.cs,calculateGlobals,The length of the statement  "				foreach (string indicatorDotParameter in eachRun.ScriptAndIndicatorParameterClonesByName_BuiltOnBacktestFinished.Keys) { " is 120.
Long Statement,Sq1.Core.Correlation,KPIsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsCalculator.cs,calculateGlobals,The length of the statement  "					IndicatorParameter eachIndicator = eachRun.ScriptAndIndicatorParameterClonesByName_BuiltOnBacktestFinished[indicatorDotParameter]; " is 130.
Long Statement,Sq1.Core.Correlation,KPIsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsCalculator.cs,calculateGlobals,The length of the statement  "					string parameterName = indicatorDotParameter;	// eachIndicator.Name is "NOT_ATTACHED_TO_ANY_INDICATOR_YET" when deserialized " is 124.
Long Statement,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,CalculateGlobals_runEachValueAgainstAllParametersFullyChosen_restoreChosenFromDeserialized,The length of the statement  "					OneParameterOneValue thisChosenOthersNot = varyingThisWhileOthersFullyChosen.OneParamOneValueByValues[oneValueChosenOthersNot]; " is 127.
Long Statement,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,CalculateGlobals_runEachValueAgainstAllParametersFullyChosen_restoreChosenFromDeserialized,The length of the statement  "					//SortedDictionary<int' SystemPerformanceRestoreAble> chosenOnly = thisChosenOthersNot.BacktestsWithMyValueAndOnlyChosenOtherValues; " is 132.
Long Statement,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,CalculateGlobals_runEachValueAgainstAllParametersFullyChosen_restoreChosenFromDeserialized,The length of the statement  "					List<SystemPerformanceRestoreAble> chosenOnly_subset = this.correlator.SequencedBacktestsOriginalMinusParameterValuesUnchosen.Subset; " is 133.
Long Statement,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,CalculateGlobals_runEachValueAgainstAllParametersFullyChosen_restoreChosenFromDeserialized,The length of the statement  "					System.Collections.ObjectModel.ReadOnlyCollection<SystemPerformanceRestoreAble> chosen = this.correlator.SequencedBacktestsOriginalMinusParameterValuesUnchosen.BacktestsReadonly; " is 178.
Long Statement,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,CalculateGlobals_runEachValueAgainstAllParametersFullyChosen_restoreChosenFromDeserialized,The length of the statement  "					System.Collections.ObjectModel.ReadOnlyCollection<SystemPerformanceRestoreAble> all = this.correlator.SequencedBacktestOriginal.BacktestsReadonly; " is 146.
Long Statement,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,CalculateGlobals_runEachValueAgainstAllParametersFullyChosen_restoreChosenFromDeserialized,The length of the statement  "			int chosenWereFound_runCalculateLocalAndDeltas = this.absorbChosenFlagFromDeserialized_restoreAfterAllWereChosenForGlobals(); " is 125.
Long Statement,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,CalculateGlobals_runEachValueAgainstAllParametersFullyChosen_restoreChosenFromDeserialized,The length of the statement  "				string msg = "SO_WHAT_DIDNT_CHANGE_AFTER_this.AvgMomentumsCalculator.Initialize_runEachValueAgainstAllParametersFullyChosen() ???"; " is 131.
Long Statement,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,CalculateGlobals_runEachValueAgainstAllParametersFullyChosen_restoreChosenFromDeserialized,The length of the statement  "					string msg1 = "FIXED_BY_OneParameterAllValuesAveraged.ClearBacktestsForAllMyValue_step1of3() YOU_FORGOT_TO_RESET_SOMETHING_IN_CORRELATOR__SECOND_CLICK_ON_SEQUENCER_RESULTS"; " is 173.
Long Statement,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,CalculateLocalsAndDeltas,The length of the statement  "					oneParamOneValue.KPIsMomentumDispersionLocal.Reset_addBacktests_getMyMembersReady(oneParamOneValue.BacktestsWithMyValueAndOnlyChosenOtherValues); " is 145.
Long Statement,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,absorbChosenFlagFromDeserialized_restoreAfterAllWereChosenForGlobals,The length of the statement  "				OneParameterAllValuesAveraged paramDeserialized = this.correlator.KeepDeserializedChosen.ContainsKey(paramRebuilt.ParameterName) " is 128.
Long Statement,Sq1.Core.Correlation,MomentumsCalculator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\MomentumsCalculator.cs,absorbChosenFlagFromDeserialized_restoreAfterAllWereChosenForGlobals,The length of the statement  "					string msg = "I_REFUSE_TO_ABSORB_NO_VALUES_FOR___DESERIALIZED [" + paramDeserialized + "] paramRebuilt[" + paramRebuilt.ParameterName + "]"; " is 140.
Long Statement,Sq1.Core.Correlation,KPIsMomentum,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsMomentum.cs,AddKPIs,The length of the statement  "			if (double.IsNaN(anotherRun.WinLossRatio) || double.IsInfinity(anotherRun.WinLossRatio) || double.IsNegativeInfinity(anotherRun.WinLossRatio)) { " is 144.
Long Statement,Sq1.Core.Correlation,KPIsMomentum,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsMomentum.cs,AddKPIs,The length of the statement  "			if (double.IsNaN(anotherRun.ProfitFactor) || double.IsInfinity(anotherRun.ProfitFactor) || double.IsNegativeInfinity(anotherRun.ProfitFactor)) { " is 144.
Long Statement,Sq1.Core.Correlation,KPIsMomentum,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsMomentum.cs,AddKPIs,The length of the statement  "			if (double.IsNaN(anotherRun.RecoveryFactor) || double.IsInfinity(anotherRun.RecoveryFactor) || double.IsNegativeInfinity(anotherRun.RecoveryFactor)) { " is 150.
Long Statement,Sq1.Core.Correlation,KPIsMomentum,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsMomentum.cs,ToString,The length of the statement  "			string netFormatted = this.NetProfit.ToString("N2").Replace("'"' "");	//copypaste from NetProfitRecoveryForScriptContextNewName " is 127.
Long Statement,Sq1.Core.Correlation,KPIsAveraged,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsAveraged.cs,AddKPIs,The length of the statement  "			if (double.IsNaN(anotherRun.WinLossRatio) || double.IsInfinity(anotherRun.WinLossRatio) || double.IsNegativeInfinity(anotherRun.WinLossRatio)) { " is 144.
Long Statement,Sq1.Core.Correlation,KPIsAveraged,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsAveraged.cs,AddKPIs,The length of the statement  "			if (double.IsNaN(anotherRun.ProfitFactor) || double.IsInfinity(anotherRun.ProfitFactor) || double.IsNegativeInfinity(anotherRun.ProfitFactor)) { " is 144.
Long Statement,Sq1.Core.Correlation,KPIsAveraged,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\KPIsAveraged.cs,AddKPIs,The length of the statement  "			if (double.IsNaN(anotherRun.RecoveryFactor) || double.IsInfinity(anotherRun.RecoveryFactor) || double.IsNegativeInfinity(anotherRun.RecoveryFactor)) { " is 150.
Long Statement,Sq1.Core.Correlation,OneParameterAllValuesAveraged,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\OneParameterAllValuesAveraged.cs,KPIsGlobalNoMoreParameters_CalculateGlobalsAndCloneToLocals_step3of3,The length of the statement  "			//REPLACE_WITH_max(avg(Net))'min(StDev(Net))_ALIGNED_WITH_MaximizationCriterion this.AllValuesWithArtificials.Add(this.ArtificialRowVariance); " is 142.
Long Statement,Sq1.Core.Correlation,OneParameterAllValuesAveraged,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\OneParameterAllValuesAveraged.cs,RaiseOnEachParameterRecalculatedLocalsAndDeltas,The length of the statement  "				string msg = "OneParameterControl_WASNT_READY_TO_GET_BACK_RECALCULATED_KPIs //RaiseOnEachParameterRecalculatedLocalsAndDeltas()"; " is 129.
Long Statement,Sq1.Core.Correlation,OneParameterOneValue,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\OneParameterOneValue.cs,CalculateLocalsAndDeltas,The length of the statement  "			SortedDictionary<int' SystemPerformanceRestoreAble> backupToSeeChanges = this.BacktestsWithMyValueAndOnlyChosenOtherValues; " is 123.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,Initialize,The length of the statement  "			if (this.SequencedBacktestOriginal != null && this.SequencedBacktestOriginal.ToString() == sequencedBacktests.ToString()) { " is 123.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,Initialize,The length of the statement  "			this.CorrelatorDataSnapshotSerializer.Initialize(Assembler.InstanceInitialized.AppDataPath' this.Executor.Strategy.StoredInJsonRelName " is 134.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,Initialize,The length of the statement  "			//FIXES_ZEROES_AFTER_SECOND_CLICK_BUT_MOVED_TO_AvgMomentumsCalculator.reset() this.AvgMomentumsCalculator = new AvgCorMomentumsCalculator(this); " is 144.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,calculateGlobalsAndLocals,The length of the statement  "				// notify Sequencer of the backtests chosen to force it apply SequencerDataSnapshot.ShowOnlyCorrelatorChosenBacktests .StatsAndHistoryCollapsed via BacktestsReplaceWithCorrelated() " is 180.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,rebuildParametersByName,The length of the statement  "				foreach (string indicatorDotParameter in eachRun.ScriptAndIndicatorParameterClonesByName_BuiltOnBacktestFinished.Keys) { " is 120.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,rebuildParametersByName,The length of the statement  "					IndicatorParameter eachIndicator = eachRun.ScriptAndIndicatorParameterClonesByName_BuiltOnBacktestFinished[indicatorDotParameter]; " is 130.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,rebuildParametersByName,The length of the statement  "					string parameterName = indicatorDotParameter;	// eachIndicator.Name is "NOT_ATTACHED_TO_ANY_INDICATOR_YET" when deserialized " is 124.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,ChooseThisOneResetOthers_RecalculateAllKPIsLocalAndDelta,The length of the statement  "					eachValue.Chosen  = willSetTo;		// breakpoint to confirm on one click just one gets selected and just one gets deselected " is 121.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,HasUnchosenParametersExceptFor,The length of the statement  "			foreach (string indicatorDotParameter in eachRegardless.ScriptAndIndicatorParameterClonesByName_BuiltOnBacktestFinished.Keys) { " is 127.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,HasUnchosenParametersExceptFor,The length of the statement  "				IndicatorParameter eachIndicator = eachRegardless.ScriptAndIndicatorParameterClonesByName_BuiltOnBacktestFinished[indicatorDotParameter]; " is 137.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,HasUnchosenParametersExceptFor,The length of the statement  "				string parameterName = indicatorDotParameter;	// eachIndicator.Name is "NOT_ATTACHED_TO_ANY_INDICATOR_YET" when deserialized " is 124.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,RaiseOnSequencedBacktestsOriginalMinusParameterValuesUnchosenIsRebuilt,The length of the statement  "				string msg = "SEQUENCER_WASNT_READY_TO_GET_BACK_SHRINKED_SEQUENCED_BACKTESTS //RaiseOptimizedBacktestsListIsRebuiltWithoutUnchosenParameters()"; " is 144.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,SubsetPercentagePropagate,The length of the statement  "			//this.repositoryJsonCorrelator.SerializeSingle(this.sequencedBacktestOriginal);		// OVERHEAD_RESAVING_FEW_MEGABYTES_FOR_ONE_BOOLEAN_CHANGED " is 140.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,SubsetPercentagePropagate,The length of the statement  "			this.calculateGlobalsAndLocals();	//rebuildParametersByName() invoked only once per lifetime' koz I subscribe to event late (3 steps omitted here but you'll fig) " is 161.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,SubsetPercentageFromEndPropagate,The length of the statement  "			//this.repositoryJsonCorrelator.SerializeSingle(this.sequencedBacktestOriginal);		// OVERHEAD_RESAVING_FEW_MEGABYTES_FOR_ONE_BOOLEAN_CHANGED " is 140.
Long Statement,Sq1.Core.Correlation,Correlator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Correlation\Correlator.cs,SubsetPercentageFromEndPropagate,The length of the statement  "			this.calculateGlobalsAndLocals();	//rebuildParametersByName() invoked only once per lifetime' koz I subscribe to event late (3 steps omitted here but you'll fig)		} " is 164.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,QueuePauseIgnorePump_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "			SymbolChannel<StreamingConsumerChart> channel = this.StreamingAdapter.DistributorCharts_substitutedDuringLivesim.GetChannelFor_nullMeansWasntSubscribed(executorImBacktesting.Bars.Symbol); " is 187.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,QueuePauseIgnorePump_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "			string msig = " //QueuePauseIgnorePump_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst(" + executorImBacktesting + ")"; " is 140.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,QueuePauseIgnorePump_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "				string msg = "NOT_AN_ERROR__BACKTESTER_EMPLOYS_OWN_QUEUE__NO_CHART_NOR_SOLIDIFIER_AT_TIMEFRAME_DIFFERENT_TO_DS'S_CAN_BE_POSSIBLE" " is 129.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,QueuePauseIgnorePump_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "					string msg = "WILL_NOT_PAUSE_PUMP DANGEROUS_DROPPING_INCOMING_QUOTES__PUSHING_THREAD_HAVENT_STARTED (review how you use QuotePump)"; " is 132.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,QueueResumeIgnorePump_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "			string msig = " //QueueResumeIgnorePump_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst(" + executorImBacktesting + ")"; " is 143.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,QueueResumeIgnorePump_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "			SymbolChannel<StreamingConsumerChart> channel = this.StreamingAdapter.DistributorCharts_substitutedDuringLivesim.GetChannelFor_nullMeansWasntSubscribed(executorImBacktesting.Bars.Symbol); " is 187.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,QueueResumeIgnorePump_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "				string msg = "NOT_AN_ERROR__BACKTESTER_EMPLOYS_OWN_QUEUE__NO_CHART_NOR_SOLIDIFIER_AT_TIMEFRAME_DIFFERENT_TO_DS'S_CAN_BE_POSSIBLE" " is 129.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,QueueResumeIgnorePump_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "					string msg = "WILL_NOT_UNPAUSE_PUMP DANGEROUS_I_MIGHT_HAVE_DROPPED_ALREADY_A_FEW_QUOTES__PUSHING_THREAD_HAVENT_STARTED (review how you use QuotePump)"; " is 151.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,OwnLivesimHelper_PumpPause_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "			SymbolChannel<StreamingConsumerChart> channel = this.StreamingAdapter.DistributorCharts_substitutedDuringLivesim.GetChannelFor_nullMeansWasntSubscribed(executorImLivesimming.Bars.Symbol); " is 187.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,OwnLivesimHelper_PumpPause_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "			string msig = " //OwnLivesimPumpHelper_PumpPause_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst(" + executorImLivesimming + ")"; " is 150.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,OwnLivesimHelper_PumpPause_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "				string msg = "NOT_AN_ERROR__BACKTESTER_EMPLOYS_OWN_QUEUE__NO_CHART_NOR_SOLIDIFIER_AT_TIMEFRAME_DIFFERENT_TO_DS'S_CAN_BE_POSSIBLE" " is 129.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,OwnLivesimHelper_PumpPause_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "					string msg = "WILL_PAUSE DANGEROUS_DROPPING_INCOMING_QUOTES__PUSHING_THREAD_HAVENT_STARTED (review how you use QuotePump)"; " is 123.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,OwnLivesimHelper_PumpResume_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "			string msig = " //OwnLivesimHelper_PumpResume_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst(" + executorImLivesimming + ")"; " is 149.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,OwnLivesimHelper_PumpResume_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "			SymbolChannel<StreamingConsumerChart> channel = this.StreamingAdapter.DistributorCharts_substitutedDuringLivesim.GetChannelFor_nullMeansWasntSubscribed(executorImLivesimming.Bars.Symbol); " is 187.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,OwnLivesimHelper_PumpResume_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "				string msg = "NOT_AN_ERROR__BACKTESTER_EMPLOYS_OWN_QUEUE__NO_CHART_NOR_SOLIDIFIER_AT_TIMEFRAME_DIFFERENT_TO_DS'S_CAN_BE_POSSIBLE" " is 129.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,OwnLivesimHelper_PumpResume_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst,The length of the statement  "					string msg = "WILL_UNPAUSE DANGEROUS_I_MIGHT_HAVE_DROPPED_ALREADY_A_FEW_QUOTES__PUSHING_THREAD_HAVENT_STARTED (review how you use QuotePump)"; " is 142.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,PumpingWaitUntilPaused,The length of the statement  "			SymbolChannel<StreamingConsumerChart> channel = this.StreamingAdapter.DistributorCharts_substitutedDuringLivesim.GetChannelFor_nullMeansWasntSubscribed(bars.Symbol); " is 165.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,QueuePauseIgnorePump_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst_WRAPPER,The length of the statement  "					.BacktestContextInitialize_pauseQueueForBacktest_leavePumpUnpausedForLivesimDefault_overrideable(executor' barsEmptyButWillGrow); " is 129.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,QueuePauseIgnorePump_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst_WRAPPER,The length of the statement  "						.BacktestContextInitialize_pauseQueueForBacktest_leavePumpUnpausedForLivesimDefault_overrideable(executor' barsEmptyButWillGrow); " is 129.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,LivesimStreamingDefault_PumpPause_freezeOtherConsumers_forSameSymbolScale,The length of the statement  "			string msig = " //LivesimStreamingDefault_PumpPause_freezeOtherConsumers_forSameSymbolScale(" + executorImLivesimming + ")"; " is 124.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,LivesimStreamingDefault_PumpPause_freezeOtherConsumers_forSameSymbolScale,The length of the statement  "			SymbolChannel<StreamingConsumerChart> channel_nullUnsafe = this.StreamingAdapter.DistributorCharts_substitutedDuringLivesim.GetChannelFor_nullMeansWasntSubscribed(executorImLivesimming.Bars.Symbol); " is 198.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,LivesimStreamingDefault_PumpPause_freezeOtherConsumers_forSameSymbolScale,The length of the statement  "					string msg = "WILL_PAUSE DANGEROUS_DROPPING_INCOMING_QUOTES__PUSHING_THREAD_HAVENT_STARTED (review how you use QuotePump)"; " is 123.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,LivesimStreamingDefault_PumpResume_unfreezeOtherConsumers_forSameSymbolScale,The length of the statement  "			string msig = " //LivesimStreamingDefault_PumpResume_unfreezeOtherConsumers_forSameSymbolScale(" + executorImLivesimming + ")"; " is 127.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,LivesimStreamingDefault_PumpResume_unfreezeOtherConsumers_forSameSymbolScale,The length of the statement  "			SymbolChannel<StreamingConsumerChart> channel_nullUnsafe = this.StreamingAdapter.DistributorCharts_substitutedDuringLivesim.GetChannelFor_nullMeansWasntSubscribed(executorImLivesimming.Bars.Symbol); " is 198.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,LivesimStreamingDefault_PumpResume_unfreezeOtherConsumers_forSameSymbolScale,The length of the statement  "					string msg = "WILL_UNPAUSE DANGEROUS_I_MIGHT_HAVE_DROPPED_ALREADY_A_FEW_QUOTES__PUSHING_THREAD_HAVENT_STARTED (review how you use QuotePump)"; " is 142.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,SymbolAdd,The length of the statement  "			// RepositoryJsonDataSource.RaiseOnSymbolAdded()_WILL_NOTIFY_DATASOURCE_TREE_UPSTACK this.DataSourceEdited_treeShouldRebuild(this); " is 131.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,SymbolCopyOrCompressFrom,The length of the statement  "			string msig = " // DataSource[" + this.Name + "].SymbolCopyOrCompressFrom(" + dataSourceFrom.Name + "' " + symbolToCopy + ") "; " is 127.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,SymbolCopyOrCompressFrom,The length of the statement  "				throw new Exception("CANT_CONVERT_TIMEFRAMES_TO_MORE_GRANULAR " + dataSourceFrom.Name + "[" + dataSourceFrom.ScaleInterval + "]=> " + dataSourceTo.Name + "[" + dataSourceTo.ScaleInterval + "]" + msig); " is 201.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,SymbolCopyOrCompressFrom,The length of the statement  "				Assembler.PopupException("BARS_SAVED_UNCOMPRESSED: " + filePickedUp.BarsLoadAll_nullUnsafe_threadSafe().Count + msig' null' false); " is 131.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,SymbolCopyOrCompressFrom,The length of the statement  "				Bars barsCompressed = dataSourceFrom.BarsLoadAndCompress_nullUnsafe(symbolToCopy' dataSourceTo.ScaleInterval' out millisElapsedLoadCompress); " is 141.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,SymbolRename,The length of the statement  "				bool executorProhibitedRenaming = this.RaiseOnSymbolRenamed_eachExecutorShouldRenameItsBars_saveStrategyIfNotNull(oldSymbolName' newSymbolName); " is 144.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,SymbolRename,The length of the statement  "				if (executorProhibitedRenaming) return;	// event handlers are responsible to Assembler.PopupException()' I reported MY errors above " is 131.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,SymbolRename,The length of the statement  "				SymbolOfDataSource oldSymbolOfDataSource = this.ChartsOpenForSymbol.FindSimilarKey(new SymbolOfDataSource(oldSymbolName' this)); " is 128.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,SymbolRename,The length of the statement  "				// RepositoryJsonDataSource.RaiseOnSymbolRenamed()_WILL_NOTIFY_DATASOURCE_TREE_UPSTACK this.DataSourceEdited_treeShouldRebuild(this); " is 133.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,SymbolRemove,The length of the statement  "			List<ChartShadow> chartsForOldSymbol = this.ChartsOpenForSymbol.FindContentsForSimilarKey__nullUnsafe(new SymbolOfDataSource(symbolToDelete' this)); " is 148.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,SymbolRemove,The length of the statement  "				// RepositoryJsonDataSource.RaiseOnSymbolRemovedDone()_WILL_NOTIFY_DATASOURCE_TREE_UPSTACK this.DataSourceEdited_treeShouldRebuild(this); " is 137.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSourceFolderRename,The length of the statement  "				throw new Exception("DATASOURCE_OLD_FOLDER_DOESNT_EXIST this.FolderForBarDataStore[" + this.DataSourceAbspath + "]" + msig); " is 124.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSourceFolderRename,The length of the statement  "				string abspathNewRandomFolderName = Path.Combine(this.DataSourcesAbspath' newName + "-OutOfMyWay-" + new Random().Next(1000000' 9999999)); " is 138.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSourceFolderRename,The length of the statement  "					abspathNewRandomFolderName = Path.Combine(this.DataSourcesAbspath' newName + "-OutOfMyWay-" + new Random().Next(1000000' 9999999)); " is 131.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSourceFolderRename,The length of the statement  "						string fatal = "CHECK_YOUR_FOLDER_IT_HAS_WAY_TOO_MANY_-OutOfMyWay-_FOLDERS LAST_EXISTING[" + abspathNewRandomFolderName + "]" " is 125.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSourceFolderRename,The length of the statement  "				string msg = "DATASOURCE_NEW_FOLDER_ALREADY_EXISTS abspathNewFolderName[" + abspathNewFolderName + "]=>renamingToRandom[" + abspathNewRandomFolderName + "] TO_GET_CLEAR_WAY"; " is 174.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSourceFolderRename,The length of the statement  "					msg = "RENAME_FAILED__GRANT_YOURSELF_FULL_CONTROL_TO_FOLDER this.DataSourcesAbspath[" + this.DataSourcesAbspath + "] " + msg; " is 125.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSourceFolderRename,The length of the statement  "				string msg = "RENAME_FAILED__GRANT_YOURSELF_FULL_CONTROL_TO_FOLDER this.DataSourcesAbspath[" + this.DataSourcesAbspath + "] " " is 125.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,Initialize,The length of the statement  "				Assembler.PopupException("BARS_INITIALIZED_EMPTY[" + mustBeZero + "] " + millisElapsed + " " + barsEmpty.ToString()' null' false); " is 130.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,BarAppend_orReplaceLast,The length of the statement  "			//v1 TESTED LIMITED_TO_APPEND_ONLY__SUITS_FOR_APPENDING_NOT_REPLACING_LAST_STORED_BAR ret = file.BarAppendStaticUnconditionalThreadSafe(barLastFormed); " is 151.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,BarAppend_orReplaceLast,The length of the statement  "			millisElapsed = "BarAppendOrReplaceLast[" + barLastFormed.Symbol + "][" + ret + "](" + replaceLastBarTimer.ElapsedMilliseconds + ")ms"; " is 135.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,BarsLoadAndCompress_nullUnsafe,The length of the statement  "				string msg = "CANNOT_INCREASE_GRANULARITY " + symbolRq + "[" + barsOriginal.ScaleInterval + "]=>[" + scaleIntervalRq + "]"; " is 123.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,BarsLoadAndCompress_nullUnsafe,The length of the statement  "			millisElapsed += " ToLargerScaleInterval[" + barsCompressed.Symbol + ":" + barsCompressed.ScaleInterval + "][" + barsCompressed.Count + "]bars[" + compressTimer.ElapsedMilliseconds + "]msCompressed"; " is 199.
Long Statement,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,BarsLoad_nullUnsafe,The length of the statement  "				string msg = "BARS_NULL " + barsFile.Abspath + " //BarsLoadAndCompress(" + symbolRq + ":" + this.BarsRepository.ScaleInterval + "][NULL]bars[" + readAllTimer.ElapsedMilliseconds + "]msRead"; " is 190.
Long Statement,Sq1.Core.DataTypes,SymbolInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\SymbolInfo.EventGenerator.cs,raisePriceDecimalsChanged,The length of the statement  "				string msg = "ONE_OF_PriceDecimalsChanged_SUBSCRIBERS_THREW_DEPRIVING_OTHERS SymbolInfo[" + this.Symbol + "].PriceDecimals=>[" + this.PriceDecimals + "]"; " is 154.
Long Statement,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,roundDateDownToMyInterval,The length of the statement  "			if (this.ScaleInterval == null) throw new Exception("ScaleInterval=null in roundDateDownToInterval(" + dateTimeToRoundDown + ")"); " is 130.
Long Statement,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,roundDateDownToMyInterval,The length of the statement  "					int secondsRoundedDown = ((int)Math.Floor((double)dateTime.Second / this.ScaleInterval.Interval)) * this.ScaleInterval.Interval; " is 128.
Long Statement,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,roundDateDownToMyInterval,The length of the statement  "					dateTime = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' secondsRoundedDown); " is 121.
Long Statement,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,roundDateDownToMyInterval,The length of the statement  "					int minutesRoundedDown = ((int)Math.Floor((double)dateTime.Minute / this.ScaleInterval.Interval)) * this.ScaleInterval.Interval; " is 128.
Long Statement,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,roundDateDownToMyInterval,The length of the statement  "					int hoursRoundedDown = ((int)Math.Floor((double)dateTime.Hour / this.ScaleInterval.Interval)) * this.ScaleInterval.Interval; " is 124.
Long Statement,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,FillAtSlimBarIsWithinSpread,The length of the statement  "			// not testing if the quote with spreadMaxDeviated is within Low..High => use ContainsBidAskForQuoteGenerated() before calling me " is 129.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,DateTimeBeforeDayDecreasedScanBackward,The length of the statement  "					+ "; WILL_NOT_RETURN_EARLIER_DATE: implement scanForEarlier if you need to pass ScaleInterval-unaligned or non-existing Date to find an existing one"; " is 150.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,BarIndexSinceTodayMarketOpenSuggestForwardFor,The length of the statement  "			// v1: MarketInfo.MarketOpenServerTime may contain only Hour:Minute:Second and all the rest is 01-Jan-01 => use than ReplaceTimeOpenWith()  " is 138.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,BarIndexSinceTodayMarketOpenSuggestForwardFor,The length of the statement  "				if (this.MarketInfo.IsMarketOpenDuringDateIntervalServerTime(forwardFromMarketOpenToCurrentBar' nextBarWillOpen) == false) continue; " is 132.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,BarIndexExpectedMarketClosesTodaySinceMarketOpenSuggestBackwardForDateLaterOrEqual,The length of the statement  "			string msig = " //BarIndexExpectedMarketClosesTodaySinceMarketOpenSuggestBackwardForDateLaterOrEqual(" + dateTimeToFind + ") USEFUL_ONLY_IN_SCRIPT"; " is 148.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,BarIndexExpectedMarketClosesTodaySinceMarketOpenSuggestBackwardForDateLaterOrEqual,The length of the statement  "				if (this.MarketInfo.IsMarketOpenDuringDateIntervalServerTime(thisBarWillOpen' backFromDayCloseToCurrentBar) == false) continue; " is 127.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,BarStreaming_createNewAttach_orAbsorb,The length of the statement  "			bool shouldAppend = this.BarLast == null || barToMerge_intoStreaming.DateTimeOpen >= this.BarLast.DateTimeNextBarOpenUnconditional; " is 131.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,BarStreaming_createNewAttach_orAbsorb,The length of the statement  "			if (shouldAppend) {	// if this.BarStreaming == null I'll have just one bar in Bars which will be streaming and no static  " is 120.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,BarStreaming_createNewAttach_orAbsorb,The length of the statement  "				this.BarStreaming_nullUnsafe.MergeExpandHLCV_whileCompressingManyBarsToOne(barToMerge_intoStreaming' false);	// duplicated volume for just added bar; moved up " is 158.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,BarStreaming_overrideDOHLCVwith,The length of the statement  "				string msg = "CAN_ONLY_OVERRIDE_STREAMING_NOT_NULL_WHILE_NOW_IT_IS_NULL OverrideStreamingDOHLCVwith(" + bar + "): this.streamingBar == null"; " is 141.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,BarStreaming_overrideDOHLCVwith,The length of the statement  "			// IMPORTANT!! this.BarStreamingCloneReadonly freezes changes in the clone so that subscribers get the same StreamingBar " is 120.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,BarStreaming_overrideDOHLCVwith,The length of the statement  "			//OBSOLETE_NOW__USE_STREAMING_CONSUMERS_INSTEAD this.raiseOnBarStreamingUpdated(this.BarStreaming_nullUnsafeCloneReadonly); " is 123.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,Clone_selectRange,The length of the statement  "			if (startDate == DateTime.MinValue && endDate == DateTime.MaxValue && dataRangeRq.Range != BarRange.AllData && dataRangeRq.RecentBars == 0) return this; " is 152.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,checkThrowCanConvert,The length of the statement  "			string msig = "checkThrowCanConvert(" + this.ScaleInterval + "=>" + scaleIntervalTo + ") for " + this + " datasource[" + this.DataSource + "]"; " is 143.
Long Statement,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,ToLarger_scaleInterval,The length of the statement  "			Bar barCompressing = new Bar(this.Symbol' scaleIntervalTo' barFromFirst.DateTimeOpen);	// I'm happy with RoundDateDownInitTwoAuxDates() " is 135.
Long Statement,Sq1.Core.DataTypes,BarsUnscaled,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarsUnscaled.cs,Add,The length of the statement  "			throw new Exception("UNSUPPORTED_AVOID_USING_BarsUnscaled.Add(DateTime key' double value): use BarAppend(Bar barAdding) instead"); " is 130.
Long Statement,Sq1.Core.DataTypes,DataSeriesProxyBars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\DataSeriesProxyBars.cs,Append,The length of the statement  "			throw new InvalidOperationException("DataSeriesProxyBars_IS_A_PROXY__DID_YOU_WANT_TO_APPEND_TO_BARS???_CAN_NOT_ADD_ONLY_ONE_VALUE_INTO " + this.ToString()); " is 156.
Long Statement,Sq1.Core.DataTypes,DataSeriesProxyBars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\DataSeriesProxyBars.cs,Clear,The length of the statement  "			throw new InvalidOperationException("DataSeriesProxyBars_IS_A_PROXY__DID_YOU_WANT_TO_CLEAR_BARS???_CAN_NOT_CLEAR " + this.ToString()); " is 134.
Long Statement,Sq1.Core.DataTypes,DataSeriesProxyBars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\DataSeriesProxyBars.cs,ToString,The length of the statement  "			//return "DataSeriesProxyBars[" + this.dataSeriesBeingExposed.ToString() + "] based on " + this.BarsBeingProxied.ToString(); " is 124.
Long Statement,Sq1.Core.DataTypes,DataSeriesTimeBased,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\DataSeriesTimeBased.cs,checkThrow,The length of the statement  "				string msg = "#2 APPENDING_SAME_DATE_TWICE_NOT_ALLOWED doublesByDate[" + appending + "]=[" + this.doublesByDate[appending] + "]"; " is 129.
Long Statement,Sq1.Core.DataTypes,DataSeriesBasic,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\DataSeriesBasic.cs,MinValueBetweenIndexesDoubleMaxValueUnsafe,The length of the statement  "					string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)"; " is 147.
Long Statement,Sq1.Core.DataTypes,DataSeriesBasic,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\DataSeriesBasic.cs,MinValueBetweenIndexesDoubleMaxValueUnsafe,The length of the statement  "				double barCanBeStreamingWithNaNs = this[i];		// this[int] is virtual' for Indicator.OwnValuesCalculated this[int] is located in DataSeriesTimeBased.cs " is 150.
Long Statement,Sq1.Core.DataTypes,DataSeriesBasic,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\DataSeriesBasic.cs,MaxValueBetweenIndexesDoubleMinValueUnsafe,The length of the statement  "					string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)"; " is 147.
Long Statement,Sq1.Core.DataTypes,DataSeriesBasic,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\DataSeriesBasic.cs,MaxValueBetweenIndexesDoubleMinValueUnsafe,The length of the statement  "				double barCanBeStreamingWithNaNs = this[i];		// this[int] is virtual' for Indicator.OwnValuesCalculated this[int] is located in DataSeriesTimeBased.cs " is 150.
Long Statement,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,LessGranularThan,The length of the statement  "			return this.AsTimeSpanInSeconds < another.AsTimeSpanInSeconds;		// SHOW_ME_THE_NUMBERS this.AsTimeSpan < another.AsTimeSpan " is 123.
Long Statement,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,MoreGranularThan,The length of the statement  "			return this.AsTimeSpanInSeconds > another.AsTimeSpanInSeconds;		// SHOW_ME_THE_NUMBERS this.AsTimeSpan > another.AsTimeSpan " is 123.
Long Statement,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,AdvanceToWhenClearingResumes,The length of the statement  "				 clearingTimespan.ResumeServerTimeOfDay.Hour' clearingTimespan.ResumeServerTimeOfDay.Minute' clearingTimespan.ResumeServerTimeOfDay.Second); " is 139.
Long Statement,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,Convert_localTime_toServerTime,The length of the statement  "			//serverTime = TimeZoneInfo.ConvertTime(localTime.ToUniversalTime()' this.TimeZoneInfo);			// TimeZoneInfo.ConvertTime() was returning 7hrs while I should get 8hrs difference! " is 175.
Long Statement,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,Convert_localTime_toServerTime,The length of the statement  "			serverTime = TimeZoneInfo.ConvertTime(localTime' TimeZoneInfo.Local' this.TimeZoneInfo);		// TimeZoneInfo.ConvertTime() was returning 7hrs while I should get 8hrs difference! " is 174.
Long Statement,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,Convert_localTime_toServerTime,The length of the statement  "			//TimeZoneInfo localCustom = TimeZoneInfo.CreateCustomTimeZone("id_LOCAL_CUSTOMIZED"' new TimeSpan(4'0'0)' "dispName_LOCAL_CUSTOMIZED"' "stdName_LOCAL_CUSTOMIZED"); " is 164.
Long Statement,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,IsMarketSuspendedForClearing,The length of the statement  "			MarketClearingTimespan suspendedNow = this.GetClearingTimespan_ifMarketSuspended(dateTimeServer' considerSuspendedIfFullBarIsWithinClearingTimespan_NYI); " is 153.
Long Statement,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,IsMarketOpenDuringDateIntervalServerTime,The length of the statement  "			this.GetRegularOrShortDayOpenCloseMarketTimeForServerDate(dateTimeServerBarOpen' out openTimeServer' out closeTimeServer); " is 122.
Long Statement,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,IsMarketOpenDuringDateIntervalServerTime,The length of the statement  "			bool isMarketSuspendedForClearing = this.IsMarketSuspendedForClearingDuringBar(dateTimeServerBarOpen' dateTimeServerBarClose); " is 126.
Long Statement,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,IsMarketSuspendedForClearingDuringBar,The length of the statement  "			MarketClearingTimespan suspendedNow = this.GetSingleClearingTimespan_ifMarketSuspended_duringBar(dateTimeServerBarOpen' dateTimeServerBarClose); " is 144.
Long Statement,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,ClearingIntervalsStretchingWholeBarsTotalled,The length of the statement  "				// TODO: CAN_BE_WRONG_APPROACH_BUT_FILTERING_CLEARING_INTERVALS_STRETCHING_BEYOND_MARKETOPEN_MARKETCLOSE_ACTUALLY_WORKS_HERE " is 124.
Long Statement,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,ClearingIntervalsStretchingWholeBarsTotalled,The length of the statement  "				// TODO: CAN_BE_WRONG_APPROACH_BUT_FILTERING_CLEARING_INTERVALS_STRETCHING_BEYOND_MARKETOPEN_MARKETCLOSE_ACTUALLY_WORKS_HERE " is 124.
Long Statement,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetClearingResumes,The length of the statement  "			//	+ ret.ToString("HH:mm") + "]' +[" + (ret-quoteTimeGuess).TotalSeconds + "]sec for quoteTimeGuess[" + quoteTimeGuess + "]"; " is 125.
Long Statement,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetReason_ifMarket_closedOrSuspended_at,The length of the statement  "				reasonMarketIsClosedNow += "MARKET_CLOSED_ALREADY[" + marketClose_today.ToString("HH:mm") + "] timeAgo[" + timeAgo + "] "; " is 122.
Long Statement,Sq1.Core.DataTypes,Quote,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Quote.cs,Replace_myStreamingBar_withConsumersStreamingBar,The length of the statement  "				string msg = "SYMBOL_MISMATCH__CANT_SET_PARENT_BAR_FOR_QUOTE quote.Symbol[" + this.Symbol + "] != parentBar.Symbol[" + streamingParentBar.Symbol + "]"; " is 151.
Long Statement,Sq1.Core.DataTypes,Quote,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Quote.cs,Bind_streamingBar_unattached,The length of the statement  "				string msg = "I_REFUSE_TO_BIND_UNATTACHED_STREAMING_BAR__THIS_QUOTE_IS_ALREADY_BOUND__USE_Replace_myStreamingBar_withConsumersStreamingBar()"; " is 142.
Long Statement,Sq1.Core.DataTypes,Quote,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Quote.cs,PriceBetweenBidAsk,The length of the statement  "				// if (filled == 1 && this.fillOutsideQuoteSpreadParanoidCheckThrow == true) {alert.IsFilledOutsideQuote_DEBUG_CHECK;alert.IsFilledOutsideBarSnapshotFrozen_DEBUG_CHECK;} " is 169.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,Order_submit,The length of the statement  "//			base.OrderProcessor.BrokerCallback_orderStateUpdate_byGuid_ifDifferent_dontPostProcess_appendPropagateMessage(order.GUID' OrderState.Submitted' msg); " is 154.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,Order_submit,The length of the statement  "			OrderStateMessage omsg_emitting = new OrderStateMessage(order' OrderState.Submitted' "SIMULATING_ORDER_EMITTING" + msig); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,Order_submit,The length of the statement  "			OrderStateMessage omsg_confirmed = new OrderStateMessage(order' OrderState.WaitingBrokerFill' "SIMULATING_BROKER_CONFRIMED_SUBMIT" + msig); " is 139.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			msigHead = " orderKiller[" + orderKiller.SernoExchange + "]=>[" + OrderState.KillerPreSubmit + "] <= orderVictim[" + orderVictim.SernoExchange + "][" + orderVictim.State + "]"; " is 176.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			OrderStateMessage omg_preSubmit_killer = new OrderStateMessage(orderKiller' OrderState.KillerPreSubmit' "SIMULATING_PREPARING_KILL_COMMAND_FOR_BROKER" + msigHead); " is 163.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			msigHead = " orderVictim[" + orderVictim.SernoExchange + "]=>[" + OrderState.VictimsBulletPreSubmit + "] <= orderKiller[" + orderKiller.SernoExchange + "][" + orderKiller.State + "]"; " is 183.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			OrderStateMessage omsg_preSubmit_victim = new OrderStateMessage(orderVictim' OrderState.VictimsBulletPreSubmit' "SIMULATING_PREPARING_KILL_COMMAND_FOR_BROKER__VICTIM_SHOULD_KNOW" + msigHead); " is 191.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			msigHead = " orderKiller[" + orderKiller.SernoExchange + "]=>[" + OrderState.KillerTransSubmittedOK + "] <= orderVictim[" + orderVictim.SernoExchange + "][" + orderVictim.State + "]"; " is 183.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			OrderStateMessage omg_transSubmitted_killer = new OrderStateMessage(orderKiller' OrderState.KillerTransSubmittedOK' "SIMULATING_SENDING_KILL_TRANSACTION" + msigHead); " is 166.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			msigHead = " orderVictim[" + orderVictim.SernoExchange + "]=>[" + OrderState.VictimsBulletConfirmed + "] <= orderKiller[" + orderKiller.SernoExchange + "][" + orderKiller.State + "]"; " is 183.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			OrderStateMessage omsg_confirmed_victim = new OrderStateMessage(orderVictim' OrderState.VictimsBulletConfirmed' "SIMULATING_SENDING_KILL_TRANSACTION__VICTIM_SHOULD_KNOW" + msigHead); " is 182.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			msigHead = " orderKiller[" + orderKiller.SernoExchange + "]=>[" + OrderState.WaitingBrokerFill + "] <= orderVictim[" + orderVictim.SernoExchange + "][" + orderVictim.State + "]"; " is 178.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			OrderStateMessage omsg_confirmed_killer = new OrderStateMessage(orderKiller' OrderState.WaitingBrokerFill' "SIMULATING_BROKER_CONFRIMED_RECEPTION_KILL_ORDER (not really expected for killer to get this status)" + msigHead); " is 222.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			msigHead = " orderKiller[" + orderKiller.SernoExchange + "]=>[" + OrderState.KillerBulletFlying + "] <= orderVictim[" + orderVictim.SernoExchange + "][" + orderVictim.State + "]"; " is 179.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			OrderStateMessage omsg_waitingFill_killer = new OrderStateMessage(orderKiller' OrderState.KillerBulletFlying' "SIMULATING_WAITING_KILL_DELAY_ON_BROKER_SIDE" + msigHead); " is 169.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			msigHead = " orderVictim[" + orderVictim.SernoExchange + "]=>[" + OrderState.VictimsBulletFlying + "] <= orderKiller[" + orderKiller.SernoExchange + "][" + orderKiller.State + "]"; " is 180.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			OrderStateMessage omsg_waitingFill_victim = new OrderStateMessage(orderVictim' OrderState.VictimsBulletFlying' "SIMULATING_WAITING_KILL_DELAY_ON_BROKER_SIDE__VICTIM_SHOULD_KNOW" + msigHead); " is 190.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			//msigHead = " orderKiller[" + orderVictim.SernoExchange + "][" + orderKiller.State + "] => orderVictim[" + orderVictim.SernoExchange + "][" + orderKiller.State + "]"; " is 167.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			//OrderStateMessage omg_done_killer = new OrderStateMessage(orderKiller' OrderState.KillerDone' "SIMULATING_KILLER_ORDER_COMPLETE_CALLBACK" + msigHead); " is 152.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			msigHead = " orderVictim[" + orderVictim.SernoExchange + "]=>[" + OrderState.VictimKilled + "] <= orderKiller[" + orderKiller.SernoExchange + "][" + orderKiller.State + "]"; " is 173.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,order_killPending_usingKiller_threadEntry,The length of the statement  "			OrderStateMessage omsg_killed_victim = new OrderStateMessage(orderVictim' OrderState.VictimKilled' "SIMULATING_VICTIM_KILLED_CALLBACK" + msigHead); " is 147.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,InitializeLivesim,The length of the statement  "			base.InitializeDataSource_inverse(livesimDataSource' this.LivesimDataSource.StreamingAsLivesim_nullUnsafe'  orderProcessor); " is 124.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,ConsumeQuoteBoundUnattached_toFillPending,The length of the statement  "			AlertList willBeFilled_minusAlreadyScheduled_volatilePointer = willBeFilled.Substract_returnClone(this.DataSnapshot.AlertsPending_scheduledForDelayedFill' this' "willBeFilled_minusAlreadyScheduled"); " is 199.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,ConsumeQuoteBoundUnattached_toFillPending,The length of the statement  "				    string msg = "COUNT_MIGHT_HAVE_DECREASED_FOR_MULTIPLE_OPEN_POSITIONS/STRATEGY_IN_ANOTHER_FILLING_THREAD WHO_FILLED_WHILE_I_WAS_SLEEPING???"; " is 140.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,ConsumeQuoteBoundUnattached_toFillPending,The length of the statement  "				this.consumeQuoteUnattached_attach_fillPendingAsync(quoteBoundUnattached_localScoped' willBeFilled_minusAlreadyScheduled_localScoped); " is 134.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,ConsumeQuoteBoundUnattached_toFillPending,The length of the statement  "				string msg = "HAPPENS_WHEN_ANOTHER_THREAD_HITS_BREAKPOINT_IN_VS DELAYED_FILL_THREAD_DIDNT_SIGNAL_THAT_QUOTE_POINTER_WAS_COPIED_DURING_1SECOND"; " is 143.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,consumeQuoteUnattached_attach_fillPendingAsync,The length of the statement  "					string msg = "CHECK_IT_UPSTACK_AND_DONT_INVOKE_ME!!! snap.AlertsPending.Count=0 //consumeQuoteUnattached_toFillPendingAsync(" + expectingToFill + ")"; " is 150.
Long Statement,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,consumeQuoteUnattached_attach_fillPendingAsync,The length of the statement  "			ReporterPokeUnit pokeUnit_nullUnsafe_dontForgetToDispose = this.ScriptExecutor.InvokeScript_onNewBar_onNewQuote(quoteBoundAttached); " is 132.
Long Statement,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,Initialize,The length of the statement  "				string msg = "DONT_INVOKE_ME_WITH_NULL_levelTwo //LevelTwoGenerator.Initialize(" + symbolInfo + "' " + levelsToGenerate + ")"; " is 126.
Long Statement,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,Initialize,The length of the statement  "				string msg = "DONT_INVOKE_ME_WITH_NULL_SYMBOL_INFO //LevelTwoGenerator.Initialize(" + symbolInfo + "' " + levelsToGenerate + ")"; " is 129.
Long Statement,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,GenerateForQuote,The length of the statement  "				string msg = "DONT_INVOKE_ME_WITH_NULL_SYMBOL_INFO I_WOULD_THROW_ANYWAY_MAKING_THE_REASON_CLEAR //LevelTwoGenerator.GenerateForQuote(" + quote + ")"; " is 149.
Long Statement,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,GenerateForQuote,The length of the statement  "				int randomHoleBid = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate)); " is 129.
Long Statement,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,GenerateForQuote,The length of the statement  "				int randomHoleAsk = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate)); " is 129.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditorEmpty,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditorEmpty.cs,PushBrokerAdapterSettingsToEditor,The length of the statement  "			string msg = "INAPPLICABLE_FOR_A_LIVESIMSTREAMING_ENFORCED_TO_BE_MANDATORY_WHEN_NO_OTHER_STREAMING_IS_ASSIGNED_BY_USER_TO_A_DATASOURCE for streamingAdapter=[" + base.BrokerAdapter + "]"; " is 186.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditorEmpty,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditorEmpty.cs,PushEditedSettingsToBrokerAdapter,The length of the statement  "			string msg = "INAPPLICABLE_FOR_A_LIVESIMSTREAMING_ENFORCED_TO_BE_MANDATORY_WHEN_NO_OTHER_STREAMING_IS_ASSIGNED_BY_USER_TO_A_DATASOURCE for streamingAdapter=[" + base.BrokerAdapter + "]"; " is 186.
Long Statement,Sq1.Core.Livesim,LivesimStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingConsumer.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "			ReporterPokeUnit pokeUnit_nullUnsafe_dontForgetToDispose = this.livesimulator.Executor.InvokeScript_onNewBar_onNewQuote(quoteClone_boundAttached); " is 146.
Long Statement,Sq1.Core.Livesim,LivesimStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingConsumer.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "					executor.PerformanceAfterBacktest.BuildIncrementalOpenPositionsUpdatedDueToStreamingNewQuote_step2of3(executor.ExecutionDataSnapshot.PositionsOpenNow); " is 151.
Long Statement,Sq1.Core.Livesim,LivesimStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingConsumer.cs,ConsumeQuoteOfStreamingBar,The length of the statement  "						executor.EventGenerator.RaiseOpenPositionsUpdatedDueToStreamingNewQuote_step2of3(pokeUnit_nullUnsafe_dontForgetToDispose); " is 122.
Long Statement,Sq1.Core.Livesim,LivesimStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingConsumer.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "			//v1 this.backtester.Executor.Strategy.Script.OnBarStaticLastFormedWhileStreamingBarWithOneQuoteAlreadyAppendedCallback(barLastFormed); " is 135.
Long Statement,Sq1.Core.Livesim,LivesimStreamingConsumer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingConsumer.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "			ReporterPokeUnit pokeUnit_nullUnsafe_dontForgetToDispose = this.livesimulator.Executor.InvokeScript_onNewBar_onNewQuote(quoteForAlertsCreated' false); " is 150.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditorEmpty,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditorEmpty.cs,PopulateStreamingAdapterSettingsToEditor,The length of the statement  "			string msg = "INAPPLICABLE_FOR_A_LIVESIMSTREAMING_ENFORCED_TO_BE_MANDATORY_WHEN_NO_OTHER_STREAMING_IS_ASSIGNED_BY_USER_TO_A_DATASOURCE for streamingAdapter=[" + base.StreamingAdapter + "]"; " is 189.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditorEmpty,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditorEmpty.cs,PushEditedSettingsToStreamingAdapter,The length of the statement  "			string msg = "INAPPLICABLE_FOR_A_LIVESIMSTREAMING_ENFORCED_TO_BE_MANDATORY_WHEN_NO_OTHER_STREAMING_IS_ASSIGNED_BY_USER_TO_A_DATASOURCE for streamingAdapter=[" + base.StreamingAdapter + "]"; " is 189.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditorEmpty,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditorEmpty.cs,StreamingAdapter_OnStreamingConnectionStateChanged,The length of the statement  "			string msg = "COPY_CONTENT_FROM_QUIK_STREAMING_EDITOR UPDATE_YOUR_CONNECT_BUTTON_STATE_BECAUSE_IT_WAS_CHANGED_SOMEWHERE_ELSE"; " is 126.
Long Statement,Sq1.Core.Livesim,LivesimStreaming,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreaming.Paranoid.cs,PushSymbolInfo_toLevelTwoGenerator,The length of the statement  "			LevelTwo levelTwo_livesimsOwn_notQuikStreamings = this.StreamingDataSnapshot.GetLevelTwo_forSymbol_nullUnsafe(symbolInfo_fromExecutor.Symbol); " is 142.
Long Statement,Sq1.Core.Livesim,LivesimStreaming,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreaming.Paranoid.cs,PushSymbolInfo_toLevelTwoGenerator,The length of the statement  "			this.LevelTwoGenerator.Initialize(levelTwo_livesimsOwn_notQuikStreamings' symbolInfo_fromExecutor' howMany' this.ToString()); " is 125.
Long Statement,Sq1.Core.Livesim,LivesimStreaming,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreaming.Paranoid.cs,PushQuoteGenerated,The length of the statement  "				// generate again another one for same quote' widen the spread and send it; each second level2 you must see new unfilled quote is generated by reconstructSpreadQuote_pushToStreaming_ifChanged(); " is 194.
Long Statement,Sq1.Core.Livesim,LivesimStreaming,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreaming.Paranoid.cs,Original_SubstituteDistributor_forSymbolLivesimming_extractChartIntoSeparateDistributor_subscribe,The length of the statement  "				 chartBars_subscribeSelected_cbxChecked_whenLivesimStarts = this.Livesimulator.Executor.Strategy.ScriptContextCurrent.DownstreamSubscribed; " is 138.
Long Statement,Sq1.Core.Livesim,LivesimStreaming,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreaming.Paranoid.cs,Original_SubstituteDistributor_forSymbolLivesimming_extractChartIntoSeparateDistributor_subscribe,The length of the statement  "			this.StreamingOriginal.	SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor(this' chartBars_subscribeSelected_cbxChecked_whenLivesimStarts); " is 173.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,executor_OnBacktesterContextInitialized_step2of4,The length of the statement  "				// from a just started thread with a new Backtest BacktesterRunSimulation_threadEntry_exceptionCatcher() SEE_CALL_STACK_NOW " is 123.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,executor_OnBacktesterContextInitialized_step2of4,The length of the statement  "				List<Order> ordersStale = this.DataSourceAsLivesim_nullUnsafe.BrokerAsLivesim_nullUnsafe.OrdersSubmittedForOneLivesimBacktest; " is 126.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,executor_OnBacktesterContextInitialized_step2of4,The length of the statement  "				this.chartShadow.BeginInvoke((MethodInvoker)delegate { this.executor_OnBacktesterContextInitialized_step2of4(sender' e); }); " is 124.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,executor_OnBacktesterContextInitialized_step2of4,The length of the statement  "				this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe.OnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers_blinkDataSourceTreeWithOrange -= new EventHandler<QuoteEventArgs>(streamingAsLivesim_nullUnsafe_OnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers_blinkDataSourceTreeWithOrange); " is 313.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,executor_OnBacktesterContextInitialized_step2of4,The length of the statement  "			this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe.OnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers_blinkDataSourceTreeWithOrange += new EventHandler<QuoteEventArgs>(streamingAsLivesim_nullUnsafe_OnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers_blinkDataSourceTreeWithOrange); " is 313.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,executor_OnBacktesterContextInitialized_step2of4,The length of the statement  "			barsAreSetInGuiThread.Set();		// SOLVES__BAR_STATIC_LAST_IS_NULL__DURING_SECOND_LIVESIM release the thread that waits to start livesim (second livesim throws LastBar_nullUnsafe == null) " is 185.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,executor_OnBacktesterContextInitialized_step2of4,The length of the statement  "			barsAreSetInGuiThread.Reset();		// SOLVES__BAR_STATIC_LAST_IS_NULL__DURING_SECOND_LIVESIM and close the gate again - you should not wait!!! I don't trust AutoResetEvent " is 168.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,raiseOnQuoteReceived_zeroSubscribers_blinkDataSourceTreeWithOrange,The length of the statement  "				string msg = "EVENT_CONSUMER(USED_ONLY_FOR_LIVE_SIMULATOR)_THROWN //Livesimulator.OnQuoteReceived_zeroSubscribers_blinkDataSourceTreeWithOrange(" + e.Quote + ")"; " is 162.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				//v2 INDICATORS_COMPLAIN_MUST_BE_EMPTY_ON_BACKTEST_STARTING base.BarsSimulating = base.Executor.Bars.CloneBars_firstBarInside_avoidingLastBarNull(BARS_LIVESIM_CLONE_PREFIX);	// + base.BarsOriginal " is 196.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				// kept it on the surface and didn't pass ScriptContextCurrent.SpreadModelerPercent to "new DataSourceAsLivesim_nullUnsafe()" because later DataSourceAsLivesim_nullUnsafe: " is 171.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				// 3) will poke StreamingAdapter-derived implementations 12 times a bar with platform-generated quotes for backtests with regulated poke delay " is 142.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				// v1 this.DataSourceAsLivesim_nullUnsafe.BacktestStreamingAdapter.InitializeSpreadModelerPercentage(base.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent); " is 167.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				string msig = "STARTING_LIVESIM " + base.Executor.Strategy.ToString() + " //SimulationPreBarsSubstitute_overrideable()"; " is 120.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				//this.Executor.DataSource_fromBars.StreamingAdapter.Distributor_replacedForLivesim.AllQuotePumps_Pause(reasonToPauseSymbol); " is 125.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				int pumpsPaused = this.Executor.DataSource_fromBars.LivesimStreamingDefault_PumpPause_freezeOtherConsumers_forSameSymbolScale(this.Executor); " is 141.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				this.DataSourceAsLivesim_nullUnsafe.Propagate_preInstantiated_ownImplementationLivesimAdapters_intoLivesimDataSource();	// no need to restore (this.DataSourceAsLivesim_nullUnsafe will be re-initialized at next Livesim) " is 218.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				// NO!!! KEEP_THEM_TO_ORIGINAL_DATASOURCE_BECAUSE_DDE_SERVER_DELIVERS_LEVEL2_TO_ORIGINAL_DATA_SNAPSHOT base.BarsSimulating.DataSource = this.DataSourceAsLivesim_nullUnsafe;	// will need to restore (base.BarsSimulating is not needed after Livesim is done) " is 254.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				this.DataSourceAsLivesim_nullUnsafe.InitializeLivesim_tunnelToBacktest(base.Executor.ToString()' base.BarsSimulating' spreadModeler);		// NOW_OWN_IMPLEMENTATION_WILL_GENERATE_QUOTES_FOR_BarsSimulating " is 200.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				// MAKE_DDE_CLIENT_SERVER_WORK base.BarsSimulating.DataSource = this.DataSourceAsLivesim_nullUnsafe;		// DISTRIBUTORS_INSIDE_SINGLE_STREAMING_ARE_REPLACED_AND_DDE_SERVER_IS_FED_VIA_FAKE_DDE_CLIENT " is 196.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				//DURING_LIVESIM_I_LEFT_STREAMING_EXACTLY_THE_SAME_AS_FOR_LIVE_TRADING_TO_TEST_IT!!! this.StreamingOriginal = this.Executor.DataSource.StreamingAdapter;		// will have to restore " is 177.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				LivesimStreaming livesimStreaming = this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe;	// = ownLivesimStreaming here (QuikLivesimStreaming' ) " is 157.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				livesimStreaming.InitializeLivesim(this.DataSourceAsLivesim_nullUnsafe' originalAdapter_fromDataSource' base.BarsSimulating.Symbol); " is 132.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				#region looks like {new LivesimulatorDataSource().SeparatePushingThreadEnabled=true} actually SOLVES__BAR_STATIC_LAST_IS_NULL__DURING_SECOND_LIVESIM; still waiting for the chart to set Bars' otherwize white overstriked ChartControl for a second " is 244.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				bool barsAreSetInGui = this.barsAreSetInGuiThread.WaitOne(waitForGuiToSetBars_maxMillis);		// SOLVES__BAR_STATIC_LAST_IS_NULL__DURING_SECOND_LIVESIM " is 148.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				//this.BarsSimulating.DataSource = this.DataSourceAsLivesim_nullUnsafe;	// may not need to restore (base.BarsSimulating is not needed after Livesim is done) " is 156.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				this.DataSourceAsLivesim_nullUnsafe.BrokerAsLivesim_nullUnsafe.InitializeLivesim(this.DataSourceAsLivesim_nullUnsafe' base.Executor.OrderProcessor); " is 148.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "					this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe.PushSymbolInfo_toLevelTwoGenerator(this.Executor.Bars.SymbolInfo); " is 132.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The length of the statement  "				if (base.BacktestAbortedMre.WaitOne(0) == true) Thread.Sleep(10);	// let the Wait() in GUI thread to feel SIGNALLED' before I reset again to NON_SIGNALLED " is 154.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPostBarsRestore_overrideable,The length of the statement  "				//DURING_LIVESIM_I_LEFT_STREAMING_EXACTLY_THE_SAME_AS_FOR_LIVE_TRADING_TO_TEST_IT!!! this.Executor.DataSource.StreamingAdapter = this.StreamingOriginal; " is 152.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPostBarsRestore_overrideable,The length of the statement  "				//this.Executor.DataSource_fromBars.StreamingAdapter.Distributor_replacedForLivesim.AllQuotePumps_Unpause(reasonToUnPauseSymbol); " is 129.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPostBarsRestore_overrideable,The length of the statement  "				int pumpsUnpaused = this.Executor.DataSource_fromBars.LivesimStreamingDefault_PumpResume_unfreezeOtherConsumers_forSameSymbolScale(this.Executor); " is 146.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,CheckSubscribed_LivesimQuoteBarConsumer_toDistributor_replacedForLivesim,The length of the statement  "			//v1 Distributor				distr		= this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe.Distributor_substitutedDuringLivesim; " is 132.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,CheckSubscribed_LivesimQuoteBarConsumer_toDistributor_replacedForLivesim,The length of the statement  "			DistributorCharts		distr		= this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe.StreamingOriginal.DistributorCharts_substitutedDuringLivesim; " is 155.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,CheckSubscribed_LivesimQuoteBarConsumer_toDistributor_replacedForLivesim,The length of the statement  "			List<SymbolScaleStream<StreamingConsumerChart>> mustBeOneTimeframe = distr.GetStreams_allScaleIntervals_forSymbol(symbol); " is 122.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,CheckSubscribed_LivesimQuoteBarConsumer_toDistributor_replacedForLivesim,The length of the statement  "				string msg1 = "BAD_JOB#2_SubstituteDistributorForSymbolsLivesimming_subscribeLivesimConsumerToLivesimStreamingDistributor()"; " is 125.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,CheckSubscribed_LivesimQuoteBarConsumer_toDistributor_replacedForLivesim,The length of the statement  "					string msg1 = "BAD_JOB#3_SubstituteDistributorForSymbolsLivesimming_subscribeLivesimConsumerToLivesimStreamingDistributor()"; " is 125.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,CheckSubscribed_LivesimQuoteBarConsumer_toDistributor_replacedForLivesim,The length of the statement  "				string msg1 = "BAD_JOB#4_SubstituteDistributorForSymbolsLivesimming_subscribeLivesimConsumerToLivesimStreamingDistributor()"; " is 125.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,CheckSubscribed_LivesimQuoteBarConsumer_toDistributor_replacedForLivesim,The length of the statement  "					string msg1 = "BAD_JOB#5_SubstituteDistributorForSymbolsLivesimming_subscribeLivesimConsumerToLivesimStreamingDistributor()"; " is 125.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,Start_invokedFromGuiThread,The length of the statement  "			//BROKER_AS_LIVESIM_NULL__LIVESIM_DS_NOT_INITIALIZED_YET this.DataSourceAsLivesim_nullUnsafe.BrokerAsLivesim_nullUnsafe.InitializeBacktestBroker(base.Executor); " is 160.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,Start_invokedFromGuiThread,The length of the statement  "			// DONT_MOVE_TO_CONSTRUCTOR!!!WORKSPACE_LOAD_WILL_INVOKE_IT_THEN_INAPPROPRIETLY!!!  WITHOUT_UNSUBSCRIPTON_I_WAS_GETTING_MANY_INVOCATIONS_BAD " is 140.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,Start_invokedFromGuiThread,The length of the statement  "			base.Executor.EventGenerator.OnBacktesterContextInitialized_step2of4 -= new EventHandler<EventArgs>(executor_OnBacktesterContextInitialized_step2of4); " is 150.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,Start_invokedFromGuiThread,The length of the statement  "			base.Executor.EventGenerator.OnBacktesterContextInitialized_step2of4 += new EventHandler<EventArgs>(executor_OnBacktesterContextInitialized_step2of4); " is 150.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,Start_invokedFromGuiThread,The length of the statement  "			this.OnQuoteReceived_zeroSubscribers_blinkDataSourceTreeWithOrange -= new EventHandler<QuoteEventArgs>(livesimulator_OnQuoteReceived_zeroSubscribers_blinkDataSourceTreeWithOrange); " is 180.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,Start_invokedFromGuiThread,The length of the statement  "			this.OnQuoteReceived_zeroSubscribers_blinkDataSourceTreeWithOrange += new EventHandler<QuoteEventArgs>(livesimulator_OnQuoteReceived_zeroSubscribers_blinkDataSourceTreeWithOrange); " is 180.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,afterBacktesterComplete,The length of the statement  "			//IM_UNPAUSED_AFTER_LIVESIM_FINISHED Assembler.PopupException("TIME_TO_UNPAUSE_ORIGNIAL_QUOTE_PUMP_executorCompletePooled: " + executorCompletePooled.ToStringWithCurrentParameters() + msig' null' false); " is 203.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,afterBacktesterComplete,The length of the statement  "			base.BarsOriginal = null;	// I_RESTORED_CONTEXT__END_OF_BACKTEST_ORIGINAL_BECAME_NULL WILL_AFFECT_ChartForm.TsiProgressBarETA " is 125.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,afterBacktesterComplete,The length of the statement  "					string msg = "LOOKS_LIKE_YOU_DIDNT_RESTORE_CONTEXT_AFTER_BACKTEST_ABORTED WHEN_QUIK_LIVESIM_FAILED_TO_CONNECT_TO_ITS_OWN_SERVER"; " is 129.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,Stop_invokedFromGuiThread,The length of the statement  "					string msg = "YOU_STOPPED_PAUSED_LIVESIM_FROM_GUI UNPAUSED_LIVESIM_QUOTE_PUMP__WOZU???_ORIGINAL_BARS_SOLIDIFIER_STILL_RUNNING_IN_ITS_THREAD"; " is 141.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,Stop_invokedFromGuiThread,The length of the statement  "					string msg2 = "LIVESIM_HAS_SINGLE_THREADED_QUOTE_PUMP__NOT_EVEN_USED_IN_QuikLivesimStreaming DONT_REQUEST_AND_DONT_WAIT_JUST_CONTINUE"; " is 135.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,Pause_invokedFromGuiThread,The length of the statement  "				string msg1 = "YOU_DIDNT_START_LIVESIM_CANT_PAUSE add this.TssBtnPauseResume.Enabled=false into LiveSimControl.Designer.cs"; " is 124.
Long Statement,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,Pause_invokedFromGuiThread,The length of the statement  "			string msg = "AlertsScheduledForDelayedFill.Count=" + this.DataSourceAsLivesim_nullUnsafe.BrokerAsLivesim_nullUnsafe.DataSnapshot.AlertsPending_scheduledForDelayedFill.Count  + " LEAKED_HANDLES_HUNTER"; " is 202.
Long Statement,Sq1.Core.Livesim,LivesimDataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimDataSource.cs,Propagate_preInstantiated_ownImplementationLivesimAdapters_intoLivesimDataSource,The length of the statement  "			string msig = " //Propagate_preInstantiated_ownImplementationLivesimAdapters_intoLivesimDataSource() [" + this.ToString() + "]"; " is 128.
Long Statement,Sq1.Core.Livesim,LivesimDataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimDataSource.cs,Propagate_preInstantiated_ownImplementationLivesimAdapters_intoLivesimDataSource,The length of the statement  "						+ ".Distributor_replacedForLivesim[" + base.StreamingAsLivesim_nullUnsafe.DistributorCharts_substitutedDuringLivesim.ReasonIwasCreated + "]" " is 140.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.cbx_PriceDeviationForMarketOrdersEnabled	.Checked = this.livesimBrokerSettings.PriceDeviationForMarketOrdersEnabled; " is 121.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_DelayBeforeFillMillisMin								.Text = this.livesimBrokerSettings.DelayBeforeFillMillisMin									.ToString(); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_DelayBeforeFillMillisMax								.Text = this.livesimBrokerSettings.DelayBeforeFillMillisMax									.ToString(); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_OrderRejectionHappensOncePerXordersMin					.Text = this.livesimBrokerSettings.OrderRejectionHappensOncePerXordersMin					.ToString(); " is 142.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_OrderRejectionHappensOncePerXordersMax					.Text = this.livesimBrokerSettings.OrderRejectionHappensOncePerXordersMax					.ToString(); " is 142.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_PartialFillHappensOncePerQuoteMin						.Text = this.livesimBrokerSettings.PartialFillHappensOncePerQuoteMin						.ToString(); " is 134.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_PartialFillHappensOncePerQuoteMax						.Text = this.livesimBrokerSettings.PartialFillHappensOncePerQuoteMax						.ToString(); " is 134.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_PartialFillPercentageFilledMin							.Text = this.livesimBrokerSettings.PartialFillPercentageFilledMin							.ToString(); " is 130.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_PartialFillPercentageFilledMax							.Text = this.livesimBrokerSettings.PartialFillPercentageFilledMax							.ToString(); " is 130.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_OutOfOrderFillHappensOncePerQuoteMin					.Text = this.livesimBrokerSettings.OutOfOrderFillHappensOncePerQuoteMin						.ToString(); " is 139.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_OutOfOrderFillHappensOncePerQuoteMax					.Text = this.livesimBrokerSettings.OutOfOrderFillHappensOncePerQuoteMax						.ToString(); " is 139.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_OutOfOrderFillDeliveredXordersLaterMin					.Text = this.livesimBrokerSettings.OutOfOrderFillDeliveredXordersLaterMin					.ToString(); " is 142.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_OutOfOrderFillDeliveredXordersLaterMax					.Text = this.livesimBrokerSettings.OutOfOrderFillDeliveredXordersLaterMax					.ToString(); " is 142.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMin	.Text = this.livesimBrokerSettings.PriceDeviationForMarketOrdersHappensOncePerXordersMin	.ToString(); " is 164.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMax	.Text = this.livesimBrokerSettings.PriceDeviationForMarketOrdersHappensOncePerXordersMax	.ToString(); " is 164.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMin	.Text = this.livesimBrokerSettings.PriceDeviationForMarketOrdersPercentageOfBestPriceMin	.ToString(); " is 164.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMax	.Text = this.livesimBrokerSettings.PriceDeviationForMarketOrdersPercentageOfBestPriceMax	.ToString(); " is 164.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_AdaperDisconnectHappensOncePerQuoteMin					.Text = this.livesimBrokerSettings.AdaperDisconnectHappensOncePerQuoteMin					.ToString(); " is 142.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_AdaperDisconnectHappensOncePerQuoteMax					.Text = this.livesimBrokerSettings.AdaperDisconnectHappensOncePerQuoteMax					.ToString(); " is 142.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_AdaperDisconnectReconnectsAfterMillisMin				.Text = this.livesimBrokerSettings.AdaperDisconnectReconnectsAfterMillisMin					.ToString(); " is 145.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,Initialize,The length of the statement  "			this.txt_AdaperDisconnectReconnectsAfterMillisMax				.Text = this.livesimBrokerSettings.AdaperDisconnectReconnectsAfterMillisMax					.ToString(); " is 145.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.groupBox2.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_PartialFillEnabled.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 158.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.groupBox3.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_OrderRejectionEnabled.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 161.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_OrderRejectionHappensOncePerXordersMax.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_OrderRejectionHappensOncePerXordersMin.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.groupBox4.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMax.Name = "txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMax"; " is 130.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMax.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 136.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMin.Name = "txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMin"; " is 130.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMin.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 136.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_PriceDeviationForMarketOrdersEnabled.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 176.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_PriceDeviationForMarketOrdersEnabled.Text = "Enable Random Market Order Fill Price <=> Best Bid/Ask Deviation"; " is 120.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_PriceDeviationForMarketOrdersEnabled.CheckedChanged += new System.EventHandler(this.anyCheckBox_CheckedChanged); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMax.Name = "txt_PriceDeviationForMarketOrdersHappensOncePerXordersMax"; " is 130.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMax.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 136.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMin.Name = "txt_PriceDeviationForMarketOrdersHappensOncePerXordersMin"; " is 130.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMin.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 136.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.groupBox5.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_AdaperDisconnectReconnectsAfterMillisMax.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 123.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_AdaperDisconnectReconnectsAfterMillisMin.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 123.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_AdaperDisconnectEnabled.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 163.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_AdaperDisconnectHappensOncePerQuoteMax.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_AdaperDisconnectHappensOncePerQuoteMin.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.groupBox1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_OutOfOrderFillDeliveredXordersLaterMax.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.txt_OutOfOrderFillDeliveredXordersLaterMin.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_OutOfOrderFillEnabled.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 161.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.groupBox6.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_DelayBeforeFillEnabled.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 162.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.grp_KillPendingDelay.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 153.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_KillPendingDelayEnabled.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 163.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,anyCheckBox_CheckedChanged,The length of the statement  "				string msg = "HANDLER_WRONGLY_ATTACHED_SENDER_MUST_BE_A_CHECKBOX LivesimBrokerEditor.checkBox_CheckedChanged(sender[" + sender.ToString() + "])"; " is 145.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,anyTextBox_Enter,The length of the statement  "				string msg = "HANDLER_WRONGLY_ATTACHED_SENDER_MUST_BE_A_TextBox LivesimBrokerEditor.anyTextBox_Enter(sender[" + sender.ToString() + "])"; " is 137.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,anyTextBox_KeyUp,The length of the statement  "				string msg = "HANDLER_WRONGLY_ATTACHED_SENDER_MUST_BE_A_TextBox LivesimBrokerEditor.anyTextBox_KeyPress(sender[" + sender.ToString() + "])"; " is 140.
Long Statement,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,anyTextBox_KeyUp,The length of the statement  "				Assembler.PopupException("ADD_TARGET_FOR_TYPING_PROPAGATION_FOR whereItyped[" + whereItyped.Text + "]/[" + whereItyped.Name + "]"); " is 131.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_DelayBetweenSerialQuotesMin						.Text = this.livesimStreamingSettings.DelayBetweenSerialQuotesMin					.ToString(); " is 124.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_DelayBetweenSerialQuotesMax						.Text = this.livesimStreamingSettings.DelayBetweenSerialQuotesMax					.ToString(); " is 124.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMin	.Text = this.livesimStreamingSettings.OutOfOrderQuoteGenerationHappensOncePerQuoteMin	.ToString(); " is 155.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMax	.Text = this.livesimStreamingSettings.OutOfOrderQuoteGenerationHappensOncePerQuoteMax	.ToString(); " is 155.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_OutOfOrderQuoteGenerationDelayMillisMin			.Text = this.livesimStreamingSettings.OutOfOrderQuoteGenerationDelayMillisMin			.ToString(); " is 143.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_OutOfOrderQuoteGenerationDelayMillisMax			.Text = this.livesimStreamingSettings.OutOfOrderQuoteGenerationDelayMillisMax			.ToString(); " is 143.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_QuoteGenerationFreezeHappensOncePerQuoteMin		.Text = this.livesimStreamingSettings.QuoteGenerationFreezeHappensOncePerQuoteMin	.ToString(); " is 148.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_QuoteGenerationFreezeHappensOncePerQuoteMax		.Text = this.livesimStreamingSettings.QuoteGenerationFreezeHappensOncePerQuoteMax	.ToString(); " is 148.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_QuoteGenerationFreezeMillisMin						.Text = this.livesimStreamingSettings.QuoteGenerationFreezeMillisMin				.ToString(); " is 129.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_QuoteGenerationFreezeMillisMax						.Text = this.livesimStreamingSettings.QuoteGenerationFreezeMillisMax				.ToString(); " is 129.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_AdaperDisconnectHappensOncePerQuoteMin				.Text = this.livesimStreamingSettings.AdaperDisconnectHappensOncePerQuoteMin		.ToString(); " is 141.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_AdaperDisconnectHappensOncePerQuoteMax				.Text = this.livesimStreamingSettings.AdaperDisconnectHappensOncePerQuoteMax		.ToString(); " is 141.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_AdaperDisconnectReconnectsAfterMillisMin			.Text = this.livesimStreamingSettings.AdaperDisconnectReconnectsAfterMillisMin		.ToString(); " is 144.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_AdaperDisconnectReconnectsAfterMillisMax			.Text = this.livesimStreamingSettings.AdaperDisconnectReconnectsAfterMillisMax		.ToString(); " is 144.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,Initialize,The length of the statement  "			this.txt_levelTwoLevelsToGenerate								.Text = this.livesimStreamingSettings.LevelTwoLevelsToGenerate						.ToString(); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.groupBox1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.txt_QuoteGenerationFreezeHappensOncePerQuoteMax.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 126.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.txt_QuoteGenerationFreezeHappensOncePerQuoteMin.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 126.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_QuoteGenerationFreezeEnabled.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 168.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.groupBox2.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_DelayBetweenSerialQuotesEnabled.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 171.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.groupBox3.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.txt_AdaperDisconnectReconnectsAfterMillisMax.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 123.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.txt_AdaperDisconnectReconnectsAfterMillisMin.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 123.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_AdaperDisconnectEnabled.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 163.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.txt_AdaperDisconnectHappensOncePerQuoteMax.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.txt_AdaperDisconnectHappensOncePerQuoteMin.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 121.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.groupBox4.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.txt_OutOfOrderQuoteGenerationDelayMillisMax.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 122.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.txt_OutOfOrderQuoteGenerationDelayMillisMin.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 122.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.cbx_OutOfOrderQuoteGenerationEnabled.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 172.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMax.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 130.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMin.KeyUp += new System.Windows.Forms.KeyEventHandler(this.anyTextBox_KeyUp); " is 130.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.groupBox5.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.checkBox2.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 145.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.checkBox1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 145.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The length of the statement  "			this.groupBox6.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,anyCheckBox_CheckedChanged,The length of the statement  "				string msg = "HANDLER_WRONGLY_ATTACHED_SENDER_MUST_BE_A_CheckBox LivesimBrokerEditor.anyCheckBox_CheckedChanged(sender[" + sender.ToString() + "])"; " is 148.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,anyCheckBox_CheckedChanged,The length of the statement  "				Assembler.PopupException("ADD_TARGET_FOR_CLICK_PROPAGATION_FOR_whatIchecked[" + whatIchecked.Text + "]/[" + whatIchecked.Name + "]"); " is 133.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,anyTextBox_Enter,The length of the statement  "				string msg = "HANDLER_WRONGLY_ATTACHED_SENDER_MUST_BE_A_TextBox LivesimBrokerEditor.anyTextBox_Enter(sender[" + sender.ToString() + "])"; " is 137.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,anyTextBox_KeyUp,The length of the statement  "				string msg = "HANDLER_WRONGLY_ATTACHED_SENDER_MUST_BE_A_TextBox LivesimBrokerEditor.anyTextBox_KeyPress(sender[" + sender.ToString() + "])"; " is 140.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,anyTextBox_KeyUp,The length of the statement  "					parsedInt = 2;		// otherwize GUI becomes completely irresponsive; Application.DoEvents will unleash guiHasTime while it doesn't " is 127.
Long Statement,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,anyTextBox_KeyUp,The length of the statement  "				Assembler.PopupException("ADD_TARGET_FOR_TYPING_PROPAGATION_FOR whereItyped[" + whereItyped.Text + "]/[" + whereItyped.Name + "]"); " is 131.
Long Statement,Sq1.Core.Repositories,DllScanner<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\DllScanner.ChildrenDebug.cs,ScanListPrepared,The length of the statement  "						string msg = "FAILED_TO_CAST_UNCASTABLE_INSTANCE";	 //this check is redundant due to if (typeof(T).IsAssignableFrom(type) == false) continue; " is 141.
Long Statement,Sq1.Core.Repositories,RepositoryJsonsInFolderSimpleDictionary<SYSTEM_PERFORMANCE_RESTORE_ABLE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolderSimpleDictionary.cs,DeserializeDictionary,The length of the statement  "				ret = JsonConvert.DeserializeObject<Dictionary<string' SYSTEM_PERFORMANCE_RESTORE_ABLE>>(json' new JsonSerializerSettings { " is 123.
Long Statement,Sq1.Core.Repositories,RepositoryJsonsInFolderSimpleDictionarySorted<SYSTEM_PERFORMANCE_RESTORE_ABLE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolderSimpleDictionarySorted.cs,DeserializeSortedDictionary,The length of the statement  "			SortedDictionary<string' SYSTEM_PERFORMANCE_RESTORE_ABLE> ret = new SortedDictionary<string' SYSTEM_PERFORMANCE_RESTORE_ABLE>(); " is 128.
Long Statement,Sq1.Core.Repositories,RepositoryJsonsInFolderSimpleDictionarySorted<SYSTEM_PERFORMANCE_RESTORE_ABLE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolderSimpleDictionarySorted.cs,DeserializeSortedDictionary,The length of the statement  "				ret = JsonConvert.DeserializeObject<SortedDictionary<string' SYSTEM_PERFORMANCE_RESTORE_ABLE>>(json' new JsonSerializerSettings { " is 129.
Long Statement,Sq1.Core.Repositories,RepositoryJsonCorrelator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolderSimpleDictionaryCorrelator.cs,Initialize,The length of the statement  "				string msg = "DONT_FEED_ME_WITH_ABSOLUTE_FILENAME__IT_CONTAINS_SEQUENCER_WHILE_I_AM_A_CORRELATOR fileName[" + fileName + "]"; " is 125.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,stringToByteArray,The length of the statement  "			//	Assembler.PopupException("TRUNCATED_SYMBOL_TO_FIT_BARFILE_HEADER v[" + this.barFileCurrentVersion + "](" + bufferLength+ ")bytes [" + symbol + "]=>[" + symbolTruncated + "]"); " is 178.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,stringToByteArray,The length of the statement  "				string msg = "TRUNCATED_SYMBOL_TO_FIT_BARFILE_HEADER v[" + this.barFileCurrentVersion + "](" + bufferLength + ")bytes [" + symbol + "]=>[" + reconstructed + "]"; " is 161.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,BarAppendStaticUnconditionalThreadSafe,The length of the statement  "				//Assembler.PopupException("Saved [ " + bars.Count + "] bars; symbol[" + bars.Symbol + "] scaleInterval[" + bars.ScaleInterval + "]"); " is 134.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStaticUnconditional,The length of the statement  "				string msg = "NOT_APPENDING_TO_FILE_THIS_BAR__FIX_WHO_GENERATED_IT_UPSTACK barAllZeroes barLastFormed[" + barLastFormed + "]"; " is 126.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The length of the statement  "				//string shortFname = this.Abspath.Substring(this.Abspath.IndexOf("" + Path.DirectorySeparatorChar + "Data" + Path.DirectorySeparatorChar + "") + 6); " is 149.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The length of the statement  "				//v1'2 AFTER_IMPLEMENTING_FIXED_SYMBOL_WIDTH_IGNORING_WHAT_I_READ_FROM_FILE  bars = new Bars(symbol' scaleInterval' shortFname); " is 128.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The length of the statement  "				//http://stackoverflow.com/questions/58380/avoiding-first-chance-exception-messages-when-the-exception-is-safely-handled " is 120.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The length of the statement  "						// I want to print out the size of header and bar' but I don't want to extract save-able members from Bars and Bar to use Marshal.SizeOf(<T>) " is 141.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The length of the statement  "						string msg2 = " barsFailedCheckOHLCV[" + barsFailedCheckOHLCV + "]  barsReadTotal[" + barsReadTotal + "] bars.Count[" + bars.Count + "]" " is 136.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The length of the statement  "							+ " binaryReader.BaseStream.Position[" + binaryReader.BaseStream.Position + "]/[" + binaryReader.BaseStream.Length + "]"; " is 121.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The length of the statement  "						Assembler.PopupException("WHILE_LOADING_BARS_FILE_OVERWRITTEN_WITH_HEADER_FROM_NEWER_VERSION NEW_HEADER_SIZE[" + this.headerSize + "] " + msg3); " is 144.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The length of the statement  "				string msg = "SOME_BARS_SKIPPED_WHILE_SAVING barsFailedCheckOHLCV[" + barsFailedCheckOHLCV + "] barsReadTotal[" + barsReadTotal + "] bars.Count[" + bars.Count + "]"; " is 165.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsSave,The length of the statement  "				// LAZY to extract save-able members from Bars and Bar to use Marshal.SizeOf(<T>) TODO create header structure and have its length the same both for Read & Write " is 161.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsSave,The length of the statement  "				string msg = "SOME_BARS_SKIPPED_WHILE_SAVING barsFailedCheckOHLCV[" + barsFailedCheckOHLCV + "] barsSaved[" + barsSaved + "] bars.Count[" + bars.Count + "]"; " is 157.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,BarAppendStatic_orReplaceStreaming_threadSafe,The length of the statement  "				string msg = "barsAppendedOrReplaced[" + barsAppendedOrReplaced + "] " + this.Symbol + ":" + this.barsRepository.ScaleInterval + " barLastFormed[" + barLastFormed + "]"; " is 169.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The length of the statement  "			//starting from barFileCurrentVersion=3: seek to the end' read last Bar' overwrite if same date or append if greater; 0.1ms instead of reading all - appending - writing all " is 172.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The length of the statement  "			string msig = " barAppendStaticOrReplaceStreaming(" + barLastFormedStatic_orCurrentStreaming + ")=>[" + this.Abspath + "]"; " is 123.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The length of the statement  "				barLastFormedStatic_orCurrentStreaming.CheckOHLCVthrow();	//	catching the exception will display stacktrace in ExceptionsForm " is 125.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The length of the statement  "				string msg = "NOT_APPENDING_TO_FILE_THIS_BAR__FIX_WHO_GENERATED_IT_UPSTACK barAllZeroes barLastFormed[" + barLastFormedStatic_orCurrentStreaming + "]"; " is 151.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The length of the statement  "					// THIS_WAS_GENERATING_ZERO_BAR__YOU_WANTED_TO_PASS_NEGATIVE_VALUE_RELATIVE_TO_END_TO_SEEK_BACK_AND_ANALYZE_DATE_IF_STREAMING_SHOULD_BE_OVERWRITTEN_OR_STATIC_APPENDED fileStream.Seek(barSize' SeekOrigin.End); " is 208.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The length of the statement  "					beyoundHeaderAndOneBar_seekToMergeOverwrite = posEof >= headerSize + barSize;		//bool imNOtGoingBackOverZero = barSize > posEof; " is 128.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The length of the statement  "								+ " fileStreamPositionAfterSeekToLastBar[" + fileStreamPositionAfterSeekToLastBar + "] fileStreamLength[" + fileStreamLength + "]" " is 130.
Long Statement,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barAppendStatic_orReplaceStreaming,The length of the statement  "								+ " fileStreamPositionAfterSeekToEnd[" + fileStreamPositionAfterSeekToEnd + "] fileStreamLength[" + fileStreamLength + "]" " is 122.
Long Statement,Sq1.Core.Repositories,RepositoryJsonsInFolderSimple<SYSTEM_PERFORMANCE_RESTORE_ABLE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolderSimple.cs,Initialize,The length of the statement  "			//if (string.IsNullOrEmpty(subfolder) == false && subfolder.EndsWith(Path.DirectorySeparatorChar) == false) subfolder += Path.DirectorySeparatorChar; " is 149.
Long Statement,Sq1.Core.Repositories,RepositoryBarsSameScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsSameScaleInterval.cs,SymbolDataFileCopy,The length of the statement  "				throw new Exception("COPY__FILE_ALREADY_EXISTS[" + abspathOfTheCopy + "]" + " SymbolDataFileCopy(" + symbolToCopy + ")"); " is 121.
Long Statement,Sq1.Core.Repositories,RepositoryBarsSameScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsSameScaleInterval.cs,DataFileForSymbol,The length of the statement  "			lock (barsForDataSourceSymbolsLock) {   //FILE.OPEN_FILE_CANT_BE_ACCESSED_FIXED_BY_ROUTING_ALL_FILE_ACCESS_THROUGH_ONE_SYNCHRONIZED_INSTANCE " is 140.
Long Statement,Sq1.Core.Repositories,RepositoryJsonDataSources,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonDataSource.DynamicProperties.cs,SymbolCopyOrCompressFrom,The length of the statement  "			string msig = " RepositoryJsonDataSource.SymbolCopy(" + dataSourceFrom.Name + "' " + symbolToCopy + "' " + dataSourceTo.Name + "): "; " is 133.
Long Statement,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,Initialize,The length of the statement  "			//if (string.IsNullOrEmpty(subfolder) == false && subfolder.EndsWith(Path.DirectorySeparatorChar) == false) subfolder += Path.DirectorySeparatorChar; " is 149.
Long Statement,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,ItemRename,The length of the statement  "						string msg = "I_REFUSE_TO_SerializeSingle(itemStored): jsonRenamed[" + jsonRenamed + "] NOT_RAISING_OnItemRenamed_EVENT"; " is 121.
Long Statement,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,ItemRename,The length of the statement  "					string msg = "I_REFUSE_TO_SerializeSingle(itemStored)_AND_REBUILD_RepositoryJsonsInFolder.ItemsByName dataSourceFolderRenamed[" + dataSourceFolderRenamed + "] NOT_RAISING_OnItemRenamed_EVENT"; " is 192.
Long Statement,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,jsonRename,The length of the statement  "				string abspathNewRandomFolderName = Path.Combine(this.AbsPath' jsonRelnameAfterRename + "-OutOfMyWay-" + new Random().Next(1000000' 9999999)); " is 142.
Long Statement,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,jsonRename,The length of the statement  "					abspathNewRandomFolderName = Path.Combine(this.AbsPath' jsonRelnameAfterRename + "-OutOfMyWay-" + new Random().Next(1000000' 9999999)); " is 135.
Long Statement,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,jsonRename,The length of the statement  "						string fatal = "CHECK_YOUR_FOLDER_IT_HAS_WAY_TOO_MANY_-OutOfMyWay-_FOLDERS LAST_EXISTING[" + abspathNewRandomFolderName + "]" " is 125.
Long Statement,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,jsonRename,The length of the statement  "				string msg = "DATASOURCE_NEW_FOLDER_ALREADY_EXISTS abspathNewFolderName[" + abspathNewJsonName + "]=>renamingToRandom[" + abspathNewRandomFolderName + "] TO_GET_CLEAR_WAY"; " is 172.
Long Statement,Sq1.Core.Repositories,RepositorySerializerMarketInfos,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositorySerializerMarketInfos.cs,Initialize,The length of the statement  "			bool createdNewFile = base.Initialize(rootPath' relFname' subfolder' workspaceName' createNonExistingPath' createNonExistingFile); " is 130.
Long Statement,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,StrategiesScanFoldersAndDlls,The length of the statement  "			Dictionary<Assembly' List<Script>> strategiesScanDllsInitDeserializedFromRootPath = StrategiesScanDllsInitDeserialized(this.RootPath); " is 134.
Long Statement,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,StrategiesScanFoldersAndDlls,The length of the statement  "			Dictionary<Assembly' List<Script>> strategiesScanDllsInitDeserializedFromAppStartupPath = StrategiesScanDllsInitDeserialized(this.AppStartupPath); " is 146.
Long Statement,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,FolderRenameModifyNameTillNoException,The length of the statement  "			//string msg = "strategies [" + folderNameTo + "] ... [" + (folderNameTo + limit) + "] already exist' can't generate name"; " is 123.
Long Statement,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,StrategyRenameModifyNameTillNoException,The length of the statement  "			//string msg = "strategies [" + folderNameTo + "] ... [" + (folderNameTo + limit) + "] already exist' can't generate name"; " is 123.
Long Statement,Sq1.Core.Repositories,RepositoryFoldersNoJson,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryFoldersNoJson.cs,Initialize,The length of the statement  "			//if (string.IsNullOrEmpty(subfolder) == false && subfolder.EndsWith(Path.DirectorySeparatorChar) == false) subfolder += Path.DirectorySeparatorChar; " is 149.
Long Statement,Sq1.Core.Sequencing,SequencedBacktests,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SequencedBacktests.cs,CalculateProfitFactorAverage,The length of the statement  "			double backtestsValidProfitFactorSum = 0;		// netProfit could overflow outside double for 1000000000 backtests in one deserialized list; profit factor is expected [-10...10]; " is 174.
Long Statement,Sq1.Core.Sequencing,SequencedBacktests,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SequencedBacktests.cs,Add,The length of the statement  "				string msg = "MULTITHREADING_ISSUE__YOU_MUST_PASS_CLONE_AND_THEN_LET_OTHER_DISPOSABLE_EXECUTOR_TO_RUN_ANOTHER_BACKTEST"; " is 120.
Long Statement,Sq1.Core.Sequencing,Sequencer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\Sequencer.cs,SequencerAbort,The length of the statement  "				this.Unpaused = true;	// DEADLOCK_OTHERWIZE__LET_ALL_SCHEDULED_PAUSED_STILL_INERTIOUSLY_FINISH__DISABLE_BUTTONS_FOR_USER_NOT_TO_WORSEN " is 134.
Long Statement,Sq1.Core.Sequencing,ReusableExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutor.cs,SpawnEthalonForEachThread_forEachDisposableExecutorInSequencerPool,The length of the statement  "			//v2 HOW_DO_YOU_CREATE_INDIVIDUAL_BACKTESTERS_THIS_WAY??? DisposableExecutor clone = (DisposableExecutor) base.MemberwiseClone(); " is 129.
Long Statement,Sq1.Core.Sequencing,ReusableExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutor.cs,InitializeAndPushParameters_toDefaultContextCurrent_fromNextSequenced,The length of the statement  "			//v1 dynamically taken now in BacktestMarketsim.cs:476 base.MarketsimBacktest.Initialize(base.Strategy.ScriptContextCurrent.FillOutsideQuoteSpreadParanoidCheckThrow); " is 166.
Long Statement,Sq1.Core.Sequencing,ReusableExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutor.cs,InitializeAndPushParameters_toDefaultContextCurrent_fromNextSequenced,The length of the statement  "			base.Strategy.ScriptContextCurrent.AbsorbOnlyScriptAndIndicatorParameterCurrentValues_toDisposableFromSequencer(ctxNext); " is 121.
Long Statement,Sq1.Core.Sequencing,ReusableExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutor.cs,InitializeAndPushParameters_toDefaultContextCurrent_fromNextSequenced,The length of the statement  "			string copyToCtx   = base.Strategy.ScriptContextCurrent.ScriptAndIndicatorParametersMergedUnclonedForSequencerByName_AsString; " is 126.
Long Statement,Sq1.Core.Sequencing,ReusableExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutor.cs,InitializeAndPushParameters_toDefaultContextCurrent_fromNextSequenced,The length of the statement  "				string msg = "NOT_ABSORBED_PROPERLY__SEQUENCER_INITPARAMSxCORE_BUG copyFrom[" + copyFromCtx + "] != copyTo[" + copyToCtx + "]"; " is 127.
Long Statement,Sq1.Core.Sequencing,ReusableExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutor.cs,InitializeAndPushParameters_toDefaultContextCurrent_fromNextSequenced,The length of the statement  "			string copyToScript = base.Strategy.Script.ScriptAndIndicatorParametersMergedUnclonedForReusableExecutorToCheckByName_AsString; " is 127.
Long Statement,Sq1.Core.Sequencing,ReusableExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutor.cs,InitializeAndPushParameters_toDefaultContextCurrent_fromNextSequenced,The length of the statement  "				string msg = "NOT_ABSORBED_PROPERLY__SEQUENCER_INITPARAMSxCORE_BUG copyFrom[" + copyFromCtx + "] != copyScript[" + copyToScript + "]"; " is 134.
Long Statement,Sq1.Core.Sequencing,ReusableExecutorsPool,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutorsPool.cs,Reinitialize,The length of the statement  "				string msg = "I_FIXED_IT_BY_REPLACING_THIS_TO_RET_IN_Strategy.CloneMinimalForEachThread_forEachDisposableExecutorInSequencerPool()"; " is 132.
Long Statement,Sq1.Core.Sequencing,ReusableExecutorsPool,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutorsPool.cs,AbortAllTasksAndDispose,The length of the statement  "				string msg = "DISPOSABLE_ABORTED " + this.executorsRunningNow.IndexOf(disposable) + "/" + this.executorsRunningNow.Count; " is 121.
Long Statement,Sq1.Core.Sequencing,ReusableExecutorsPool,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutorsPool.cs,spawnToReachTotalNr,The length of the statement  "				string msg = "I_REFUSE_TO_SPAWN_MORE_THREADS_this.ExecutorsRunningNow[" + this.ExecutorsSpawnedNow + "] >= threadsToUse[" + threadsToUse + "]"; " is 143.
Long Statement,Sq1.Core.Sequencing,ReusableExecutorsPool,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutorsPool.cs,spawnToReachTotalNr,The length of the statement  "				ReusableExecutor executorSpawned = executorEthalonWithDetachedBars.SpawnEthalonForEachThread_forEachDisposableExecutorInSequencerPool(reasonToExist); " is 149.
Long Statement,Sq1.Core.Sequencing,ReusableExecutorsPool,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutorsPool.cs,LaunchToReachTotalNr,The length of the statement  "				string msg = "I_REFUSE_TO_LAUNCH_MORE_THREADS_this.ExecutorsRunningNow[" + this.ExecutorsRunningNow + "] >= threadsToUse[" + threadsToUse + "]"; " is 144.
Long Statement,Sq1.Core.Sequencing,ReusableExecutorsPool,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutorsPool.cs,LaunchToReachTotalNr,The length of the statement  "				//v1 string ctxName = Sequencer.ITERATION_PREFIX + (this.sequencer.BacktestsFinished + 1) + "/" + this.sequencer.BacktestsTotal; " is 128.
Long Statement,Sq1.Core.Sequencing,ReusableExecutorsPool,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutorsPool.cs,LaunchToReachTotalNr,The length of the statement  "				string ctxName = Sequencer.ITERATION_PREFIX + (this.parametersSequencer.IncrementsDone + 1) + "/" + this.sequencer.BacktestsTotal; " is 130.
Long Statement,Sq1.Core.Sequencing,ReusableExecutorsPool,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutorsPool.cs,LaunchToReachTotalNr,The length of the statement  "				//WHOLE REASON OF THIS POOL IS TO DISPOSE ALERTS launchingIdle.ExecutionDataSnapshot.Initialize();	// LEAKED_HANDLES_HUNTER for v2 " is 130.
Long Statement,Sq1.Core.Sequencing,ParametersSequencer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ParametersSequencer.cs,getFirstScriptContext,The length of the statement  "			ret.AbsorbOnlyScriptAndIndicatorParamsFrom_usedBySequencerOnly("FOR_userClickedDuplicateCtx"' this.contextScriptCloneIterateable); " is 130.
Long Statement,Sq1.Core.Sequencing,ParametersSequencer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ParametersSequencer.cs,getNextScriptContextSequenced,The length of the statement  "			ret.AbsorbOnlyScriptAndIndicatorParamsFrom_usedBySequencerOnly("FOR_userClickedDuplicateCtx"' this.contextScriptCloneIterateable); " is 130.
Long Statement,Sq1.Core.Sequencing,ParametersSequencer,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ParametersSequencer.cs,nextMerged,The length of the statement  "				string msg = "overflow in fastIndex[1] when slowIndex[1]' moving slowIndex[1]=>[2]' resetting [0]...slowIndex[1]=>[Min] (step 10)"; " is 131.
Long Statement,Sq1.Core.Sequencing,SystemPerformanceRestoreAble,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SystemPerformanceRestoreAble.cs,CheckPositionsCountMustIncreaseOnly,The length of the statement  "					string msg = "NOT_AN_ERROR__BACKTESTS_IN_SUBSET_WILL_NOT_HAVE_KPIS [" + this.ToString() + "].KPIsCumulativeByDateIncreasing=null"; " is 130.
Long Statement,Sq1.Core.Sequencing,SystemPerformanceRestoreAble,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SystemPerformanceRestoreAble.cs,Ensure_OnBacktestFinisheds_AreRebuiltAfterDeserialization,The length of the statement  "			if (this.ScriptParametersById_BuiltOnBacktestFinished != null || this.IndicatorParametersByName_BuiltOnBacktestFinished != null) { " is 130.
Long Statement,Sq1.Core.Sequencing,SystemPerformanceRestoreAble,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SystemPerformanceRestoreAble.cs,Ensure_OnBacktestFinisheds_AreRebuiltAfterDeserialization,The length of the statement  "			foreach (IndicatorParameter indicatorOrScriptParameter in this.ScriptAndIndicatorParameterClonesByName_BuiltOnBacktestFinished.Values) { " is 136.
Long Statement,Sq1.Core.Sequencing,SystemPerformanceRestoreAble,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SystemPerformanceRestoreAble.cs,Ensure_OnBacktestFinisheds_AreRebuiltAfterDeserialization,The length of the statement  "					List<IndicatorParameter> parametersForIndicator = this.IndicatorParametersByName_BuiltOnBacktestFinished[indicatorName]; " is 120.
Long Statement,Sq1.Core.DoubleBuffered,PanelDoubleBuffered,C:\repos\worldexplorer_SquareOne\Sq1.Core\DoubleBuffered\PanelDoubleBuffered.cs,OnPaint,The length of the statement  "				//pe.Graphics.SetClip(base.ClientRectangle);	// always repaint whole Panel Surface; by default' only extended area is "Clipped" " is 127.
Long Statement,Sq1.Core.DoubleBuffered,UserControlDoubleBuffered,C:\repos\worldexplorer_SquareOne\Sq1.Core\DoubleBuffered\UserControlDoubleBuffered.cs,OnPaintBackgroundDoubleBuffered,The length of the statement  "			//NOPE base.OnPaintBackground(pe);	// horizontal Panels inside MultiSplitter will receive PaintBackground on MultiSplitter.Invalidate() " is 135.
Long Statement,Sq1.Core.DoubleBuffered,UserControlDoubleBuffered,C:\repos\worldexplorer_SquareOne\Sq1.Core\DoubleBuffered\UserControlDoubleBuffered.cs,OnPaint,The length of the statement  "				//pe.Graphics.SetClip(base.ClientRectangle);	// always repaint whole UserControl Surface; by default' only extended area is "Clipped" " is 133.
Long Statement,Sq1.Core.DoubleBuffered,UserControlDoubleBuffered,C:\repos\worldexplorer_SquareOne\Sq1.Core\DoubleBuffered\UserControlDoubleBuffered.cs,OnPaintBackground,The length of the statement  "				//NOPE base.OnPaintBackground(pe);	// horizontal Panels inside MultiSplitter will receive PaintBackground on MultiSplitter.Invalidate() " is 135.
Long Statement,Sq1.Core.Execution,AlertList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\AlertList.cs,ByBarPlacedSafeCopy,The length of the statement  "				foreach (int bar in this.ByBarPlaced.Keys) ret.Add(bar' new AlertList("ByBarPlacedSafeCopy"' null' this.ByBarPlaced[bar])); " is 123.
Long Statement,Sq1.Core.Execution,AlertList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\AlertList.cs,Substract_returnClone,The length of the statement  "				AlertList ret		= new AlertList(base.ReasonToExist + "_MINUS_" + alertsPending_alreadyScheduledForDelayedFill.ReasonToExist' base.Snap); " is 135.
Long Statement,Sq1.Core.Execution,ExecutorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ExecutorDataSnapshot.ScriptExecWatchdog.cs,BarkIfAnyScriptOverrideIsRunning,The length of the statement  "			// 1) Broker=>OrderFilledCallback locks on AlertsPending' Streaming=>Strategy.OnNewQuote=>Buy has queued on AlertPending' while Performance in GUI reads AlertsPending.Count and throws " is 183.
Long Statement,Sq1.Core.Execution,ExecutorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ExecutorDataSnapshot.ScriptExecWatchdog.cs,BarkIfAnyScriptOverrideIsRunning,The length of the statement  "			// 2) all three require Core's smart decision simultaneously: script.OnPrototypeSLfilled' streaming.OnNewQuote' broker.OnAnotherAlertFilled " is 139.
Long Statement,Sq1.Core.Execution,ExecutorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ExecutorDataSnapshot.ScriptExecWatchdog.cs,MovePositionOpen_toClosed,The length of the statement  "			bool added = this.PositionsMaster.AddToClosedDictionary_step2of2(positionClosing' this' msig' ConcurrentWatchdog.TIMEOUT_DEFAULT' absenseInPositionsOpenNowIsAnError); " is 166.
Long Statement,Sq1.Core.Execution,PositionList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionList.cs,AddOpened_step1of2,The length of the statement  "				if (this.LastBarIndexEntry < positionOpened.EntryFilledBarIndex) this.LastBarIndexEntry = positionOpened.EntryFilledBarIndex; " is 125.
Long Statement,Sq1.Core.Execution,PositionList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionList.cs,AddToClosedDictionary_step2of2,The length of the statement  "					string msg = "POSITION_MUST_BE_ADDED_WHILE_JUST_OPENED_AND_SYNCED_TO_CLOSED_DICTIONARY_ON_CLOSE " + positionClosed.ToString(); " is 126.
Long Statement,Sq1.Core.Execution,PositionList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionList.cs,AddToClosedDictionary_step2of2,The length of the statement  "				if (this.LastBarIndexExit < positionClosed.ExitFilledBarIndex) this.LastBarIndexExit = positionClosed.ExitFilledBarIndex; " is 121.
Long Statement,Sq1.Core.Execution,PositionList,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\PositionList.cs,Clone,The length of the statement  "				PositionList ret		= new PositionList("CLONE_" + base.ReasonToExist' base.Snap' base.InnerList);		// WHO_DISPOSES_MANUAL_RESET_EVENT_OF_THE_CHILD__WHEN_RELOADING_WORKSPACE??? " is 173.
Long Statement,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillEntryWith,The length of the statement  "			string msig = " FillEntryWith(" + entryBar + "' " + entryFill_price + "' " + entryFill_qty + "' " + entryFill_slippage + "' " + entryFill_commission + ")"; " is 155.
Long Statement,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillEntryWith,The length of the statement  "			// 2) Market order must be filled now at SpreadGenerator-generated ANY price while StreamingBar may contain only 1 quote (height=0) " is 131.
Long Statement,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillEntryWith,The length of the statement  "			//	string msg = "PRICE_FILLED_POSITION_ENTRY_DOESNT_EXIST_IN_ENTRYBAR entryFilledPrice[" + entryFillPrice + "] entryBar[" + entryBar + "]"; " is 139.
Long Statement,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillEntryWith,The length of the statement  "				string msg = "BARINDEX_FILLED_POSITION_ENTRY_DOESNT_BELONG_TO_ITS_OWN_PARENT_CHECK_Position.EntryBar_PROPERTY entryBar[" " is 120.
Long Statement,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillExitWith,The length of the statement  "			string msig = " FillExitWith(" + exitBar + "' " + exitFill_price + "' " + exitFill_qty + "' " + exitFill_slippage + "' " + exitFill_commission + ")"; " is 149.
Long Statement,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillExitWith,The length of the statement  "			// 2) Market order must be filled now at SpreadGenerator-generated ANY price while StreamingBar may contain only 1 quote (height=0) " is 131.
Long Statement,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillExitWith,The length of the statement  "			//	string msg = "PRICE_FILLED_POSITION_EXIT_DOESNT_EXIST_IN_EXITBAR exitFilledPrice[" + exitFillPrice + "] exitBar[" + exitBar + "]"; " is 133.
Long Statement,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillExitWith,The length of the statement  "				string msg = "BARINDEX_FILLED_POSITION_EXIT_DOESNT_BELONG_TO_ITS_OWN_PARENT_BARS_CHECK_Position.EntryBar_PROPERTY exitBar[" " is 123.
Long Statement,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillExitWith,The length of the statement  "				bool skipWhenRemovingPendingAlertBacktestLeftOpen = this.EntryBar.ParentBars.ReasonToExist.Contains(Backtester.BARS_BACKTEST_CLONE_PREFIX) " is 138.
Long Statement,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillExitWith,The length of the statement  "					skipWhenRemovingPendingAlertBacktestLeftOpen = this.EntryBar.ParentBars.ReasonToExist.Contains(Livesimulator.BARS_LIVESIM_CLONE_PREFIX) " is 135.
Long Statement,Sq1.Core.Execution,Position,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Position.Stats.cs,FillExitWith,The length of the statement  "					string msg = "NOW_LOOK_AT_CALLSTACK__3_LEVELS_LOWER_YOU_SHOULD_SEE__ScriptExecutor.RemovePendingExitAlertPastDueClosePosition()"; " is 129.
Long Statement,Sq1.Core.Execution,Alert,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Alert.cs,ToString,The length of the statement  "//			msg += (null == this.FilledBar) ? ":UNFILLED" : ":FILLED@" + this.PriceFilledThroughPosition + "*" + this.QtyFilledThroughPosition; " is 136.
Long Statement,Sq1.Core.Execution,Order,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Order.cs,FillWith,The length of the statement  "			//	string msg = "ORDER_FILLED_HAS_ALERT_WITHOUT_STREAMING_BAR order[" + this.ToString() + "].Alert[" + this.Alert + "]"; " is 120.
Long Statement,Sq1.Core.Execution,Order,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Order.cs,FillWith,The length of the statement  "			//this.Alert.FillPositionAffectedEntryOrExitRespectively(barStreaming' -1' priceFill' qtyFill' slippageFill' commissionFill); " is 125.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,BacktestStartingResetBarsEffectiveProxy,The length of the statement  "					string msg = "SO_WHY_ClearAllBeforeBacktest()_DIDNT_CLEAR_INDICATORS??? SORRY_FOR_THE_MESS__VALID_ONLY_FOR_MANUAL_REBACKTEST_DURING_LIVE"; " is 138.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,Initialize,The length of the statement  "				string msg = "INDICATOR_ALREADY_INITIALIZE_WITH_SAME_HOST_PANEL [" + this + "] this.HostPanelForIndicator[" + this.HostPanelForIndicator + "]"; " is 143.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,BacktestStartingConstructOwnValuesValidateParameters,The length of the statement  "			this.Decimals = Math.Max(this.BarsEffective.SymbolInfo.PriceDecimals' 1);	// for SBER' constant ATR shows truncated (imprecise) mouseOver value on gutter " is 153.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,CalculateOwnValueOnNewStreamingQuote_invokedAtEachQuoteNoExceptions_NoPeriodWaiting,The length of the statement  "			//PROHIBITED_TO_CALCULATE_EACH_QUOTE_SLOW return this.CalculateOwnValueOnNewStaticBarFormed(newStreamingQuote.ParentStreamingBar); " is 130.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,canRunCalculation,The length of the statement  "					string msg = "I_REFUSE_TO_CALCULATE_DUE_TO_PREVIOUS_ERRORS Indicator.OnNewStaticBarFormed(" + newStaticBar + ")" + this.ToString(); " is 131.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,canRunCalculation,The length of the statement  "			//	//	string msg = "barsWaitToFirstIndicatorValidIndex[" + barsWaitToFirstIndicatorValidIndex + "] newStaticBar.ParentBarsIndex - 1 < this.FirstValidBarIndex"; " is 159.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,OnBarStaticLastFormed_whileStreamingBarWithOneQuoteAlreadyAppended,The length of the statement  "			double derivedCalculated = this.CalculateOwnValueOnNewStaticBarFormed_invokedAtEachBarNoExceptions_NoPeriodWaiting(newStaticBar); " is 129.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,OnNewStreamingQuote,The length of the statement  "			double derivedCalculated = this.CalculateOwnValueOnNewStreamingQuote_invokedAtEachQuoteNoExceptions_NoPeriodWaiting(newStreamingQuote); " is 135.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,DrawValueEntryPoint,The length of the statement  "				string msg = "DONT_WANT_TO_HACK_WILL_DRAW_LAST_STATIC_BARS_INDICATOR_VALUE_AFTER_YOU_TURN_ON_STREAMING_SO_I_WILL_HAVE_NEW_QUOTE_PROVING_THE_LAST_BAR_IS_FORMED"; " is 160.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,DrawValueEntryPoint,The length of the statement  "					string msg2 = "YOU_HAD_BACKTESTONSELECTORS_OFF_AND_CLICKED_ANOTHER_SYMBOL? SKIPPING_RENDERING BUT_BETTER_TO_SET_OWN_VALUES_TO_NULL_AT_SYMBOL_CHANGE"; " is 149.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,DrawValueEntryPoint,The length of the statement  "				string howToFix = " SYNC_IMPLEMENTATION_WITH_IndicatorMovingAverageSimple OR_FRAMEWORK_BUG_ON_EDGE_BTW_BACKTEST_AND_LIVE"; " is 122.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,DrawValueSingleLine,The length of the statement  "				string msg = "CAN_NOT_DRAW_INDICATOR_CANT_TAKE_VALUE_PREVIOUS_BAR_BEOYND_AVAILABLE barIndexPrev[" + barIndexPrev + "] OwnValuesCalculated.Count[" + this.OwnValuesCalculated.Count + "]"; " is 185.
Long Statement,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,DrawValueSingleLine,The length of the statement  "				string msg = "CAN_NOT_DRAW_INDICATOR_HAS_NO_VALUE_CALCULATED_FOR_PREVIOUS_BAR[" + barPrev.DateTimeOpen + "] " + this.ToString(); " is 128.
Long Statement,Sq1.Core.Indicators,IndicatorAverageTrueRange,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAverageTrueRange.cs,InitializeBacktestStartingPreCheckErrors,The length of the statement  "			// not in ctor because base.BarsEffective should not be null; initialized only now in Indicator.BacktestStarting() upstack " is 122.
Long Statement,Sq1.Core.Indicators,IndicatorAverageTrueRange,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAverageTrueRange.cs,InitializeBacktestStartingPreCheckErrors,The length of the statement  "			//MOVED_UPSTACK_FOR_ATRBAND_TO_FORMAT_ITS_SMALL_VALUES_AS_WELL  base.Decimals = Math.Max(base.Executor.Bars.SymbolInfo.DecimalsPrice' 1);	// for SBER' constant ATR shows truncated (imprecise) mouseOver value on gutter " is 217.
Long Statement,Sq1.Core.Indicators,IndicatorAtrBand,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAtrBand.cs,InitializeBacktestStartingPreCheckErrors,The length of the statement  "			this.BandLower = new DataSeriesTimeBasedColorified(base.OwnValuesCalculated.ScaleInterval' "BandLower for " + base.Name' base.LineColor); " is 137.
Long Statement,Sq1.Core.Indicators,IndicatorAtrBand,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAtrBand.cs,InitializeBacktestStartingPreCheckErrors,The length of the statement  "			this.BandUpper = new DataSeriesTimeBasedColorified(base.OwnValuesCalculated.ScaleInterval' "BandLower for " + base.Name' base.LineColor); " is 137.
Long Statement,Sq1.Core.Indicators,IndicatorAtrBand,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAtrBand.cs,CalculateOwnValueOnNewStaticBarFormed_invokedAtEachBarNoExceptions_NoPeriodWaiting,The length of the statement  "			double atrMultiplied = atrValue * this.ParamMultiplier.ValueCurrent;	// I_WONT_CHECK_ZERO_RESULT_WILL_BE_DRAWN_AS_WEIRD_1PX_LINE_AT_BOTTOM_CHART " is 144.
Long Statement,Sq1.Core.Indicators,IndicatorAtrBand,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAtrBand.cs,CalculateOwnValueOnNewStaticBarFormed_invokedAtEachBarNoExceptions_NoPeriodWaiting,The length of the statement  "			double atrMultipliedAligned = newStaticBar.ParentBars.SymbolInfo.AlignToPriceLevel(atrMultiplied' PriceLevelRoundingMode.RoundToClosest); " is 137.
Long Statement,Sq1.Core.Indicators,IndicatorAtrBand,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAtrBand.cs,CalculateOwnValueOnNewStaticBarFormed_invokedAtEachBarNoExceptions_NoPeriodWaiting,The length of the statement  "			double lowerAligned = newStaticBar.ParentBars.SymbolInfo.AlignToPriceLevel(lower' PriceLevelRoundingMode.RoundToClosest); " is 121.
Long Statement,Sq1.Core.Indicators,IndicatorAtrBand,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAtrBand.cs,CalculateOwnValueOnNewStaticBarFormed_invokedAtEachBarNoExceptions_NoPeriodWaiting,The length of the statement  "			double upperAligned = newStaticBar.ParentBars.SymbolInfo.AlignToPriceLevel(upper' PriceLevelRoundingMode.RoundToClosest); " is 121.
Long Statement,Sq1.Core.Indicators,IndicatorAtrBand,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAtrBand.cs,CalculateOwnValueOnNewStaticBarFormed_invokedAtEachBarNoExceptions_NoPeriodWaiting,The length of the statement  "				//greater than BacktestSpreadModelerPercentageOfMedian(0.01) will make ATRband inconsistent! you'll see in TooltipPrice (Close+ATR != C+Upper) & SPREAD_MODELER_SHOULD_GENERATE_TIGHTER_SPREADS " is 191.
Long Statement,Sq1.Core.Indicators,IndicatorAtrBand,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAtrBand.cs,CalculateOwnValueOnNewStaticBarFormed_invokedAtEachBarNoExceptions_NoPeriodWaiting,The length of the statement  "					+ " " + this.Executor.BacktesterOrLivesimulator.BacktestDataSource.StreamingAsBacktest_nullUnsafe.SpreadModeler.ToString() " is 122.
Long Statement,Sq1.Core.Indicators,IndicatorAtrBand,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAtrBand.cs,CalculateOwnValueOnNewStaticBarFormed_invokedAtEachBarNoExceptions_NoPeriodWaiting,The length of the statement  "			// TODO make sure OnPaint will invoke my DrawValueIndicatorSpecific() despite each OwnValue is NaN and it looks like there is nothing to draw " is 141.
Long Statement,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,checkPopupOnResetAndSync,The length of the statement  "					string hint = "indicator value for the current-last-bar will be calculated by next-bar incoming quote meaning official closing of current-last-bar"; " is 148.
Long Statement,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,BacktestContextRestoreSwitchToOriginalBarsContinueToLiveNorecalculate,The length of the statement  "				string msg = "MISUSE_UPSTACK__NO_POINT_OF_INVOKING_ME MUST_BE_SAME_AND_ARE smaSeries.AverageFor=base.ClosesProxyEffective"; " is 123.
Long Statement,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,BacktestContextRestoreSwitchToOriginalBarsContinueToLiveNorecalculate,The length of the statement  "				string msg = "I_ABORTED_BACKTEST_ON_FIRST_BAR INTERNAL_SMA_MUST_NOT_BE_EMPTY_OR_FRESHLY_CONSTRUCTED__OTHERWIZE_checkPopupOnResetAndSync()_WILL_THROW"; " is 150.
Long Statement,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,BacktestStartingResetBarsEffectiveProxy,The length of the statement  "			//	string msg = "MISUSE_UPSTACK__NO_POINT_OF_INVOKING_ME MUST_BE_SAME_AND_ARE smaSeries.AverageFor=base.ClosesProxyEffective"; " is 126.
Long Statement,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,CalculateOwnValueOnNewStaticBarFormed_invokedAtEachBarNoExceptions_NoPeriodWaiting,The length of the statement  "				if (duplicateFound && double.IsNegativeInfinity(alreadyExistingValue) == true && double.IsNaN(alreadyExistingValue) == false) { " is 127.
Long Statement,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,CalculateOwnValueOnNewStaticBarFormed_invokedAtEachBarNoExceptions_NoPeriodWaiting,The length of the statement  "							+ "newStaticBar.DateTimeOpen[" + newStaticBar.DateTimeOpen + "] < LastDateAppended[" + base.OwnValuesCalculated.LastDateAppended + "]"; " is 135.
Long Statement,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,CalculateOwnValueOnNewStaticBarFormed_invokedAtEachBarNoExceptions_NoPeriodWaiting,The length of the statement  "			int slidingWindowLeftBar = slidingWindowRightBar - this.ParamPeriod.ValueCurrent + 1;	// FirstValidBarIndex must be Period+1 " is 124.
Long Statement,Sq1.Core.Indicators,IndicatorParameter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorParameter.cs,ValidateSelf,The length of the statement  "			if (this.ValueCurrent	> this.ValueMax)	return "ValueCurrent["	+ this.ValueCurrent	+ "] > ValueMax["		+ this.ValueMax + "]"; " is 123.
Long Statement,Sq1.Core.Indicators,IndicatorParameter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorParameter.cs,ValidateSelf,The length of the statement  "			if (this.ValueCurrent	< this.ValueMin)	return "ValueCurrent["	+ this.ValueCurrent	+ "] < ValueCurrent["	+ this.ValueCurrent + "]"; " is 130.
Long Statement,Sq1.Core.Serializers,SerializerLogrotatePeriodic<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Serializers\SerializerLogrotatePeriodic.cs,serializerThreadEntry,The length of the statement  "				this.timer.Change(this.PeriodMillis' Timeout.Infinite);		// this.PeriodMillis will be different each time (publicly accessible field) " is 133.
Long Statement,Sq1.Core.Serializers,Serializer<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Serializers\Serializer.cs,Initialize,The length of the statement  "			//if (string.IsNullOrEmpty(subfolder) == false && subfolder.EndsWith(Path.DirectorySeparatorChar) == false) subfolder += Path.DirectorySeparatorChar; " is 149.
Long Statement,Sq1.Core.Serializers,Serializer<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Serializers\Serializer.cs,Initialize,The length of the statement  "			//if (string.IsNullOrEmpty(workspaceName) == false && workspaceName.EndsWith(Path.DirectorySeparatorChar) == false) workspaceName += Path.DirectorySeparatorChar; " is 161.
Long Statement,Sq1.Core.Serializers,Serializer<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Serializers\Serializer.cs,Initialize,The length of the statement  "					string msg = "DIRECTORY_DOESNT_EXIST_AND_YOU_DIDNT_SAY_CREATE Directory.Exists(" + this.AbsPath + ")=false AND createNonExistingPath=false"; " is 140.
Long Statement,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,AbsorbFrom_duplicatedInSliders_or_importedFromSequencer,The length of the statement  "			//some of these guys can easily be absorbed by object.MemberwiseClone()' why do I prefer to maintain the growing list manually?...  " is 130.
Long Statement,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,replaceWithClonesScriptAndIndicatorParameters,The length of the statement  "			Dictionary<string' List<IndicatorParameter>> indicatorParametersByNameClonedReset = new Dictionary<string' List<IndicatorParameter>>(); " is 135.
Long Statement,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,AbsorbOnlyScriptAndIndicatorParameterCurrentValues_fromSequencer,The length of the statement  "					string msg = "MUST_BE_EMPTY_SORTED_DICTIONARY_INSTEAD_OF_NULL_AFTER Ensure_OnBacktestFinisheds_AreRebuiltAfterDeserialization()"; " is 129.
Long Statement,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,AbsorbOnlyScriptAndIndicatorParameterCurrentValues_fromSequencer,The length of the statement  "				foreach (string indicatorName in sperfParametersToAbsorbIntoDefault.IndicatorParametersByName_BuiltOnBacktestFinished.Keys) { " is 125.
Long Statement,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,AbsorbOnlyScriptAndIndicatorParameterCurrentValues_fromSequencer,The length of the statement  "					List<IndicatorParameter> ipsOpt  = sperfParametersToAbsorbIntoDefault	.IndicatorParametersByName_BuiltOnBacktestFinished[indicatorName]; " is 136.
Long Statement,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,PushIndicatorParamsCurrentValuesIntoReflectedIndicators,The length of the statement  "					//DIFFERENT_POINTERS_100%_COMPARING_BY_NAME_IN_LOOP if (iParamsReflected.Contains(iParamInstantiated) == false) continue; " is 121.
Long Statement,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,PushIndicatorParamsCurrentValuesIntoReflectedIndicators,The length of the statement  "						//v1 WILL_ALWAYS_CONTINUE_KOZ_iParamCtx.IndicatorName="NOT_ATTACHED_TO_ANY_INDICATOR"__LAZY_TO_SET_AFTER_DESERIALIZATION_KOZ_WILL_THROW_IT_10_LINES_BELOW_AND_PARAM_NAMES_ARE_UNIQUE_WITHIN_INDICATOR if (iParamReflected.FullName != iParamCtx.FullName) { " is 251.
Long Statement,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,PushIndicatorParamsCurrentValuesIntoReflectedIndicators,The length of the statement  "			//YOU_JUST_SYNCHED_IN_TWO_INNER_LOOPS__WHY_DO_YOU_OVERWRITE_BRO????v1? this.IndicatorParametersByName = indicatorParametersByIndicator_ReflectedCached; " is 151.
Long Statement,Sq1.Core.StrategyBase,ContextScript,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ContextScript.cs,PushIndicatorParamsCurrentValuesIntoReflectedIndicators,The length of the statement  "				string msg = "NO_INDICATOR_PARAMETER_VALUES_ABSORBED_SAME_FOR_Count[" + indicatorParametersByIndicator_ReflectedCached.Count + "]"; " is 131.
Long Statement,Sq1.Core.StrategyBase,KPIs,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\KPIs.cs,AddKPIs,The length of the statement  "			if (double.IsNaN(anotherRun.WinLossRatio) || double.IsInfinity(anotherRun.WinLossRatio) || double.IsNegativeInfinity(anotherRun.WinLossRatio)) { " is 144.
Long Statement,Sq1.Core.StrategyBase,KPIs,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\KPIs.cs,AddKPIs,The length of the statement  "			if (double.IsNaN(anotherRun.ProfitFactor) || double.IsInfinity(anotherRun.ProfitFactor) || double.IsNegativeInfinity(anotherRun.ProfitFactor)) { " is 144.
Long Statement,Sq1.Core.StrategyBase,KPIs,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\KPIs.cs,AddKPIs,The length of the statement  "			if (double.IsNaN(anotherRun.RecoveryFactor) || double.IsInfinity(anotherRun.RecoveryFactor) || double.IsNegativeInfinity(anotherRun.RecoveryFactor)) { " is 150.
Long Statement,Sq1.Core.StrategyBase,KPIs,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\KPIs.cs,ToString,The length of the statement  "			string netFormatted = this.NetProfit.ToString("N2").Replace("'"' "");	//copypaste from NetProfitRecoveryForScriptContextNewName " is 127.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,AnnihilateCounterparty_forClosedPosition,The length of the statement  "				killedForBacktest_emittedForLive = this.executor.DataSource_fromBars.BrokerAdapter.AlertCounterparty_annihilate(stopLoss_toAnnihilate); " is 135.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,AnnihilateCounterparty_forClosedPosition,The length of the statement  "					string msg = "COUNTERPARTY_STOPLOSS_ANNIHILATED annihilationScheduled[" + killedForBacktest_emittedForLive + "] alertStopLoss_toAnnihilate[" + stopLoss_toAnnihilate + "]"; " is 171.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,AnnihilateCounterparty_forClosedPosition,The length of the statement  "					string msg = "FAILED_ANNIHILATE_TAKEPROFIT Prototype.TakeProfitAlert_forMoveAndAnnihilation=null for position[" + position + "]"; " is 129.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,AnnihilateCounterparty_forClosedPosition,The length of the statement  "				killedForBacktest_emittedForLive = this.executor.DataSource_fromBars.BrokerAdapter.AlertCounterparty_annihilate(takeProfit_toAnnihilate); " is 137.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,AnnihilateCounterparty_forClosedPosition,The length of the statement  "					string msg = "COUNTERPARTY_TAKEPROFIT_ANNIHILATED annihilationScheduled[" + killedForBacktest_emittedForLive + "] takeProfit_toAnnihilate[" + takeProfit_toAnnihilate + "]"; " is 172.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,appendMessage_toOrderFollowed,The length of the statement  "				string msg = "MUST_NOT_BE_NULL alert_takeProfit_or_stopLoss.OrderFollowed=NULL DONT_INVOKE_ME_FOR_BACKTEST__ONLY_LIVE_AND_LIVESIM_ISSUE_ORDERS_FOR_ALERTS"; " is 155.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,CreateStopLoss_fromPositionPrototype,The length of the statement  "			MarketLimitStop simpleStopIfActivationZero = (proto.StopLossActivation_negativeOffset == 0) ? MarketLimitStop.Stop : MarketLimitStop.StopLimit; " is 143.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,CreateStopLoss_fromPositionPrototype,The length of the statement  "				string msg = this.reasonWhy_newStopLossOffset_doesntMakeSense(position' proto.StopLoss_negativeOffset' simpleStopIfActivationZero); " is 131.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,CreateStopLoss_fromPositionPrototype,The length of the statement  "					string msg2 = "What should Activator do with sense-less proto.StopLossNegativeOffset[" + proto.StopLoss_negativeOffset + "]' "; " is 127.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,CreateStopLoss_fromPositionPrototype,The length of the statement  "			if (proto.StopLossActivation_negativeOffset < 0) alertStopLoss.PriceStopLimitActivation = proto.PriceStopLossActivation; " is 120.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,CreateStopLoss_fromPositionPrototype,The length of the statement  "			if (proto.StopLossAlert_forMoveAndAnnihilation != null && this.executor.BacktesterOrLivesimulator.ImRunningChartlessBacktesting == false) { " is 139.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_placingProto_doesntMakeSense,The length of the statement  "			double lastPrice = executor.DataSource_fromBars.StreamingAdapter.StreamingDataSnapshot.GetPriceForMarketOrder_notAligned_fromQuoteCurrent(proto.Symbol); " is 152.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_placingProto_doesntMakeSense,The length of the statement  "			Quote quote = executor.DataSource_fromBars.StreamingAdapter.StreamingDataSnapshot.GetQuoteCurrent_forSymbol_nullUnsafe(proto.Symbol); " is 133.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_placingProto_doesntMakeSense,The length of the statement  "			double priceBestBidAsk = executor.DataSource_fromBars.StreamingAdapter.StreamingDataSnapshot.GetBidOrAsk_forDirection_fromQuoteCurrent(proto.Symbol' proto.LongShort); " is 166.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_placingProto_doesntMakeSense,The length of the statement  "				msg += " (Script is strongly recommented to check proto.EntryPrice first so we don't pass unexpected position entries to the Market)"; " is 134.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,StopLoss_newNegativeOffset_updateActivate,The length of the statement  "			string msig = " StopLossNewNegativeOffsetUpdateActivate(position[" + position + "]' newStopLossNegativeOffset[" + newStopLoss_negativeOffset + "])"; " is 148.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,StopLoss_newNegativeOffset_updateActivate,The length of the statement  "				string msg = "StopLossNewNegativeOffsetUpdateActivate() can't update StopLoss for a position.Prototype=null: position=[" + position + "]"; " is 138.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,StopLoss_newNegativeOffset_updateActivate,The length of the statement  "					//proto.checkOffsetsThrowBeforeAbsorbing(proto.TakeProfitPositiveOffset' newStopLossNegativeOffset' newActivationOffset); " is 121.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,StopLoss_newNegativeOffset_updateActivate,The length of the statement  "					//	// NOPE!!! I WANT ALL ALERTS TO STAY IN HISTORY!!! just move SL in Alert' change Prices immediately; no orderKill/newOrder for StopLoss (Alerts don't have OrdersFollowed) " is 173.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,StopLoss_newNegativeOffset_updateActivate,The length of the statement  "					//	// SL_WILL_BE_KILLED proto.StopLossAlertForAnnihilation.PriceScript = proto.OffsetToPrice(newStopLossNegativeOffset); " is 120.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,StopLoss_newNegativeOffset_updateActivate,The length of the statement  "					//	// SL_WILL_BE_KILLED proto.StopLossAlertForAnnihilation.PriceStopLimitActivation = proto.OffsetToPrice(newActivationOffset); " is 127.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,StopLoss_newNegativeOffset_updateActivate,The length of the statement  "					//	executor.BacktesterOrLivesimulator.BacktestDataSource.BrokerAsBacktest_nullUnsafe.SimulateStopLossMoved(proto.StopLossAlertForAnnihilation); " is 143.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,StopLoss_newNegativeOffset_updateActivate,The length of the statement  "					//	this.executor.DataSource_fromBars.BrokerAdapter.MoveStopLossOverrideable(proto' newActivationOffset' newStopLossNegativeOffset); " is 131.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,StopLoss_newNegativeOffset_updateActivate,The length of the statement  "					this.executor.DataSource_fromBars.BrokerAdapter.OrderMoveExisting_stopLoss_overrideable(proto' newActivationOffset' newStopLoss_negativeOffset); " is 144.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,StopLoss_newNegativeOffset_updateActivate,The length of the statement  "					this.executor.DataSource_fromBars.BrokerAdapter.OrderMoveExisting_stopLoss_overrideable(proto' 0' newStopLoss_negativeOffset); " is 126.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,TakeProfit_newPositiveOffset_updateActivate,The length of the statement  "			string msig = " //TakeProfit_newPositiveOffset_updateActivate(" + position + "' newTakeProfit_positiveOffset[" + newTakeProfit_positiveOffset + "])"; " is 149.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,TakeProfit_newPositiveOffset_updateActivate,The length of the statement  "				string msg = "TakeProfitNewPositiveOffsetUpdateActivate() can't update TakeProfit for a position.Prototype=null: position=[" + position + "]"; " is 142.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,TakeProfit_newPositiveOffset_updateActivate,The length of the statement  "			//proto.checkOffsetsThrowBeforeAbsorbing(newTakeProfitPositiveOffset' proto.StopLossNegativeOffset' proto.StopLossActivationNegativeOffset); " is 140.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,TakeProfit_newPositiveOffset_updateActivate,The length of the statement  "			//	// NOPE!!! I WANT ALL ALERTS TO STAY IN HISTORY!!! just move TP in Alert' change Prices immediately; no orderKill/newOrder for TakeProfit (Alerts don't have OrdersFollowed) " is 175.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,TakeProfit_newPositiveOffset_updateActivate,The length of the statement  "			//	// TP_WILL_BE_KILLED proto.TakeProfitAlertForAnnihilation.PriceScript = proto.OffsetToPrice(newTakeProfitPositiveOffset); " is 124.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,TakeProfit_newPositiveOffset_updateActivate,The length of the statement  "			this.executor.DataSource_fromBars.BrokerAdapter.OrderMoveExisting_takeProfit_overrideable(proto' newTakeProfit_positiveOffset); " is 127.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,checkThrow_newStopLossOffset_makesSense,The length of the statement  "			string msig = " //checkThrow_newStopLossOffset_makesSense(" + position + "' newStopLoss_negativeOffset[" + newStopLoss_negativeOffset + "])"; " is 141.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,checkThrow_newStopLossOffset_makesSense,The length of the statement  "			string msg = this.reasonWhy_newStopLossOffset_doesntMakeSense(position' newStopLoss_negativeOffset' position.ExitAlert.MarketLimitStop); " is 136.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,checkThrow_newTakeProfitOffset_makesSense,The length of the statement  "			string msig = " //checkThrow_newTakeProfitOffset_makesSense(" + position + "' newStopLoss_negativeOffset[" + newTakeProfit_positiveOffset + "])"; " is 145.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newStopLossOffset_doesntMakeSense,The length of the statement  "			string msig = " //reasonWhy_newStopLossOffset_doesntMakeSense(" + position + "' newStopLoss_negativeOffset[" + newStopLoss_negativeOffset + "])"; " is 145.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newStopLossOffset_doesntMakeSense,The length of the statement  "				string msg1 = "NotYetImplemented: your script changes StopLossOffset for a proto.Symbol[" + proto.Symbol + "]!=position.Symbol[" + position.Symbol + "]"; " is 153.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newStopLossOffset_doesntMakeSense,The length of the statement  "			double priceBestBidAsk = executor.DataSource_fromBars.StreamingAdapter.StreamingDataSnapshot.GetBidOrAsk_forDirection_fromQuoteCurrent(proto.Symbol' proto.LongShort); " is 166.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newStopLossOffset_doesntMakeSense,The length of the statement  "					//double lastPrice = executor.DataSource.StreamingAdapter.StreamingDataSnapshot.LastQuoteGetPriceForMarketOrder(proto.Symbol); " is 126.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newStopLossOffset_doesntMakeSense,The length of the statement  "					Direction slDirectionAssumedOrActualIfFilled = proto.LongShort == PositionLongShort.Long ? Direction.Sell : Direction.Cover; " is 124.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newStopLossOffset_doesntMakeSense,The length of the statement  "					if (proto.StopLossAlert_forMoveAndAnnihilation != null) slDirectionAssumedOrActualIfFilled = proto.StopLossAlert_forMoveAndAnnihilation.Direction; " is 146.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newStopLossOffset_doesntMakeSense,The length of the statement  "							double ask = executor.DataSource_fromBars.StreamingAdapter.StreamingDataSnapshot.GetBestAsk_notAligned_forMarketOrder_fromQuoteCurrent(proto.Symbol); " is 149.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newStopLossOffset_doesntMakeSense,The length of the statement  "							double bid = executor.DataSource_fromBars.StreamingAdapter.StreamingDataSnapshot.GetBestBid_notAligned_forMarketOrder_fromQuoteCurrent(proto.Symbol); " is 149.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newStopLossOffset_doesntMakeSense,The length of the statement  "				msg += " (Script is strongly recommented to check SL price first so we don't pass unexpected position closures to the Market)"; " is 127.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newTakeProfitOffset_doesntMakeSense,The length of the statement  "			string msig = " //reasonWhy_newTakeProfitOffset_doesntMakeSense(" + position + "' newTakeProfit_positiveOffset[" + newTakeProfit_positiveOffset + "])"; " is 151.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newTakeProfitOffset_doesntMakeSense,The length of the statement  "				string msg1 = "NotYetImplemented: your script changes TakeProfitOffset for a proto.Symbol[" + proto.Symbol + "]!=position.Symbol[" + position.Symbol + "]"; " is 155.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newTakeProfitOffset_doesntMakeSense,The length of the statement  "			Quote quote = executor.DataSource_fromBars.StreamingAdapter.StreamingDataSnapshot.GetQuoteCurrent_forSymbol_nullUnsafe(proto.Symbol); " is 133.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newTakeProfitOffset_doesntMakeSense,The length of the statement  "			double priceBestBidAsk = executor.DataSource_fromBars.StreamingAdapter.StreamingDataSnapshot.GetBidOrAsk_forDirection_fromQuoteCurrent(proto.Symbol' proto.LongShort); " is 166.
Long Statement,Sq1.Core.StrategyBase,PositionPrototypeActivator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\PositionPrototypeActivator.Annihilate.cs,reasonWhy_newTakeProfitOffset_doesntMakeSense,The length of the statement  "				msg += " (Script is strongly recommented to check TP price first so we don't pass unexpected position closures to the Market)"; " is 127.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,OnBarStaticLastFormed_whileStreamingBarWithOneQuoteAlreadyAppended_callback,The length of the statement  "			string msg = "SCRIPT_DERIVED_MUST_IMPLEMENT Script[" + this.GetType().FullName + "]: public override void OnBarStaticLastFormedWhileStreamingBarWithOneQuoteAlreadyAppendedCallback(Bar)"; " is 186.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,CoverAtLimit,The length of the statement  "			return this.Executor.SellOrCover_alertCreateRegister(bar' position' limitPrice' signalName' Direction.Cover' MarketLimitStop.Limit); " is 132.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,CoverAtMarket,The length of the statement  "			return this.Executor.SellOrCover_alertCreateRegister(bar' position' 0' signalName' Direction.Cover' MarketLimitStop.Market); " is 124.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,CoverAtStop,The length of the statement  "			return this.Executor.SellOrCover_alertCreateRegister(bar' position' stopPrice' signalName' Direction.Cover' MarketLimitStop.Stop); " is 130.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SellAtLimit,The length of the statement  "			return this.Executor.SellOrCover_alertCreateRegister(bar' position' limitPrice' signalName' Direction.Sell' MarketLimitStop.Limit); " is 131.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SellAtMarket,The length of the statement  "			return this.Executor.SellOrCover_alertCreateRegister(bar' position' 0' signalName' Direction.Sell' MarketLimitStop.Market); " is 123.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SellAtStop,The length of the statement  "			return this.Executor.SellOrCover_alertCreateRegister(bar' position' stopPrice' signalName' Direction.Sell' MarketLimitStop.Stop); " is 129.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,ShortAtLimit,The length of the statement  "			return this.Executor.BuyOrShort_alertCreateRegister(bar' limitPrice' signalName' Direction.Short' MarketLimitStop.Limit); " is 121.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,Initialize,The length of the statement  "			this.Executor.Strategy.ScriptAndIndicatorParametersReflected_absorbMergeFromCurrentContext_saveStrategy(saveStrategy_falseForSequencer); " is 136.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,InitializeBacktestWrapper,The length of the statement  "			//MOVED_TO_ChartFormManager.InitializeStrategyAfterDeserialization() FIX_FOR: TOO_SMART_INCOMPATIBLE_WITH_LIFE_SPENT_4_HOURS_DEBUGGING DESERIALIZED_STRATEGY_HAD_PARAMETERS_NOT_INITIALIZED INITIALIZED_BY_SLIDERS_AUTO_GROW_CONTROL " is 228.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,IndicatorParamsAbsorbMergeFromReflected_InitializeIndicatorsWithHostPanel,The length of the statement  "			int parametersAbsorbed = this.Strategy.IndicatorParametersReflectedAbsorbMergeFromCurrentContext_SaveStrategy(saveStrategy_falseForSequencer); " is 142.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,IndicatorParamsAbsorbMergeFromReflected_InitializeIndicatorsWithHostPanel,The length of the statement  "				// moved from upstairs coz: after absorbing all deserialized indicator parameters from ScriptContext' GetHostPanelForIndicator will return an pre-instantiated PanelIndicator " is 173.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,IndicatorParamsAbsorbMergeFromReflected_InitializeIndicatorsWithHostPanel,The length of the statement  "				// example: MultiSplitterPropertiesByPanelName["ATR (Period:9[1..11/2])"] exists' while default Period for ATR is 5 => new PanelIndicator will be created " is 153.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,IndicatorParamsAbsorbMergeFromReflected_InitializeIndicatorsWithHostPanel,The length of the statement  "				// final goal is to avoid (splitterPropertiesByPanelName.Count != this.panels.Count) in SplitterPropertiesByPanelNameSet() and (splitterFound == null)   " is 150.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SwitchToDefaultContext_byAbsorbingScriptAndIndicatorParameters_fromSelfCloneConstructed,The length of the statement  "			object selfCloneConstructed = Activator.CreateInstance(this.GetType());	//default ctor invoked where developer is supposed to add ScriptAndIndicatorParameters into new This " is 172.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SwitchToDefaultContext_byAbsorbingScriptAndIndicatorParameters_fromSelfCloneConstructed,The length of the statement  "			SortedDictionary<int' ScriptParameter>	myctxScriptParametersTo		= this.Strategy.ScriptContextCurrent.ScriptParametersById; " is 122.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SwitchToDefaultContext_byAbsorbingScriptAndIndicatorParameters_fromSelfCloneConstructed,The length of the statement  "					string msg = "myctxScriptParametersTo.ContainsKey(" + cloneSPindex + ") == false; Script.ScriptParametersAsString=" + this.ScriptParametersAsString; " is 148.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SwitchToDefaultContext_byAbsorbingScriptAndIndicatorParameters_fromSelfCloneConstructed,The length of the statement  "					myctxScriptParametersTo.Add(cloneSPindex' cloneSparam.CloneAsScriptParameter("REFACTOR_SwitchedToDefaultContextByAbsorbingScriptAndIndicatorParametersFromSelfCloneConstructed")); " is 178.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SwitchToDefaultContext_byAbsorbingScriptAndIndicatorParameters_fromSelfCloneConstructed,The length of the statement  "			foreach (Indicator cloneI in cloneIndicators) cloneIndicatorsFrom.Add(cloneI.Name' new List<IndicatorParameter>(cloneI.ParametersByName.Values)); " is 145.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SwitchToDefaultContext_byAbsorbingScriptAndIndicatorParameters_fromSelfCloneConstructed,The length of the statement  "			Dictionary<string' List<IndicatorParameter>> myctxIndicatorsTo	= this.Strategy.ScriptContextCurrent.IndicatorParametersByName; " is 126.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SwitchToDefaultContext_byAbsorbingScriptAndIndicatorParameters_fromSelfCloneConstructed,The length of the statement  "					string msg = "myctxIndicatorsTo.ContainsKey(" + cloneIname + ") == false; Script.IndicatorParametersAsString=" + this.IndicatorParametersAsString; " is 146.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SwitchToDefaultContext_byAbsorbingScriptAndIndicatorParameters_fromSelfCloneConstructed,The length of the statement  "						myctxIparams.Add(cloneIparam.CloneAsIndicatorParameter("REFACTOR_SwitchedToDefaultContextByAbsorbingScriptAndIndicatorParametersFromSelfCloneConstructed")); " is 156.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,SwitchToDefaultContext_byAbsorbingScriptAndIndicatorParameters_fromSelfCloneConstructed,The length of the statement  "			string msg2 = "YOU_JUST_SELF_CLONED_AND_ABSORBED__YOU_JUST_NEED_TO_INIT_SCRIPT_INDICATORS_WITH_NEW_INDICATOR_PARAMS_AND_HOST_PANELS"; " is 133.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,PushChangedScriptParameterValueToScript,The length of the statement  "			string msig = " //Script.PushChangedScriptParameterValueToScript(" + indicatorParameterChangedDueToUserClickInSliders + ")"; " is 124.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,PushChangedScriptParameterValueToScript,The length of the statement  "				string msg = "I_REFUSE_TO_PUSH_PARAMETER_CLICKED_TO_SCRIPT SLIDERS_AUTOGROW_GENERATED_AN_EVENT_WITH_EMPTY_INDICATOR_PARAMETER_INSIDE"; " is 134.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,PushChangedScriptParameterValueToScript,The length of the statement  "			SortedDictionary<string' IndicatorParameter> reflectedAll = this.scriptAndIndicatorParametersReflectedMergedUnclonedForReusableExecutorToCheckByName; " is 149.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,PushChangedScriptParameterValueToScript,The length of the statement  "				string msg = "I_REFUSE_TO_PUSH_PARAMETER_CLICKED_TO_SCRIPT STALE_PARAMETER_CLICKED_WHICH_DOESNT_EXIST_IN_RECOMPILED_SCRIPT"; " is 124.
Long Statement,Sq1.Core.StrategyBase,Script,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Script.ReusableExecutorChecks.cs,PushChangedScriptParameterValueToScript,The length of the statement  "				string msg = "SCRIPT_PARAMETERS_SEEMS_TO_BE_THE_SAME_OBJECTS_WHILE_INDICATOR_PARAMETERS_ARE_DIFFERENT??? CATCH_DECIDE_COPY_OR_SAME"; " is 132.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktestContext_initialize,The length of the statement  "			//	string msg = "MUST_NEVER_BE_NULL DataSource_fromBars.StreamingAsBacktest_nullUnsafe[" + dataSourceFromBars.StreamingAsBacktest_nullUnsafe + "]"; " is 147.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktestContext_initialize,The length of the statement  "			dataSourceFromBars.QueuePauseIgnorePump_freezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst_WRAPPER(this' barsEmptyButWillGrow); " is 145.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktestContext_initialize,The length of the statement  "			this.preBacktestBars = this.Bars;	// this.preBacktestBars != null will help ignore this.IsStreaming saving IsStreaming state to json " is 132.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktestContext_initialize,The length of the statement  "					string msg = "I_SHOULD_ABORT_BACKTEST_NOW_HERE_BUT_DONT_HAVE_A_MECHANISM indicatorsHaveNoErrorsCanStartBacktesting=false"; " is 122.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktestContext_restore,The length of the statement  "					string state = "MA.OwnValues.Count=499' MA.BarsEffective.Count=500[0...499]' MA.BarsEffective.BarStreaming=null <= that's why indicator has 1 less"; " is 148.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktestContext_restore,The length of the statement  "			// MOVED_HERE_AFTER_ASSIGNING_IS_STREAMING_TO"avoiding saving strategy each backtest due to streaming simulation switch on/off" " is 127.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktestContext_restore,The length of the statement  "			//	string msg = "MUST_NEVER_BE_NULL BacktestDataSource_fromBars_nullUnsafe.StreamingAsBacktest_nullUnsafe[" + this.DataSource_fromBars.StreamingAsBacktest_nullUnsafe + "]"; " is 172.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktestContext_restore,The length of the statement  "			dataSourceFromBars.QueueResumeIgnorePump_unfreezeOtherLiveChartsExecutors_toLetMyOrderExecutionCallbacksGoFirst_WRAPPER(this); " is 126.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Backtester_abortIfRunning_restoreContext,The length of the statement  "			// TODO INTRODUCE_NEW_MANUAL_RESET_SO_THAT_NEW_BACKTEST_WAITS_UNTIL_TERMINATION_OF_THIS_METHOD_TO_AVOID_BROKEN_DISTRIBUTION_CHANNELS " is 132.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Backtester_abortIfRunning_restoreContext,The length of the statement  "			this.BacktesterOrLivesimulator.AbortRunningBacktest_waitAborted("USER_CHANGED_SELECTORS_IN_GUI_NEW_BACKTEST_IS_ALMOST_TASK.SCHEDULED"); " is 135.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRunSimulation_threadEntry_exceptionCatcher,The length of the statement  "						string msg = "PERFORMANCE_THREW_AFTER_BACKTEST_FINISHED_OKAY__NOT_RE-THROWING_NEED_TO_RESTORE_BACKTEST_CONTEXT_FINALLY"; " is 120.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,The length of the statement  "				string msg = "WILL_NOT_EXECUTE_BACKTESTER: Bars=null; select 1) TimeFrame 2) Range 3) PositionSize - for corresponding Chart; " + this; " is 135.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,The length of the statement  "				this.BacktesterOrLivesimulator.AbortRunningBacktest_waitAborted("ALREADY_BACKTESTING_this.Backtester.IsBacktestingNow"); " is 120.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,The length of the statement  "			//AFTER F6 I want to run backtest with one slider changed; I click on the slider and get "did you forget to initialize Executor?..." error " is 138.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,The length of the statement  "				// FIXED "EnterEveryBar doesn't draw MAfast"; editor-typed strategies already have indicators in SNAP after pre-backtest compilation " is 132.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,The length of the statement  "				//SEQUENCER_ALREADY_DONE_IT_CloneForSequencer this.Strategy.Script.IndicatorParamsAbsorbMergeFromReflected_InitializeIndicatorsWithHostPanel(); " is 143.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,The length of the statement  "			//SEQUENCER_ALREADY_DONE_IT_CloneForSequencer this.Strategy.ScriptParametersReflectedAbsorbMergeFromCurrentContext_SaveStrategy(); " is 130.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,The length of the statement  "				//this.MainForm.PopupException("SCHEDULING_RUN_SIMULATION for Strategy[" + this.Executor.Strategy + "] on Bars[" + this.Executor.Bars + "]"); " is 141.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,The length of the statement  "						//this.PerformanceAfterBacktest = new SystemPerformance(this);	// MULTITHREADING_ISSUE__YOU_MUST_PASS_CLONE_AND_THEN_LET_OTHER_DISPOSABLE_EXECUTOR_TO_RUN_ANOTHER_BACKTEST " is 170.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,The length of the statement  "				//ON_REQUESTING_ABORT_TASK_DIES_WITHOUT_INVOKING_CONTINUE_WITH started.Start(TaskScheduler.FromCurrentSynchronizationContext()); " is 128.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,CallbackAlertFilled_moveAround_invokeScriptNonReenterably,The length of the statement  "			//SLOW string msig = " //CallbackAlertFilledMoveAroundInvokeScript(" + alertFilled + "' " + quoteFilledThisAlert_nullForLive + ")"; " is 131.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,CallbackAlertFilled_moveAround_invokeScriptNonReenterably,The length of the statement  "			//avoiding two alertsFilled and messing script-overrides; despite all script invocations downstack are sequential' guaranteed for 1 alertFilled " is 143.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "			//SLOW string msig = " callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected(" + alertFilled + "' " + quoteFilledThisAlertNullForLive + ")"; " is 153.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "			string msig = " //callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected(" + alertFilled + "' " + quoteFilledThisAlertNullForLive + ")"; " is 148.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "					string msg = "DUPE: CallbackAlertFilled can't do its job: alert.PositionAffected.EntryBar!=-1 for alert [" + alertFilled + "]"; " is 127.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "					string msg = "DUPE: CallbackAlertFilled can't do its job: alert.PositionAffected.ExitBar!=-1 for alert [" + alertFilled + "]"; " is 126.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "			// Limit might get a Fill 2 bars after it was placed; PlacedBarIndex=BarStreaming.ParentIndex = now for past bar signals => not "PlacedBarIndex-1" " is 146.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "					+ alertFilled.PlacedBarIndex + "]; FilledBar=[" + alertFilled.FilledBar + "] PlacedBar=[" + alertFilled.PlacedBar + "]"; " is 120.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "				//THIS_ALREADY_IS_A_CLONE alertFilled.QuoteFilledThisAlertDuringBacktestNotLive = quoteFilledThisAlertNullForLive.Clone();	// CLONE_TO_FREEZE_AS_IT_HAPPENED_IGNORING_WHATEVER_HAPPENED_WITH_ORIGINAL_QUOTE_AFTERWARDS " is 214.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "				alertFilled.QuoteFilledThisAlertDuringBacktestNotLive = quoteFilledThisAlertNullForLive;	// CLONE_TO_FREEZE_AS_IT_HAPPENED_IGNORING_WHATEVER_HAPPENED_WITH_ORIGINAL_QUOTE_AFTERWARDS " is 180.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "				alertFilled.QuoteLastWhenThisAlertFilled = this.DataSource_fromBars.StreamingAdapter.StreamingDataSnapshot.GetQuoteCurrent_forSymbol_nullUnsafe(alertFilled.Symbol); " is 164.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "				alertFilled.FillPositionAffected_entryOrExit_respectively(barFill' barFillRelno' priceFill' qtyFill' slippageFill' commissionFill); " is 131.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "			PositionList positionsOpenedAfterAlertFilled = new PositionList("positionsOpenedAfterAlertFilled"' this.ExecutionDataSnapshot); " is 127.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "			PositionList positionsClosedAfterAlertFilled = new PositionList("positionsClosedAfterAlertFilled"' this.ExecutionDataSnapshot); " is 127.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "//			List<Alert> alertsPendingAtCurrentBarSafeCopy = this.ExecutionDataSnapshot.AlertsPending.SafeCopy(this' "callbackAlertFilledMoveAroundInvokeScriptReenterablyUnprotected(WAIT)"); " is 182.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "//				this.ChartShadow.AlertsPendingStillNotFilledForBarAdd(barBarStreaming_nullUnsafe.ParentBarsIndex' alertsPendingAtCurrentBarSafeCopy); " is 139.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "				// 0. once again' set ExitAlert to What was actually filled' because prototypeEntry created SL & TP' which were both written into ExitAlert; " is 140.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "				bool exitIsDifferent = alertFilled.PositionAffected.ExitAlert != null && alertFilled.PositionAffected.ExitAlert != alertFilled; " is 127.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "				alertsNewAfterAlertFilled.AddRange(this.PositionPrototypeActivator.PositionActivator_entryPoint__alertFilled_createSlTp_orAnnihilateCounterparty(alertFilled)' this' msig); " is 171.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "					// DONT_SCREAM_SO_MUCH IF_OFFSETS_WERE_ZERO_OR_WRONG_POLARITY_NO_SL_TP_ARE_CREATED CreateStopLossFromPositionPrototype() CreateTakeProfitFromPositionPrototype() " is 160.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "						string msg = "NONSENSE@Exit: there must be no alerts (got " + alertsNewAfterAlertFilled.Count + "): killer works silently"; " is 123.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "						this.OrderProcessor.Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread(alertsNewAfterExecSafeCopy' setStatusSubmitting' true); " is 134.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "								string msg = "StopLossAlert.OrderFollowed is NULL!!! CreateOrdersSubmitToBrokerAdapterInNewThreads() didnt do its job; engaging ManualResetEvent.WaitOne()"; " is 156.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "								string msg = "TakeProfitAlert.OrderFollowed is NULL!!! CreateOrdersSubmitToBrokerAdapterInNewThreads() didnt do its job; engaging ManualResetEvent.WaitOne()"; " is 158.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "				string msg = "AFTER_BACKTEST_HOOK_INVOKES_Performance.BuildStatsOnBacktestFinished()_AND_ReportersFormsManager.BuildReportFullOnBacktestFinished()"; " is 148.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "			ReporterPokeUnit pokeUnit_dontForgetToDispose = new ReporterPokeUnit(quoteFilledThisAlertNullForLive' alertsNewAfterAlertFilled' " is 128.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "					this.PerformanceAfterBacktest.BuildIncrementalBrokerFilledAlertsOpeningForPositions_step1of3(positionOpenedAfterAlertFilled); " is 125.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "						this.EventGenerator.RaiseOnBrokerFilledAlertsOpeningForPositions_step1of3(pokeUnit_dontForgetToDispose);		// WHOLE_POKE_UNIT_BECAUSE_EVENT_HANLDER_MAY_NEED_POSITIONS_CLOSED_AND_OPENED_TOGETHER " is 192.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "					this.PerformanceAfterBacktest.BuildReportIncrementalBrokerFilledAlertsClosingForPositions_step3of3(positionClosedAfterAlertFilled); " is 131.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "						this.EventGenerator.RaiseOnBrokerFilledAlertsClosingForPositions_step3of3(pokeUnit_dontForgetToDispose);		// WHOLE_POKE_UNIT_BECAUSE_EVENT_HANLDER_MAY_NEED_POSITIONS_CLOSED_AND_OPENED_TOGETHER " is 192.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "								this.ScriptIsRunning_cantAlterInternalLists.WaitAndLockFor(this' "OnPositionOpened_prototypeSlTpPlaced_callback(WAIT)"); " is 120.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The length of the statement  "	//				string msg = "WANNA_CREATE_AND_SEND_ORDERS???MISSING_IN_LIVESIM invokeScriptEvents_EASILY_ACTIVATES_POSITION_PROTOTYPE_CREATING_TWO_ALERTS_NEW!! I_THOUGHT_NEW_ALERTS_ARE_CREATED_UPSTACK_BUT_APPARENTLY_IM_WRONG"; " is 217.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,closePosition_withAlertClonedFromEntry_backtestEnded,The length of the statement  "			//// REFACTORED_POSITION_HAS_AN_ALERT_AFTER_ALERTS_CONSTRUCTOR we can exit by TP or SL - position doesn't have an ExitAlert assigned until Position.EntryAlert was filled!!! " is 172.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,closePosition_withAlertClonedFromEntry_backtestEnded,The length of the statement  "			//alertFilled.FillPositionAffectedEntryOrExitRespectively(barFill' barFillRelno' priceFill' qtyFill' slippageFill' commissionFill); " is 131.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,check_positionCanBeClosed,The length of the statement  "				bool shouldRemove = this.ExecutionDataSnapshot.PositionsOpenNow.Contains(alert.PositionAffected' this' "check_positionCanBeClosed(WAIT)"); " is 138.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,check_positionCanBeClosed,The length of the statement  "				Bar barFill = (this.IsStreamingTriggeringScript) ? alert.Bars.BarStreaming_nullUnsafeCloneReadonly : alert.Bars.BarStaticLast_nullUnsafe; " is 137.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,iShould_returnWithoutScriptInvocation_untilMarketOpen_orClearingFinished,The length of the statement  "			string reasonToGoFlat = this.Bars.MarketInfo.GetReason_ifMarket_closedOrSuspended_secondsFromNow(priorTo_marketClose_clearing_sec); " is 131.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,InvokeScript_onNewBar_onNewQuote,The length of the statement  "			ret = scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar(quote_fromStreaming); " is 123.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The length of the statement  "				this.ChartShadow.AlertsPendingStillNotFilledForBarAdd(barStreaming_nullUnsafe.ParentBarsIndex' alertsPending_atCurrentBar_safeCopy); " is 132.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The length of the statement  "								+ "YOU_WANT_ONE_STRATEGY_PER_SYMBOL_LIVE MAKE_SURE_YOU_HAVE_ONLY_ONE_SYMBOL:INTERVAL_ACROSS_ALL_OPEN_CHARTS PUMP_SHOULD_HAVE_BEEN_PAUSED_EARLIER" " is 145.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The length of the statement  "					ordersEmitted = this.OrderProcessor.Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread(alertsNew_afterExec_safeCopy " is 123.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The length of the statement  "			//	// FROM_ChartFormStreamingConsumer.ConsumeQuoteOfStreamingBar() #4/4 notify Positions that it should update open positions' I wanna see current profit/loss and relevant red/green background " is 192.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The length of the statement  "			//		this.Performance.BuildIncrementalOpenPositionsUpdatedDueToStreamingNewQuote_step2of3(this.ExecutionDataSnapshot.PositionsOpenNow); " is 134.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The length of the statement  "			// NOPE PositionsMaster grows only in Callback: do this before this.OrderProcessor.CreateOrdersSubmitToBrokerAdapterInNewThreads() to avoid REVERSE_REFERENCE_WAS_NEVER_ADDED_FOR alert " is 183.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The length of the statement  "			// NOPE_REALTIME_FILLS_POSITIONS_ON_CALLBACK this.AddPositionsJustCreatedUnfilledToChartShadowAndPushToReportersAsyncUnsafe(pokeUnit); " is 134.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,scriptInvoke_Post_dealWithNewAlerts_fillPendings_killDoomed_emitOrders_both_onNewQuote_onNewBar,The length of the statement  "			if (pokeUnit_dontForgetToDispose.PositionsNow_plusOpened_plusClosedAfterExec_plusAlertsNew_count == 0) return ret;		//null here ReporterPokeUnit " is 144.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,fillPendings_onEachQuote_skipIfNonLivesimBroker,The length of the statement  "				string msg = "CHANGED_DATASOURCE_DIDNT_INITIALIZE_FULLY RESTART defaultOrderFiller.DataSnapshot=NULL IM_STORING_SCHEDULED_PENDINGS_THERE"; " is 138.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,invokeScript_onNewBar,The length of the statement  "					error = "HOLE_IN_SCRIPT_INVOCATION INDICATORS_WILL_COMPLAIN_TOO ALERTS_WILL_MISTMATCH_BARS ExecuteOnNewBar()_SKIPPED=[" + skipped + "]"; " is 136.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,invokeScript_onNewBar,The length of the statement  "				msig_imInvoking = "OnBarStaticLastFormed_whileStreamingBarWithOneQuoteAlreadyAppended_callback(" + quoteForAlertsCreated + ")"; " is 127.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,invokeScript_onNewQuote,The length of the statement  "					string msg4 = "IM_AT_APPRESTART_BACKTEST_PRIOR_TO_LIVE__HERE_I_SHOULD_HAVE_EXECUTED_ON_LASTBAR__DID_SO_AT_BRO_THIS_IS_NONSENSE!!!FINALLY"; " is 138.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BuyOrShort_alertCreateRegister,The length of the statement  "			string msig = " //BuyOrShortAlertCreateRegister(stopOrLimitPrice[" + stopOrLimitPrice+ "]' entrySignalName[" + entrySignalName + "]' entryBar[" + entryBar + "])"; " is 162.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BuyOrShort_alertCreateRegister,The length of the statement  "			Alert similar = this.ExecutionDataSnapshot.AlertsPending.FindSimilarNotSameIdenticalForOrdersPending(alert' this' "BuyOrShortAlertCreateRegister(WAIT)"); " is 153.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,SellOrCover_alertCreateRegister,The length of the statement  "			this.checkThrow_alertCanBeCreated(exitBar' "BARS.BARSTREAMING_OR_BARS.BARLASTSTATIC_IS_NULL_SellOrCoverAlertCreateRegister() "); " is 128.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,SellOrCover_alertCreateRegister,The length of the statement  "				List<Alert> pendingSafe = this.ExecutionDataSnapshot.AlertsPending.SafeCopy(this' "//SellOrCoverAlertCreateRegister(WAIT)"); " is 124.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,CloseAllOpenPositions_killAllPendingAlerts,The length of the statement  "				List<Alert> alertsSubmittedToKill = this.PositionClose_immediately(positionOpen' "EXIT_FORCED_" + barNewStaticArrived.DateTimeOpen.ToString()' true); " is 149.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,CloseAllOpenPositions_killAllPendingAlerts,The length of the statement  "			//List<Alert> alertsPending = base.Executor.ExecutionDataSnapshot.AlertsPending.SafeCopy(this' "//Gap2StudiesCompiled.closeAllOpenPositionsKillPendingAlertsAtExitForced(WAIT)"); " is 177.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,PositionClose_immediately,The length of the statement  "			// BETTER WOULD BE KILL PREVIOUS PENDING ALERT FROM A CALBACK AFTER MARKET EXIT ORDER GETS FILLED' IT'S UNRELIABLE EXIT IF WE KILL IT HERE " is 138.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Position_exitAlert_kill,The length of the statement  "				string msg = "FIXME I_REFUSE_TO_KILL_UNFILLED_EXIT_ALERT {for prototyped position' position.ExitAlert contains TakeProfit} position[" + position + "]"; " is 151.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Initialize,The length of the statement  "					string msg2 = "here Reflected must have ValueCurrents absorbed CurrentContext and all params pushed back to CurrentContext by reference"; " is 137.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Initialize,The length of the statement  "						string msg2 = "here Reflected must have ValueCurrents absorbed CurrentContext and all params pushed back to CurrentContext by reference"; " is 137.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Initialize,The length of the statement  "						string msg2 = "here Reflected must have ValueCurrents absorbed CurrentContext and all params pushed back to CurrentContext by reference"; " is 137.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Initialize,The length of the statement  "				//v1: CRAZY_TYPES_CONVERSION'CONSIDER_CONTEXT_SAVE_IN_SAME_FORMAT_AS_REFLECTED_OR_INTRODUCE_ARTIFICIAL_SIMILAR_NEXT_TO_REFLECTED " is 128.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Initialize,The length of the statement  "				//	string msg2 = "here Reflected must have ValueCurrents absorbed CurrentContext and all params pushed back to CurrentContext by reference"; " is 140.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Initialize,The length of the statement  "				//		string msg2 = "here Reflected must have ValueCurrents absorbed CurrentContext and all params pushed back to CurrentContext by reference"; " is 141.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Initialize,The length of the statement  "				//		string msg2 = "here Reflected must have ValueCurrents absorbed CurrentContext and all params pushed back to CurrentContext by reference"; " is 141.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Initialize,The length of the statement  "				//SEQUENCER_ALREADY_DONE_IT_CloneForSequencer this.Strategy.Script.IndicatorParamsAbsorbMergeFromReflected_InitializeIndicatorsWithHostPanel(); " is 143.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Initialize,The length of the statement  "				// here Reflected must have ValueCurrents absorbed CurrentContext and all params pushed back to CurrentContext by reference " is 123.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Initialize,The length of the statement  "			//v1 dynamically taken now in BacktestMarketsim.cs:476 this.MarketsimBacktest.Initialize(this.Strategy.ScriptContextCurrent.FillOutsideQuoteSpreadParanoidCheckThrow); " is 166.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,EnrichAlerts_withQuoteCreated,The length of the statement  "				string msg = "BACKTEST I_REFUSE_TO_ENRICH_ALERT_WITH_QUOTE__SINCE_QUOTE_HAS_NO_PARENT_BAR__I_CAN_NOT_CHECK_IF_QUOTE_AND_ALERT_ARE_FOR_THE_SAME_BAR"; " is 148.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,RemovePendingExitAlerts_closePositionsBacktestLeftHanging,The length of the statement  "			//v1 STREAMING DOESNT BELONG??? Bar barFill = (this.IsStreamingTriggeringScript) ? alert.Bars.BarStreamingCloneReadonly : alert.Bars.BarStaticLast_nullUnsafe; " is 158.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,RemovePendingExitAlerts_closePositionsBacktestLeftHanging,The length of the statement  "			//v2 NO_I_NEED_STREAMING_BAR_NOT_THE_SAME_I_OPENED_THE_LEFTOVER_POSITION Bar barFill = alert.Bars.BarStaticLast_nullUnsafe; " is 123.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,RemovePendingExitAlerts_closePositionsBacktestLeftHanging,The length of the statement  "			// HACK adding streaming LIVE to where BACKTEST_BARS_CLONED_FOR_ just ended; to avoid NPE at "if (exitBar.Open != this.ExitBar.Open) {" " is 135.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,RemovePendingExitAlerts_closePositionsBacktestLeftHanging,The length of the statement  "			//v3 alert.Bars.BarCreateAppendBindStatic(barFill.DateTimeOpen' barFill.Open' barFill.High' barFill.Low' barFill.Close' barFill.Volume); " is 136.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,RemovePendingExitAlerts_closePositionsBacktestLeftHanging,The length of the statement  "			// REFACTORED_POSITION_HAS_AN_ALERT_AFTER_ALERTS_CONSTRUCTOR we can exit by TP or SL - position doesn't have an ExitAlert assigned until Position.EntryAlert was filled!!! " is 170.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,removePendingEntry,The length of the statement  "			Bar barFill = (this.IsStreamingTriggeringScript) ? alert.Bars.BarStreaming_nullUnsafeCloneReadonly : alert.Bars.BarStaticLast_nullUnsafe; " is 137.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,SetBars,The length of the statement  "					new EventHandler<DataSourceSymbolRenamedEventArgs>(barDataSource_OnSymbolRenamed_eachExecutorShouldRenameItsBars_saveStrategyIfNotNull); " is 136.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,SetBars,The length of the statement  "					this.ChartShadow.ChartStreamingConsumer.StreamingUnsubscribe("UNSUBSCRIBING_FROM_OLD_BARS oldBars[" + this.Bars + "]=>newBars[" + barsClicked + "]"); " is 149.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,SetBars,The length of the statement  "				this.ChartShadow.ChartStreamingConsumer.StreamingSubscribe("SUBSCRIBING_TO_NEW_BARS oldBars[" + this.Bars + "]=>newBars[" + barsClicked + "]"); " is 143.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,SetBars,The length of the statement  "				new EventHandler<DataSourceSymbolRenamedEventArgs>(barDataSource_OnSymbolRenamed_eachExecutorShouldRenameItsBars_saveStrategyIfNotNull); " is 136.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,ToStringWithCurrentParameters,The length of the statement  "			if (this.Strategy.Script != null) ret += " " + this.Strategy.ScriptContextCurrent.ScriptAndIndicatorParametersMergedUnclonedForSequencerByName_AsString; " is 152.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,ToStringWithCurrentParameters,The length of the statement  "			//ret += " why???PerformanceAfterBacktest:" + this.PerformanceAfterBacktest.ScriptAndIndicatorParameterClonesByName_BuiltOnBacktestFinished_AsString; " is 149.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,Dispose,The length of the statement  "			this.Bars				= null;		// if this.Bars are subscribed to anything' the event generator will keep Bars' handler and so this.Bars wont get GC'ed " is 141.
Long Statement,Sq1.Core.StrategyBase,Reporter,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Reporter.cs,Initialize,The length of the statement  "				this.SystemPerformance.Bars.SymbolInfo.PriceDecimalsChanged -= new EventHandler<EventArgs>(SymbolInfo_PriceDecimalsChanged); " is 124.
Long Statement,Sq1.Core.StrategyBase,Reporter,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Reporter.cs,Initialize,The length of the statement  "			this.SystemPerformance.Bars.SymbolInfo.PriceDecimalsChanged += new EventHandler<EventArgs>(SymbolInfo_PriceDecimalsChanged); " is 124.
Long Statement,Sq1.Core.StrategyBase,Reporter,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Reporter.cs,BuildIncremental_onPositionsOpenedClosed_step3of3,The length of the statement  "			string msg = "DERIVED_REPORTERS_MUST_IMPLEMENT BuildIncrementalOnPositionsOpenedClosed_step3of3(ReporterPokeUnit)" + this.TabText + "/" + this.GetType(); " is 153.
Long Statement,Sq1.Core.StrategyBase,Reporter,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Reporter.cs,BuildIncremental_updateOpenPositions_dueToStreamingNewQuote_step2of3,The length of the statement  "			string msg = "DERIVED_REPORTERS_MUST_IMPLEMENT OpenPositionsUpdatedDueToStreamingNewQuote(ReporterPokeUnit)" + this.TabText + "/" + this.GetType(); " is 147.
Long Statement,Sq1.Core.StrategyBase,Reporter,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Reporter.cs,BuildIncremental_onBrokerFilled_alertsOpening_forPositions_step1of3,The length of the statement  "			string msg = "DERIVED_REPORTERS_MUST_IMPLEMENT BuildIncrementalOnBrokerFilledAlertsOpeningForPositions_step1of3(ReporterPokeUnit)" + this.TabText + "/" + this.GetType(); " is 169.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,checkThrowContextNameShouldExist,The length of the statement  "				string msg = "you didn't pass ScriptContext's strategyNameTo into ContextSwitchCurrentToNamed(" + scriptContextNameShouldExist + ")/ContextMarkCurrentInListByName/ContextDelete()"; " is 180.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,checkThrowContextNameShouldExist,The length of the statement  "				string msg = "Strategy[" + this.Name + "].ScriptContexts.ContainsKey(" + scriptContextNameShouldExist + ")=false; ScriptContext wasn't previously saved; Use ScriptParametersForm->SaveAs or ChartForm->SaveStrategyAs; "; " is 218.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,checkThrowContextNameShouldNotExist,The length of the statement  "				string msg = "you didn't pass ScriptContext's strategyNameTo into ContextSwitchCurrentToNamed(" + scriptContextNameShouldNotExist + ")/ContextMarkCurrentInListByName/ContextDelete()"; " is 183.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,checkThrowContextNameShouldNotExist,The length of the statement  "				string msg = "Strategy[" + this.Name + "].ScriptContexts.ContainsKey(" + scriptContextNameShouldNotExist + ")=true; ScriptContext was already saved"; " is 149.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ContextSwitchCurrentToNamedAndSerialize,The length of the statement  "			lock (this.ScriptContextCurrentName) {	// Monitor shouldn't care whether I change the variable that I use for exclusive access... " is 129.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ScriptContextAdd_duplicatedInSliders,The length of the statement  "				string msg = "CANT_ADD_EXISTING scriptContextName[" + newScriptContextName + "] already exists for strategy[" + this + "]"; " is 123.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ScriptContextAdd_duplicatedInSliders,The length of the statement  "			//ABSORBS_TO_CURRENT_INSTEAD_OF_NEW var forceParametersFillScriptContext = this.ScriptParametersMergedWithCurrentContext; " is 121.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ScriptContextAdd_cloneAndAbsorbCurrentValuesFromSequencer,The length of the statement  "			ContextScript newScriptContext = this.ScriptContextCurrent.CloneAndAbsorbFromSystemPerformanceRestoreAble(absorbParamsFrom' newScriptContextName); " is 146.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ScriptContextAdd_cloneAndAbsorbCurrentValuesFromSequencer,The length of the statement  "				//string msg = "CANT_ADD_EXISTING scriptContextName[" + newScriptContextName + "] already exists for strategy[" + this + "]"; " is 125.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ScriptContextDelete,The length of the statement  "				string msg = "CANT_DELETE_NON_EXISITNG scriptContextName[" + scriptContextName + "] doesn't exist for strategy[" + this + "]"; " is 126.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ScriptContextDelete,The length of the statement  "				//string msg = "CANT_DELETE_CURRENT_LOAD_NEXT_NYI scriptContextName[" + scriptContextName + "] is the current one; load another one first and then delete [" + scriptContextName + "]"; " is 183.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ScriptContextRename,The length of the statement  "			lock (this.ScriptContextCurrentName) {	// Monitor shouldn't care whether I change the variable that I use for exclusive access... " is 129.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ScriptContextRename,The length of the statement  "					string msg = "WONT_RENAME_TO_SAME_NAME scriptContextNewName[" + scriptContextNewName + "]=scriptContextToRename.Name[" + scriptContextToRename.Name + "]' type another name"; " is 173.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ScriptContextRename,The length of the statement  "					string msg = "CANT_RENAME_NAME_ALREADY_EXISTS scriptContextNewName[" + scriptContextNewName + "] already exists for strategy[" + this + "]"; " is 140.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ScriptContextRename,The length of the statement  "				msig = "Successfully renamed scriptContextName[" + oldName + "]=>[" + scriptContextNewName + "] for strategy[" + this + "]"; " is 124.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,CloneMinimalForEachThread_forEachDisposableExecutorInSequencerPool,The length of the statement  "			// each ParameterSequencer.Next() (having its own NAME)' will be absorbed to DEFAULT; messing with Dictionary to keep synchronized is too costly " is 144.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,CloneMinimalForEachThread_forEachDisposableExecutorInSequencerPool,The length of the statement  "			//I_SPAWN_DISPOSABLE_EXECUTORS_FROM_ANY_POSSIBLE_CURRENT_CONTEXT ret.ScriptContextCurrentName = ContextScript.DEFAULT_NAME; " is 123.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,CloneMinimalForEachThread_forEachDisposableExecutorInSequencerPool,The length of the statement  "			ret.ScriptContextCurrent.AbsorbOnlyScriptAndIndicatorParamsFrom_usedBySequencerOnly("FRESH_DEFAULT_CTX_FOR_EACH_DISPOSABLE"' this.ScriptContextCurrent); " is 152.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ResetScriptAndIndicatorParametersInCurrentContextToScriptDefaultsAndSave,The length of the statement  "				string msg = "Successfully reset ScriptContextCurrentName[" + this.ScriptContextCurrentName + "] for strategy[" + this + "]"; " is 125.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,ScriptAndIndicatorParametersReflected_absorbMergeFromCurrentContext_saveStrategy,The length of the statement  "				this.Script.IndicatorParamsAbsorbMergeFromReflected_InitializeIndicatorsWithHostPanel(saveStrategyFalseForDisposedExecutorsInSequencer); " is 136.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,PushChangedScriptParameterValueToScript,The length of the statement  "			string msig = " //Strategy.PushChangedScriptParameterValueToScript(" + indicatorParameterChangedDueToUserClickInSliders + ")"; " is 126.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,PushChangedScriptParameterValueToScript,The length of the statement  "				string msg = "I_REFUSE_TO_PUSH_PARAMETER_CLICKED_TO_SCRIPT SLIDERS_AUTOGROW_GENERATED_AN_EVENT_WITH_EMPTY_INDICATOR_PARAMETER_INSIDE"; " is 134.
Long Statement,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,PushChangedScriptParameterValueToScript,The length of the statement  "				string msg = "I_REFUSE_TO_PUSH_PARAMETER_CLICKED_TO_SCRIPT YOU_SHOULD_HAVE_CLEARED_AUTOGROW_DUE_TO_UN-COMPILE-ABLE_SCRIPT_SOURCE"; " is 130.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutorEventGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutorEventGenerator.cs,RaiseOnBacktesterContextRestoredAfterExecutingAllBars_step4of4,The length of the statement  "				string msg = "EVENT_CONSUMER(USED_ONLY_FOR_LIVE_SIMULATOR)_THROWN //Distributor.RaiseQuotePushedToDistributor(" + quote + ")"; " is 126.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutorEventGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutorEventGenerator.cs,RaiseOnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers_tunnelToInterChartForm,The length of the statement  "				this.OnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers_tunnelToInterChartForm(this' new QuoteEventArgs(quote)); " is 121.
Long Statement,Sq1.Core.StrategyBase,ScriptExecutorEventGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutorEventGenerator.cs,RaiseOnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers_tunnelToInterChartForm,The length of the statement  "				string msg = "EVENT_CONSUMER(USED_ONLY_FOR_LIVE_SIMULATOR)_THROWN //ScriptExecutorEventGenerator.OnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers(" + quote + ")"; " is 173.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildStatsOnBacktestFinished,The length of the statement  "			PositionList positionsClosedSafe = this.Executor.ExecutionDataSnapshot.PositionsMaster.Clone(this' "BuildStatsOnBacktestFinished(WAIT)"); " is 137.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildStatsOnBacktestFinished,The length of the statement  "			List<Position> positionsOpenSafe = this.Executor.ExecutionDataSnapshot.PositionsOpenNow.SafeCopy(this' "BuildStatsOnBacktestFinished(WAIT)"); " is 141.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildStatsOnBacktestFinished,The length of the statement  "				this.ScriptAndIndicatorParameterClonesByName_BuiltOnBacktestFinished = new SortedDictionary<string' IndicatorParameter>(); " is 122.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildStatsOnBacktestFinished,The length of the statement  "				//foreach (IndicatorParameter ip in this.Executor.Strategy.Script.IndicatorsParametersInitializedInDerivedConstructorByNameForSliders.Values) { " is 143.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildStatsOnBacktestFinished,The length of the statement  "				//foreach (IndicatorParameter ip in this.Executor.Strategy.Script.IndicatorsParametersInitializedInDerivedConstructorByNameForSliders.Values) { " is 143.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildIncrementalBrokerFilledAlertsOpeningForPositions_step1of3,The length of the statement  "			int absorbedOpenBoth		= this.SlicesShortAndLong	.BuildIncrementalBrokerFilledAlertsOpeningForPositions_step1of3(position); " is 122.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildIncrementalOpenPositionsUpdatedDueToStreamingNewQuote_step2of3,The length of the statement  "			int absorbedUpdatedLong		= this.SliceLong			.BuildIncrementalOpenPositionsUpdatedDueToStreamingNewQuote_step2of3(positions); " is 124.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildIncrementalOpenPositionsUpdatedDueToStreamingNewQuote_step2of3,The length of the statement  "			int absorbedUpdatedShort	= this.SliceShort			.BuildIncrementalOpenPositionsUpdatedDueToStreamingNewQuote_step2of3(positions); " is 125.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildIncrementalOpenPositionsUpdatedDueToStreamingNewQuote_step2of3,The length of the statement  "			int absorbedUpdatedBoth		= this.SlicesShortAndLong	.BuildIncrementalOpenPositionsUpdatedDueToStreamingNewQuote_step2of3(positions); " is 131.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildIncrementalOpenPositionsUpdatedDueToStreamingNewQuote_step2of3,The length of the statement  "			int absorbedUpdatedBH		= this.SliceBuyHold			.BuildIncrementalOpenPositionsUpdatedDueToStreamingNewQuote_step2of3(positions); " is 125.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildReportIncrementalBrokerFilledAlertsClosingForPositions_step3of3,The length of the statement  "			int absorbedClosedLong		= this.SliceLong			.BuildReportIncrementalBrokerFilledAlertsClosingForPositions_step3of3(position); " is 123.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildReportIncrementalBrokerFilledAlertsClosingForPositions_step3of3,The length of the statement  "			int absorbedClosedShort		= this.SliceShort			.BuildReportIncrementalBrokerFilledAlertsClosingForPositions_step3of3(position); " is 125.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildReportIncrementalBrokerFilledAlertsClosingForPositions_step3of3,The length of the statement  "			int absorbedClosedBoth		= this.SlicesShortAndLong	.BuildReportIncrementalBrokerFilledAlertsClosingForPositions_step3of3(position); " is 130.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,BuildReportIncrementalBrokerFilledAlertsClosingForPositions_step3of3,The length of the statement  "			int absorbedClosedBH		= this.SliceBuyHold			.BuildReportIncrementalBrokerFilledAlertsClosingForPositions_step3of3(position); " is 124.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,CloneForSequencer,The length of the statement  "			// Sequencer takes Clone with Slices ready to use; same (parent) SystemPerformance.Initialize() overwrites with new Slices' " is 123.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,ToString,The length of the statement  "			string msg = "HAS_MEANINFULL_VALUE_ONLY_AFTER int absorbedBH = this.SliceBuyHold.BuildStatsOnBacktestFinished(pokeUnit)"; " is 121.
Long Statement,Sq1.Core.StrategyBase,SystemPerformance,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformance.cs,ToString,The length of the statement  "			return this.NetProfitRecoveryForScriptContextNewName + " " + this.ScriptAndIndicatorParameterClonesByName_BuiltOnBacktestFinished_AsString; " is 139.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,CumulativeAppendOrReplaceForPositionClosedOrOpenNow,The length of the statement  "				string msg = "DOING_REPLACE_INSTEAD_OF_ADDING!!! CUMULATIVES_ALREADY_CALCULATED_FOR_THIS_POSITION SystemPerformanceSlice[" " is 122.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,CumulativeAppendOrReplaceForPositionClosedOrOpenNow,The length of the statement  "					+ this.ToString() + "].PositionsImTracking[" + this.PositionsImTracking.ToString() + "] already contains " + positionClosedOrUpdating; " is 134.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,CumulativeAppendOrReplaceForPositionClosedOrOpenNow,The length of the statement  "			Position preLastPositionTracked = this.PositionsImTracking.PreLast_nullUnsafe(this' "CumulativeAppendOrReplaceForPositionClosedOrOpenNow(WAIT)"); " is 145.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,CumulativeAppendOrReplaceForPositionClosedOrOpenNow,The length of the statement  "					string msg = "I_WAS_EXPECTING_REPLACEMENT_BUT_IT_WASNT_ADDED__YOU_SHOULD_INVOKE_STEP1_BEFORE_INVOKING_STEP2 CumulativeProfitDollar"; " is 132.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,CumulativeAppendOrReplaceForPositionClosedOrOpenNow,The length of the statement  "					string msg = "I_WAS_EXPECTING_REPLACEMENT_BUT_IT_WASNT_ADDED__YOU_SHOULD_INVOKE_STEP1_BEFORE_INVOKING_STEP2 CumulativeProfitPercent"; " is 133.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildIncrementalBrokerFilledAlertsOpeningForPositions_step1of3,The length of the statement  "			bool added = this.PositionsImTracking.AddOpened_step1of2(positionOpened' this' "BuildIncrementalBrokerFilledAlertsOpeningForPositions_step1of3(WAIT)"' ConcurrentWatchdog.TIMEOUT_DEFAULT' true); " is 193.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildIncrementalBrokerFilledAlertsOpeningForPositions_step1of3,The length of the statement  "			positionsOpenAbsorbedBoth += this.updateAtomicStatsForPositionsClosedAtBar(positionOpened.EntryFilledBarIndex' new List<Position>() { positionOpened }' new List<Position>()); " is 174.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildIncrementalBrokerFilledAlertsOpeningForPositions_step1of3,The length of the statement  "				string msg = "recalculate CashCurve from now (positionOpened.EntryFilledBarIndex) till the end (this.PositionsImTracking.LastEntryFilledBarIndex)"; " is 147.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildReportIncrementalBrokerFilledAlertsClosingForPositions_step3of3,The length of the statement  "			bool added = this.PositionsImTracking.AddToClosedDictionary_step2of2(positionClosed' this' "BuildIncrementalBrokerFilledAlertsOpeningForPositions_step1of3(WAIT)"' ConcurrentWatchdog.TIMEOUT_DEFAULT' true); " is 205.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildReportIncrementalBrokerFilledAlertsClosingForPositions_step3of3,The length of the statement  "			positionsClosedAbsorbedBoth += this.updateAtomicStatsForPositionsClosedAtBar(positionClosed.ExitFilledBarIndex' new List<Position>()' new List<Position>() { positionClosed }); " is 175.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildReportIncrementalBrokerFilledAlertsClosingForPositions_step3of3,The length of the statement  "				string msg = "recalculate CashCurve from now (positionOpened.ExitFilledBarIndex) till the end (this.PositionsImTracking.LastExitFilledBarIndex)"; " is 145.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildStatsOnBacktestFinished,The length of the statement  "				bool added = this.PositionsImTracking.AddOpened_step1of2(positionOpened' this' "BuildIncrementalBrokerFilledAlertsOpeningForPositions_step1of3(WAIT)"' ConcurrentWatchdog.TIMEOUT_DEFAULT' true); " is 193.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildStatsOnBacktestFinished,The length of the statement  "					string msg = "IS_THIS_WHY_I_GET_EMPTY_INNER_LIST_FOR_SLICE_BOTH? SHOULD_I_CLEAR_BEFORE_BuildStatsOnBacktestFinished()?"; " is 120.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildStatsOnBacktestFinished,The length of the statement  "				string msg = "NO_ITS_FINE IS_THERE_ANY_PROBLEM? positionsOpenedAbsorbedToInternal[" + positionsOpenedAbsorbedToInternal + "] != openedSafe.Count[" + openedSafe.Count + "]"; " is 172.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildStatsOnBacktestFinished,The length of the statement  "				bool added = this.PositionsImTracking.AddToClosedDictionary_step2of2(positionClosed' this' "BuildIncrementalBrokerFilledAlertsOpeningForPositions_step1of3(WAIT)"' ConcurrentWatchdog.TIMEOUT_DEFAULT' true); " is 205.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildStatsOnBacktestFinished,The length of the statement  "					string msg = "IS_THIS_WHY_I_GET_EMPTY_INNER_LIST_FOR_SLICE_BOTH? SHOULD_I_CLEAR_BEFORE_BuildStatsOnBacktestFinished()?"; " is 120.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildStatsOnBacktestFinished,The length of the statement  "			Dictionary<int' List<Position>> positionsOpenedAfterExec	= pokeUnit.PositionsOpened.ByEntryBarFilledSafeCopy(this' "BuildStatsOnBacktestFinished(WAIT)"); " is 153.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildStatsOnBacktestFinished,The length of the statement  "			Dictionary<int' List<Position>> positionsClosedAfterExec	= pokeUnit.PositionsClosed.ByExitBarFilledSafeCopy(this' "BuildStatsOnBacktestFinished(WAIT)"); " is 152.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,BuildStatsOnBacktestFinished,The length of the statement  "				positionsOpenAbsorbed += this.updateAtomicStatsForPositionsClosedAtBar(barIndex' positionsOpenedAtBar' positionsClosedAtBar); " is 125.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,updateAtomicStatsForPositionsClosedAtBar,The length of the statement  "				//v1 if (this.PositionLongShortImTracking != PositionLongShort.Unknown && entryPosition.PositionLongShort != this.PositionLongShortImTracking) continue; " is 152.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,updateAtomicStatsForPositionsClosedAtBar,The length of the statement  "				//v1 if (this.PositionLongShortImTracking != PositionLongShort.Unknown && exitPosition.PositionLongShort != this.PositionLongShortImTracking) continue; " is 151.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,updateAtomicStatsForPositionsClosedAtBar,The length of the statement  "					string msg = "YOU_GOT_POSITIONS_WITH_ALL_DIFFERENT_DATES_WHILE_MUST_BE_SAME_FOR_positionsClosedAtBar barDateTime[" + barDateTime + "] " + positionClosed; " is 153.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,updateAtomicStatsForPositionsClosedAtBar,The length of the statement  "			if (this.PositionLongShortImTracking != SystemPerformancePositionsTracking.LongAndShort) return positionsOpenAbsorbedBoth; " is 122.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,positionIsMineShouldAppendAndUpdate,The length of the statement  "				string msg = "POSITION_MUST_BE_LONG_OR_SHORT__UNKNOWN_CANNOT_BE_ACCEPTED_TO_ADDUP_INTO_PERFORMANCE_SLICE " + this.ToString(); " is 125.
Long Statement,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,positionIsMineShouldAppendAndUpdate,The length of the statement  "					string msg = "SHOULD_NEVER_BE_USED_FOR_INSTANTIATED_SLICES SystemPerformancePositionsTracking." + this.PositionsImTracking; " is 123.
Long Statement,Sq1.Core.StrategyBase,ScriptCompiler,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptCompiler.cs,CompileSource_returnInstance,The length of the statement  "				string tmpAbsPath = Path.Combine(Assembler.InstanceInitialized.RepositoryDllJsonStrategies.RootPath' this.TempFolderInAppData); " is 127.
Long Statement,Sq1.Core.StrategyBase,ScriptCompiler,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptCompiler.cs,CompileSource_returnInstance,The length of the statement  "			foreach (string reference in Assembler.InstanceInitialized.AssemblerDataSnapshot.ReferencedNetAssemblyNames_forCompilingScripts_System) { " is 137.
Long Statement,Sq1.Core.StrategyBase,ScriptCompiler,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptCompiler.cs,addApplicationAssemblies,The length of the statement  "			DirectoryInfo directoryInfo = new DirectoryInfo(Assembler.InstanceInitialized.AppStartupPath);		//Application.ExecutablePath " is 124.
Long Statement,Sq1.Core.Streaming,BinderAttacher_perStreamingChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\BinderAttacher_perStreamingChart.cs,BarAttach,The length of the statement  "				string msg = "BAR_NOT_ATTACHED CHECK_UPSTACK_WHETHER_CONSUMER_BARS_ARE_NULL StreamingSolidifier will attach the Bar itself"; " is 124.
Long Statement,Sq1.Core.Streaming,BinderAttacher_perStreamingChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\BinderAttacher_perStreamingChart.cs,QuoteBoundToStreamingBar__streamingBarAttach_toConsumerBars,The length of the statement  "			//    string msg = "YOU_DIDNT_REALLY_NEED_Quote_BEING_ALREADY_BOUND_UPSTACK_TILL_NOW__RIGHT??? quote.ParentBarStreaming=null"; " is 126.
Long Statement,Sq1.Core.Streaming,BinderAttacher_perStreamingChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\BinderAttacher_perStreamingChart.cs,QuoteBoundToStreamingBar__streamingBarAttach_toConsumerBars,The length of the statement  "			// QuoteBoundToStreamingBar__streamingBarAttach_toConsumerBars() will create new BarStreaming after 1000 of this methods invocation terminate; " is 142.
Long Statement,Sq1.Core.Streaming,BinderAttacher_perStreamingChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\BinderAttacher_perStreamingChart.cs,QuoteBoundToStreamingBar__streamingBarAttach_toConsumerBars,The length of the statement  "			// right now quote has had ParentStreamingBar assigned to streamingBarFactoryUnattached.BarStreaming on ScaleInterval basis (one factory for many 5-min consumers); " is 163.
Long Statement,Sq1.Core.Streaming,BinderAttacher_perStreamingChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\BinderAttacher_perStreamingChart.cs,QuoteBoundToStreamingBar__streamingBarAttach_toConsumerBars,The length of the statement  "			        + " FIRST_STREAMING_QUOTE_PER_BACKTEST_ON_STREAMINGLESS_BARS_JUST_FORKED_FROM_BARS_ORIGINAL_AT_BACKTEST_INITIALIZATION"; " is 120.
Long Statement,Sq1.Core.Streaming,BinderAttacher_perStreamingChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\BinderAttacher_perStreamingChart.cs,QuoteBoundToStreamingBar__streamingBarAttach_toConsumerBars,The length of the statement  "			    //v1 this.consumer.ConsumerBarsToAppendInto.BarStreamingCreateNewOrAbsorb(quoteCloneSernoEnrichedFactoryUnattachedStreamingBar.ParentBarStreaming); " is 147.
Long Statement,Sq1.Core.Streaming,BinderAttacher_perStreamingChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\BinderAttacher_perStreamingChart.cs,QuoteBoundToStreamingBar__streamingBarAttach_toConsumerBars,The length of the statement  "			    //v2 Bar streamingCreatedAttached = consumerBars.BarStreaming_createNewAttach_orAbsorb(this.Factory_ofUnattached_streamingBars.BarStreaming_unattached); " is 152.
Long Statement,Sq1.Core.Streaming,BinderAttacher_perStreamingChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\BinderAttacher_perStreamingChart.cs,QuoteBoundToStreamingBar__streamingBarAttach_toConsumerBars,The length of the statement  "			    Bar streamingCreatedAttached = consumerBars.BarStreaming_createNewAttach_orAbsorb(this.Consumer.ChartShadow.Bars.BarStreaming_nullUnsafe); " is 138.
Long Statement,Sq1.Core.Streaming,BinderAttacher_perStreamingChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\BinderAttacher_perStreamingChart.cs,QuoteBoundToStreamingBar__streamingBarAttach_toConsumerBars,The length of the statement  "			//    string msg2 = "AVOIDING_EXCEPTION NO_NEED_TO_ABSORB_ANYTHING__DESTINATION_HasSameDOHLCV_KOZ_BAR_FACTORY_JUST_STARTED_NEW_STREAMING_BAR"; " is 142.
Long Statement,Sq1.Core.Streaming,BinderAttacher_perStreamingChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\BinderAttacher_perStreamingChart.cs,ToString,The length of the statement  "			//string ret = "BarFactory[" + this.symbolScaleStream_chart.UnattachedStreamingBar_factoryPerSymbolScale.ToString() + "]"; " is 122.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,ConsumerQuoteSubscribe_solidifiers,The length of the statement  "				SymbolChannel<STREAMING_CONSUMER_CHILD> newChannel = new SymbolChannel<STREAMING_CONSUMER_CHILD>(this' symbol' quotePumpSeparatePushingThreadEnabled' this.ReasonIwasCreated); " is 174.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,ConsumerQuoteSubscribe_solidifiers,The length of the statement  "			if (symbolChannel.QuotePump_nullUnsafe != null && symbolChannel.QuotePump_nullUnsafe.Paused) symbolChannel.QuotePump_nullUnsafe.PusherUnpause_waitUntilUnpaused(); " is 162.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,ConsumerQuoteUnsubscribe_solidifiers,The length of the statement  "				//Assembler.PopupException("QuoteConsumer [" + consumer + "] was the last one using [" + symbol + "]; removing QuoteBarDistributor[" + channel + "]"); " is 150.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,ConsumerQuoteSubscribe,The length of the statement  "		    return this.ConsumerQuoteSubscribe_solidifiers(quoteConsumer.Symbol' quoteConsumer.ScaleInterval' quoteConsumer' quotePumpSeparatePushingThreadEnabled); " is 152.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,ConsumerBarSubscribe,The length of the statement  "		    return this.ConsumerBarSubscribe_solidifiers(barConsumer.Symbol' barConsumer.ScaleInterval' barConsumer' barPumpSeparatePushingThreadEnabled); " is 142.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,ConsumerBarSubscribe_solidifiers,The length of the statement  "				SymbolChannel<STREAMING_CONSUMER_CHILD> newChannel = new SymbolChannel<STREAMING_CONSUMER_CHILD>(this' symbol' quotePumpSeparatePushingThreadEnabled' this.ReasonIwasCreated); " is 174.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,ConsumerBarSubscribe_solidifiers,The length of the statement  "			if (symbolChannel.QuotePump_nullUnsafe != null && symbolChannel.QuotePump_nullUnsafe.Paused) symbolChannel.QuotePump_nullUnsafe.PusherUnpause_waitUntilUnpaused(); " is 162.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,ConsumerBarUnsubscribe_solidifiers,The length of the statement  "				//Assembler.PopupException("BarConsumer [" + consumer + "] was the last one using [" + symbol + "]; removing QuoteBarDistributor[" + distributor + "]"); " is 152.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,GetStreamFor_nullUnsafe,The length of the statement  "				string msg = "NO_SYMBOL_SUBSCRIBED Distributor[" + this + "].ChannelsBySymbol.ContainsKey(" + symbol + ")=false INVOKER_NULL_CHECK_EYEBALLED"; " is 142.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,GetStreams_forSymbol_exceptForChartLivesimming,The length of the statement  "				string msg = "YOU_DIDNT_SUBSCRIBE_AFTER_DISTRIBUTION_CHANNELS_CLEAR symbol[" + symbol + "] MOST_LIKELY_YOU_ABORTED_BACKTEST_BY_CHANGING_SELECTORS_IN_GUI_FIX_HANDLERS"; " is 167.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,GetStreams_forSymbol_exceptForChartLivesimming,The length of the statement  "			if (scaleIntervalOnly_anyIfNull != null && channel.StreamsByScaleInterval.ContainsKey(scaleIntervalOnly_anyIfNull) == false) { " is 126.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,GetStreams_forSymbol_exceptForChartLivesimming,The length of the statement  "				SymbolScaleStream<STREAMING_CONSUMER_CHILD> channelClone = stream.CloneFullyFunctional_withNewDictioniariesAndLists_toPossiblyRemoveMatchingConsumers(); " is 152.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,GetStreams_forSymbol_exceptForChartLivesimming,The length of the statement  "					if (channelClone.ConsumersQuoteContains	(chartShadowToExclude)) channelClone.ConsumerQuoteRemove	(chartShadowToExclude); " is 120.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,SetQuotePumpThreadName_sinceNoMoreSubscribersWillFollowFor,The length of the statement  "				//DONT_SET_GUI_THREAD_NAME__FLAG_IS_SET_WILL_SET_THREAD_NAME_FROM_WITHIN channel.QuoteQueue_onlyWhenBacktesting_quotePumpForLiveAndSim.SetThreadName(); " is 151.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,PumpPause_forSymbolLivesimming,The length of the statement  "			string msig = " //PumpPause_forSymbolLivesimming(" + symbolLivesimming + "'" + reasonForNewDistributor + ") DISTRIBUTOR[" + this.ReasonIwasCreated + "]"; " is 153.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,PumpUnpause_forSymbolLivesimming,The length of the statement  "			string msig = " //PumpUnpause_forSymbolLivesimming(" + symbolLivesimming + "'" + reasonForStoppingReplacedDistributor + ") DISTRIBUTOR[" + this.ReasonIwasCreated + "]"; " is 168.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,PumpStop_forSymbolLivesimming,The length of the statement  "			string msig = " //PumpStop_forSymbolLivesimming(" + symbolLivesimming + "'" + reasonForStoppingReplacedDistributor + ") DISTRIBUTOR[" + this.ReasonIwasCreated + "]"; " is 165.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,storeAllInstancesEverCreated,The length of the statement  "				Distributor<STREAMING_CONSUMER_CHILD>.AllDistributorsEverCreated.Add(adapterType' new Dictionary<StreamingAdapter' List<Distributor<STREAMING_CONSUMER_CHILD>>>()); " is 163.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,storeAllInstancesEverCreated,The length of the statement  "			if (Distributor<STREAMING_CONSUMER_CHILD>.AllDistributorsEverCreated[adapterType].ContainsKey(streamingAdapter) == false) { " is 123.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,storeAllInstancesEverCreated,The length of the statement  "				Distributor<STREAMING_CONSUMER_CHILD>.AllDistributorsEverCreated[adapterType].Add(streamingAdapter' new List<Distributor<STREAMING_CONSUMER_CHILD>>()); " is 151.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,Push_quoteUnboundUnattached_toChannel,The length of the statement  "			SymbolChannel<STREAMING_CONSUMER_CHILD> channel = this.GetChannelFor_nullMeansWasntSubscribed(quoteUnboundUnattached.Symbol); " is 125.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,Push_quoteUnboundUnattached_toChannel,The length of the statement  "				string msg = "I_REFUSE_TO_PUSH_QUOTE_FOR_UNSUBSCRIBED_SYMBOL quoteUnboundUnattached.Symbol[" + quoteUnboundUnattached.Symbol + "]" " is 130.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,Push_quoteUnboundUnattached_toChannel,The length of the statement  "			// 2) channel pushes to Pump and unblocks the streaming to return right after (strategies are executed in Pump's thread later SYNCed)' " is 134.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,Push_quoteUnboundUnattached_toChannel,The length of the statement  "			//		main idea behind StreamingConsumers is to hold its own bars and bind StreamingBarUnattached.Clone() to quote.Clone()' and then that StreamingAttached into Consumers.Bars " is 173.
Long Statement,Sq1.Core.Streaming,Distributor<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\Distributor.Channels.cs,toStringCommon,The length of the statement  "			string ret = "#" + this.InstanceSerno + " " + this.ReasonIwasCreated + " ForStreamingAdapter[" + this.StreamingAdapter.Name + "]: "; " is 132.
Long Statement,Sq1.Core.Streaming,DistributorSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\DistributorSolidifier.cs,ConsumerBarSubscribe_solidifiers,The length of the statement  "			SymbolScaleStream<StreamingConsumerSolidifier> channel_nullUnsafe = base.GetStreamFor_nullUnsafe(symbol' scaleInterval); " is 120.
Long Statement,Sq1.Core.Streaming,DistributorSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\DistributorSolidifier.cs,ConsumerQuoteSubscribe_solidifiers,The length of the statement  "			SymbolScaleStream<StreamingConsumerSolidifier> channel_nullUnsafe = base.GetStreamFor_nullUnsafe(symbol' scaleInterval); " is 120.
Long Statement,Sq1.Core.Streaming,DistributorSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\DistributorSolidifier.cs,ConsumerQuoteSubscribe_solidifiers,The length of the statement  "			ret = base.ConsumerQuoteSubscribe_solidifiers(symbol' scaleInterval' solidifier' quotePumpSeparatePushingThreadEnabled); " is 120.
Long Statement,Sq1.Core.Streaming,LevelTwoHalfSortedFrozen,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\LevelTwoHalfSortedFrozen.cs,calc_LotsCumulative_allMinMaxProperties,The length of the statement  "			List<KeyValuePair<double' double>> sortedFromSpreadToTheEdgeOfMarket_toCalculateLotsCumulative = new List<KeyValuePair<double' double>>(); " is 138.
Long Statement,Sq1.Core.Streaming,LevelTwoHalfSortedFrozen,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\LevelTwoHalfSortedFrozen.cs,calc_LotsCumulative_allMinMaxProperties,The length of the statement  "					iShouldRevert = true;		// ASKS_MUST_GROW_UP_ON_PANEL.LEVEL2 AVOIDING_REVERSAL_ON_LOTS_CUMULATIVE MOUSTACHES_SHOULDNT_POINT_INWARDS " is 130.
Long Statement,Sq1.Core.Streaming,LevelTwoHalfSortedFrozen,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\LevelTwoHalfSortedFrozen.cs,calc_LotsCumulative_allMinMaxProperties,The length of the statement  "					iShouldRevert = true;		// BIDS_MUST_GROW_DOWN_ON_PANEL.LEVEL2 AVOIDING_REVERSAL_ON_LOTS_CUMULATIVE MOUSTACHES_SHOULDNT_POINT_INWARDS " is 132.
Long Statement,Sq1.Core.Streaming,LevelTwoHalfSortedFrozen,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\LevelTwoHalfSortedFrozen.cs,Add,The length of the statement  "			if (this.ImFrozen) throw new Exception("FILL_ME_IN_CTOR()__FROZEN_MEANS_UNABLE_TO_MODIFY_AFTER_CONSTRUCTED__LAZY_TO_RECALCULATE_CUMULATIVES"); " is 142.
Long Statement,Sq1.Core.Streaming,LevelTwoHalfSortedFrozen,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\LevelTwoHalfSortedFrozen.cs,Remove,The length of the statement  "			if (this.ImFrozen) throw new Exception("FILL_ME_IN_CTOR()__FROZEN_MEANS_UNABLE_TO_MODIFY_AFTER_CONSTRUCTED__LAZY_TO_RECALCULATE_CUMULATIVES"); " is 142.
Long Statement,Sq1.Core.Streaming,LevelTwoHalfSortedFrozen,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\LevelTwoHalfSortedFrozen.cs,Clear,The length of the statement  "			if (this.ImFrozen) throw new Exception("FILL_ME_IN_CTOR()__FROZEN_MEANS_UNABLE_TO_MODIFY_AFTER_CONSTRUCTED__LAZY_TO_RECALCULATE_CUMULATIVES"); " is 142.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,UpstreamConnect,The length of the statement  "			//StatusReporter.UpdateConnectionStatus(ConnectionState.ErrorConnecting' 0' "ConnectStreaming(): NOT_OVERRIDEN_IN_CHILD"); " is 122.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,UpstreamDisconnect,The length of the statement  "			//StatusReporter.UpdateConnectionStatus(ConnectionState.ErrorDisconnecting' 0' "DisconnectStreaming(): NOT_OVERRIDEN_IN_CHILD"); " is 128.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				// NO_IT_DOES_CONTAIN_GARBAGE!!! + "@" + executor.Bars.ToString()	// should not contain Static/Streaming bars since Count=0 " is 123.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "			// MOVED_UPSTACK_PAUSES_EVERYTHING_FOR_SYMBOL this.dataDistributor_preLivesimForSymbolLivesimming.AllQuotePumps_Pause(reasonForNewDistributor); " is 143.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				StreamingConsumerChart chartShadowStreamingConsumer	= this.livesimStreaming_forWhomDistributors_areReplaced.Livesimulator.Executor.ChartShadow.ChartStreamingConsumer; " is 166.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				bool willPushUsingPumpInSeparateThread = true;	// I wanna know which thread is going to be used; if DDE-client then cool; YES_IT_WAS_DDE_THREAD " is 143.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				//bool willPushUsingPumpInSeparateThread = true;			// and now I wanna Livesim just like it will be working with Real Quik " is 121.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				//if (this.distributorCharts_preLivesimForSymbolLivesimming.ConsumerQuoteIsSubscribed(symbol' scaleInterval' chartShadow) == false) { " is 133.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				// the chart will be subscribed twice to the same Symbol+ScaleInterval' yes! but the original distributor is backed up and PushQuoteReceived will only push to the new Distributor(this) with one chart only " is 204.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				//v1 PARASITE_NEUTRALIZED this.Distributor_replacedForLivesim.ConsumerQuoteSubscribe(symbol' scaleInterval' chartLess' willPushUsingPumpInSeparateThread); " is 154.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				//v2 CHART_CONTROL_IS_SUBSCRIBED_TO_BOTH_NOW__TO_DISTRIBUTOR_ORIGINAL_WHICH_IS_PAUSED__AND_DISTRIBUTOR_LIVESIM_OWN_IMPLEMENTATION " is 129.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				this.DistributorCharts_substitutedDuringLivesim.ConsumerQuoteSubscribe(chartShadowStreamingConsumer' willPushUsingPumpInSeparateThread); " is 136.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				//if (this.distributorCharts_preLivesimForSymbolLivesimming.ConsumerBarIsSubscribed(symbol' scaleInterval' chartShadow) == false) { " is 131.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				// the chart will be subscribed twice to the same Symbol+ScaleInterval' yes! but the original distributor is backed up and PushBarReceived will only push to the new Distributor(this) with one chart only " is 202.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				//v1 PARASITE_NEUTRALIZED this.Distributor_replacedForLivesim.ConsumerBarSubscribe(symbol' scaleInterval' chartLess' willPushUsingPumpInSeparateThread); " is 152.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				//v2 CHART_CONTROL_IS_SUBSCRIBED_TO_BOTH_NOW__TO_DISTRIBUTOR_ORIGINAL_WHICH_IS_PAUSED__AND_DISTRIBUTOR_LIVESIM_OWN_IMPLEMENTATION " is 129.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				this.DistributorCharts_substitutedDuringLivesim.ConsumerBarSubscribe(chartShadowStreamingConsumer' willPushUsingPumpInSeparateThread); " is 134.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				this.DistributorCharts_substitutedDuringLivesim.SetQuotePumpThreadName_sinceNoMoreSubscribersWillFollowFor(symbolLivesimming); " is 126.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "				this.DistributorSolidifiers_substitutedDuringLivesim.PumpPause_forSymbolLivesimming(symbolLivesimming' reasonForNewDistributor); " is 128.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming__extractChart_intoSeparateDistributor,The length of the statement  "			this.DistributorSolidifiers_substitutedDuringLivesim = new DistributorSolidifier(this' reasonForNewDistributor);		// EMPTY!!! exactly what I wanted " is 147.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming_restoreOriginalDistributor,The length of the statement  "					+ " SubstituteDistributorForSymbolsLivesimming_extractChartIntoSeparateDistributor()<=SimulationPreBarsSubstitute_overrideable()"; " is 130.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming_restoreOriginalDistributor,The length of the statement  "				+ "==RESTORING_AFTER_LIVESIM" + executor.StrategyName + "@" + executor.Bars.ToString();	// should not contain Static/Streaming bars since Count=0 " is 145.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming_restoreOriginalDistributor,The length of the statement  "			this.DistributorCharts_substitutedDuringLivesim.PumpStop_forSymbolLivesimming(symbolLivesimming' reasonForStoppingReplacedDistributor); " is 135.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming_restoreOriginalDistributor,The length of the statement  "			//MOVED_UPSTACK_PAUSES_EVERYTHING_FOR_SYMBOL this.Distributor_replacedForLivesim				.AllQuotePumps_Unpause(reasonForStoppingReplacedDistributor); " is 145.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming_restoreOriginalDistributor,The length of the statement  "				this.DistributorSolidifiers_substitutedDuringLivesim.PumpUnpause_forSymbolLivesimming(symbolLivesimming' reasonForStoppingReplacedDistributor); " is 143.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,SubstituteDistributor_withOneSymbolLivesimming_restoreOriginalDistributor,The length of the statement  "				+ this.DistributorCharts_substitutedDuringLivesim.ToString() + " SOLIDIFIERS:" + this.DistributorSolidifiers_substitutedDuringLivesim	; " is 135.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,RaiseOnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers_blinkDataSourceTreeWithOrange,The length of the statement  "				this.OnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers_blinkDataSourceTreeWithOrange(this' new QuoteEventArgs(quoteWithoutSubscribers)); " is 146.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,RaiseOnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers_blinkDataSourceTreeWithOrange,The length of the statement  "				string msg = "EVENT_CONSUMER_THROWN //StreamingAdapter.RaiseOnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers_blinkDataSourceTreeWithOrange()"; " is 153.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,StreamingEditorInitializeHelper,The length of the statement  "				string msg = "this.dataSourceEditor!=null' already initialized; should I overwrite it with another instance you provided?..."; " is 126.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,solidifierSubscribeOneSymbol,The length of the statement  "			//SymbolScaleDistributionChannel channel = this.DistributorSolidifiers_replacedForLivesim.GetDistributionChannelFor_nullUnsafe(symbol' this.DataSource.ScaleInterval); " is 166.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,solidifierSubscribeOneSymbol,The length of the statement  "			this.DistributorSolidifiers_substitutedDuringLivesim.SetQuotePumpThreadName_sinceNoMoreSubscribersWillFollowFor(symbol); " is 120.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,solidifierUnsubscribeOneSymbol,The length of the statement  "			if (this.DistributorSolidifiers_substitutedDuringLivesim.ConsumerBarIsSubscribed_solidifiers(symbol' this.DataSource.ScaleInterval' this.StreamingSolidifier)) { " is 160.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,solidifierUnsubscribeOneSymbol,The length of the statement  "				this.DistributorSolidifiers_substitutedDuringLivesim.ConsumerBarUnsubscribe_solidifiers(symbol' this.DataSource.ScaleInterval' this.StreamingSolidifier); " is 153.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,solidifierUnsubscribeOneSymbol,The length of the statement  "				string msg = "IGNORE_ME_IF_YOU_ARE_STARTED_LIVESIM SOLIDIFIER_NOT_SUBSCRIBED_BARS symbol[" + symbol + "] ScaleInterval[" + this.DataSource.ScaleInterval + "]"; " is 159.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,solidifierUnsubscribeOneSymbol,The length of the statement  "			if (this.DistributorSolidifiers_substitutedDuringLivesim.ConsumerQuoteIsSubscribed_solidifiers(symbol' this.DataSource.ScaleInterval' this.StreamingSolidifier)) { " is 162.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,solidifierUnsubscribeOneSymbol,The length of the statement  "				this.DistributorSolidifiers_substitutedDuringLivesim.ConsumerQuoteUnsubscribe_solidifiers(symbol' this.DataSource.ScaleInterval' this.StreamingSolidifier); " is 155.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,solidifierUnsubscribeOneSymbol,The length of the statement  "				string msg = "IGNORE_ME_IF_YOU_ARE_STARTED_LIVESIM SOLIDIFIER_NOT_SUBSCRIBED_QUOTES symbol[" + symbol + "] ScaleInterval[" + this.DataSource.ScaleInterval + "]"; " is 161.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,solidifierUnsubscribeOneSymbol,The length of the statement  "			SymbolChannel<StreamingConsumerSolidifier> channel = this.DistributorSolidifiers_substitutedDuringLivesim.GetChannelFor_nullMeansWasntSubscribed(symbol); " is 153.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,Quote_fixServerTime_absnoPerSymbol,The length of the statement  "				string msg = "RECEIVED_FIRST_QUOTE_EVER_FOR#1 symbol[" + quote.Symbol + "] SKIPPING_LASTQUOTE_ABSNO_CHECK SKIPPING_QUOTE<=LASTQUOTE_NEXT_CHECK"; " is 144.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,Quote_fixServerTime_absnoPerSymbol,The length of the statement  "			if (quote.ServerTime == DateTime.MinValue) {		// spreadQuote arrived from DdeTableDepth without serverTime koz serverTime of Level2 changed is not transmitted over DDE " is 167.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,Quote_fixServerTime_absnoPerSymbol,The length of the statement  "				// increase granularity of QuikQuotes (they will have the same ServerTime within the same second' while must have increasing milliseconds; I can't force QUIK print fractions of seconds via DDE export) " is 200.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,Quote_fixServerTime_absnoPerSymbol,The length of the statement  "				// diff_localTime.Milliseconds will go to StreamingDataSnapshot with ServerTime fixed' and next diffMillis will be negative for the quote within same second " is 156.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,Quote_fixServerTime_absnoPerSymbol,The length of the statement  "					string msg = "DONT_FEED_ME_WITH_SAME_QUOTE_BACKTESTER quote.AbsnoPerSymbol[" + quote.AbsnoPerSymbol + "] MUST_BE_GREATER_THAN lastQuote.AbsnoPerSymbol[" + quoteLast.AbsnoPerSymbol + "]"; " is 186.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,PushQuoteReceived,The length of the statement  "				this.RaiseOnQuoteReceived_butWasntPushedAnywhere_dueToZeroSubscribers_blinkDataSourceTreeWithOrange(quoteUnboundUnattached); " is 124.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,PushQuoteReceived,The length of the statement  "				string msg = "I_DONT_WANT_TO_DELIVER_FIRST_EVER_QUOTE_TO_STRATEGY_AND_SOLIDIFIERS QUIK_JUST_CONNECTED_AND_SENDS_NONSENSE[" + quoteUnboundUnattached + "]"; " is 154.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,PushQuoteReceived,The length of the statement  "			//v2 TOO_SENSITIVE_PRINTED_SAME_MILLISECONDS_BUT_STILL_DIFFERENT if (quote.ServerTime.Ticks > lastQuote.ServerTime.Ticks) { " is 123.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,PushQuoteReceived,The length of the statement  "				string msg = quoteUnboundUnattached.Symbol + " SERVER_TIMESTAMP_MUST_INCREASE_EACH_NEXT_INCOMING_QUOTE QUIK_OR_BACKTESTER_FORGOT_TO_INCREASE" " is 141.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,PushQuoteReceived,The length of the statement  "			string reasonMarketIsClosedNow  = this.DataSource.MarketInfo.GetReason_ifMarket_closedOrSuspended_at(quoteUnboundUnattached.ServerTime); " is 136.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,PushQuoteReceived,The length of the statement  "				string msg = "[" + this.DataSource.MarketInfo.Name + "]NOT_PUSHING_QUOTE " + reasonMarketIsClosedNow + " quote=[" + quoteUnboundUnattached + "]"; " is 145.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,PushQuoteReceived,The length of the statement  "			SymbolChannel<StreamingConsumerSolidifier> channelForSymbol = this.DistributorSolidifiers_substitutedDuringLivesim.GetChannelFor_nullMeansWasntSubscribed(symbol); " is 162.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,PushQuoteReceived,The length of the statement  "			bool okayForDistrib_toBe_empty = this.DistributorSolidifiers_substitutedDuringLivesim.ReasonIwasCreated.Contains(Distributor<StreamingConsumerSolidifier>.SUBSTITUTED_LIVESIM_STARTED); " is 183.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,UpstreamSubscribedToSymbolPokeConsumersHelper,The length of the statement  "			List<SymbolScaleStream<StreamingConsumerChart>> channels = this.DistributorCharts_substitutedDuringLivesim.GetStreams_allScaleIntervals_forSymbol(symbol); " is 154.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,UpstreamUnSubscribedFromSymbolPokeConsumersHelper,The length of the statement  "			List<SymbolScaleStream<StreamingConsumerChart>> channels = this.DistributorCharts_substitutedDuringLivesim.GetStreams_allScaleIntervals_forSymbol(symbol); " is 154.
Long Statement,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,ChartStreamingConsumer_Subscribe,The length of the statement  "			//NPE_AFTER_SEPARATED_SOLIDIFIERS SymbolScaleDistributionChannel channel = streamingSafe.Distributor.GetDistributionChannelFor_nullUnsafe(symbolSafe' scaleIntervalSafe); " is 169.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,PushingThreadStop_waitConfirmed,The length of the statement  "			string msig = " //PushingThreadStop isPushingThreadStarted[" + this.IsPushingThreadStarted + "]=>[" + false + "] " + this.ToString(); " is 133.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pushingThreadStart_waitConfirmed,The length of the statement  "			string msig = " //pushingThreadStart isPushingThreadStarted[" + this.IsPushingThreadStarted + "]=>[" + true + "] " + this.ToString(); " is 133.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,signalTo_pauseUnpauseAbort,The length of the statement  "			// fake gateway open (forgetting to close it results in 100%CPU/pump)' just to let the thread process pauseRequested=true " is 121.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,signalTo_pauseUnpauseAbort,The length of the statement  "			// fake gateway open (forgetting to close it results in 100%CPU/pump)' just to let the thread process unPauseRequested=true " is 123.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pusherEntryPoint,The length of the statement  "					bool chartDiThread = this.SymbolChannel.ReasonIwasCreated_propagatedFromDistributor.Contains(DistributorCharts.LIVE_CHARTS_FOR); " is 128.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pusherEntryPoint,The length of the statement  "					bool solidifThread = this.SymbolChannel.ReasonIwasCreated_propagatedFromDistributor.Contains(DistributorCharts.SOLIDIFIERS_FOR); " is 128.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pusherEntryPoint,The length of the statement  "					bool livesimThread = this.SymbolChannel.ReasonIwasCreated_propagatedFromDistributor.Contains(DistributorCharts.SUBSTITUTED_LIVESIM_STARTED); " is 140.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pusherEntryPoint,The length of the statement  "						string msg = "looks like only for Solidifier Thread (adding more symbols will be reflected in ThreadName after appRestart)"; " is 124.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pusherEntryPoint,The length of the statement  "						this.confirmPaused.Set();	// whoever was waiting for PushConsumersPaused=true rest assured that pauseRequested is satisfied (no more quotes pumping anymore until unPauseRequested) " is 179.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pusherEntryPoint,The length of the statement  "						this.confirmUnpaused.Set();	// whoever was waiting for PushConsumersPaused=false rest assured that unPauseRequested is satisfied (quotes pumping from now on until pauseRequested) " is 178.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pusherEntryPoint,The length of the statement  "				string msg = "PUMPING_THREAD_EXITED_NON_RESUMABLY " + this.bufferPusher.ToString() + " for ChannelManaged[" + this.ToString() + "]"; " is 132.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,Push_straightOrBuffered,The length of the statement  "			//I don't need confirmation from the PusherThread because I want to let the StreamingAdapter go ASAP by Enqueueing and returning " is 128.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,Push_straightOrBuffered,The length of the statement  "				Assembler.PopupException(msg' null' false);		// just adding to buffered List<Exception> => very quick (sync'ing with GUI is a separate 200ms-timered Task) " is 154.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,Dispose,The length of the statement  "			//this.hasQuoteToPush_nonBlocking = true;		// fake gateway open (forgetting to close it results in 100%CPU/pump)' just to let the thread process disposed=true;  " is 159.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,PusherPause_waitUntilPaused,The length of the statement  "					//this.hasQuoteToPush_nonBlocking = true;		// fake gateway open (forgetting to close it results in 100%CPU/pump)' just to let the thread process pauseRequested=true " is 164.
Long Statement,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,PusherUnpause_waitUntilUnpaused,The length of the statement  "					//this.hasQuoteToPush_nonBlocking = true;		// fake gateway open (forgetting to close it results in 100%CPU/pump)' just to let the thread process unPauseRequested=true " is 166.
Long Statement,Sq1.Core.Streaming,QueuePerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\QueuePerSymbol.cs,SetThreadName,The length of the statement  "				string msg = "I_REFUSE_TO_CHANGE_GUI_THREAD_NAME DONT_INVOKE_ME_ON_DATA_SOURCE_INITIALIZATION [" + Thread.CurrentThread.Name + "]"; " is 131.
Long Statement,Sq1.Core.Streaming,QueuePerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\QueuePerSymbol.cs,SetThreadName,The length of the statement  "			Assembler.SetThreadName(msig' "SUBSCRIBERS_ADDED_BUT_Thread.CurrentThread.Name_WAS_ALREADY_SET__REMOVE_THE_FIRST_INVOCATION"' false); " is 133.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,PushQuote_toConsumers,The length of the statement  "			//            string msg = "PUSH_FAILED quoteDequeued_singleInstance_tillStreamBindsAll[" + quoteDequeued_singleInstance.ToString() + "]"; " is 138.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,PushQuote_toConsumers,The length of the statement  "			//            string msg = "PUSH_FAILED quoteDequeued_singleInstance_tillStreamBindsAll[" + quoteDequeued_singleInstance.ToString() + "]"; " is 138.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//Bar barStreamingUnattached_clonedFromFactory = this.UnattachedStreamingBar_factoryPerSymbolScale.BarStreaming_unattached.Clone(); " is 131.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//        barConsumer.ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended(barStreamingUnattached_clonedFromFactory' quoteClone_sernoEnriched_withStreamingBarUnattachedToParents); " is 204.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//    //	//NOPE_FRESH_STREAMING_CONTAINING_JUST_ONE_QUOTE_I_WILL_POKE_QUOTES_FROM_IT consumer.ConsumeBarLastFormed(barLastFormedBound); " is 135.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//        && barConsumer.ConsumerBars_toAppendInto.BarStaticLast_nullUnsafe.DateTimeOpen == barStreamingUnattached_clonedFromFactory.DateTimeOpen) { " is 148.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//    string msg = "KEEP_THIS_NOT_HAPPENING_BY_LEAVING_STATIC_LAST_ON_APPRESTART_NULL_ON_LIVEBACKTEST_CONTAINING_LAST_INCOMING_QUOTE" " is 133.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//    quoteBound_toStreamingBarUnattached = binderForConsumer.QuoteBoundToStreamingBar__streamingBarAttach_toConsumerBars(quoteClone_sernoEnriched_withStreamingBarUnattachedToParents);	//.Clone() " is 195.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//            bool barLastStaticFormedIsValid		= !this.UnattachedStreamingBar_factoryPerSymbolScale.BarLastFormed_unattached_notYetFormed; " is 138.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//            bool streamingBarReadyToSpawn		=  this.UnattachedStreamingBar_factoryPerSymbolScale.BarStreaming_unattached.DateTimeOpen " is 134.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//                    string msg = "FORCING_EXECUTE_ON_LASTFORMED_BY_RESETTING_LAST_FORMED_TO_PREVIOUSLY_EXECUTED_AFTER_BACKTEST"; " is 130.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//                        //PAUSED_APPRESTART_BACKTEST_MinValue_HERE && this.StreamingBarFactoryUnattached.BarLastFormedUnattached.DateTimeOpen != DateTime.MinValue " is 164.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//    barConsumer.ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended(barStaticLast' quoteBound_toStreamingBarUnattached); " is 148.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//                    string msg = "I_REFUSE_BIND_AND_PUSH_LAST_STATIC_FORMED [" + this.UnattachedStreamingBar_factoryPerSymbolScale.BarLastFormedUnattached_nullUnsafe + "]" " is 173.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//                        //+ " I won't push LastStaticBar(DateTime.MinValue' NaN*5) because it has initialized LastStaticBar=StreamingBar.Clone()" " is 147.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,Bar_lastStaticFormedAttached_consume,The length of the statement  "			//                        + " on first quoteClone_intrabarSernoEnriched_unbound[" + quoteCloned_intrabarSernoEnriched_unbound + "]" " is 131.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,QuoteCloned_bindAttach,The length of the statement  "			//    string msg = "NO_QUOTE_CONSUMERS__NOT_PUSHING quoteSernoEnriched[" + quoteCloned_intrabarSernoEnriched_unbound + "]"; " is 123.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,QuoteCloned_bindAttach,The length of the statement  "			//msig = " //bindConsumeQuote(): quoteSernoEnrichedWithUnboundStreamingBar[" + quoteCloned_intrabarSernoEnriched_unbound.ToString() " is 131.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,QuoteCloned_bindAttach,The length of the statement  "			//    Quote_cloneBind_enrichWithIntrabarSerno_updateStreamingBar_createNewBar(quoteDequeued_singleInstance_tillStreamBindsAll); " is 127.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,QuoteCloned_bindAttach,The length of the statement  "			//        + " quote2bCloned_bindingToEachConsumer_willHappen_afterDequeued[" + quoteDequeued_singleInstance_tillStreamBindsAll + "]" " is 132.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,QuoteCloned_bindAttach,The length of the statement  "			//    string msg = "HERE_NULL_IS_OK__UNATTACHED___BINDER_WILL_BE_INVOKED_DOWNSTACK_IN_PUMP_THREAD_SOON_FOR_QUOTE_CLONED" " is 120.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,QuoteCloned_bindAttach,The length of the statement  "			//    string msg = "QUOTE_WAS_NOT_ENRICHED_BY_StreamingBarFactoryUnattached.EnrichQuoteWithSernoUpdateStreamingBarCreateNewBar()"; " is 130.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,QuoteCloned_bindAttach,The length of the statement  "			//    quoteClone_boundAttached = binderForConsumer.QuoteBoundToStreamingBar__streamingBarAttach_toConsumerBars(quoteCloned_intrabarSernoEnriched_unbound); " is 154.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,ConsumerQuoteRemove,The length of the statement  "			if (base.ConsumersBar.Contains(quoteConsumer)) return true;		// will remove binder only if there is no other consumers for it to serve & protect " is 144.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamChart.cs,ConsumerBarRemove,The length of the statement  "			if (this.ConsumersQuote.Contains(barConsumer)) return true;		// will remove binder only if there is no other consumers for it to serve & protect " is 144.
Long Statement,Sq1.Core.Streaming,SymbolScaleStreamSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStreamSolidifier.cs,PushQuote_toConsumers,The length of the statement  "					string msg = "skipping old quote for quote.ServerTime[" + quoteDequeued_singleInstance.ServerTime + "]' can only accept for current" " is 132.
Long Statement,Sq1.Core.Streaming,SolidifierBarsEmulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SolidifierBarsEmulator.cs,Quote_cloneBind_enrichWithIntrabarSerno_updateStreamingBar_createNewBar,The length of the statement  "				string msg = "CANT_FILL_STREAMING_CLOSE_FROM_BID_OR_ASK_UNKNOWN quote.PriceLastDeal[" + quote2bCloned.TradedPrice + "];" " is 120.
Long Statement,Sq1.Core.Streaming,SolidifierBarsEmulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SolidifierBarsEmulator.cs,Quote_cloneBind_enrichWithIntrabarSerno_updateStreamingBar_createNewBar,The length of the statement  "				if (this.BarLastFormedUnattached_nullUnsafe != null && this.BarLastFormedUnattached_nullUnsafe.DateTimeOpen == DateTime.MinValue) { " is 131.
Long Statement,Sq1.Core.Streaming,SolidifierBarsEmulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SolidifierBarsEmulator.cs,Quote_cloneBind_enrichWithIntrabarSerno_updateStreamingBar_createNewBar,The length of the statement  "				// I only want to reset to 0 when it's attributed to a new Bar; it's unlikely to face a new bar here for generatedQuotes; " is 121.
Long Statement,Sq1.Core.Streaming,SolidifierBarsEmulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SolidifierBarsEmulator.cs,Quote_cloneBind_enrichWithIntrabarSerno_updateStreamingBar_createNewBar,The length of the statement  "					// spread can be anywhere outside the bar; but a bar freezes only traded spreads inside (Quotes DDE table from Quik' not Level2-generated with Size=0) " is 150.
Long Statement,Sq1.Core.Streaming,SolidifierBarsEmulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SolidifierBarsEmulator.cs,Quote_cloneBind_enrichWithIntrabarSerno_updateStreamingBar_createNewBar,The length of the statement  "				//bool same = quoteClone_unbound.ParentBarStreaming.HasSameDOHLCVas(this.BarStreaming_unattached' "quoteClone.ParentBarStreaming"' "this.BarStreamingUnattached"' ref curious); " is 175.
Long Statement,Sq1.Core.Streaming,SolidifierBarsEmulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SolidifierBarsEmulator.cs,Quote_cloneBind_enrichWithIntrabarSerno_updateStreamingBar_createNewBar,The length of the statement  "			//    //v2 string msg = "WHY_DO_YOU_NEED_PARENT_BAR_FOR_QUOTE_NOW?? WILL_BIND_IT_LATER_FOR_EACH_CONSUMER_TO_ITS_OWN_BAR_STREAMING_AND_ITS_PARENT_BARS"; " is 151.
Long Statement,Sq1.Core.Streaming,SolidifierBarsEmulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SolidifierBarsEmulator.cs,InitWithStreamingBarInsteadOfEmpty,The length of the statement  "				msg += "StreamingBarInsteadOfEmpty.DateTimeOpen[" + StreamingBarInsteadOfEmpty.DateTimeOpen + "] == DateTime.MinValue "; " is 120.
Long Statement,Sq1.Core.Streaming,SolidifierBarsEmulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SolidifierBarsEmulator.cs,ToString,The length of the statement  "			return this.Symbol + "_" + this.ScaleInterval.ToString() + ":StreamingBar[" + this.BarStreaming_unattached.ToString() + "]"; " is 124.
Long Statement,Sq1.Core.Streaming,StreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingEditor.EventConsumer.cs,Initialize,The length of the statement  "			this.StreamingAdapter.OnStreamingConnectionStateChanged += new EventHandler<EventArgs>(this.StreamingAdapter_OnStreamingConnectionStateChanged); " is 144.
Long Statement,Sq1.Core.Streaming,StreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingEditor.EventConsumer.cs,PopulateStreamingAdapterSettingsToEditor,The length of the statement  "			throw new Exception("please override BrokerAdapter::PushStreamingAdapterSettingsToEditor() for streamingAdapter=[" + this.StreamingAdapter + "]"); " is 146.
Long Statement,Sq1.Core.Streaming,StreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingEditor.EventConsumer.cs,PushEditedSettingsToStreamingAdapter,The length of the statement  "			throw new Exception("please override BrokerAdapter::PushEditedSettingsToStreamingAdapter() for streamingAdapter=[" + this.StreamingAdapter + "]"); " is 146.
Long Statement,Sq1.Core.Streaming,StreamingConsumerSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingConsumerSolidifier.cs,ConsumeBarLastStatic_justFormed_whileStreamingBarWithOneQuote_alreadyAppended,The length of the statement  "			string msg = millisSavingTook + " barLastFormed[" + barStaticLast_justFormed_byEarlyBinder + "] from streaming DataSource[" + this.dataSource.Name + "]"; " is 153.
Long Statement,Sq1.Core.Streaming,StreamingConsumerSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingConsumerSolidifier.cs,barsSaveToFile_replaceStreamingBar,The length of the statement  "			if (ignoreInterval_forceReplaceBar_immediately == false && secondsSinceLastDumped <= this.barStreamingDumpIntervalSeconds) return; " is 130.
Long Statement,Sq1.Core.Streaming,StreamingConsumerSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingConsumerSolidifier.cs,barsSaveToFile_replaceStreamingBar,The length of the statement  "				+ " quote[" + quote.LocalTime.ToString("mm:ss.fff") + "]=>[" + this.barStreamingLastDumpedLocal.ToString("mm:ss.fff") + "]" " is 123.
Long Statement,Sq1.Core.Streaming,StreamingConsumerSolidifier,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingConsumerSolidifier.cs,barsSaveToFile_replaceStreamingBar,The length of the statement  "				+ " secondsSinceLastDumped[" + secondsSinceLastDumped.ToString("N3") + "] >= dumpInterval[" + this.barStreamingDumpIntervalSeconds + "]"; " is 137.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,PushQuote_toStreams,The length of the statement  "					string msg = "STREAM_THREW [" + stream + "] WHILE_PUSHING quoteDequeued_singleInstance_tillStreamBindsAll[" + quoteDequeued_singleInstance_tillStreamBindsAll + "]"; " is 164.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,PushQuote_viaPumpOrQueue,The length of the statement  "			//v2 let the user re-backtest during live streaming using 1) QuotePump.OnHold=true; 2) RunBacktest(); 3) QuotePump.OnHold=false; " is 128.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,ConsumerQuoteAdd,The length of the statement  "				//v1 CAN_NOT_CREATE_INSTANCE_OF_AN_ABSTRACT SymbolScaleStream<STREAMING_CONSUMER_CHILD> newScaleChannel = new SymbolScaleStream<STREAMING_CONSUMER_CHILD>(this' symbol' scaleInterval' this.ReasonIwasCreated_propagatedFromDistributor); " is 233.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,streamingConsumer_factory,The length of the statement  "			SymbolScaleStream<STREAMING_CONSUMER_CHILD> newScaleChannel = null;	// default(SymbolScaleStream<STREAMING_CONSUMER_CHILD>); " is 124.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,streamingConsumer_factory,The length of the statement  "				SymbolScaleStream<StreamingConsumerChart> concrete = new SymbolScaleStreamChart(myself' symbol' scaleInterval' this.ReasonIwasCreated_propagatedFromDistributor); " is 161.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,streamingConsumer_factory,The length of the statement  "				SymbolScaleStream<StreamingConsumerSolidifier> concrete = new SymbolScaleStreamSolidifier(myself' symbol' scaleInterval' this.ReasonIwasCreated_propagatedFromDistributor); " is 171.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,ConsumerQuoteRemove,The length of the statement  "				//Assembler.PopupException("QuoteConsumer [" + consumer + "] was the last one using [" + scaleInterval + "]; removing StreamsByScaleInterval[" + channel + "]"); " is 160.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,ConsumerQuoteIsSubscribed,The length of the statement  "				string msg = "I_REFUSE_TO_CHECK_SUBSCRIBED__SCALE_INTERVAL_NOT_SUBSCRIBED [" + scaleInterval + "] for [" + quoteConsumer + "]" " is 126.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,ConsumerBarAdd,The length of the statement  "				//v1 SymbolScaleStream<STREAMING_CONSUMER_CHILD> newScaleChannel = new SymbolScaleStream<STREAMING_CONSUMER_CHILD>(this' symbol' scaleInterval' this.ReasonIwasCreated_propagatedFromDistributor); " is 194.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,ConsumerBarRemove,The length of the statement  "				//Assembler.PopupException("BarConsumer [" + consumer + "] was the last one using [" + scaleInterval + "]; removing StreamsByScaleInterval[" + channel + "]"); " is 158.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,ConsumerBarIsSubscribed,The length of the statement  "				string msg = "I_REFUSE_TO_CHECK_SUBSCRIBED__SCALE_INTERVAL_NOT_SUBSCRIBED [" + scaleInterval + "] for [" + barConsumer + "]" " is 124.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,QueueOrPumpPause_addBacktesterLaunchingScript_eachQuote,The length of the statement  "					+ " 1)YOU_INVOKE_Script.OnNewQuote()_WITHOUT_WAITING_FOR_IT_TO_FINISH_PREV_INVOCATION (TRYING_TO_ASSURE_NON_REENTERABILITY_OF_SCRIPT_HOOKS_HERE)" " is 145.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,QueueOrPumpPause_addBacktesterLaunchingScript_eachQuote,The length of the statement  "					string msg = "WE_ARE_ON_APP_RESTART_RIGHT??? ALL_PUMPS_ARE_BORN_PAUSED  backtesterAdding=[" + backtesterOrLivesimAdding + "]"; " is 126.
Long Statement,Sq1.Core.Streaming,SymbolChannel<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolChannel.cs,QueueOrPumpResume_removeBacktesterFinishedScript_eachQuote,The length of the statement  "				string msg = "YOU_RUINED_WHOLE_IDEA_OF_DISTRIBUTOR_CHANNEL_TO_AUTORESUME_ITS_OWN_PUMP backtesterRemoving=[" + backtesterOrLivesimRemoving + "]"; " is 144.
Long Statement,Sq1.Core.Streaming,SymbolScaleStream<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStream.EventGenerator.cs,ConsumerQuoteRemove,The length of the statement  "				Assembler.PopupException("I_REFUSE_TO_REMOVE_UNSUBSCRIBED_CONSUMER quoteConsumer[" + quoteConsumer + "] from [" + this + "]"); " is 126.
Long Statement,Sq1.Core.Streaming,SymbolScaleStream<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStream.EventGenerator.cs,ConsumerBarRemove,The length of the statement  "				Assembler.PopupException("I_REFUSE_TO_REMOVE_UNSUBSCRIBED_CONSUMER barConsumer[" + barConsumer + "] from [" + this + "]"); " is 122.
Long Statement,Sq1.Core.Streaming,SymbolScaleStream<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStream.EventGenerator.cs,ToString,The length of the statement  "{ return this.SymbolScaleInterval + ":Quotes[" + this.ConsumersQuoteAsString + "]'Bars[" + this.ConsumersBarAsString + "]"; }" is 125.
Long Statement,Sq1.Core.Streaming,SymbolScaleStream<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStream.EventGenerator.cs,UpstreamSubscribedToSymbol_pokeConsumers,The length of the statement  "			foreach (STREAMING_CONSUMER_CHILD quoteConsumer	in this.ConsumersQuote)	quoteConsumer.UpstreamSubscribed_toSymbol_streamNotifiedMe(null); " is 137.
Long Statement,Sq1.Core.Streaming,SymbolScaleStream<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStream.EventGenerator.cs,UpstreamSubscribedToSymbol_pokeConsumers,The length of the statement  "			foreach (STREAMING_CONSUMER_CHILD barConsumer	in this.ConsumersBar)	  barConsumer.UpstreamSubscribed_toSymbol_streamNotifiedMe(null); " is 133.
Long Statement,Sq1.Core.Streaming,SymbolScaleStream<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStream.EventGenerator.cs,UpstreamUnSubscribedFromSymbolPokeConsumers,The length of the statement  "					quoteLastReceived.Replace_myStreamingBar_withConsumersStreamingBar(barConsumer.ConsumerBars_toAppendInto.BarStreaming_nullUnsafe); " is 130.
Long Statement,Sq1.Core.Streaming,SymbolScaleStream<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStream.EventGenerator.cs,CloneFullyFunctional_withNewDictioniariesAndLists_toPossiblyRemoveMatchingConsumers,The length of the statement  "			SymbolScaleStream<STREAMING_CONSUMER_CHILD> ret			= (SymbolScaleStream<STREAMING_CONSUMER_CHILD>) base.MemberwiseClone(); " is 121.
Long Statement,Sq1.Core.Streaming,SymbolScaleStream<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStream.EventGenerator.cs,CloneFullyFunctional_withNewDictioniariesAndLists_toPossiblyRemoveMatchingConsumers,The length of the statement  "			//ret.binderPerConsumer						= new Dictionary<STREAMING_CONSUMER_CHILD' BinderAttacher_perStreamingChart>(this.binderPerConsumer); " is 130.
Long Statement,Sq1.Core.Streaming,SymbolScaleStream<STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\SymbolScaleStream.EventGenerator.cs,CloneFullyFunctional_withNewDictioniariesAndLists_toPossiblyRemoveMatchingConsumers,The length of the statement  "			//ret.QuoteQueue_onlyWhenBacktesting_quotePumpForLiveAndSim								= this.QuoteQueue_onlyWhenBacktesting_quotePumpForLiveAndSim; " is 128.
Long Statement,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,Initialize_levelTwo_lastPrevQuotes_forSymbol,The length of the statement  "					this.level2_lastPrevQuotesUnbound_bySymbol.Add(symbol' new LevelTwo(symbol' streamingAdapterInitialized_asString)' this' msig); " is 127.
Long Statement,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,SetQuoteCurrent_forSymbol_shiftOldToQuotePrev,The length of the statement  "					string msg = "SUBSCRIBER_SHOULD_HAVE_INVOKED_Initialize_levelTwo_forAllSymbolsInDataSource()__FOLLOW_THIS_LIFECYCLE__ITS_A_RELIGION_NOT_OPEN_FOR_DISCUSSION"; " is 157.
Long Statement,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,SetQuoteCurrent_forSymbol_shiftOldToQuotePrev,The length of the statement  "					string msg = "RECEIVED_FIRST_QUOTE_EVER_FOR#2 symbol[" + quote.Symbol + "] SKIPPING_LASTQUOTE_ABSNO_CHECK SKIPPING_QUOTE<=LASTQUOTE_NEXT_CHECK"; " is 144.
Long Statement,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,GetQuoteCurrent_forSymbol_nullUnsafe,The length of the statement  "				Quote weirdAttachedToOriginalBarsInsteadOfRegeneratedGrowingCopy = level2.QuoteCurrent_unbound_notCloned_validAbsno_invalidIntrabarSerno; " is 137.
Long Statement,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,GetPriceForMarketOrder_notAligned_fromQuoteCurrent,The length of the statement  "				string msg = "NEVER_HAPPENED_SO_FAR LAST_QUOTE_MUST_BE_BID_OR_ASK quoteCurrent.TradeOccuredAt[" + quoteCurrent.TradedAt + "]=BidOrAsk.UNKNOWN"; " is 143.
Long Statement,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,GetBestBid_notAligned_forMarketOrder_fromQuoteCurrent,The length of the statement  "				string msg = "LAST_TIME_I_HAD_IT_WHEN_Livesimulator_STORED_QUOTES_IN_QuikLivesimStreaming_WHILE_MarketLive_ASKED_QuikStreaming_TO_FILL_ALERT"; " is 142.
Long Statement,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,GetBestAsk_notAligned_forMarketOrder_fromQuoteCurrent,The length of the statement  "				string msg = "LAST_TIME_I_HAD_IT_WHEN_Livesimulator_STORED_QUOTES_IN_QuikLivesimStreaming_WHILE_MarketLive_ASKED_QuikStreaming_TO_FILL_ALERT"; " is 142.
Long Statement,Sq1.Core.Streaming,StreamingDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingDataSnapshot.cs,GetBidOrAsk_forDirection_fromQuoteCurrent,The length of the statement  "				? this.GetBestBid_notAligned_forMarketOrder_fromQuoteCurrent(Symbol) : this.GetBestAsk_notAligned_forMarketOrder_fromQuoteCurrent(Symbol); " is 138.
Long Statement,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,CountBlocking,The length of the statement  "			return count;	//I'm sucpiscious about returning inside try{}; when outside I know finally{} has unlocked before popping up the stack; otherwize I'm not sure what/when finalizer did " is 180.
Long Statement,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,SafeCopy,The length of the statement  "			return ret;	//I'm sucpiscious about returning inside try{}; when outside I know finally{} has unlocked before popping up the stack; otherwize I'm not sure what/when finalizer did " is 178.
Long Statement,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,ContainsKey,The length of the statement  "			return contains;	//I'm sucpiscious about returning inside try{}; when outside I know finally{} has unlocked before popping up the stack; otherwize I'm not sure what/when finalizer did " is 183.
Long Statement,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,Remove,The length of the statement  "			return removed;	//I'm sucpiscious about returning inside try{}; when outside I know finally{} has unlocked before popping up the stack; otherwize I'm not sure what/when finalizer did " is 182.
Long Statement,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,Add,The length of the statement  "				if (this.ContainsKey(priceLevel' lockOwner' lockPurpose' ConcurrentWatchdog.TIMEOUT_DEFAULT) && duplicateThrowsAnError) { " is 121.
Long Statement,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,Add,The length of the statement  "			return added;	//I'm sucpiscious about returning inside try{}; when outside I know finally{} has unlocked before popping up the stack; otherwize I'm not sure what/when finalizer did " is 180.
Long Statement,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,UpdateAtKey,The length of the statement  "				if (this.ContainsKey(priceLevel' lockOwner' lockPurpose' ConcurrentWatchdog.TIMEOUT_DEFAULT) == false && absenceThrowsAnError) { " is 128.
Long Statement,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,UpdateAtKey,The length of the statement  "			return updated;	//I'm sucpiscious about returning inside try{}; when outside I know finally{} has unlocked before popping up the stack; otherwize I'm not sure what/when finalizer did " is 182.
Long Statement,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,GetAtKey,The length of the statement  "				if (this.ContainsKey(priceLevel' lockOwner' lockPurpose' ConcurrentWatchdog.TIMEOUT_DEFAULT) == false && absenceThrowsAnError) { " is 128.
Long Statement,Sq1.Core.Support,ConcurrentDictionary<PRICE_LEVEL;TOTAL_LOTS>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentDictionary.cs,GetAtKey,The length of the statement  "			return ret;	//I'm sucpiscious about returning inside try{}; when outside I know finally{} has unlocked before popping up the stack; otherwize I'm not sure what/when finalizer did " is 178.
Long Statement,Sq1.Core.Support,ConcurrentWatchdog,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentWatchdog.cs,WaitAndLockFor,The length of the statement  "			string msig = " //WaitAndLockFor(owner[" + lockOwner + "] lockPurpose[" + lockPurpose + "]) [" + Thread.CurrentThread.ManagedThreadId + "]"; " is 140.
Long Statement,Sq1.Core.Support,ConcurrentWatchdog,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentWatchdog.cs,WaitAndLockFor,The length of the statement  "					string msg = "YOU_ALREADY_LOCKED_ME_WITH_SAME_REASON[" + lockPurpose + "] lockStack[" + this.LockStack_asString + "] AVOIDING_STACK_OVERFLOW RECURSIVE_CALL"; " is 157.
Long Statement,Sq1.Core.Support,ConcurrentWatchdog,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentWatchdog.cs,WaitAndLockFor,The length of the statement  "							//+ " IF_THREAD_FROZE_FOREVER_USE_WAIT_MILLIS_TO_FIGURE_OUT_WHO_IS_STILL_KEEPING_THE_LOCK_IF_YOU_ARE_SURE_ITS_NOT_THE_GUY_JUST_REPORTED" " is 136.
Long Statement,Sq1.Core.Support,ConcurrentWatchdog,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentWatchdog.cs,UnLockFor,The length of the statement  "			string msig = " //UnLockFor(owner[" + lockOwner + "] releasingAfter[" + releasingAfter + "]) [" + Thread.CurrentThread.ManagedThreadId + "]"; " is 141.
Long Statement,Sq1.Core.Support,ConcurrentWatchdog,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentWatchdog.cs,UnLockFor,The length of the statement  "			// NEVER_USE_THIS__FIRST_CONCURRENT_ACCESS_LEADS_TO_DEADLOCK lock (this.customerLockingQueue) {		// keep same-stack-return above first ever lock() {} " is 149.
Long Statement,Sq1.Core.Support,ConcurrentWatchdog,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentWatchdog.cs,UnLockFor,The length of the statement  "				//        string msg2 = "releasingAfter[" + releasingAfter + "] != this.LockPurpose[" + this.lockedPurposeFirstInTheStack + "]"; " is 128.
Long Statement,Sq1.Core.Support,ConcurrentWatchdog,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentWatchdog.cs,UnLockFor,The length of the statement  "					string msg1 = "YOU_NEVER_LOCKED_ME_WITH_SAME_REASON_YOU_ARE_RELEASING[" + releasingAfter + "] lockStack[" + this.LockStack_asString + "]"; " is 138.
Long Statement,Sq1.Core.Support,ConcurrentWatchdog,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentWatchdog.cs,UnLockFor,The length of the statement  "				this.isFree.Set();	// Calling ManualResetEvent.Set opens the gate' allowing any number of threads calling WaitOne to be let through " is 131.
Long Statement,Sq1.Core.Support,ConcurrentWatchdog,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentWatchdog.cs,Dispose,The length of the statement  "				this.isFree = null;	// I wanted to check this.isFree.IsDisposed() but a WaitHandle doesn't have it; so I nullify and check for null " is 131.
Long Statement,Sq1.Core.Support,TimeredBlock,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\TimeredBlock.cs,reschedule,The length of the statement  "			// Timer is Enabled until event fired; after that Enabled can be used for a repetitive firing (I don't use repetitive so on every re-use of Start() I set Enabled " is 161.
Long Statement,Sq1.Core.Support,TimeredBlockTask,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\TimeredBlockTask.cs,switchToGui_executeCodeLinkingTwoUnrelatedDlls,The length of the statement  "				guiInvoker.BeginInvoke((MethodInvoker)delegate { switchToGui_executeCodeLinkingTwoUnrelatedDlls(refreshDataSourceTree_invokedInGuiThread); }); " is 142.
Long Statement,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,OnResize,The length of the statement  "			this.UserControlInner.Location = new Point(this.PaddingMouseReceiving.Left + this.borderThickness' this.PaddingMouseReceiving.Top + this.borderThickness); " is 154.
Long Statement,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The length of the statement  "			this.UserControlInner.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 152.
Long Statement,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The length of the statement  "			this.pnlWindowTitle.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 147.
Long Statement,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The length of the statement  "			this.pnlWindowTitle.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(204))); " is 163.
Long Statement,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The length of the statement  "			this.lblWindowTitle.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 147.
Complex Conditional,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,Clone_selectRange,The conditional expression  "startDate == DateTime.MinValue && endDate == DateTime.MaxValue && dataRangeRq.Range != BarRange.AllData && dataRangeRq.RecentBars == 0"  is complex.
Complex Conditional,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,OnMouseMove,The conditional expression  "overBorderLeft && overBorderTop || overBorderRight && overBorderBottom"  is complex.
Complex Conditional,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,OnMouseMove,The conditional expression  "overBorderLeft && overBorderBottom || overBorderRight && overBorderTop"  is complex.
Virtual Method Call from Constructor,Sq1.Core.Sequencing,ReusableExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\ReusableExecutor.cs,ReusableExecutor,The constructor "ReusableExecutor" calls a virtual method "SetExecutor".
Virtual Method Call from Constructor,Sq1.Core.Execution,Alert,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\Alert.cs,Alert,The constructor "Alert" calls a virtual method "GetBidOrAsk_aligned_forTidalOrCrossMarket_fromQuoteCurrent".
Virtual Method Call from Constructor,Sq1.Core.StrategyBase,Reporter,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Reporter.cs,Reporter,The constructor "Reporter" calls a virtual method "Initialize".
Magic Number,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,Initialize,The following statement contains a magic number: try {  				TimeSpan sinceApplicationStart = DateTime.Now - Process.GetCurrentProcess().StartTime;  				string msg = "ASSEMBLER_INITIALIZED_AFTER_MILLIS_RUNNING: "  					+ Math.Round(sinceApplicationStart.Milliseconds / (decimal)1000' 2)  					+ " [" + this.AssemblerDataSnapshot.SplitterEventsShouldBeIgnoredSecondsAfterAppLaunch  					+ "]=SplitterEventsShouldBeIgnoredSecondsAfterAppLaunch";  				//Assembler.PopupException(msg' null' false);  			} catch (Exception ex) {  				string msg = "NEVER_HAPPENED_UNDER_WINDOWS PLATFORM_DOESNT_SUPPORT_Process.GetCurrentProcess().StartTime_AS_DESCRIBED_IN_MSDN__LAUNCHING_STOPWATCH";  				Assembler.PopupException(msg' ex);  				//this.stopWatchIfProcessUnsupported = Stopwatch.StartNew();  			}
Magic Number,Sq1.Core,Assembler,C:\repos\worldexplorer_SquareOne\Sq1.Core\Assembler.cs,Initialize,The following statement contains a magic number: try {  				TimeSpan sinceApplicationStart = DateTime.Now - Process.GetCurrentProcess().StartTime;  				string msg = "ASSEMBLER_INITIALIZED_AFTER_MILLIS_RUNNING: "  					+ Math.Round(sinceApplicationStart.Milliseconds / (decimal)1000' 2)  					+ " [" + this.AssemblerDataSnapshot.SplitterEventsShouldBeIgnoredSecondsAfterAppLaunch  					+ "]=SplitterEventsShouldBeIgnoredSecondsAfterAppLaunch";  				//Assembler.PopupException(msg' null' false);  			} catch (Exception ex) {  				string msg = "NEVER_HAPPENED_UNDER_WINDOWS PLATFORM_DOESNT_SUPPORT_Process.GetCurrentProcess().StartTime_AS_DESCRIBED_IN_MSDN__LAUNCHING_STOPWATCH";  				Assembler.PopupException(msg' ex);  				//this.stopWatchIfProcessUnsupported = Stopwatch.StartNew();  			}
Magic Number,Sq1.Core,AssemblerDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\AssemblerDataSnapshot.cs,AssemblerDataSnapshot,The following statement contains a magic number: SplitterEventsShouldBeIgnoredSecondsAfterAppLaunch = 10;
Magic Number,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationRun,The following statement contains a magic number: int repaintableChunk = (int)(this.BarsOriginal.Count / 10);
Magic Number,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPreBarsSubstitute_overrideable,The following statement contains a magic number: try {  				//COPIED_UPSTACK_FOR_BLOCKING_MOUSEMOVE_AFTER_BACKTEST_NOW_CLICK__BUT_ALSO_STAYS_HERE_FOR_SLIDER_CHANGE_NON_INVALIDATION  				//WONT_BE_RESET_IF_EXCEPTION_OCCURS_BEFORE_TASK_LAUNCH  				if (this.Executor.ChartShadow != null) this.Executor.ChartShadow.PaintAllowedDuringLivesimOrAfterBacktestFinished = false;    				#region candidate for this.BacktestDataSourceBuildFromUserSelection()  				this.BarsOriginal = this.Executor.Bars;  				this.BarsSimulating = this.Executor.Bars.CloneBars_zeroBarsInside(BARS_BACKTEST_CLONE_PREFIX);	// + this.BarsOriginal  				this.Executor.EventGenerator.RaiseOnBacktesterBarsIdenticalButEmptySubstitutedToGrow_step1of4();  				  				BacktestSpreadModeler spreadModeler;  				// kept it on the surface and didn't pass ScriptContextCurrent.SpreadModelerPercent to "new BacktestDataSource()" because later BacktestDataSource:  				// 1) will support different SpreadModelers with not only 1 parameter like SpreadModelerPercentage;  				// 2) will support different BacktestModes like 12strokes' not only 4Stroke   				// 3) will poke StreamingAdapter-derived implementations 12 times a bar with platform-generated quotes for backtests with regulated poke delay  				// 4) will need to be provide visualized   				// v1 this.BacktestDataSource.BacktestStreamingAdapter.InitializeSpreadModelerPercentage(this.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent);  				// v2 UI-controlled in the future' right now the stub    				ContextScript ctx = this.Executor.Strategy.ScriptContextCurrent;  				string msig = "Strategy[" + this.Executor.Strategy + "].ScriptContextCurrent[" + ctx + "]";  				switch (ctx.SpreadModelerClassName) {  					case "BacktestSpreadModelerPercentage":  						spreadModeler = new BacktestSpreadModelerPercentage(this.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent);  						break;  					default:  						string msg = "SPREAD_MODELER_NOT_YET_SUPPORTED[" + ctx.SpreadModelerClassName + "]"  							+ "' instantiatind default BacktestSpreadModelerPercentage("  							+ this.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent + ")";  						Assembler.PopupException(msg + msig);  						spreadModeler = new BacktestSpreadModelerPercentage(this.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent);  						break;  				}  				#endregion    				string threadName = "BACKTESTING " + this.Executor.Strategy.WindowTitle + " " + this.BarsSimulating.InstanceScaleCount;  				Assembler.SetThreadName(threadName' "LIVESIM_FAILED_TO_SET_THREAD_NAME OR_NPE");    				this.BacktestDataSource.InitializeBacktest(this.Executor.ToString() ' this.BarsSimulating' spreadModeler);  				this.BarsSimulating.DataSource = this.BacktestDataSource;    				StreamingAdapter streaming = this.BacktestDataSource.StreamingAdapter;  				DistributorCharts distr = streaming.DistributorCharts_substitutedDuringLivesim;  				if (distr == null) {  					string msg = "YOU_DIDNT_RESTORE_DISTRIBUTOR_PROPERLY_AFTER_LIVESIM";  					Assembler.PopupException(msg);  				}  				distr.ConsumerQuoteSubscribe(this.backtestQuoteBarConsumer' false);  				distr.ConsumerBarSubscribe  (this.backtestQuoteBarConsumer' false);  				distr.SetQuotePumpThreadName_sinceNoMoreSubscribersWillFollowFor(this.BarsSimulating.Symbol);  				  				this.Executor.BacktestContext_initialize(this.BarsSimulating);    				#region PARANOID  				if (this.BarsOriginal == null) {  					string msg = "consumers will expect this.BarsOriginal != null";  					Assembler.PopupException(msg);  				}  				if (this.BarsOriginal.Count == 0) {  					string msg = "consumers will expect this.BarsOriginal.Count > 0";  					Assembler.PopupException(msg);  				}  				if (this.BarsSimulating == null) {  					string msg = "consumers will expect this.BarsSimulating != null";  					Assembler.PopupException(msg);  				}  				if (this.BarsSimulating.Count > 0) {  					string msg = "consumers will expect this.BarsSimulating.Count = 0";  					Assembler.PopupException(msg);  				}  				if (this.Executor.Bars == null) {  					string msg = "consumers will expect this.Bars != null";  					Assembler.PopupException(msg);  				}  				if (this.Executor.Bars.Count > 0) {  					string msg = "consumers will expect this.Bars.Count = 0";  					Assembler.PopupException(msg);  				}  				#endregion    				//ALREADY_RAISED_INSIDE_CONTEXT_INITIALIZE() this.Executor.EventGenerator.RaiseOnBacktesterSimulationContextInitialized_step2of4();  			} catch (Exception ex) {  				string msg = "SimulationPreBarsSubstitute_overrideable(): Backtester caught a long beard...";  				this.Executor.PopupException(msg' ex);  			} finally {  				this.BarsSimulatedSoFar = 0;  				this.BacktestWasAbortedByUserInGui = false;  				if (this.BacktestAbortedMre.WaitOne(0) == true) Thread.Sleep(10);	// let the Wait() in GUI thread to feel SIGNALLED' before I reset again to NON_SIGNALLED  				this.BacktestAbortedMre.Reset();  				this.RequestingBacktestAbortMre.Reset();  				this.BacktestIsRunningMre.Set();  				if (this.ImBacktestingOrLivesimming == false) {  					string msg = "IN_ORDER_TO_SIGNAL_UNFLAGGED_I_HAVE_TO_RESET_INSTEAD_OF_SET";  					Assembler.PopupException(msg);  				}  			}
Magic Number,Sq1.Core.Backtesting,Backtester,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\Backtester.cs,SimulationPostBarsRestore_overrideable,The following statement contains a magic number: try {  				StreamingAdapter streamingBacktest = this.BacktestDataSource.StreamingAdapter;  				StreamingAdapter streamingOriginal = this.BarsOriginal.DataSource.StreamingAdapter;  				string msg = "NOW_INSERT_BREAKPOINT_TO_this.channel.PushQuoteToConsumers(quoteDequeued) CATCHING_BACKTEST_END_UNPAUSE_PUMP";    				// what Livesim-related code does in Backtester???  				//if (streamingOriginal != null && streamingOriginal is LivesimStreaming == false) {  				//	string msg2 = "MUST_BE_EMPTY_ORIGINAL_BARS.STREAMING ABSORBING_FROM_BACKTEST_COMPLETE";  				//	Assembler.PopupException(msg2);  				//	streamingOriginal.AbsorbStreamingBarFactoryFromBacktestComplete(streamingBacktest' this.BarsOriginal.Symbol' this.BarsOriginal.ScaleInterval);  				//}    				DistributorCharts distr = this.BacktestDataSource.StreamingAdapter.DistributorCharts_substitutedDuringLivesim;  				distr.ConsumerQuoteUnsubscribe	(this.backtestQuoteBarConsumer);  				distr.ConsumerBarUnsubscribe	(this.backtestQuoteBarConsumer);    				double sec = Math.Round(this.Stopwatch.ElapsedMilliseconds / 1000d' 2);  				string strokesPerBar = this.QuotesGenerator.BacktestStrokesPerBar + "/Bar";  				string stats = "Backtest took [" + sec + "]sec at " + strokesPerBar;  				this.Executor.LastBacktestStatus = stats + this.Executor.LastBacktestStatus;    				this.Executor.BacktestContext_restore();  				this.BarsOriginal = null;	// I_RESTORED_CONTEXT__END_OF_BACKTEST_ORIGINAL_BECAME_NULL WILL_AFFECT_ChartForm.TsiProgressBarETA  				if (this.Executor.ChartShadow == null) {  					string msg3 = "IAM_IN_SEQUENCER_HAVING_NO_CHART_ASSOCIATED";  					return;  				}  				this.Executor.ChartShadow.PaintAllowedDuringLivesimOrAfterBacktestFinished = true;  				// DOESNT_HELP_HOPE_ON_OnBacktestedAllBars() in InterForm this.Executor.ChartShadow.Invalidate();  			} catch (Exception ex) {  				#if DEBUG  				Debugger.Break();  				#endif  				throw ex;  			} finally {  				// Calling ManualResetEvent.Set opens the gate'  				// allowing any number of threads calling WaitOne to be let through  				//moved to this.NotifyWaitingThreads()  				//this.BacktestCompletedQuotesCantGo.Set();  				if (this.BacktestWasAbortedByUserInGui) {  					this.BacktestAbortedMre.Set();  					this.RequestingBacktestAbortMre.Reset();  				}  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorFourStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorFourStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 2:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke + "] isn't supported in 4-stroke QuotesGenerator");  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorFourStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorFourStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 2:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke + "] isn't supported in 4-stroke QuotesGenerator");  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorTenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorTenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: switch (stroke_0to9) {  				case 0:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				case 1:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 2:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.Open - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - oneThird;  						bidOrAsk = BidOrAsk.Bid;  					} else {  						double distance = barSimulated.High - barSimulated.Open;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + oneThird;  						bidOrAsk = BidOrAsk.Ask;  					}  					break;  				case 3:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  					break;  				case 4:  					if (barSimulated.IsWhiteCandle) {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double oneThird = barSimulated.HighLowDistance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 5:  					if (barSimulated.IsWhiteCandle) {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double twoThirds = barSimulated.HighLowDistance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 6:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  					bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  					break;  				case 7:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - twoThirds;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double twoThirds = distance * 2 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + twoThirds;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 8:  					if (barSimulated.IsWhiteCandle) {  						double distance = barSimulated.High - barSimulated.Close;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - oneThird;  						bidOrAsk = BidOrAsk.Ask;  					} else {  						double distance = barSimulated.Close - barSimulated.Low;  						double oneThird = distance * 1 / 3;  						priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + oneThird;  						bidOrAsk = BidOrAsk.Bid;  					}  					break;  				case 9:  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  					bidOrAsk = BidOrAsk.UNKNOWN;  					// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   					// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  					if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  					if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  					break;  				default:  					throw new Exception("Stroke[" + stroke_0to9 + "] isn't supported in " +  base.ToString());  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorSixteenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorSixteenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: List<double> legPatternExcludingBoundaries = new List<double>()  				//{ 0/5d' 2/5d' 1/5d' 4/5d' 3/5d' 5/5d };	// 0/5 and 5/5 are never used below  				{ 0' 0.4' 0.2' 0.8' 0.6' 1 };
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorSixteenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorSixteenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: List<double> legPatternExcludingBoundaries = new List<double>()  				//{ 0/5d' 2/5d' 1/5d' 4/5d' 3/5d' 5/5d };	// 0/5 and 5/5 are never used below  				{ 0' 0.4' 0.2' 0.8' 0.6' 1 };
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorSixteenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorSixteenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: List<double> legPatternExcludingBoundaries = new List<double>()  				//{ 0/5d' 2/5d' 1/5d' 4/5d' 3/5d' 5/5d };	// 0/5 and 5/5 are never used below  				{ 0' 0.4' 0.2' 0.8' 0.6' 1 };
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorSixteenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorSixteenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: List<double> legPatternExcludingBoundaries = new List<double>()  				//{ 0/5d' 2/5d' 1/5d' 4/5d' 3/5d' 5/5d };	// 0/5 and 5/5 are never used below  				{ 0' 0.4' 0.2' 0.8' 0.6' 1 };
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorSixteenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorSixteenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: int strokesForOneLeg	= this.BacktestStrokesPerBarAsInt / 3;
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorSixteenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorSixteenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: if (stroke_0to15 == 0) {							// stroke_0to15=0  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  				bidOrAsk = BidOrAsk.UNKNOWN;  				// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   				// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  				if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  				if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  			} else if (stroke_0to15 < strokesForOneLeg) {		// stroke_0to15=1'2'3'4  				// first leg openToLow  				double distancePart = openToLow[strokeWithinLeg];  				if (barSimulated.IsWhiteCandle) {  					double distance = barSimulated.Open - barSimulated.Low;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - nFifths;  					bidOrAsk = BidOrAsk.Bid;  				} else {  					double distance = barSimulated.High - barSimulated.Open;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + nFifths;  					bidOrAsk = BidOrAsk.Ask;  				}  			} else if (stroke_0to15 == strokesForOneLeg) { 		// stroke_0to15=5  				// Low  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  				bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  			} else if (stroke_0to15 < strokesForOneLeg * 2) {	// stroke_0to15=6'7'8'9  				// second leg lowToHigh  				double distancePart = lowToHigh[strokeWithinLeg];  				if (barSimulated.IsWhiteCandle) {  					double nFifths = barSimulated.HighLowDistance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + nFifths;  					bidOrAsk = BidOrAsk.Ask;  				} else {  					double nFifths = barSimulated.HighLowDistance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - nFifths;  					bidOrAsk = BidOrAsk.Bid;  				}  			} else if (stroke_0to15 == strokesForOneLeg * 2) {	// stroke_0to15=10  				// High  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  				bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  			} else if (stroke_0to15 < strokesForOneLeg * 3) {	// stroke_0to15=11'12'13'14  				// third leg highToClose  				double distancePart = highToClose[strokeWithinLeg];  				if (barSimulated.IsWhiteCandle) {  					double distance = barSimulated.High - barSimulated.Close;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - nFifths;  					bidOrAsk = BidOrAsk.Ask;  				} else {  					double distance = barSimulated.Close - barSimulated.Low;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + nFifths;  					bidOrAsk = BidOrAsk.Bid;  				}  			} else if (stroke_0to15 == strokesForOneLeg * 3) {		// stroke_0to15=15  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  				bidOrAsk = BidOrAsk.UNKNOWN;  				// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   				// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  				if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  				if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  			} else {  				string msg = "Stroke[" + stroke_0to15 + "] isn't supported in " + base.ToString();  				throw new Exception(msg);  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorSixteenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorSixteenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: if (stroke_0to15 == 0) {							// stroke_0to15=0  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  				bidOrAsk = BidOrAsk.UNKNOWN;  				// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   				// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  				if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  				if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  			} else if (stroke_0to15 < strokesForOneLeg) {		// stroke_0to15=1'2'3'4  				// first leg openToLow  				double distancePart = openToLow[strokeWithinLeg];  				if (barSimulated.IsWhiteCandle) {  					double distance = barSimulated.Open - barSimulated.Low;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - nFifths;  					bidOrAsk = BidOrAsk.Bid;  				} else {  					double distance = barSimulated.High - barSimulated.Open;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + nFifths;  					bidOrAsk = BidOrAsk.Ask;  				}  			} else if (stroke_0to15 == strokesForOneLeg) { 		// stroke_0to15=5  				// Low  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  				bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  			} else if (stroke_0to15 < strokesForOneLeg * 2) {	// stroke_0to15=6'7'8'9  				// second leg lowToHigh  				double distancePart = lowToHigh[strokeWithinLeg];  				if (barSimulated.IsWhiteCandle) {  					double nFifths = barSimulated.HighLowDistance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + nFifths;  					bidOrAsk = BidOrAsk.Ask;  				} else {  					double nFifths = barSimulated.HighLowDistance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - nFifths;  					bidOrAsk = BidOrAsk.Bid;  				}  			} else if (stroke_0to15 == strokesForOneLeg * 2) {	// stroke_0to15=10  				// High  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  				bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  			} else if (stroke_0to15 < strokesForOneLeg * 3) {	// stroke_0to15=11'12'13'14  				// third leg highToClose  				double distancePart = highToClose[strokeWithinLeg];  				if (barSimulated.IsWhiteCandle) {  					double distance = barSimulated.High - barSimulated.Close;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - nFifths;  					bidOrAsk = BidOrAsk.Ask;  				} else {  					double distance = barSimulated.Close - barSimulated.Low;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + nFifths;  					bidOrAsk = BidOrAsk.Bid;  				}  			} else if (stroke_0to15 == strokesForOneLeg * 3) {		// stroke_0to15=15  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  				bidOrAsk = BidOrAsk.UNKNOWN;  				// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   				// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  				if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  				if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  			} else {  				string msg = "Stroke[" + stroke_0to15 + "] isn't supported in " + base.ToString();  				throw new Exception(msg);  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorSixteenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorSixteenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: if (stroke_0to15 == 0) {							// stroke_0to15=0  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  				bidOrAsk = BidOrAsk.UNKNOWN;  				// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   				// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  				if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  				if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  			} else if (stroke_0to15 < strokesForOneLeg) {		// stroke_0to15=1'2'3'4  				// first leg openToLow  				double distancePart = openToLow[strokeWithinLeg];  				if (barSimulated.IsWhiteCandle) {  					double distance = barSimulated.Open - barSimulated.Low;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - nFifths;  					bidOrAsk = BidOrAsk.Bid;  				} else {  					double distance = barSimulated.High - barSimulated.Open;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + nFifths;  					bidOrAsk = BidOrAsk.Ask;  				}  			} else if (stroke_0to15 == strokesForOneLeg) { 		// stroke_0to15=5  				// Low  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  				bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  			} else if (stroke_0to15 < strokesForOneLeg * 2) {	// stroke_0to15=6'7'8'9  				// second leg lowToHigh  				double distancePart = lowToHigh[strokeWithinLeg];  				if (barSimulated.IsWhiteCandle) {  					double nFifths = barSimulated.HighLowDistance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + nFifths;  					bidOrAsk = BidOrAsk.Ask;  				} else {  					double nFifths = barSimulated.HighLowDistance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - nFifths;  					bidOrAsk = BidOrAsk.Bid;  				}  			} else if (stroke_0to15 == strokesForOneLeg * 2) {	// stroke_0to15=10  				// High  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  				bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  			} else if (stroke_0to15 < strokesForOneLeg * 3) {	// stroke_0to15=11'12'13'14  				// third leg highToClose  				double distancePart = highToClose[strokeWithinLeg];  				if (barSimulated.IsWhiteCandle) {  					double distance = barSimulated.High - barSimulated.Close;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - nFifths;  					bidOrAsk = BidOrAsk.Ask;  				} else {  					double distance = barSimulated.Close - barSimulated.Low;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + nFifths;  					bidOrAsk = BidOrAsk.Bid;  				}  			} else if (stroke_0to15 == strokesForOneLeg * 3) {		// stroke_0to15=15  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  				bidOrAsk = BidOrAsk.UNKNOWN;  				// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   				// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  				if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  				if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  			} else {  				string msg = "Stroke[" + stroke_0to15 + "] isn't supported in " + base.ToString();  				throw new Exception(msg);  			}
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGeneratorSixteenStroke,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGeneratorSixteenStroke.cs,Assign_priceAndBidOrAsk_dependingOnQuotesPerBar_forStroke,The following statement contains a magic number: if (stroke_0to15 == 0) {							// stroke_0to15=0  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open;  				bidOrAsk = BidOrAsk.UNKNOWN;  				// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   				// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  				if (barSimulated.Open <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  				if (barSimulated.Open >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  			} else if (stroke_0to15 < strokesForOneLeg) {		// stroke_0to15=1'2'3'4  				// first leg openToLow  				double distancePart = openToLow[strokeWithinLeg];  				if (barSimulated.IsWhiteCandle) {  					double distance = barSimulated.Open - barSimulated.Low;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open - nFifths;  					bidOrAsk = BidOrAsk.Bid;  				} else {  					double distance = barSimulated.High - barSimulated.Open;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Open + nFifths;  					bidOrAsk = BidOrAsk.Ask;  				}  			} else if (stroke_0to15 == strokesForOneLeg) { 		// stroke_0to15=5  				// Low  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.Low : barSimulated.High;  				bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Bid : BidOrAsk.Ask;  			} else if (stroke_0to15 < strokesForOneLeg * 2) {	// stroke_0to15=6'7'8'9  				// second leg lowToHigh  				double distancePart = lowToHigh[strokeWithinLeg];  				if (barSimulated.IsWhiteCandle) {  					double nFifths = barSimulated.HighLowDistance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + nFifths;  					bidOrAsk = BidOrAsk.Ask;  				} else {  					double nFifths = barSimulated.HighLowDistance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - nFifths;  					bidOrAsk = BidOrAsk.Bid;  				}  			} else if (stroke_0to15 == strokesForOneLeg * 2) {	// stroke_0to15=10  				// High  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.IsWhiteCandle ? barSimulated.High : barSimulated.Low;  				bidOrAsk = barSimulated.IsWhiteCandle ? BidOrAsk.Ask : BidOrAsk.Bid;  			} else if (stroke_0to15 < strokesForOneLeg * 3) {	// stroke_0to15=11'12'13'14  				// third leg highToClose  				double distancePart = highToClose[strokeWithinLeg];  				if (barSimulated.IsWhiteCandle) {  					double distance = barSimulated.High - barSimulated.Close;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.High - nFifths;  					bidOrAsk = BidOrAsk.Ask;  				} else {  					double distance = barSimulated.Close - barSimulated.Low;  					double nFifths = distance * distancePart;  					priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Low + nFifths;  					bidOrAsk = BidOrAsk.Bid;  				}  			} else if (stroke_0to15 == strokesForOneLeg * 3) {		// stroke_0to15=15  				priceFromBar_granularStrokes_willBeAligned_upstack = barSimulated.Close;  				bidOrAsk = BidOrAsk.UNKNOWN;  				// QUOTEGEN_PROBLEM#1 : here we don't know the derived.Spread' trying to avoid SymmetricFill   				// don't fail Bar.ContainsBidAskForQuoteGenerated() check CANT_BE_LESS_OR_GREATER_ONLY_EQUAL_BUT_DOUBLE_VALUES_HAVE_TINY_TAILS  				if (barSimulated.Close <= barSimulated.Low) bidOrAsk = BidOrAsk.Bid;  				if (barSimulated.Close >= barSimulated.High) bidOrAsk = BidOrAsk.Ask;  			} else {  				string msg = "Stroke[" + stroke_0to15 + "] isn't supported in " + base.ToString();  				throw new Exception(msg);  			}
Magic Number,Sq1.Core.Backtesting,QuoteGenerated,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\QuoteGenerated.cs,DeriveIdenticalButFresh,The following statement contains a magic number: identicalButFresh.ServerTime			= this.ServerTime.AddMilliseconds(911);
Magic Number,Sq1.Core.Backtesting,QuoteGenerated,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\QuoteGenerated.cs,DeriveIdenticalButFresh,The following statement contains a magic number: identicalButFresh.LocalTime				= this.LocalTime.AddMilliseconds(911);
Magic Number,Sq1.Core.Backtesting,QuoteGenerated,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\QuoteGenerated.cs,ToStringLong,The following statement contains a magic number: sb.Append(Math.Round(this.Bid' 3));
Magic Number,Sq1.Core.Backtesting,QuoteGenerated,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\QuoteGenerated.cs,ToStringLong,The following statement contains a magic number: sb.Append(Math.Round(this.Ask' 3));
Magic Number,Sq1.Core.Backtesting,QuoteGenerated,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\QuoteGenerated.cs,ToStringLong,The following statement contains a magic number: sb.Append(Math.Round(this.TradedPrice' 3));
Magic Number,Sq1.Core.Backtesting,BacktestBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestBroker.cs,BacktestBroker,The following statement contains a magic number: base.AccountAutoPropagate		= new Account("BACKTEST_ACCOUNT"' -1000);
Magic Number,Sq1.Core.Backtesting,BacktestSpreadModelerPercentage,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestSpreadModelerPercentage.cs,BacktestSpreadModelerPercentage,The following statement contains a magic number: PartOfPrice = percentage / 100;
Magic Number,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,generateClosestQuote_forEachPendingAlert_onOurWayTo,The following statement contains a magic number: foreach (Alert alert in alertsSafe) {  				// DONT_EXPECT_THEM_TO_BE_FILLED_YOU_SHOULD_FILL_ALL_RELEVANT_NOW  				//if (scanningDown) {  				//	// while GEN'ing down' all BUY/COVER STOPs pending were already triggered & executed  				//	bool executedAtAsk = alert.Direction == Direction.Buy || alert.Direction == Direction.Cover;  				//	if (executedAtAsk && alert.MarketLimitStop == MarketLimitStop.Stop) continue;  				//} else {  				//	// while GEN'ing up' all SHORT/SELL STOPs pending were already triggered & executed  				//	bool executedAtBid = alert.Direction == Direction.Short || alert.Direction == Direction.Sell;  				//	if (executedAtBid && alert.MarketLimitStop == MarketLimitStop.Stop) continue;  				//}  				string errModelingQuoteThatCouldFill;  				QuoteGenerated quoteThatWillFillAlert = this.modelQuote_thatCouldFillAlert(alert'  					new DateTime(quoteToReach.ServerTime.Ticks - 911)' bar2simulate' out errModelingQuoteThatCouldFill);  				if (quoteThatWillFillAlert == null) {  					Assembler.PopupException(errModelingQuoteThatCouldFill);  					continue;  				}    				// trying to keep QuoteGenerated within the original simulated Bar (lazy to attach StreamingBar to QuoteGenerated now)  				if (scanningDown) {  					if (quoteThatWillFillAlert.Bid > quotePrev.Bid) {  						string msg = "IGNORING_QUOTE_HIGHER_THAN_PREVIOUS_WHILE_SCANNING_DOWN";  						continue;  					}  					if (bar2simulate.HighLowDistance > 0 && bar2simulate.HighLowDistance > quoteToReach.Spread  							&& bar2simulate.ContainsBidAskForQuoteGenerated(quoteThatWillFillAlert' true) == false) {  						string msg = "IGNORING_QUOTE_BEYOND_BAR_DISTANCE_WHILE_SCANNING_DOWN";  						continue;  					}  					if (quoteThatWillFillAlert.Bid < quoteToReach.Bid) {  						string msg = "IGNORING_QUOTE_LOWER_THAN_TARGET_WHILE_SCANNING_DOWN";  						continue;  					}  				} else {  					if (quoteThatWillFillAlert.Ask < quotePrev.Ask) {  						string msg = "IGNORING_QUOTE_LOWER_THAN_PREVIOUS_WHILE_SCANNING_UP";  						continue;  					}  					if (bar2simulate.HighLowDistance > 0 && bar2simulate.HighLowDistance > quoteToReach.Spread  							&& bar2simulate.ContainsBidAskForQuoteGenerated(quoteThatWillFillAlert' true) == false) {  						string msg = "IGNORING_QUOTE_BEYOND_BAR_DISTANCE_WHILE_SCANNING_UP";  						continue;  					}  					if (quoteThatWillFillAlert.Ask > quoteToReach.Ask) {  						string msg = "IGNORING_QUOTE_HIGHER_THAN_TARGET_WHILE_SCANNING_UP";  						continue;  					}  				}    				if (quoteClosest == null) {  					quoteClosest = quoteThatWillFillAlert;  					continue;  				}  				if (scanningDown) {  					// while GEN'ing closest to the top' pick the highest possible  					// while scanning down' I'm looking for the QuoteGenerated with highest Ask that will trigger the closest pending  					if (quoteThatWillFillAlert.Bid < quoteClosest.Bid) continue;  					quoteClosest = quoteThatWillFillAlert;  				} else {  					// while GEN'ing closest to the bottom' pick the lowest possible  					if (quoteThatWillFillAlert.Ask > quoteClosest.Ask) continue;  					quoteClosest = quoteThatWillFillAlert;  				}  			}
Magic Number,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,BrokerAdapter,The following statement contains a magic number: this.AccountAutoPropagate		= new Account("ACCTNR_NOT_SET"' -1000);
Magic Number,Sq1.Core.Broker,BrokerAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\BrokerAdapter.EditorSupport.cs,ScanEvidentLanes_forGuid_nullUnsafe,The following statement contains a magic number: foreach (OrderLane orderLane in orderLanes) {  				orderLanesSearchedAsString += orderLane.GetType().Name.Substring(5) + separator;	// removing "Orders" from "OrdersSubmitting"  				OrderLane	suggestedLane = null;  				string		suggestion = "PASS_suggestLane=TRUE";  				orderFound = orderLane.ScanRecent_forGuid(GUID' out suggestedLane' out suggestion' false);  				if (orderFound != null) break;  			}
Magic Number,Sq1.Core.Broker,OrderLane,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderLane.cs,OrderLane,The following statement contains a magic number: this.InnerOrderList_recentFirst.Capacity = 2000;
Magic Number,Sq1.Core.Broker,OrderLaneByState,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderLaneByState.cs,OrderLaneByState,The following statement contains a magic number: base.InnerOrderList_recentFirst.Capacity = 2000;
Magic Number,Sq1.Core.Broker,OrderPostProcessorEmergencyLock,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergencyLock.cs,GetHashCode,The following statement contains a magic number: unchecked {  				int hash = 17;  				if (strategy != null) hash = hash * 23 + strategy.GetHashCode();  				if (script != null) hash = hash * 23 + script.GetHashCode();  				return hash;  			}
Magic Number,Sq1.Core.Broker,OrderPostProcessorEmergencyLock,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergencyLock.cs,GetHashCode,The following statement contains a magic number: unchecked {  				int hash = 17;  				if (strategy != null) hash = hash * 23 + strategy.GetHashCode();  				if (script != null) hash = hash * 23 + script.GetHashCode();  				return hash;  			}
Magic Number,Sq1.Core.Broker,OrderPostProcessorEmergencyLock,C:\repos\worldexplorer_SquareOne\Sq1.Core\Broker\OrderPostProcessorEmergencyLock.cs,GetHashCode,The following statement contains a magic number: unchecked {  				int hash = 17;  				if (strategy != null) hash = hash * 23 + strategy.GetHashCode();  				if (script != null) hash = hash * 23 + script.GetHashCode();  				return hash;  			}
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: BarWidthIncludingPadding = 8;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: BarWidthIncludingPaddingMax = 100;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: GutterRightPadding = 5;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: GutterBottomPadding = 2;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: ScrollNBarsPerOneDragMouseEvent = 3;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: SqueezeVerticalPaddingStep = 10;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: SqueezeHorizontalStep = 2;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: SqueezeHorizontalMouse1pxDistanceReceivedToOneStep = 5;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: TooltipsPaddingFromBarLeftRightEdgesToAvoidMouseLeave = 3;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: PositionArrowPaddingVertical = 2;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: TooltipBordersMarginToKeepBordersVisible = 2;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: PositionPlannedEllipseColorAlpha = 90;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: PositionPlannedEllipseDiameter = 6;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: PositionFilledDotColorAlpha = 200;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: PositionFilledDotDiameter = 4;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: PositionLineHighlightedWidth = 2;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: PositionLineHighlightedAlpha = 230;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: PositionLineNoExitYetColorAlpha = 100;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: PositionLineProfitableColorAlpha = 100;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: PositionLineLossyColorAlpha = 100;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: AlertPendingEllipseColorAlpha = 180;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: AlertPendingEllipsePenWidth = 2;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: AlertPendingEllipseRadius = 3;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: AlertPendingProtoTakeProfitEllipseColorAlpha = 100;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: AlertPendingProtoTakeProfitEllipsePenWidth = 2;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: AlertPendingProtoStopLossEllipseColorAlpha = 100;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: AlertPendingProtoStopLossEllipsePenWidth = 2;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: BarsBackgroundTransparencyAlpha = 24;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: ChartLabelsUpperLeftYstartTopmost = 20;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: ChartLabelsUpperLeftX = 7;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: ChartLabelsUpperLeftIndicatorSquarePadding = 4;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: ChartLabelsUpperLeftIndicatorSquareSize = 5;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: OnChartBarAnnotationsVerticalAwayFromPositionArrows = 3;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: SpreadBidLineColorAlpha = 64;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: SpreadAskLineColorAlpha = 64;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoAskColorBackground	= Color.FromArgb(255' 230' 230);
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoAskColorBackground	= Color.FromArgb(255' 230' 230);
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoAskColorBackground	= Color.FromArgb(255' 230' 230);
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoAskColorContour		= Color.FromArgb(this.LevelTwoAskColorBackground.R - 50' this.LevelTwoAskColorBackground.G - 50' this.LevelTwoAskColorBackground.B - 50);
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoAskColorContour		= Color.FromArgb(this.LevelTwoAskColorBackground.R - 50' this.LevelTwoAskColorBackground.G - 50' this.LevelTwoAskColorBackground.B - 50);
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoAskColorContour		= Color.FromArgb(this.LevelTwoAskColorBackground.R - 50' this.LevelTwoAskColorBackground.G - 50' this.LevelTwoAskColorBackground.B - 50);
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoBidColorBackground	= Color.FromArgb(230' 255' 230);
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoBidColorBackground	= Color.FromArgb(230' 255' 230);
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoBidColorBackground	= Color.FromArgb(230' 255' 230);
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoBidColorContour		= Color.FromArgb(this.LevelTwoBidColorBackground.R - 50' this.LevelTwoBidColorBackground.G - 50' this.LevelTwoBidColorBackground.B - 50);
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoBidColorContour		= Color.FromArgb(this.LevelTwoBidColorBackground.R - 50' this.LevelTwoBidColorBackground.G - 50' this.LevelTwoBidColorBackground.B - 50);
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoBidColorContour		= Color.FromArgb(this.LevelTwoBidColorBackground.R - 50' this.LevelTwoBidColorBackground.G - 50' this.LevelTwoBidColorBackground.B - 50);
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoMinimumPriceLevelThicknessRendered = 14;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ChartSettings,The following statement contains a magic number: LevelTwoLotPaddingHorizontal = 3;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ColorReverse,The following statement contains a magic number: int red = 255 - color.R;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ColorReverse,The following statement contains a magic number: int green = 255 - color.G;
Magic Number,Sq1.Core.Charting,ChartSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ChartSettings.cs,ColorReverse,The following statement contains a magic number: int blue = 255 - color.B;
Magic Number,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSourceFolderRename,The following statement contains a magic number: if (Directory.Exists(abspathNewFolderName)) {  				string abspathNewRandomFolderName = Path.Combine(this.DataSourcesAbspath' newName + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  				int newNameGenTrialsDone = 0;  				int newNameGenTrialsLimit = 1000;  				while (Directory.Exists(abspathNewRandomFolderName)) {  					abspathNewRandomFolderName = Path.Combine(this.DataSourcesAbspath' newName + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  					newNameGenTrialsDone++;  					if (newNameGenTrialsDone >= newNameGenTrialsLimit) {  						string fatal = "CHECK_YOUR_FOLDER_IT_HAS_WAY_TOO_MANY_-OutOfMyWay-_FOLDERS LAST_EXISTING[" + abspathNewRandomFolderName + "]"  							+ " newNameGenTrialsDone[" + newNameGenTrialsDone + "] >= newNameGenTrialsLimit[" +  newNameGenTrialsLimit + "]";  						//throw new Exception(fatal + msig);  						Assembler.PopupException(fatal + msig);  						return ret;  					}  				}  				string msg = "DATASOURCE_NEW_FOLDER_ALREADY_EXISTS abspathNewFolderName[" + abspathNewFolderName + "]=>renamingToRandom[" + abspathNewRandomFolderName + "] TO_GET_CLEAR_WAY";  				try {  					Directory.Move(abspathNewFolderName' abspathNewRandomFolderName);  					Assembler.PopupException(msg + msig);  				} catch (Exception ex) {  					msg = "RENAME_FAILED__GRANT_YOURSELF_FULL_CONTROL_TO_FOLDER this.DataSourcesAbspath[" + this.DataSourcesAbspath + "] " + msg;  					Assembler.PopupException(msg + msig' ex);  					return ret;  				}  			}
Magic Number,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSourceFolderRename,The following statement contains a magic number: if (Directory.Exists(abspathNewFolderName)) {  				string abspathNewRandomFolderName = Path.Combine(this.DataSourcesAbspath' newName + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  				int newNameGenTrialsDone = 0;  				int newNameGenTrialsLimit = 1000;  				while (Directory.Exists(abspathNewRandomFolderName)) {  					abspathNewRandomFolderName = Path.Combine(this.DataSourcesAbspath' newName + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  					newNameGenTrialsDone++;  					if (newNameGenTrialsDone >= newNameGenTrialsLimit) {  						string fatal = "CHECK_YOUR_FOLDER_IT_HAS_WAY_TOO_MANY_-OutOfMyWay-_FOLDERS LAST_EXISTING[" + abspathNewRandomFolderName + "]"  							+ " newNameGenTrialsDone[" + newNameGenTrialsDone + "] >= newNameGenTrialsLimit[" +  newNameGenTrialsLimit + "]";  						//throw new Exception(fatal + msig);  						Assembler.PopupException(fatal + msig);  						return ret;  					}  				}  				string msg = "DATASOURCE_NEW_FOLDER_ALREADY_EXISTS abspathNewFolderName[" + abspathNewFolderName + "]=>renamingToRandom[" + abspathNewRandomFolderName + "] TO_GET_CLEAR_WAY";  				try {  					Directory.Move(abspathNewFolderName' abspathNewRandomFolderName);  					Assembler.PopupException(msg + msig);  				} catch (Exception ex) {  					msg = "RENAME_FAILED__GRANT_YOURSELF_FULL_CONTROL_TO_FOLDER this.DataSourcesAbspath[" + this.DataSourcesAbspath + "] " + msg;  					Assembler.PopupException(msg + msig' ex);  					return ret;  				}  			}
Magic Number,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSourceFolderRename,The following statement contains a magic number: if (Directory.Exists(abspathNewFolderName)) {  				string abspathNewRandomFolderName = Path.Combine(this.DataSourcesAbspath' newName + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  				int newNameGenTrialsDone = 0;  				int newNameGenTrialsLimit = 1000;  				while (Directory.Exists(abspathNewRandomFolderName)) {  					abspathNewRandomFolderName = Path.Combine(this.DataSourcesAbspath' newName + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  					newNameGenTrialsDone++;  					if (newNameGenTrialsDone >= newNameGenTrialsLimit) {  						string fatal = "CHECK_YOUR_FOLDER_IT_HAS_WAY_TOO_MANY_-OutOfMyWay-_FOLDERS LAST_EXISTING[" + abspathNewRandomFolderName + "]"  							+ " newNameGenTrialsDone[" + newNameGenTrialsDone + "] >= newNameGenTrialsLimit[" +  newNameGenTrialsLimit + "]";  						//throw new Exception(fatal + msig);  						Assembler.PopupException(fatal + msig);  						return ret;  					}  				}  				string msg = "DATASOURCE_NEW_FOLDER_ALREADY_EXISTS abspathNewFolderName[" + abspathNewFolderName + "]=>renamingToRandom[" + abspathNewRandomFolderName + "] TO_GET_CLEAR_WAY";  				try {  					Directory.Move(abspathNewFolderName' abspathNewRandomFolderName);  					Assembler.PopupException(msg + msig);  				} catch (Exception ex) {  					msg = "RENAME_FAILED__GRANT_YOURSELF_FULL_CONTROL_TO_FOLDER this.DataSourcesAbspath[" + this.DataSourcesAbspath + "] " + msg;  					Assembler.PopupException(msg + msig' ex);  					return ret;  				}  			}
Magic Number,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSourceFolderRename,The following statement contains a magic number: if (Directory.Exists(abspathNewFolderName)) {  				string abspathNewRandomFolderName = Path.Combine(this.DataSourcesAbspath' newName + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  				int newNameGenTrialsDone = 0;  				int newNameGenTrialsLimit = 1000;  				while (Directory.Exists(abspathNewRandomFolderName)) {  					abspathNewRandomFolderName = Path.Combine(this.DataSourcesAbspath' newName + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  					newNameGenTrialsDone++;  					if (newNameGenTrialsDone >= newNameGenTrialsLimit) {  						string fatal = "CHECK_YOUR_FOLDER_IT_HAS_WAY_TOO_MANY_-OutOfMyWay-_FOLDERS LAST_EXISTING[" + abspathNewRandomFolderName + "]"  							+ " newNameGenTrialsDone[" + newNameGenTrialsDone + "] >= newNameGenTrialsLimit[" +  newNameGenTrialsLimit + "]";  						//throw new Exception(fatal + msig);  						Assembler.PopupException(fatal + msig);  						return ret;  					}  				}  				string msg = "DATASOURCE_NEW_FOLDER_ALREADY_EXISTS abspathNewFolderName[" + abspathNewFolderName + "]=>renamingToRandom[" + abspathNewRandomFolderName + "] TO_GET_CLEAR_WAY";  				try {  					Directory.Move(abspathNewFolderName' abspathNewRandomFolderName);  					Assembler.PopupException(msg + msig);  				} catch (Exception ex) {  					msg = "RENAME_FAILED__GRANT_YOURSELF_FULL_CONTROL_TO_FOLDER this.DataSourcesAbspath[" + this.DataSourcesAbspath + "] " + msg;  					Assembler.PopupException(msg + msig' ex);  					return ret;  				}  			}
Magic Number,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSourceFolderRename,The following statement contains a magic number: if (Directory.Exists(abspathNewFolderName)) {  				string abspathNewRandomFolderName = Path.Combine(this.DataSourcesAbspath' newName + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  				int newNameGenTrialsDone = 0;  				int newNameGenTrialsLimit = 1000;  				while (Directory.Exists(abspathNewRandomFolderName)) {  					abspathNewRandomFolderName = Path.Combine(this.DataSourcesAbspath' newName + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  					newNameGenTrialsDone++;  					if (newNameGenTrialsDone >= newNameGenTrialsLimit) {  						string fatal = "CHECK_YOUR_FOLDER_IT_HAS_WAY_TOO_MANY_-OutOfMyWay-_FOLDERS LAST_EXISTING[" + abspathNewRandomFolderName + "]"  							+ " newNameGenTrialsDone[" + newNameGenTrialsDone + "] >= newNameGenTrialsLimit[" +  newNameGenTrialsLimit + "]";  						//throw new Exception(fatal + msig);  						Assembler.PopupException(fatal + msig);  						return ret;  					}  				}  				string msg = "DATASOURCE_NEW_FOLDER_ALREADY_EXISTS abspathNewFolderName[" + abspathNewFolderName + "]=>renamingToRandom[" + abspathNewRandomFolderName + "] TO_GET_CLEAR_WAY";  				try {  					Directory.Move(abspathNewFolderName' abspathNewRandomFolderName);  					Assembler.PopupException(msg + msig);  				} catch (Exception ex) {  					msg = "RENAME_FAILED__GRANT_YOURSELF_FULL_CONTROL_TO_FOLDER this.DataSourcesAbspath[" + this.DataSourcesAbspath + "] " + msg;  					Assembler.PopupException(msg + msig' ex);  					return ret;  				}  			}
Magic Number,Sq1.Core.DataFeed,DataSource,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataFeed\DataSource.PauseUnpause.cs,DataSource,The following statement contains a magic number: if (scaleInterval == null) {  				scaleInterval = new BarScaleInterval(BarScale.Minute' 5);  			}
Magic Number,Sq1.Core.DataTypes,SymbolInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\SymbolInfo.EventGenerator.cs,SymbolInfo,The following statement contains a magic number: this.PriceDecimals					= 2;
Magic Number,Sq1.Core.DataTypes,SymbolInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\SymbolInfo.EventGenerator.cs,SymbolInfo,The following statement contains a magic number: this.SequencedOpeningAfterClosedDelayMillis = 1000;
Magic Number,Sq1.Core.DataTypes,SymbolInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\SymbolInfo.EventGenerator.cs,SymbolInfo,The following statement contains a magic number: this.EmergencyCloseInterAttemptDelayMillis		= 8000;
Magic Number,Sq1.Core.DataTypes,SymbolInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\SymbolInfo.EventGenerator.cs,SymbolInfo,The following statement contains a magic number: this.EmergencyCloseAttemptsMax		= 5;
Magic Number,Sq1.Core.DataTypes,SymbolInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\SymbolInfo.EventGenerator.cs,SymbolInfo,The following statement contains a magic number: this.Level2PriceLevels				= 10;
Magic Number,Sq1.Core.DataTypes,SymbolInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\SymbolInfo.EventGenerator.cs,AlignToPriceLevel,The following statement contains a magic number: if (integefier == -1) {  				integefier = Convert.ToDecimal(Math.Pow(10' this.PriceDecimals));	// 10 ^ 2 = 100;  				//integefier = this.PriceStepFromDecimal;  			}
Magic Number,Sq1.Core.DataTypes,SymbolInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\SymbolInfo.EventGenerator.cs,AlignToVolumeStep,The following statement contains a magic number: int integefier = (int)Math.Pow(10' this.VolumeDecimals);
Magic Number,Sq1.Core.DataTypes,SymbolInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\SymbolInfo.EventGenerator.cs,PriceRound_fractionsBeyondDecimals,The following statement contains a magic number: double decimalPointShifterBeforeRounding = Math.Pow(10' this.PriceDecimals);
Magic Number,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,addIntervalsToDate,The following statement contains a magic number: switch (this.ScaleInterval.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					dateTime = dateTime.AddSeconds((double)addTimeIntervals);  					break;  				case BarScale.Minute:  					dateTime = dateTime.AddMinutes((double)addTimeIntervals);  					break;  				case BarScale.Hour:  					dateTime = dateTime.AddHours((double)addTimeIntervals);  					break;  				case BarScale.Daily:  					dateTime = dateTime.Date.AddDays((double)addTimeIntervals);  					break;  				case BarScale.Weekly:  					dateTime = dateTime.Date.AddDays(addTimeIntervals * 7);  					break;  				case BarScale.Monthly:  					dateTime = dateTime.Date.AddMonths(addTimeIntervals);  					break;  				case BarScale.Quarterly:  					dateTime = dateTime.Date.AddMonths(addTimeIntervals * 3);  					break;  				case BarScale.Yearly:  					dateTime = dateTime.Date.AddYears(addTimeIntervals);  					break;  				default:  					throw new Exception("this.ScaleInterval.Scale[" + this.ScaleInterval.Scale  						+ "] is not supported");  			}
Magic Number,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,addIntervalsToDate,The following statement contains a magic number: switch (this.ScaleInterval.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					dateTime = dateTime.AddSeconds((double)addTimeIntervals);  					break;  				case BarScale.Minute:  					dateTime = dateTime.AddMinutes((double)addTimeIntervals);  					break;  				case BarScale.Hour:  					dateTime = dateTime.AddHours((double)addTimeIntervals);  					break;  				case BarScale.Daily:  					dateTime = dateTime.Date.AddDays((double)addTimeIntervals);  					break;  				case BarScale.Weekly:  					dateTime = dateTime.Date.AddDays(addTimeIntervals * 7);  					break;  				case BarScale.Monthly:  					dateTime = dateTime.Date.AddMonths(addTimeIntervals);  					break;  				case BarScale.Quarterly:  					dateTime = dateTime.Date.AddMonths(addTimeIntervals * 3);  					break;  				case BarScale.Yearly:  					dateTime = dateTime.Date.AddYears(addTimeIntervals);  					break;  				default:  					throw new Exception("this.ScaleInterval.Scale[" + this.ScaleInterval.Scale  						+ "] is not supported");  			}
Magic Number,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,roundDateDownToMyInterval,The following statement contains a magic number: switch (this.ScaleInterval.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					int secondsRoundedDown = ((int)Math.Floor((double)dateTime.Second / this.ScaleInterval.Interval)) * this.ScaleInterval.Interval;  					dateTime = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' secondsRoundedDown);  					break;  				case BarScale.Minute:  					int minutesRoundedDown = ((int)Math.Floor((double)dateTime.Minute / this.ScaleInterval.Interval)) * this.ScaleInterval.Interval;  					dateTime = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' minutesRoundedDown' 0);  					break;  				case BarScale.Hour:  					int hoursRoundedDown = ((int)Math.Floor((double)dateTime.Hour / this.ScaleInterval.Interval)) * this.ScaleInterval.Interval;  					dateTime = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' hoursRoundedDown' 0' 0);  					break;  				case BarScale.Daily:  					dateTime = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' 0' 0' 0);  					break;  				case BarScale.Weekly:  					while (dateTime.DayOfWeek != DayOfWeek.Monday) dateTime.AddDays(-1);  					dateTime = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' 0' 0' 0);  					break;  				case BarScale.Monthly:  					dateTime = new DateTime(dateTime.Year' dateTime.Month' 1' 0' 0' 0);  					break;  				case BarScale.Quarterly:  					int monthBeginningOfQuarter = ((int)Math.Floor((double)dateTime.Month / 3)) * 3;  					dateTime = new DateTime(dateTime.Year' monthBeginningOfQuarter' 1' 0' 0' 0);  					break;  				case BarScale.Yearly:  					dateTime = new DateTime(dateTime.Year' 1' 1' 0' 0' 0);  					break;  				default:  					throw new Exception("this.ScaleInterval.Scale[" + this.ScaleInterval.Scale + "] is not supported");  			}
Magic Number,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,roundDateDownToMyInterval,The following statement contains a magic number: switch (this.ScaleInterval.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					int secondsRoundedDown = ((int)Math.Floor((double)dateTime.Second / this.ScaleInterval.Interval)) * this.ScaleInterval.Interval;  					dateTime = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' dateTime.Minute' secondsRoundedDown);  					break;  				case BarScale.Minute:  					int minutesRoundedDown = ((int)Math.Floor((double)dateTime.Minute / this.ScaleInterval.Interval)) * this.ScaleInterval.Interval;  					dateTime = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' dateTime.Hour' minutesRoundedDown' 0);  					break;  				case BarScale.Hour:  					int hoursRoundedDown = ((int)Math.Floor((double)dateTime.Hour / this.ScaleInterval.Interval)) * this.ScaleInterval.Interval;  					dateTime = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' hoursRoundedDown' 0' 0);  					break;  				case BarScale.Daily:  					dateTime = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' 0' 0' 0);  					break;  				case BarScale.Weekly:  					while (dateTime.DayOfWeek != DayOfWeek.Monday) dateTime.AddDays(-1);  					dateTime = new DateTime(dateTime.Year' dateTime.Month' dateTime.Day' 0' 0' 0);  					break;  				case BarScale.Monthly:  					dateTime = new DateTime(dateTime.Year' dateTime.Month' 1' 0' 0' 0);  					break;  				case BarScale.Quarterly:  					int monthBeginningOfQuarter = ((int)Math.Floor((double)dateTime.Month / 3)) * 3;  					dateTime = new DateTime(dateTime.Year' monthBeginningOfQuarter' 1' 0' 0' 0);  					break;  				case BarScale.Yearly:  					dateTime = new DateTime(dateTime.Year' 1' 1' 0' 0' 0);  					break;  				default:  					throw new Exception("this.ScaleInterval.Scale[" + this.ScaleInterval.Scale + "] is not supported");  			}
Magic Number,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,ToString,The following statement contains a magic number: int priceDecimals = 3;
Magic Number,Sq1.Core.DataTypes,Bar,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bar.DynamicProperties.cs,ToString,The following statement contains a magic number: int volumeDecimals = 3;
Magic Number,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,GenerateAppend,The following statement contains a magic number: int lowest = 1000;
Magic Number,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,GenerateAppend,The following statement contains a magic number: int highest = 9999;
Magic Number,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,GenerateAppend,The following statement contains a magic number: int volumeMax = 1000;
Magic Number,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,GenerateAppend,The following statement contains a magic number: DateTime dateCurrent = new DateTime(2011' 7' 2' 13' 26' 0);
Magic Number,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,GenerateAppend,The following statement contains a magic number: DateTime dateCurrent = new DateTime(2011' 7' 2' 13' 26' 0);
Magic Number,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,GenerateAppend,The following statement contains a magic number: DateTime dateCurrent = new DateTime(2011' 7' 2' 13' 26' 0);
Magic Number,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,GenerateAppend,The following statement contains a magic number: DateTime dateCurrent = new DateTime(2011' 7' 2' 13' 26' 0);
Magic Number,Sq1.Core.DataTypes,Bars,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Bars.DynamicProperties.cs,GenerateAppend,The following statement contains a magic number: DateTime dateCurrent = new DateTime(2011' 7' 2' 13' 26' 0);
Magic Number,Sq1.Core.DataTypes,DataSeriesBasic,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\DataSeriesBasic.cs,IsTrendingUpAtBarIndex,The following statement contains a magic number: if (this.Count < 2) return false;
Magic Number,Sq1.Core.DataTypes,DataSeriesBasic,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\DataSeriesBasic.cs,IsTrendingDownAtBarIndex,The following statement contains a magic number: if (this.Count < 2) return false;
Magic Number,Sq1.Core.DataTypes,DataSeriesBasic,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\DataSeriesBasic.cs,TurnsDownAtBarIndex,The following statement contains a magic number: if (this.Count < 2) return false;
Magic Number,Sq1.Core.DataTypes,DataSeriesBasic,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\DataSeriesBasic.cs,TurnsUpAtBarIndex,The following statement contains a magic number: if (this.Count < 2) return false;
Magic Number,Sq1.Core.DataTypes,BarDataRange,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarDataRange.cs,FillStartEndDate,The following statement contains a magic number: switch (this.Range) {  				case BarRange.RecentYears:  					startDate = DateTime.Now.Date.AddYears(-this.RecentTimeunits).AddDays(1.0);  					endDate = DateTime.MaxValue;  					break;  				case BarRange.RecentMonths:  					startDate = DateTime.Now.Date.AddMonths(-this.RecentTimeunits).AddDays(1.0);  					endDate = DateTime.MaxValue;  					break;  				case BarRange.RecentWeeks:  					startDate = DateTime.Now.Date.AddDays((double)(-(double)this.RecentTimeunits * 7)).AddDays(1.0);  					endDate = DateTime.MaxValue;  					break;  				case BarRange.RecentDays:  					startDate = DateTime.Now.Date.AddDays((double)(-(double)this.RecentTimeunits + 1));  					endDate = DateTime.MaxValue;  					break;  				case BarRange.DateRange:  					startDate = this.DateFrom;  					endDate = this.DateTill;  					break;  				case BarRange.RecentBars:  					startDate = DateTime.MinValue;  					endDate = DateTime.MaxValue;  					break;  				case BarRange.AllData:  					startDate = DateTime.MinValue;  					endDate = DateTime.MaxValue;  					break;  				default:  					throw new InvalidCastException();  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,GetHashCode,The following statement contains a magic number: unchecked {  				hashCode += 1000000007 * this.Scale.GetHashCode();  				hashCode += 1000000009 * this.Interval.GetHashCode();  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,GetHashCode,The following statement contains a magic number: unchecked {  				hashCode += 1000000007 * this.Scale.GetHashCode();  				hashCode += 1000000009 * this.Interval.GetHashCode();  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Days >= 365) {  				ret.Scale = BarScale.Yearly;  				ret.Interval = 1 + ((int) ts.Days / 365);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Days >= 365) {  				ret.Scale = BarScale.Yearly;  				ret.Interval = 1 + ((int) ts.Days / 365);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Days >= 28) {  				ret.Scale = BarScale.Monthly;  				ret.Interval = 1 + ((int) ts.Days / 28);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Days >= 28) {  				ret.Scale = BarScale.Monthly;  				ret.Interval = 1 + ((int) ts.Days / 28);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Days >= 7) {  				ret.Interval = 1 + ((int) ts.Days / 7);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Days >= 7) {  				ret.Interval = 1 + ((int) ts.Days / 7);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 30) {  				ret.Interval = 30 * ((int) ts.Minutes / 30);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 30) {  				ret.Interval = 30 * ((int) ts.Minutes / 30);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 30) {  				ret.Interval = 30 * ((int) ts.Minutes / 30);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 20) {  				ret.Interval = 20 * ((int) ts.Minutes / 20);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 20) {  				ret.Interval = 20 * ((int) ts.Minutes / 20);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 20) {  				ret.Interval = 20 * ((int) ts.Minutes / 20);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 15) {  				ret.Interval = 15 * ((int) ts.Minutes / 15);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 15) {  				ret.Interval = 15 * ((int) ts.Minutes / 15);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 15) {  				ret.Interval = 15 * ((int) ts.Minutes / 15);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 10) {  				ret.Interval = 10 * ((int) ts.Minutes / 10);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 10) {  				ret.Interval = 10 * ((int) ts.Minutes / 10);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 10) {  				ret.Interval = 10 * ((int) ts.Minutes / 10);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 5) {  				ret.Interval = 5 * ((int) ts.Minutes / 5);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 5) {  				ret.Interval = 5 * ((int) ts.Minutes / 5);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,BarScaleInterval,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\BarScaleInterval.cs,FromTimeSpan,The following statement contains a magic number: if (ts.Minutes >= 5) {  				ret.Interval = 5 * ((int) ts.Minutes / 5);  				return ret;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,DaysOfWeekAsString,The following statement contains a magic number: foreach (DayOfWeek dow in dows) {  				ret += dow.ToString().Substring(0' 3) + "'";  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following statement contains a magic number: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Magic Number,Sq1.Core.DataTypes,Quote,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Quote.cs,PriceBetweenBidAsk,The following statement contains a magic number: if (ret == false) {  				//Debugger.Break();									// WTF 1760.2-1706.2=-2.27E-13  				double diffUpRounded = Math.Round(diffUp' 5);		// WTF 1760.2-1706.2=-2.27E-13  				double diffDnRounded = Math.Round(diffDn' 5);  				ret = diffUpRounded >= 0 && diffDnRounded >= 0;  	  				// moved to post-fill check upstack:  				// if (filled == 1 && this.fillOutsideQuoteSpreadParanoidCheckThrow == true) {alert.IsFilledOutsideQuote_DEBUG_CHECK;alert.IsFilledOutsideBarSnapshotFrozen_DEBUG_CHECK;}  				//if (ret == false) {  				//	#if DEBUG  				//	Debugger.Break();	// ENABLE_BREAK_UPSTACK_IF_YOU_COMMENT_IT_OUT_HERE  				//	#endif  				//}  			}
Magic Number,Sq1.Core.DataTypes,Quote,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\Quote.cs,PriceBetweenBidAsk,The following statement contains a magic number: if (ret == false) {  				//Debugger.Break();									// WTF 1760.2-1706.2=-2.27E-13  				double diffUpRounded = Math.Round(diffUp' 5);		// WTF 1760.2-1706.2=-2.27E-13  				double diffDnRounded = Math.Round(diffDn' 5);  				ret = diffUpRounded >= 0 && diffDnRounded >= 0;  	  				// moved to post-fill check upstack:  				// if (filled == 1 && this.fillOutsideQuoteSpreadParanoidCheckThrow == true) {alert.IsFilledOutsideQuote_DEBUG_CHECK;alert.IsFilledOutsideBarSnapshotFrozen_DEBUG_CHECK;}  				//if (ret == false) {  				//	#if DEBUG  				//	Debugger.Break();	// ENABLE_BREAK_UPSTACK_IF_YOU_COMMENT_IT_OUT_HERE  				//	#endif  				//}  			}
Magic Number,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,LivesimBroker,The following statement contains a magic number: base.AccountAutoPropagate					= new Account("LIVESIM_ACCOUNT"' -1000);
Magic Number,Sq1.Core.Livesim,LivesimBroker,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBroker.BrokerAdapterProtocol.cs,ConsumeQuoteBoundUnattached_toFillPending,The following statement contains a magic number: lock (this.threadEntryLockToHaveQuoteSentToThread) {  			string msig = " //LivesimBroker.ConsumeQuoteUnattached_toFillPending(WAIT)";    			//if (quoteUnattached_volatilePointer.ParentBarStreaming != null) {  			//    string msg = "QUOTE_ALREADY_BOUND_TO_STREAMING_BAR__UPSTACK_DIDNT_REALIZE_THIS";  			//    Assembler.PopupException(msg + msig' null' false);  			//}  			if (quoteBoundUnattached_volatilePointer.ParentBarStreaming.HasParentBars == false) {  				string msg = "QUOTE_BOUND_TO_A_STREAMING_BAR_THAT_MUST_BE_ATTACHED_TO_BARS_LIVEMMING__UPSTACK_DIDNT_REALIZE_THIS";  				Assembler.PopupException(msg + msig' null' false);  			}    			if (willBeFilled.Count == 0) return;    			int delayBeforeFill = this.LivesimBrokerSpoiler.DelayBeforeFill_calculate();  			if (delayBeforeFill == 0) {  				this.consumeQuoteUnattached_attach_fillPendingAsync(quoteBoundUnattached_volatilePointer' willBeFilled);  				return;  			}    			AlertList willBeFilled_minusAlreadyScheduled_volatilePointer = willBeFilled.Substract_returnClone(this.DataSnapshot.AlertsPending_scheduledForDelayedFill' this' "willBeFilled_minusAlreadyScheduled");    			AlertList priorDelayedFill = this.ScriptExecutor.ExecutionDataSnapshot.AlertsPending;  			if (priorDelayedFill.Count == 0) return;    			ManualResetEvent quotePointerCaptured = new ManualResetEvent(false);  			Task t = new Task(delegate() {  				string threadName = "DELAYED_FILL delayBeforeFill[" + delayBeforeFill + "]ms " + quoteBoundUnattached_volatilePointer;  				Assembler.SetThreadName(threadName' "CANT_SET_THREAD_NAME" + msig);    				AlertList willBeFilled_minusAlreadyScheduled_localScoped = willBeFilled_minusAlreadyScheduled_volatilePointer;  				//QuoteGenerated quoteUnattachedLocalScoped = quoteUnattachedVolatilePointer;  				Quote quoteBoundUnattached_localScoped = quoteBoundUnattached_volatilePointer;  				quotePointerCaptured.Set();    				//this.ScriptExecutor.Livesimulator.LivesimStreamingIsSleepingNow_ReportersAndExecutionHaveTimeToRebuild = true;  				this.LivesimBrokerSpoiler.DelayBeforeFill_threadSleep();  				AlertList afterDelay = this.ScriptExecutor.ExecutionDataSnapshot.AlertsPending;  				if (afterDelay.Count == 0) return;  				if (priorDelayedFill.Count != afterDelay.Count) {  				    string msg = "COUNT_MIGHT_HAVE_DECREASED_FOR_MULTIPLE_OPEN_POSITIONS/STRATEGY_IN_ANOTHER_FILLING_THREAD WHO_FILLED_WHILE_I_WAS_SLEEPING???";  				    //Assembler.PopupException(msg);  				    return;  				}  				this.consumeQuoteUnattached_attach_fillPendingAsync(quoteBoundUnattached_localScoped' willBeFilled_minusAlreadyScheduled_localScoped);  				this.ScriptExecutor.Livesimulator.LivesimStreamingIsSleepingNow_ReportersAndExecutionHaveTimeToRebuild = false;  			});  			t.ContinueWith(delegate {  				string msg = "FILL_TASK_THREW";  				Assembler.PopupException(msg' t.Exception);  			}' TaskContinuationOptions.OnlyOnFaulted);  			t.Start();		// WHO_DOES t.Dispose() ?    			// I Sleep(10) since I wanna get quoteShadow pointer copied/stored inside the Task.Start()ed scope  			// before the parent thread (this one here) will drop/change quoteUnattached pointer upstack  			// so that after keeping the pointer I could launch another new Task  			// that's also why I used lock(this.threadEntryLockToHaveBarQuoteSentToThread)  			//Thread.Sleep(10);  			bool iCanContinue = quotePointerCaptured.WaitOne(1000);  			if (iCanContinue == false) {  				string msg = "HAPPENS_WHEN_ANOTHER_THREAD_HITS_BREAKPOINT_IN_VS DELAYED_FILL_THREAD_DIDNT_SIGNAL_THAT_QUOTE_POINTER_WAS_COPIED_DURING_1SECOND";  				Assembler.PopupException(msg' null' false);  			}    			//List<Alert> safe = willBeFilled.SafeCopy(this' "//ConsumeQuoteUnattached_toFillPending()");  			List<Alert> safe = willBeFilled_minusAlreadyScheduled_volatilePointer.SafeCopy(this' msig);  			this.DataSnapshot.AlertsPending_scheduledForDelayedFill.AddRange(safe' this' msig);  		}
Magic Number,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,LevelTwoGenerator,The following statement contains a magic number: levelsToGenerate = 5;
Magic Number,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,GenerateForQuote,The following statement contains a magic number: try {  				this.LevelTwo_fromStreaming.WaitAndLockFor(this' lockReason);  				this.LevelTwo_fromStreaming.Clear_LevelTwo(this' lockReason);    				double sizeAsk = quote.Size;  				double sizeBid = quote.Size;    				double prevAsk = quote.Ask;  				double prevBid = quote.Bid;    				int randomHoleBid = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate));  				int randomHoleAsk = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate));    				//for (int i = 0; i < this.levelsToGenerate; i++) {  				for (int i = 0; i < levelsToGenerate_fromLivesimSettings; i++) {  					if (i >= skipPriceLevels_fromSpread) {  						if (i != randomHoleAsk) this.LevelTwo_fromStreaming.AddAsk(prevAsk' sizeAsk' this' "ask" + i + "above(" + quote + ")");  						if (i != randomHoleBid) this.LevelTwo_fromStreaming.AddBid(prevBid' sizeBid' this' "bid" + i + "below(" + quote + ")");  					}    					prevAsk += this.stepPrice;  					prevBid -= this.stepPrice;    					double	randomSizeIncrement = quote.Size * (new Random(6169916).Next(50' 99) / 100d);  					randomSizeIncrement = symbolInfo.AlignToVolumeStep(randomSizeIncrement);  					sizeAsk += randomSizeIncrement;    					randomSizeIncrement = quote.Size * (new Random(28).Next(5' 50) / 100d);  					randomSizeIncrement = symbolInfo.AlignToVolumeStep(randomSizeIncrement);  					sizeBid += randomSizeIncrement;  				}  			} catch (Exception ex) {  				string msg = "MUST_NEVER_HAPPEN_BUT_IM_HERE_TO_UNLOCK_IN_FINALLY";  				Assembler.PopupException(msg' ex);  			} finally {  				this.LevelTwo_fromStreaming.UnLockFor(this' lockReason);  			}
Magic Number,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,GenerateForQuote,The following statement contains a magic number: try {  				this.LevelTwo_fromStreaming.WaitAndLockFor(this' lockReason);  				this.LevelTwo_fromStreaming.Clear_LevelTwo(this' lockReason);    				double sizeAsk = quote.Size;  				double sizeBid = quote.Size;    				double prevAsk = quote.Ask;  				double prevBid = quote.Bid;    				int randomHoleBid = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate));  				int randomHoleAsk = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate));    				//for (int i = 0; i < this.levelsToGenerate; i++) {  				for (int i = 0; i < levelsToGenerate_fromLivesimSettings; i++) {  					if (i >= skipPriceLevels_fromSpread) {  						if (i != randomHoleAsk) this.LevelTwo_fromStreaming.AddAsk(prevAsk' sizeAsk' this' "ask" + i + "above(" + quote + ")");  						if (i != randomHoleBid) this.LevelTwo_fromStreaming.AddBid(prevBid' sizeBid' this' "bid" + i + "below(" + quote + ")");  					}    					prevAsk += this.stepPrice;  					prevBid -= this.stepPrice;    					double	randomSizeIncrement = quote.Size * (new Random(6169916).Next(50' 99) / 100d);  					randomSizeIncrement = symbolInfo.AlignToVolumeStep(randomSizeIncrement);  					sizeAsk += randomSizeIncrement;    					randomSizeIncrement = quote.Size * (new Random(28).Next(5' 50) / 100d);  					randomSizeIncrement = symbolInfo.AlignToVolumeStep(randomSizeIncrement);  					sizeBid += randomSizeIncrement;  				}  			} catch (Exception ex) {  				string msg = "MUST_NEVER_HAPPEN_BUT_IM_HERE_TO_UNLOCK_IN_FINALLY";  				Assembler.PopupException(msg' ex);  			} finally {  				this.LevelTwo_fromStreaming.UnLockFor(this' lockReason);  			}
Magic Number,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,GenerateForQuote,The following statement contains a magic number: try {  				this.LevelTwo_fromStreaming.WaitAndLockFor(this' lockReason);  				this.LevelTwo_fromStreaming.Clear_LevelTwo(this' lockReason);    				double sizeAsk = quote.Size;  				double sizeBid = quote.Size;    				double prevAsk = quote.Ask;  				double prevBid = quote.Bid;    				int randomHoleBid = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate));  				int randomHoleAsk = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate));    				//for (int i = 0; i < this.levelsToGenerate; i++) {  				for (int i = 0; i < levelsToGenerate_fromLivesimSettings; i++) {  					if (i >= skipPriceLevels_fromSpread) {  						if (i != randomHoleAsk) this.LevelTwo_fromStreaming.AddAsk(prevAsk' sizeAsk' this' "ask" + i + "above(" + quote + ")");  						if (i != randomHoleBid) this.LevelTwo_fromStreaming.AddBid(prevBid' sizeBid' this' "bid" + i + "below(" + quote + ")");  					}    					prevAsk += this.stepPrice;  					prevBid -= this.stepPrice;    					double	randomSizeIncrement = quote.Size * (new Random(6169916).Next(50' 99) / 100d);  					randomSizeIncrement = symbolInfo.AlignToVolumeStep(randomSizeIncrement);  					sizeAsk += randomSizeIncrement;    					randomSizeIncrement = quote.Size * (new Random(28).Next(5' 50) / 100d);  					randomSizeIncrement = symbolInfo.AlignToVolumeStep(randomSizeIncrement);  					sizeBid += randomSizeIncrement;  				}  			} catch (Exception ex) {  				string msg = "MUST_NEVER_HAPPEN_BUT_IM_HERE_TO_UNLOCK_IN_FINALLY";  				Assembler.PopupException(msg' ex);  			} finally {  				this.LevelTwo_fromStreaming.UnLockFor(this' lockReason);  			}
Magic Number,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,GenerateForQuote,The following statement contains a magic number: try {  				this.LevelTwo_fromStreaming.WaitAndLockFor(this' lockReason);  				this.LevelTwo_fromStreaming.Clear_LevelTwo(this' lockReason);    				double sizeAsk = quote.Size;  				double sizeBid = quote.Size;    				double prevAsk = quote.Ask;  				double prevBid = quote.Bid;    				int randomHoleBid = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate));  				int randomHoleAsk = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate));    				//for (int i = 0; i < this.levelsToGenerate; i++) {  				for (int i = 0; i < levelsToGenerate_fromLivesimSettings; i++) {  					if (i >= skipPriceLevels_fromSpread) {  						if (i != randomHoleAsk) this.LevelTwo_fromStreaming.AddAsk(prevAsk' sizeAsk' this' "ask" + i + "above(" + quote + ")");  						if (i != randomHoleBid) this.LevelTwo_fromStreaming.AddBid(prevBid' sizeBid' this' "bid" + i + "below(" + quote + ")");  					}    					prevAsk += this.stepPrice;  					prevBid -= this.stepPrice;    					double	randomSizeIncrement = quote.Size * (new Random(6169916).Next(50' 99) / 100d);  					randomSizeIncrement = symbolInfo.AlignToVolumeStep(randomSizeIncrement);  					sizeAsk += randomSizeIncrement;    					randomSizeIncrement = quote.Size * (new Random(28).Next(5' 50) / 100d);  					randomSizeIncrement = symbolInfo.AlignToVolumeStep(randomSizeIncrement);  					sizeBid += randomSizeIncrement;  				}  			} catch (Exception ex) {  				string msg = "MUST_NEVER_HAPPEN_BUT_IM_HERE_TO_UNLOCK_IN_FINALLY";  				Assembler.PopupException(msg' ex);  			} finally {  				this.LevelTwo_fromStreaming.UnLockFor(this' lockReason);  			}
Magic Number,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,GenerateForQuote,The following statement contains a magic number: try {  				this.LevelTwo_fromStreaming.WaitAndLockFor(this' lockReason);  				this.LevelTwo_fromStreaming.Clear_LevelTwo(this' lockReason);    				double sizeAsk = quote.Size;  				double sizeBid = quote.Size;    				double prevAsk = quote.Ask;  				double prevBid = quote.Bid;    				int randomHoleBid = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate));  				int randomHoleAsk = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate));    				//for (int i = 0; i < this.levelsToGenerate; i++) {  				for (int i = 0; i < levelsToGenerate_fromLivesimSettings; i++) {  					if (i >= skipPriceLevels_fromSpread) {  						if (i != randomHoleAsk) this.LevelTwo_fromStreaming.AddAsk(prevAsk' sizeAsk' this' "ask" + i + "above(" + quote + ")");  						if (i != randomHoleBid) this.LevelTwo_fromStreaming.AddBid(prevBid' sizeBid' this' "bid" + i + "below(" + quote + ")");  					}    					prevAsk += this.stepPrice;  					prevBid -= this.stepPrice;    					double	randomSizeIncrement = quote.Size * (new Random(6169916).Next(50' 99) / 100d);  					randomSizeIncrement = symbolInfo.AlignToVolumeStep(randomSizeIncrement);  					sizeAsk += randomSizeIncrement;    					randomSizeIncrement = quote.Size * (new Random(28).Next(5' 50) / 100d);  					randomSizeIncrement = symbolInfo.AlignToVolumeStep(randomSizeIncrement);  					sizeBid += randomSizeIncrement;  				}  			} catch (Exception ex) {  				string msg = "MUST_NEVER_HAPPEN_BUT_IM_HERE_TO_UNLOCK_IN_FINALLY";  				Assembler.PopupException(msg' ex);  			} finally {  				this.LevelTwo_fromStreaming.UnLockFor(this' lockReason);  			}
Magic Number,Sq1.Core.Livesim,LevelTwoGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LevelTwoGenerator.cs,GenerateForQuote,The following statement contains a magic number: try {  				this.LevelTwo_fromStreaming.WaitAndLockFor(this' lockReason);  				this.LevelTwo_fromStreaming.Clear_LevelTwo(this' lockReason);    				double sizeAsk = quote.Size;  				double sizeBid = quote.Size;    				double prevAsk = quote.Ask;  				double prevBid = quote.Bid;    				int randomHoleBid = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate));  				int randomHoleAsk = (int)Math.Round((double)new Random().Next(levelsToGenerate_fromLivesimSettings));		//this.levelsToGenerate));    				//for (int i = 0; i < this.levelsToGenerate; i++) {  				for (int i = 0; i < levelsToGenerate_fromLivesimSettings; i++) {  					if (i >= skipPriceLevels_fromSpread) {  						if (i != randomHoleAsk) this.LevelTwo_fromStreaming.AddAsk(prevAsk' sizeAsk' this' "ask" + i + "above(" + quote + ")");  						if (i != randomHoleBid) this.LevelTwo_fromStreaming.AddBid(prevBid' sizeBid' this' "bid" + i + "below(" + quote + ")");  					}    					prevAsk += this.stepPrice;  					prevBid -= this.stepPrice;    					double	randomSizeIncrement = quote.Size * (new Random(6169916).Next(50' 99) / 100d);  					randomSizeIncrement = symbolInfo.AlignToVolumeStep(randomSizeIncrement);  					sizeAsk += randomSizeIncrement;    					randomSizeIncrement = quote.Size * (new Random(28).Next(5' 50) / 100d);  					randomSizeIncrement = symbolInfo.AlignToVolumeStep(randomSizeIncrement);  					sizeBid += randomSizeIncrement;  				}  			} catch (Exception ex) {  				string msg = "MUST_NEVER_HAPPEN_BUT_IM_HERE_TO_UNLOCK_IN_FINALLY";  				Assembler.PopupException(msg' ex);  			} finally {  				this.LevelTwo_fromStreaming.UnLockFor(this' lockReason);  			}
Magic Number,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,executor_OnBacktesterContextInitialized_step2of4,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The following statement contains a magic number: try {    				#region candidate for this.BacktestDataSourceBuildFromUserSelection()  				base.BarsOriginal	= base.Executor.Bars;  				base.BarsSimulating = base.Executor.Bars.CloneBars_zeroBarsInside(BARS_LIVESIM_CLONE_PREFIX);	// + base.BarsOriginal  				//v2 INDICATORS_COMPLAIN_MUST_BE_EMPTY_ON_BACKTEST_STARTING base.BarsSimulating = base.Executor.Bars.CloneBars_firstBarInside_avoidingLastBarNull(BARS_LIVESIM_CLONE_PREFIX);	// + base.BarsOriginal  				base.Executor.EventGenerator.RaiseOnBacktesterBarsIdenticalButEmptySubstitutedToGrow_step1of4();  				  				BacktestSpreadModeler spreadModeler;  				// kept it on the surface and didn't pass ScriptContextCurrent.SpreadModelerPercent to "new DataSourceAsLivesim_nullUnsafe()" because later DataSourceAsLivesim_nullUnsafe:  				// 1) will support different SpreadModelers with not only 1 parameter like SpreadModelerPercentage;  				// 2) will support different BacktestModes like 12strokes' not only 4Stroke   				// 3) will poke StreamingAdapter-derived implementations 12 times a bar with platform-generated quotes for backtests with regulated poke delay  				// 4) will need to be provide visualized   				// v1 this.DataSourceAsLivesim_nullUnsafe.BacktestStreamingAdapter.InitializeSpreadModelerPercentage(base.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent);  				// v2 UI-controlled in the future' right now the stub    				ContextScript ctx = base.Executor.Strategy.ScriptContextCurrent;  				string msig = "STARTING_LIVESIM " + base.Executor.Strategy.ToString() + " //SimulationPreBarsSubstitute_overrideable()";  				switch (ctx.SpreadModelerClassName) {  					case "BacktestSpreadModelerPercentage":  						spreadModeler = new BacktestSpreadModelerPercentage(base.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent);  						break;  					default:  						string msg = "SPREAD_MODELER_NOT_YET_SUPPORTED[" + ctx.SpreadModelerClassName + "]"  							+ "' instantiatind default BacktestSpreadModelerPercentage("  							+ base.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent + ")";  						Assembler.PopupException(msg + msig);  						spreadModeler = new BacktestSpreadModelerPercentage(base.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent);  						break;  				}  				#endregion    				string threadName = "LIVESIMMING " + base.Executor.Strategy.WindowTitle + " " + base.BarsSimulating.InstanceScaleCount;  				Assembler.SetThreadName(threadName' "LIVESIM_FAILED_TO_SET_THREAD_NAME OR_NPE");    				#region MOVED_BACK_DOWNSTACK NEVER_COMMENT_OUT__I_SPENT_TWO_DAYS_TO_DEBUG_IT  				//string reasonToPauseSymbol = "SYMBOL_PAUSED_LIVESIMMING-" + this.Executor.ToString();  				//this.Executor.DataSource_fromBars.StreamingAdapter.Distributor_replacedForLivesim.AllQuotePumps_Pause(reasonToPauseSymbol);  				int pumpsPaused = this.Executor.DataSource_fromBars.LivesimStreamingDefault_PumpPause_freezeOtherConsumers_forSameSymbolScale(this.Executor);  				if (pumpsPaused == 0) {  					string msg = "BARS_UNSUBSCRIBED OR_DONT_YOU_HAVE_CHARTS_OPEN_FOR_STRATEGY_LIVESIMMING?";  					Assembler.PopupException(msg' null' false);  				}  				#endregion    				StreamingAdapter originalAdapter_fromDataSource = this.Executor.DataSource_fromBars.StreamingAdapter;  				if (originalAdapter_fromDataSource == null) {  					string msg = "STREAMING_ADAPTER_MUST_BE_AT_LEAST_StreamingLivesimDefault"  						+ " ASSIGN_IT_IN_DATASOURCE_EDITOR_FOR[" + this.Executor.DataSource_fromBars + "]";  					Assembler.PopupException(msg);  					base.AbortRunningBacktest_waitAborted(msg' 0);  					return;  				}    				this.DataSourceAsLivesim_nullUnsafe.Propagate_preInstantiated_ownImplementationLivesimAdapters_intoLivesimDataSource();	// no need to restore (this.DataSourceAsLivesim_nullUnsafe will be re-initialized at next Livesim)  				// NO!!! KEEP_THEM_TO_ORIGINAL_DATASOURCE_BECAUSE_DDE_SERVER_DELIVERS_LEVEL2_TO_ORIGINAL_DATA_SNAPSHOT base.BarsSimulating.DataSource = this.DataSourceAsLivesim_nullUnsafe;	// will need to restore (base.BarsSimulating is not needed after Livesim is done)  				this.DataSourceAsLivesim_nullUnsafe.InitializeLivesim_tunnelToBacktest(base.Executor.ToString()' base.BarsSimulating' spreadModeler);		// NOW_OWN_IMPLEMENTATION_WILL_GENERATE_QUOTES_FOR_BarsSimulating  				// MAKE_DDE_CLIENT_SERVER_WORK base.BarsSimulating.DataSource = this.DataSourceAsLivesim_nullUnsafe;		// DISTRIBUTORS_INSIDE_SINGLE_STREAMING_ARE_REPLACED_AND_DDE_SERVER_IS_FED_VIA_FAKE_DDE_CLIENT  				//DURING_LIVESIM_I_LEFT_STREAMING_EXACTLY_THE_SAME_AS_FOR_LIVE_TRADING_TO_TEST_IT!!! this.StreamingOriginal = this.Executor.DataSource.StreamingAdapter;		// will have to restore  				  				if (this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe != null) {  					string msg = "LivesimDataSource_HAS_REFERENCE_TO_LivesimStreaming"  						+ " OKAY_SINCE_LIVESIM_STREAMING'BROKER_DEFAULT_ARE_LEGIT_PROVIDERS_WHEN_NO_OTHERS_AVAILABLE"  						+ " SHOULD_BE_NO_NPE_IN_eventGenerator_OnStrategyExecutedOneQuote_unblinkDataSourceTree";  					//Assembler.PopupException(msg' null' false);  				}  				// now I have those two assigned from Streaming/Broker-own-implemented instantiated adapters    				LivesimStreaming livesimStreaming = this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe;	// = ownLivesimStreaming here (QuikLivesimStreaming' )  				livesimStreaming.InitializeLivesim(this.DataSourceAsLivesim_nullUnsafe' originalAdapter_fromDataSource' base.BarsSimulating.Symbol);    				//livesimming without Distributor replacement routes to wrong Bars and creates problems with ChartMultisplitter  				//FIRST_LINE_OF_QuikStreamingLivesim.UpstreamConnect_LivesimStarting()_MAKE_SENSE_FOR_OTHERS  				livesimStreaming.Original_SubstituteDistributor_forSymbolLivesimming_extractChartIntoSeparateDistributor_subscribe();  				//LivesimDataSource is now having LivesimBacktester and no-solidifier Distributor    				this.CheckSubscribed_LivesimQuoteBarConsumer_toDistributor_replacedForLivesim();    				livesimStreaming.UpstreamConnect_LivesimStarting();    				base.Executor.BacktestContext_initialize(base.BarsSimulating);    				#region looks like {new LivesimulatorDataSource().SeparatePushingThreadEnabled=true} actually SOLVES__BAR_STATIC_LAST_IS_NULL__DURING_SECOND_LIVESIM; still waiting for the chart to set Bars' otherwize white overstriked ChartControl for a second  				int waitForGuiToSetBars_maxMillis = 5000;  				bool barsAreSetInGui = this.barsAreSetInGuiThread.WaitOne(waitForGuiToSetBars_maxMillis);		// SOLVES__BAR_STATIC_LAST_IS_NULL__DURING_SECOND_LIVESIM  				if (barsAreSetInGui == false) {  					string msg = "GUI_HASNT_SET_BARS_AFTER_WAITING waitForGuiToSetBars_maxMillis[" + waitForGuiToSetBars_maxMillis + "]"  						+ " HOPING_YOU_WONT_RECEIVE BAR_STATIC_LAST_IS_NULL__DURING_SECOND_LIVESIM";  					Assembler.PopupException(msg);  				}  				#endregion    				//this.BarsSimulating.DataSource = this.DataSourceAsLivesim_nullUnsafe;	// may not need to restore (base.BarsSimulating is not needed after Livesim is done)  				if (this.BarsSimulating.BarStaticLast_nullUnsafe == null) {  					string msg = "LEFT_FOR_QUIK_LIVESIM_COMPAT_TEST NO!!! DOES_IT_SOLVE__BAR_STATIC_LAST_IS_NULL__DURING_SECOND_LIVESIM?";  					Assembler.PopupException(msg' null' false);  				}    				this.DataSourceAsLivesim_nullUnsafe.BrokerAsLivesim_nullUnsafe.InitializeLivesim(this.DataSourceAsLivesim_nullUnsafe' base.Executor.OrderProcessor);    				// MOVED_FROM_Livesimulator.Start_invokedFromGuiThread()  				this.DataSourceAsLivesim_nullUnsafe.BrokerAsLivesim_nullUnsafe.InitializeMarketsim(base.Executor);      				#region PARANOID  				if (base.BarsOriginal == null) {  					string msg = "consumers will expect base.BarsOriginal != null";  					Assembler.PopupException(msg);  				}  				if (base.BarsOriginal.Count == 0) {  					string msg = "consumers will expect base.BarsOriginal.Count > 0";  					Assembler.PopupException(msg);  				}  				if (base.BarsSimulating == null) {  					string msg = "consumers will expect base.BarsSimulating != null";  					Assembler.PopupException(msg);  				}  				if (base.BarsSimulating.Count > 0) {  					string msg = "consumers will expect base.BarsSimulating.Count = 0";  					Assembler.PopupException(msg);  				}  				if (base.Executor.Bars == null) {  					string msg = "consumers will expect base.Bars != null";  					Assembler.PopupException(msg);  				}  				if (base.Executor.Bars.Count > 0) {  					string msg = "consumers will expect base.Bars.Count = 0";  					Assembler.PopupException(msg);  				}  				#endregion    				if (this.DataSourceAsLivesim_nullUnsafe.BrokerAsLivesim_nullUnsafe != null) {  					this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe.PushSymbolInfo_toLevelTwoGenerator(this.Executor.Bars.SymbolInfo);  				} else {  					string msg = "Livesim/noStreaming was still generating LevelTwo directly in the StreamingDataSnapshot";  				}  			} catch (Exception ex) {  				string msg = "SimulationPreBarsSubstitute_overrideable(): Livesimulator caught a long beard...";  				base.Executor.PopupException(msg' ex);  			} finally {  				base.BarsSimulatedSoFar = 0;  				base.BacktestWasAbortedByUserInGui = false;  				if (base.BacktestAbortedMre.WaitOne(0) == true) Thread.Sleep(10);	// let the Wait() in GUI thread to feel SIGNALLED' before I reset again to NON_SIGNALLED  				base.BacktestAbortedMre.Reset();  				base.RequestingBacktestAbortMre.Reset();  				base.BacktestIsRunningMre.Set();  				if (this.ImBacktestingOrLivesimming == false) {  					string msg = "IN_ORDER_TO_SIGNAL_UNFLAGGED_I_HAVE_TO_RESET_INSTEAD_OF_SET";  					Assembler.PopupException(msg);  				}  			}
Magic Number,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPreBarsSubstitute_overrideable,The following statement contains a magic number: try {    				#region candidate for this.BacktestDataSourceBuildFromUserSelection()  				base.BarsOriginal	= base.Executor.Bars;  				base.BarsSimulating = base.Executor.Bars.CloneBars_zeroBarsInside(BARS_LIVESIM_CLONE_PREFIX);	// + base.BarsOriginal  				//v2 INDICATORS_COMPLAIN_MUST_BE_EMPTY_ON_BACKTEST_STARTING base.BarsSimulating = base.Executor.Bars.CloneBars_firstBarInside_avoidingLastBarNull(BARS_LIVESIM_CLONE_PREFIX);	// + base.BarsOriginal  				base.Executor.EventGenerator.RaiseOnBacktesterBarsIdenticalButEmptySubstitutedToGrow_step1of4();  				  				BacktestSpreadModeler spreadModeler;  				// kept it on the surface and didn't pass ScriptContextCurrent.SpreadModelerPercent to "new DataSourceAsLivesim_nullUnsafe()" because later DataSourceAsLivesim_nullUnsafe:  				// 1) will support different SpreadModelers with not only 1 parameter like SpreadModelerPercentage;  				// 2) will support different BacktestModes like 12strokes' not only 4Stroke   				// 3) will poke StreamingAdapter-derived implementations 12 times a bar with platform-generated quotes for backtests with regulated poke delay  				// 4) will need to be provide visualized   				// v1 this.DataSourceAsLivesim_nullUnsafe.BacktestStreamingAdapter.InitializeSpreadModelerPercentage(base.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent);  				// v2 UI-controlled in the future' right now the stub    				ContextScript ctx = base.Executor.Strategy.ScriptContextCurrent;  				string msig = "STARTING_LIVESIM " + base.Executor.Strategy.ToString() + " //SimulationPreBarsSubstitute_overrideable()";  				switch (ctx.SpreadModelerClassName) {  					case "BacktestSpreadModelerPercentage":  						spreadModeler = new BacktestSpreadModelerPercentage(base.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent);  						break;  					default:  						string msg = "SPREAD_MODELER_NOT_YET_SUPPORTED[" + ctx.SpreadModelerClassName + "]"  							+ "' instantiatind default BacktestSpreadModelerPercentage("  							+ base.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent + ")";  						Assembler.PopupException(msg + msig);  						spreadModeler = new BacktestSpreadModelerPercentage(base.Executor.Strategy.ScriptContextCurrent.SpreadModelerPercent);  						break;  				}  				#endregion    				string threadName = "LIVESIMMING " + base.Executor.Strategy.WindowTitle + " " + base.BarsSimulating.InstanceScaleCount;  				Assembler.SetThreadName(threadName' "LIVESIM_FAILED_TO_SET_THREAD_NAME OR_NPE");    				#region MOVED_BACK_DOWNSTACK NEVER_COMMENT_OUT__I_SPENT_TWO_DAYS_TO_DEBUG_IT  				//string reasonToPauseSymbol = "SYMBOL_PAUSED_LIVESIMMING-" + this.Executor.ToString();  				//this.Executor.DataSource_fromBars.StreamingAdapter.Distributor_replacedForLivesim.AllQuotePumps_Pause(reasonToPauseSymbol);  				int pumpsPaused = this.Executor.DataSource_fromBars.LivesimStreamingDefault_PumpPause_freezeOtherConsumers_forSameSymbolScale(this.Executor);  				if (pumpsPaused == 0) {  					string msg = "BARS_UNSUBSCRIBED OR_DONT_YOU_HAVE_CHARTS_OPEN_FOR_STRATEGY_LIVESIMMING?";  					Assembler.PopupException(msg' null' false);  				}  				#endregion    				StreamingAdapter originalAdapter_fromDataSource = this.Executor.DataSource_fromBars.StreamingAdapter;  				if (originalAdapter_fromDataSource == null) {  					string msg = "STREAMING_ADAPTER_MUST_BE_AT_LEAST_StreamingLivesimDefault"  						+ " ASSIGN_IT_IN_DATASOURCE_EDITOR_FOR[" + this.Executor.DataSource_fromBars + "]";  					Assembler.PopupException(msg);  					base.AbortRunningBacktest_waitAborted(msg' 0);  					return;  				}    				this.DataSourceAsLivesim_nullUnsafe.Propagate_preInstantiated_ownImplementationLivesimAdapters_intoLivesimDataSource();	// no need to restore (this.DataSourceAsLivesim_nullUnsafe will be re-initialized at next Livesim)  				// NO!!! KEEP_THEM_TO_ORIGINAL_DATASOURCE_BECAUSE_DDE_SERVER_DELIVERS_LEVEL2_TO_ORIGINAL_DATA_SNAPSHOT base.BarsSimulating.DataSource = this.DataSourceAsLivesim_nullUnsafe;	// will need to restore (base.BarsSimulating is not needed after Livesim is done)  				this.DataSourceAsLivesim_nullUnsafe.InitializeLivesim_tunnelToBacktest(base.Executor.ToString()' base.BarsSimulating' spreadModeler);		// NOW_OWN_IMPLEMENTATION_WILL_GENERATE_QUOTES_FOR_BarsSimulating  				// MAKE_DDE_CLIENT_SERVER_WORK base.BarsSimulating.DataSource = this.DataSourceAsLivesim_nullUnsafe;		// DISTRIBUTORS_INSIDE_SINGLE_STREAMING_ARE_REPLACED_AND_DDE_SERVER_IS_FED_VIA_FAKE_DDE_CLIENT  				//DURING_LIVESIM_I_LEFT_STREAMING_EXACTLY_THE_SAME_AS_FOR_LIVE_TRADING_TO_TEST_IT!!! this.StreamingOriginal = this.Executor.DataSource.StreamingAdapter;		// will have to restore  				  				if (this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe != null) {  					string msg = "LivesimDataSource_HAS_REFERENCE_TO_LivesimStreaming"  						+ " OKAY_SINCE_LIVESIM_STREAMING'BROKER_DEFAULT_ARE_LEGIT_PROVIDERS_WHEN_NO_OTHERS_AVAILABLE"  						+ " SHOULD_BE_NO_NPE_IN_eventGenerator_OnStrategyExecutedOneQuote_unblinkDataSourceTree";  					//Assembler.PopupException(msg' null' false);  				}  				// now I have those two assigned from Streaming/Broker-own-implemented instantiated adapters    				LivesimStreaming livesimStreaming = this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe;	// = ownLivesimStreaming here (QuikLivesimStreaming' )  				livesimStreaming.InitializeLivesim(this.DataSourceAsLivesim_nullUnsafe' originalAdapter_fromDataSource' base.BarsSimulating.Symbol);    				//livesimming without Distributor replacement routes to wrong Bars and creates problems with ChartMultisplitter  				//FIRST_LINE_OF_QuikStreamingLivesim.UpstreamConnect_LivesimStarting()_MAKE_SENSE_FOR_OTHERS  				livesimStreaming.Original_SubstituteDistributor_forSymbolLivesimming_extractChartIntoSeparateDistributor_subscribe();  				//LivesimDataSource is now having LivesimBacktester and no-solidifier Distributor    				this.CheckSubscribed_LivesimQuoteBarConsumer_toDistributor_replacedForLivesim();    				livesimStreaming.UpstreamConnect_LivesimStarting();    				base.Executor.BacktestContext_initialize(base.BarsSimulating);    				#region looks like {new LivesimulatorDataSource().SeparatePushingThreadEnabled=true} actually SOLVES__BAR_STATIC_LAST_IS_NULL__DURING_SECOND_LIVESIM; still waiting for the chart to set Bars' otherwize white overstriked ChartControl for a second  				int waitForGuiToSetBars_maxMillis = 5000;  				bool barsAreSetInGui = this.barsAreSetInGuiThread.WaitOne(waitForGuiToSetBars_maxMillis);		// SOLVES__BAR_STATIC_LAST_IS_NULL__DURING_SECOND_LIVESIM  				if (barsAreSetInGui == false) {  					string msg = "GUI_HASNT_SET_BARS_AFTER_WAITING waitForGuiToSetBars_maxMillis[" + waitForGuiToSetBars_maxMillis + "]"  						+ " HOPING_YOU_WONT_RECEIVE BAR_STATIC_LAST_IS_NULL__DURING_SECOND_LIVESIM";  					Assembler.PopupException(msg);  				}  				#endregion    				//this.BarsSimulating.DataSource = this.DataSourceAsLivesim_nullUnsafe;	// may not need to restore (base.BarsSimulating is not needed after Livesim is done)  				if (this.BarsSimulating.BarStaticLast_nullUnsafe == null) {  					string msg = "LEFT_FOR_QUIK_LIVESIM_COMPAT_TEST NO!!! DOES_IT_SOLVE__BAR_STATIC_LAST_IS_NULL__DURING_SECOND_LIVESIM?";  					Assembler.PopupException(msg' null' false);  				}    				this.DataSourceAsLivesim_nullUnsafe.BrokerAsLivesim_nullUnsafe.InitializeLivesim(this.DataSourceAsLivesim_nullUnsafe' base.Executor.OrderProcessor);    				// MOVED_FROM_Livesimulator.Start_invokedFromGuiThread()  				this.DataSourceAsLivesim_nullUnsafe.BrokerAsLivesim_nullUnsafe.InitializeMarketsim(base.Executor);      				#region PARANOID  				if (base.BarsOriginal == null) {  					string msg = "consumers will expect base.BarsOriginal != null";  					Assembler.PopupException(msg);  				}  				if (base.BarsOriginal.Count == 0) {  					string msg = "consumers will expect base.BarsOriginal.Count > 0";  					Assembler.PopupException(msg);  				}  				if (base.BarsSimulating == null) {  					string msg = "consumers will expect base.BarsSimulating != null";  					Assembler.PopupException(msg);  				}  				if (base.BarsSimulating.Count > 0) {  					string msg = "consumers will expect base.BarsSimulating.Count = 0";  					Assembler.PopupException(msg);  				}  				if (base.Executor.Bars == null) {  					string msg = "consumers will expect base.Bars != null";  					Assembler.PopupException(msg);  				}  				if (base.Executor.Bars.Count > 0) {  					string msg = "consumers will expect base.Bars.Count = 0";  					Assembler.PopupException(msg);  				}  				#endregion    				if (this.DataSourceAsLivesim_nullUnsafe.BrokerAsLivesim_nullUnsafe != null) {  					this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe.PushSymbolInfo_toLevelTwoGenerator(this.Executor.Bars.SymbolInfo);  				} else {  					string msg = "Livesim/noStreaming was still generating LevelTwo directly in the StreamingDataSnapshot";  				}  			} catch (Exception ex) {  				string msg = "SimulationPreBarsSubstitute_overrideable(): Livesimulator caught a long beard...";  				base.Executor.PopupException(msg' ex);  			} finally {  				base.BarsSimulatedSoFar = 0;  				base.BacktestWasAbortedByUserInGui = false;  				if (base.BacktestAbortedMre.WaitOne(0) == true) Thread.Sleep(10);	// let the Wait() in GUI thread to feel SIGNALLED' before I reset again to NON_SIGNALLED  				base.BacktestAbortedMre.Reset();  				base.RequestingBacktestAbortMre.Reset();  				base.BacktestIsRunningMre.Set();  				if (this.ImBacktestingOrLivesimming == false) {  					string msg = "IN_ORDER_TO_SIGNAL_UNFLAGGED_I_HAVE_TO_RESET_INSTEAD_OF_SET";  					Assembler.PopupException(msg);  				}  			}
Magic Number,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,SimulationPostBarsRestore_overrideable,The following statement contains a magic number: try {  				if (base.WasBacktestAborted || base.RequestingBacktestAbortMre.WaitOne(0) == true) {  					string msg2 = "NOT_ABSORBING_LAST_LIVESIM_STREAMING_INTO_BARS_ORIGINAL__SOLIDIFIER_WILL_COMPLAIN_OTHERWISE";  					Assembler.PopupException(msg2' null' false);  				} else {  					string msg2 = "LOOKS_LIKE_WE_USED_UP_ALL_BARS_AND_SUCCESSFULLY_FINISHED_LIVESIM___OR_EXCEPTION";  					//streamingOriginal.AbsorbStreamingBarFactoryFromBacktestComplete(  					//	streamingBacktest' base.BarsOriginal.Symbol' base.BarsOriginal.ScaleInterval);  				}    				double sec = Math.Round(base.Stopwatch.ElapsedMilliseconds / 1000d' 2);  				string strokesPerBar = base.QuotesGenerator.BacktestStrokesPerBar + "/Bar";  				string stats = "Livesim took [" + sec + "]sec at " + strokesPerBar;  				this.Executor.LastBacktestStatus = stats + this.Executor.LastBacktestStatus;    				// down there' OnAllBarsBacktested will be raised and ChartFormManager will push performance to reporters.  				base.Executor.BacktestContext_restore();    				StreamingAdapter originalAdapterFromDataSource = this.Executor.DataSource_fromBars.StreamingAdapter;  				if (originalAdapterFromDataSource == null) {  					string msg = "STREAMING_ADAPTER_MUST_BE_AT_LEAST_StreamingLivesimDefault"  						+ " ASSIGN_IT_IN_DATASOURCE_EDITOR_FOR[" + this.Executor.DataSource_fromBars + "]";  					Assembler.PopupException(msg);  					base.AbortRunningBacktest_waitAborted(msg' 0);  					return;  				}    				LivesimStreaming livesimStreaming = this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe;  				  				livesimStreaming.UpstreamDisconnect_LivesimTerminatedOrAborted();  				//DURING_LIVESIM_I_LEFT_STREAMING_EXACTLY_THE_SAME_AS_FOR_LIVE_TRADING_TO_TEST_IT!!! this.Executor.DataSource.StreamingAdapter = this.StreamingOriginal;    				//LAST_LINE_OF_QuikStreamingLivesim.UpstreamConnect_LivesimStarting()_MAKES_SENSE_FOR_OTHERS  				livesimStreaming.Original_SubstituteDistributor_forSymbolLivesimming_restoreOriginalDistributor();    				#region MOVED_BACK_DOWNSTACK NEVER_COMMENT_OUT__I_SPENT_TWO_DAYS_TO_DEBUG_IT  				//string reasonToUnPauseSymbol = "SYMBOL_UNPAUSED_LIVESIMMING-" + this.Executor.ToString();  				//this.Executor.DataSource_fromBars.StreamingAdapter.Distributor_replacedForLivesim.AllQuotePumps_Unpause(reasonToUnPauseSymbol);  				int pumpsUnpaused = this.Executor.DataSource_fromBars.LivesimStreamingDefault_PumpResume_unfreezeOtherConsumers_forSameSymbolScale(this.Executor);  				if (pumpsUnpaused == 0) {  					string msg = "BARS_UNSUBSCRIBED OR_DONT_YOU_HAVE_CHARTS_OPEN_FOR_STRATEGY_LIVESIMMING?";  					Assembler.PopupException(msg' null' false);  				}  				#endregion    				//if (this.DataSourceAsLivesim_nullUnsafe.StreamingAsLivesim_nullUnsafe.settings.DelayBetweenSerialQuotesEnabled) {  				if (base.Executor.Strategy.LivesimStreamingSettings.DelayBetweenSerialQuotesEnabled == false) {  					base.Executor.OrderProcessor.RaiseDelaylessLivesimEnded_shouldRebuildOLV(this);  				}  			} catch (Exception e) {  				#if DEBUG  				Debugger.Break();  				#endif  				throw e;  			} finally {  				base.Executor.BacktesterOrLivesimulator = this.BacktesterBackup;  				if (base.BacktestWasAbortedByUserInGui) {  					base.BacktestAbortedMre.Set();  					base.RequestingBacktestAbortMre.Reset();  				}  			}
Magic Number,Sq1.Core.Livesim,Livesimulator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\Livesimulator.EventConsumer.cs,afterBacktesterComplete,The following statement contains a magic number: this.chartShadow.BeginInvoke((MethodInvoker)delegate {  				this.btnStartStop.Text = "Start";  				this.btnStartStop.CheckState = CheckState.Unchecked;    				if (base.Executor.Bars == null) {  					string msg = "LOOKS_LIKE_YOU_DIDNT_RESTORE_CONTEXT_AFTER_BACKTEST_ABORTED WHEN_QUIK_LIVESIM_FAILED_TO_CONNECT_TO_ITS_OWN_SERVER";  					Assembler.PopupException(msg);  				} else {  					this.chartShadow.Initialize(base.Executor.Bars' base.Executor.StrategyName' false' true);  				}    				float seconds = (float)Math.Round(base.Stopwatch.ElapsedMilliseconds / 1000d' 2);  				this.btnPauseResume.Text = seconds.ToString() + " sec";  				this.btnPauseResume.Enabled = false;  			});
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(3' 195);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(3' 195);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(356' 90);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(356' 90);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.TabIndex = 28;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 28;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(155' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(155' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 27;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillPercentageFilledMax.Location = new System.Drawing.Point(173' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillPercentageFilledMax.Location = new System.Drawing.Point(173' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillPercentageFilledMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillPercentageFilledMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillPercentageFilledMax.TabIndex = 39;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillPercentageFilledMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillPercentageFilledMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillPercentageFilledMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillPercentageFilledMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillPercentageFilledMin.TabIndex = 38;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(212' 46);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(212' 46);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label9.TabIndex = 26;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label10.TabIndex = 23;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_PartialFillEnabled.Location = new System.Drawing.Point(6' 68);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_PartialFillEnabled.Location = new System.Drawing.Point(6' 68);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_PartialFillEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_PartialFillEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_PartialFillEnabled.TabIndex = 40;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label11.Location = new System.Drawing.Point(155' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label11.Location = new System.Drawing.Point(155' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label11.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label11.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label11.TabIndex = 22;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillHappensOncePerQuoteMax.Location = new System.Drawing.Point(173' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillHappensOncePerQuoteMax.Location = new System.Drawing.Point(173' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillHappensOncePerQuoteMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillHappensOncePerQuoteMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillHappensOncePerQuoteMax.TabIndex = 37;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillHappensOncePerQuoteMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillHappensOncePerQuoteMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillHappensOncePerQuoteMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillHappensOncePerQuoteMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PartialFillHappensOncePerQuoteMin.TabIndex = 36;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label12.Location = new System.Drawing.Point(212' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label12.Location = new System.Drawing.Point(212' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label12.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label12.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label12.TabIndex = 20;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Location = new System.Drawing.Point(3' 131);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Location = new System.Drawing.Point(3' 131);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Size = new System.Drawing.Size(356' 64);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Size = new System.Drawing.Size(356' 64);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.TabIndex = 30;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label13.Location = new System.Drawing.Point(6' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label13.Location = new System.Drawing.Point(6' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label13.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label13.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label13.TabIndex = 34;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OrderRejectionEnabled.Location = new System.Drawing.Point(6' 40);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OrderRejectionEnabled.Location = new System.Drawing.Point(6' 40);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OrderRejectionEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OrderRejectionEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OrderRejectionEnabled.TabIndex = 35;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label14.Location = new System.Drawing.Point(155' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label14.Location = new System.Drawing.Point(155' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label14.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label14.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label14.TabIndex = 33;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OrderRejectionHappensOncePerXordersMax.Location = new System.Drawing.Point(173' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OrderRejectionHappensOncePerXordersMax.Location = new System.Drawing.Point(173' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OrderRejectionHappensOncePerXordersMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OrderRejectionHappensOncePerXordersMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OrderRejectionHappensOncePerXordersMax.TabIndex = 34;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OrderRejectionHappensOncePerXordersMin.Location = new System.Drawing.Point(119' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OrderRejectionHappensOncePerXordersMin.Location = new System.Drawing.Point(119' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OrderRejectionHappensOncePerXordersMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OrderRejectionHappensOncePerXordersMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OrderRejectionHappensOncePerXordersMin.TabIndex = 33;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label15.Location = new System.Drawing.Point(212' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label15.Location = new System.Drawing.Point(212' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label15.Size = new System.Drawing.Size(89' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label15.Size = new System.Drawing.Size(89' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label15.TabIndex = 31;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox4.Location = new System.Drawing.Point(3' 376);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox4.Location = new System.Drawing.Point(3' 376);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox4.Size = new System.Drawing.Size(356' 91);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox4.Size = new System.Drawing.Size(356' 91);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox4.TabIndex = 29;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label16.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label16.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label16.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label16.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label16.TabIndex = 28;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label17.Location = new System.Drawing.Point(155' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label17.Location = new System.Drawing.Point(155' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label17.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label17.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label17.TabIndex = 27;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMax.Location = new System.Drawing.Point(173' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMax.Location = new System.Drawing.Point(173' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMax.TabIndex = 49;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersPercentageOfBestPriceMin.TabIndex = 48;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label18.Location = new System.Drawing.Point(212' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label18.Location = new System.Drawing.Point(212' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label18.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label18.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label18.TabIndex = 26;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label19.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label19.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label19.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label19.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label19.TabIndex = 23;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_PriceDeviationForMarketOrdersEnabled.Location = new System.Drawing.Point(6' 70);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_PriceDeviationForMarketOrdersEnabled.Location = new System.Drawing.Point(6' 70);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_PriceDeviationForMarketOrdersEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_PriceDeviationForMarketOrdersEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_PriceDeviationForMarketOrdersEnabled.TabIndex = 50;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label20.Location = new System.Drawing.Point(155' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label20.Location = new System.Drawing.Point(155' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label20.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label20.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label20.TabIndex = 22;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMax.Location = new System.Drawing.Point(173' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMax.Location = new System.Drawing.Point(173' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMax.TabIndex = 47;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_PriceDeviationForMarketOrdersHappensOncePerXordersMin.TabIndex = 46;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label21.Location = new System.Drawing.Point(212' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label21.Location = new System.Drawing.Point(212' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label21.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label21.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label21.TabIndex = 20;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox5.Location = new System.Drawing.Point(3' 467);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox5.Location = new System.Drawing.Point(3' 467);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox5.Size = new System.Drawing.Size(356' 94);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox5.Size = new System.Drawing.Size(356' 94);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox5.TabIndex = 31;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label22.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label22.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label22.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label22.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label22.TabIndex = 28;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label23.Location = new System.Drawing.Point(155' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label23.Location = new System.Drawing.Point(155' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label23.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label23.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label23.TabIndex = 27;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMax.Location = new System.Drawing.Point(173' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMax.Location = new System.Drawing.Point(173' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMax.TabIndex = 54;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMin.TabIndex = 53;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label24.Location = new System.Drawing.Point(212' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label24.Location = new System.Drawing.Point(212' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label24.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label24.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label24.TabIndex = 26;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label25.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label25.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label25.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label25.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label25.TabIndex = 23;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_AdaperDisconnectEnabled.Location = new System.Drawing.Point(6' 70);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_AdaperDisconnectEnabled.Location = new System.Drawing.Point(6' 70);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_AdaperDisconnectEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_AdaperDisconnectEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_AdaperDisconnectEnabled.TabIndex = 55;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label26.Location = new System.Drawing.Point(155' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label26.Location = new System.Drawing.Point(155' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label26.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label26.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label26.TabIndex = 22;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMax.Location = new System.Drawing.Point(173' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMax.Location = new System.Drawing.Point(173' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMax.TabIndex = 52;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMin.TabIndex = 51;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label27.Location = new System.Drawing.Point(212' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label27.Location = new System.Drawing.Point(212' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label27.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label27.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label27.TabIndex = 20;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(3' 285);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(3' 285);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(356' 91);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(356' 91);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.TabIndex = 30;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 28;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(155' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(155' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 27;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillDeliveredXordersLaterMax.Location = new System.Drawing.Point(173' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillDeliveredXordersLaterMax.Location = new System.Drawing.Point(173' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillDeliveredXordersLaterMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillDeliveredXordersLaterMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillDeliveredXordersLaterMax.TabIndex = 44;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillDeliveredXordersLaterMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillDeliveredXordersLaterMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillDeliveredXordersLaterMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillDeliveredXordersLaterMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillDeliveredXordersLaterMin.TabIndex = 43;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(212' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(212' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 26;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label6.TabIndex = 23;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OutOfOrderFillEnabled.Location = new System.Drawing.Point(6' 68);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OutOfOrderFillEnabled.Location = new System.Drawing.Point(6' 68);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OutOfOrderFillEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OutOfOrderFillEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OutOfOrderFillEnabled.TabIndex = 45;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(155' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(155' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label7.TabIndex = 22;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillHappensOncePerQuoteMax.Location = new System.Drawing.Point(173' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillHappensOncePerQuoteMax.Location = new System.Drawing.Point(173' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillHappensOncePerQuoteMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillHappensOncePerQuoteMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillHappensOncePerQuoteMax.TabIndex = 42;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillHappensOncePerQuoteMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillHappensOncePerQuoteMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillHappensOncePerQuoteMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillHappensOncePerQuoteMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderFillHappensOncePerQuoteMin.TabIndex = 41;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point(212' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point(212' 22);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label8.TabIndex = 20;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox6.Location = new System.Drawing.Point(3' 3);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox6.Location = new System.Drawing.Point(3' 3);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox6.Size = new System.Drawing.Size(356' 65);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox6.Size = new System.Drawing.Size(356' 65);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox6.TabIndex = 32;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label28.Location = new System.Drawing.Point(6' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label28.Location = new System.Drawing.Point(6' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label28.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label28.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label28.TabIndex = 34;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_DelayBeforeFillEnabled.Location = new System.Drawing.Point(6' 41);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_DelayBeforeFillEnabled.Location = new System.Drawing.Point(6' 41);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_DelayBeforeFillEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_DelayBeforeFillEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_DelayBeforeFillEnabled.TabIndex = 32;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label29.Location = new System.Drawing.Point(155' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label29.Location = new System.Drawing.Point(155' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label29.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label29.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label29.TabIndex = 33;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBeforeFillMillisMax.Location = new System.Drawing.Point(173' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBeforeFillMillisMax.Location = new System.Drawing.Point(173' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBeforeFillMillisMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBeforeFillMillisMax.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBeforeFillMillisMax.TabIndex = 31;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBeforeFillMillisMin.Location = new System.Drawing.Point(119' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBeforeFillMillisMin.Location = new System.Drawing.Point(119' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBeforeFillMillisMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBeforeFillMillisMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBeforeFillMillisMin.TabIndex = 30;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label30.Location = new System.Drawing.Point(212' 21);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label30.Location = new System.Drawing.Point(212' 21);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label30.Size = new System.Drawing.Size(68' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label30.Size = new System.Drawing.Size(68' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label30.TabIndex = 31;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.grp_KillPendingDelay.Location = new System.Drawing.Point(3' 67);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.grp_KillPendingDelay.Location = new System.Drawing.Point(3' 67);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.grp_KillPendingDelay.Size = new System.Drawing.Size(356' 65);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.grp_KillPendingDelay.Size = new System.Drawing.Size(356' 65);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.grp_KillPendingDelay.TabIndex = 35;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label31.Location = new System.Drawing.Point(6' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label31.Location = new System.Drawing.Point(6' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label31.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label31.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label31.TabIndex = 34;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_KillPendingDelayEnabled.Location = new System.Drawing.Point(6' 41);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_KillPendingDelayEnabled.Location = new System.Drawing.Point(6' 41);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_KillPendingDelayEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_KillPendingDelayEnabled.Size = new System.Drawing.Size(344' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_KillPendingDelayEnabled.TabIndex = 32;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label32.Location = new System.Drawing.Point(155' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label32.Location = new System.Drawing.Point(155' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label32.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label32.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.label32.TabIndex = 33;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_KillPendingDelay_max.Location = new System.Drawing.Point(173' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_KillPendingDelay_max.Location = new System.Drawing.Point(173' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_KillPendingDelay_max.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_KillPendingDelay_max.Size = new System.Drawing.Size(33' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_KillPendingDelay_max.TabIndex = 31;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_KillPendingDelay_min.Location = new System.Drawing.Point(119' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_KillPendingDelay_min.Location = new System.Drawing.Point(119' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_KillPendingDelay_min.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_KillPendingDelay_min.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_KillPendingDelay_min.TabIndex = 30;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.lbl_KillPendingDelay.Location = new System.Drawing.Point(212' 21);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.lbl_KillPendingDelay.Location = new System.Drawing.Point(212' 21);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.lbl_KillPendingDelay.Size = new System.Drawing.Size(68' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.lbl_KillPendingDelay.Size = new System.Drawing.Size(68' 17);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.lbl_KillPendingDelay.TabIndex = 31;
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(362' 564);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(362' 564);
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,anyTextBox_KeyUp,The following statement contains a magic number: if (parsed == false && whereItyped.Text.Length > 0) {  				whereItyped.BackColor = Color.FromArgb(255' 150' 150);  				return;  			}
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,anyTextBox_KeyUp,The following statement contains a magic number: if (parsed == false && whereItyped.Text.Length > 0) {  				whereItyped.BackColor = Color.FromArgb(255' 150' 150);  				return;  			}
Magic Number,Sq1.Core.Livesim,LivesimBrokerEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimBrokerEditor.cs,anyTextBox_KeyUp,The following statement contains a magic number: if (parsed == false && whereItyped.Text.Length > 0) {  				whereItyped.BackColor = Color.FromArgb(255' 150' 150);  				return;  			}
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(3' 159);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(3' 159);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(345' 91);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(345' 91);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.TabIndex = 27;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeHappensOncePerQuoteMax.Location = new System.Drawing.Point(171' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeHappensOncePerQuoteMax.Location = new System.Drawing.Point(171' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeHappensOncePerQuoteMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeHappensOncePerQuoteMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeHappensOncePerQuoteMax.TabIndex = 10;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeHappensOncePerQuoteMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeHappensOncePerQuoteMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeHappensOncePerQuoteMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeHappensOncePerQuoteMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeHappensOncePerQuoteMin.TabIndex = 9;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size(96' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size(96' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label8.TabIndex = 28;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(153' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(153' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label6.TabIndex = 27;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeMillisMax.Location = new System.Drawing.Point(171' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeMillisMax.Location = new System.Drawing.Point(171' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeMillisMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeMillisMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeMillisMax.TabIndex = 12;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeMillisMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeMillisMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeMillisMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeMillisMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_QuoteGenerationFreezeMillisMin.TabIndex = 11;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(207' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(207' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label7.TabIndex = 26;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 23;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_QuoteGenerationFreezeEnabled.Location = new System.Drawing.Point(6' 69);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_QuoteGenerationFreezeEnabled.Location = new System.Drawing.Point(6' 69);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_QuoteGenerationFreezeEnabled.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_QuoteGenerationFreezeEnabled.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_QuoteGenerationFreezeEnabled.TabIndex = 13;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(153' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(153' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 22;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(207' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(207' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 20;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(3' 3);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(3' 3);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(345' 65);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(345' 65);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.TabIndex = 28;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(6' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(6' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label9.TabIndex = 34;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_DelayBetweenSerialQuotesEnabled.Location = new System.Drawing.Point(6' 42);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_DelayBetweenSerialQuotesEnabled.Location = new System.Drawing.Point(6' 42);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_DelayBetweenSerialQuotesEnabled.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_DelayBetweenSerialQuotesEnabled.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_DelayBetweenSerialQuotesEnabled.TabIndex = 3;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point(153' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point(153' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label10.TabIndex = 33;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBetweenSerialQuotesMax.Location = new System.Drawing.Point(171' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBetweenSerialQuotesMax.Location = new System.Drawing.Point(171' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBetweenSerialQuotesMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBetweenSerialQuotesMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBetweenSerialQuotesMax.TabIndex = 2;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBetweenSerialQuotesMin.Location = new System.Drawing.Point(119' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBetweenSerialQuotesMin.Location = new System.Drawing.Point(119' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBetweenSerialQuotesMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_DelayBetweenSerialQuotesMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label11.Location = new System.Drawing.Point(207' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label11.Location = new System.Drawing.Point(207' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label11.Size = new System.Drawing.Size(68' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label11.Size = new System.Drawing.Size(68' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label11.TabIndex = 31;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Location = new System.Drawing.Point(3' 250);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Location = new System.Drawing.Point(3' 250);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Size = new System.Drawing.Size(345' 90);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Size = new System.Drawing.Size(345' 90);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.TabIndex = 29;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(96' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(96' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 28;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(153' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(153' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 27;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMax.Location = new System.Drawing.Point(171' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMax.Location = new System.Drawing.Point(171' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMax.TabIndex = 17;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectReconnectsAfterMillisMin.TabIndex = 16;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label12.Location = new System.Drawing.Point(207' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label12.Location = new System.Drawing.Point(207' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label12.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label12.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label12.TabIndex = 26;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label13.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label13.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label13.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label13.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label13.TabIndex = 23;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_AdaperDisconnectEnabled.Location = new System.Drawing.Point(6' 67);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_AdaperDisconnectEnabled.Location = new System.Drawing.Point(6' 67);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_AdaperDisconnectEnabled.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_AdaperDisconnectEnabled.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_AdaperDisconnectEnabled.TabIndex = 18;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label14.Location = new System.Drawing.Point(153' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label14.Location = new System.Drawing.Point(153' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label14.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label14.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label14.TabIndex = 22;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMax.Location = new System.Drawing.Point(171' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMax.Location = new System.Drawing.Point(171' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMax.TabIndex = 15;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_AdaperDisconnectHappensOncePerQuoteMin.TabIndex = 14;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label15.Location = new System.Drawing.Point(207' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label15.Location = new System.Drawing.Point(207' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label15.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label15.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label15.TabIndex = 20;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox4.Location = new System.Drawing.Point(3' 68);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox4.Location = new System.Drawing.Point(3' 68);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox4.Size = new System.Drawing.Size(345' 91);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox4.Size = new System.Drawing.Size(345' 91);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox4.TabIndex = 30;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label16.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label16.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label16.Size = new System.Drawing.Size(96' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label16.Size = new System.Drawing.Size(96' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label16.TabIndex = 28;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label17.Location = new System.Drawing.Point(153' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label17.Location = new System.Drawing.Point(153' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label17.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label17.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label17.TabIndex = 27;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationDelayMillisMax.Location = new System.Drawing.Point(171' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationDelayMillisMax.Location = new System.Drawing.Point(171' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationDelayMillisMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationDelayMillisMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationDelayMillisMax.TabIndex = 7;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationDelayMillisMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationDelayMillisMin.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationDelayMillisMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationDelayMillisMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationDelayMillisMin.TabIndex = 6;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label18.Location = new System.Drawing.Point(207' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label18.Location = new System.Drawing.Point(207' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label18.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label18.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label18.TabIndex = 26;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label19.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label19.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label19.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label19.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label19.TabIndex = 23;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OutOfOrderQuoteGenerationEnabled.Location = new System.Drawing.Point(6' 70);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OutOfOrderQuoteGenerationEnabled.Location = new System.Drawing.Point(6' 70);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OutOfOrderQuoteGenerationEnabled.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OutOfOrderQuoteGenerationEnabled.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_OutOfOrderQuoteGenerationEnabled.TabIndex = 8;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label20.Location = new System.Drawing.Point(153' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label20.Location = new System.Drawing.Point(153' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label20.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label20.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label20.TabIndex = 22;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMax.Location = new System.Drawing.Point(171' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMax.Location = new System.Drawing.Point(171' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMax.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMax.TabIndex = 5;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMin.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMin.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMin.TabIndex = 4;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label21.Location = new System.Drawing.Point(207' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label21.Location = new System.Drawing.Point(207' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label21.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label21.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label21.TabIndex = 20;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox5.Location = new System.Drawing.Point(3' 346);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox5.Location = new System.Drawing.Point(3' 346);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox5.Size = new System.Drawing.Size(345' 115);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox5.Size = new System.Drawing.Size(345' 115);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox5.TabIndex = 30;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.checkBox2.Location = new System.Drawing.Point(6' 70);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.checkBox2.Location = new System.Drawing.Point(6' 70);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.checkBox2.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.checkBox2.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.checkBox2.TabIndex = 29;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label22.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label22.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label22.Size = new System.Drawing.Size(96' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label22.Size = new System.Drawing.Size(96' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label22.TabIndex = 28;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label23.Location = new System.Drawing.Point(153' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label23.Location = new System.Drawing.Point(153' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label23.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label23.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label23.TabIndex = 27;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(171' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(171' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.TabIndex = 17;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox2.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox2.Location = new System.Drawing.Point(119' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox2.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox2.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox2.TabIndex = 16;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label24.Location = new System.Drawing.Point(207' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label24.Location = new System.Drawing.Point(207' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label24.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label24.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label24.TabIndex = 26;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label25.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label25.Location = new System.Drawing.Point(6' 48);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label25.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label25.Size = new System.Drawing.Size(107' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label25.TabIndex = 23;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Location = new System.Drawing.Point(6' 92);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Location = new System.Drawing.Point(6' 92);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.checkBox1.TabIndex = 18;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label26.Location = new System.Drawing.Point(153' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label26.Location = new System.Drawing.Point(153' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label26.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label26.Size = new System.Drawing.Size(16' 15);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label26.TabIndex = 22;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox3.Location = new System.Drawing.Point(171' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox3.Location = new System.Drawing.Point(171' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox3.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox3.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox3.TabIndex = 15;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox4.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox4.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox4.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox4.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.textBox4.TabIndex = 14;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label27.Location = new System.Drawing.Point(207' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label27.Location = new System.Drawing.Point(207' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label27.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label27.Size = new System.Drawing.Size(93' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label27.TabIndex = 20;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_GenerateWideSpreadWithZeroSize.Location = new System.Drawing.Point(6' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_GenerateWideSpreadWithZeroSize.Location = new System.Drawing.Point(6' 45);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_GenerateWideSpreadWithZeroSize.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_GenerateWideSpreadWithZeroSize.Size = new System.Drawing.Size(333' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.cbx_GenerateWideSpreadWithZeroSize.TabIndex = 31;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox6.Location = new System.Drawing.Point(3' 467);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox6.Location = new System.Drawing.Point(3' 467);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox6.Size = new System.Drawing.Size(345' 64);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox6.Size = new System.Drawing.Size(345' 64);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.groupBox6.TabIndex = 31;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label28.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label28.Location = new System.Drawing.Point(6' 22);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label28.Size = new System.Drawing.Size(96' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label28.Size = new System.Drawing.Size(96' 17);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.label28.TabIndex = 28;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_levelTwoLevelsToGenerate.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_levelTwoLevelsToGenerate.Location = new System.Drawing.Point(119' 19);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_levelTwoLevelsToGenerate.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_levelTwoLevelsToGenerate.Size = new System.Drawing.Size(30' 20);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.txt_levelTwoLevelsToGenerate.TabIndex = 14;
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(351' 537);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(351' 537);
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,anyTextBox_KeyUp,The following statement contains a magic number: if (parsed == false && whereItyped.Text.Length > 0) {  				whereItyped.BackColor = Color.FromArgb(255' 150' 150);  				return;  			}
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,anyTextBox_KeyUp,The following statement contains a magic number: if (parsed == false && whereItyped.Text.Length > 0) {  				whereItyped.BackColor = Color.FromArgb(255' 150' 150);  				return;  			}
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,anyTextBox_KeyUp,The following statement contains a magic number: if (parsed == false && whereItyped.Text.Length > 0) {  				whereItyped.BackColor = Color.FromArgb(255' 150' 150);  				return;  			}
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,anyTextBox_KeyUp,The following statement contains a magic number: if (whereItyped == this.txt_DelayBetweenSerialQuotesMin) {  				if (parsedInt < 2) {	// at 2GHz/2core+hyperThreading(4) still allows to repaint chart fullscreen 2560x1600  					parsedInt = 2;		// otherwize GUI becomes completely irresponsive; Application.DoEvents will unleash guiHasTime while it doesn't  					whereItyped.Text = parsedInt.ToString();  				}  				this.livesimStreamingSettings.DelayBetweenSerialQuotesMin = parsedInt;    			} else if (whereItyped == this.txt_DelayBetweenSerialQuotesMax) {  				this.livesimStreamingSettings.DelayBetweenSerialQuotesMax = parsedInt;    			} else if (whereItyped == this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMin) {  				this.livesimStreamingSettings.OutOfOrderQuoteGenerationHappensOncePerQuoteMin = parsedInt;    			} else if (whereItyped == this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMax) {  				this.livesimStreamingSettings.OutOfOrderQuoteGenerationHappensOncePerQuoteMax = parsedInt;    			} else if (whereItyped == this.txt_OutOfOrderQuoteGenerationDelayMillisMin) {  				this.livesimStreamingSettings.OutOfOrderQuoteGenerationDelayMillisMin = parsedInt;    			} else if (whereItyped == this.txt_OutOfOrderQuoteGenerationDelayMillisMax) {  				this.livesimStreamingSettings.OutOfOrderQuoteGenerationDelayMillisMax = parsedInt;    			} else if (whereItyped == this.txt_QuoteGenerationFreezeHappensOncePerQuoteMin) {  				this.livesimStreamingSettings.QuoteGenerationFreezeHappensOncePerQuoteMin = parsedInt;    			} else if (whereItyped == this.txt_QuoteGenerationFreezeHappensOncePerQuoteMax) {  				this.livesimStreamingSettings.QuoteGenerationFreezeHappensOncePerQuoteMax = parsedInt;    			} else if (whereItyped == this.txt_QuoteGenerationFreezeMillisMin) {  				this.livesimStreamingSettings.QuoteGenerationFreezeMillisMin = parsedInt;    			} else if (whereItyped == this.txt_QuoteGenerationFreezeMillisMax) {  				this.livesimStreamingSettings.QuoteGenerationFreezeMillisMax = parsedInt;    			} else if (whereItyped == this.txt_AdaperDisconnectHappensOncePerQuoteMin) {  				this.livesimStreamingSettings.AdaperDisconnectHappensOncePerQuoteMin = parsedInt;    			} else if (whereItyped == this.txt_AdaperDisconnectHappensOncePerQuoteMax) {  				this.livesimStreamingSettings.AdaperDisconnectHappensOncePerQuoteMax = parsedInt;    			} else if (whereItyped == this.txt_AdaperDisconnectReconnectsAfterMillisMin) {  				this.livesimStreamingSettings.AdaperDisconnectReconnectsAfterMillisMin = parsedInt;    			} else if (whereItyped == this.txt_AdaperDisconnectReconnectsAfterMillisMax) {  				this.livesimStreamingSettings.AdaperDisconnectReconnectsAfterMillisMax = parsedInt;    			} else if (whereItyped == this.txt_levelTwoLevelsToGenerate) {  				this.livesimStreamingSettings.LevelTwoLevelsToGenerate = parsedInt;    			} else {  				Assembler.PopupException("ADD_TARGET_FOR_TYPING_PROPAGATION_FOR whereItyped[" + whereItyped.Text + "]/[" + whereItyped.Name + "]");  				return;  			}
Magic Number,Sq1.Core.Livesim,LivesimStreamingEditor,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingEditor.cs,anyTextBox_KeyUp,The following statement contains a magic number: if (whereItyped == this.txt_DelayBetweenSerialQuotesMin) {  				if (parsedInt < 2) {	// at 2GHz/2core+hyperThreading(4) still allows to repaint chart fullscreen 2560x1600  					parsedInt = 2;		// otherwize GUI becomes completely irresponsive; Application.DoEvents will unleash guiHasTime while it doesn't  					whereItyped.Text = parsedInt.ToString();  				}  				this.livesimStreamingSettings.DelayBetweenSerialQuotesMin = parsedInt;    			} else if (whereItyped == this.txt_DelayBetweenSerialQuotesMax) {  				this.livesimStreamingSettings.DelayBetweenSerialQuotesMax = parsedInt;    			} else if (whereItyped == this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMin) {  				this.livesimStreamingSettings.OutOfOrderQuoteGenerationHappensOncePerQuoteMin = parsedInt;    			} else if (whereItyped == this.txt_OutOfOrderQuoteGenerationHappensOncePerQuoteMax) {  				this.livesimStreamingSettings.OutOfOrderQuoteGenerationHappensOncePerQuoteMax = parsedInt;    			} else if (whereItyped == this.txt_OutOfOrderQuoteGenerationDelayMillisMin) {  				this.livesimStreamingSettings.OutOfOrderQuoteGenerationDelayMillisMin = parsedInt;    			} else if (whereItyped == this.txt_OutOfOrderQuoteGenerationDelayMillisMax) {  				this.livesimStreamingSettings.OutOfOrderQuoteGenerationDelayMillisMax = parsedInt;    			} else if (whereItyped == this.txt_QuoteGenerationFreezeHappensOncePerQuoteMin) {  				this.livesimStreamingSettings.QuoteGenerationFreezeHappensOncePerQuoteMin = parsedInt;    			} else if (whereItyped == this.txt_QuoteGenerationFreezeHappensOncePerQuoteMax) {  				this.livesimStreamingSettings.QuoteGenerationFreezeHappensOncePerQuoteMax = parsedInt;    			} else if (whereItyped == this.txt_QuoteGenerationFreezeMillisMin) {  				this.livesimStreamingSettings.QuoteGenerationFreezeMillisMin = parsedInt;    			} else if (whereItyped == this.txt_QuoteGenerationFreezeMillisMax) {  				this.livesimStreamingSettings.QuoteGenerationFreezeMillisMax = parsedInt;    			} else if (whereItyped == this.txt_AdaperDisconnectHappensOncePerQuoteMin) {  				this.livesimStreamingSettings.AdaperDisconnectHappensOncePerQuoteMin = parsedInt;    			} else if (whereItyped == this.txt_AdaperDisconnectHappensOncePerQuoteMax) {  				this.livesimStreamingSettings.AdaperDisconnectHappensOncePerQuoteMax = parsedInt;    			} else if (whereItyped == this.txt_AdaperDisconnectReconnectsAfterMillisMin) {  				this.livesimStreamingSettings.AdaperDisconnectReconnectsAfterMillisMin = parsedInt;    			} else if (whereItyped == this.txt_AdaperDisconnectReconnectsAfterMillisMax) {  				this.livesimStreamingSettings.AdaperDisconnectReconnectsAfterMillisMax = parsedInt;    			} else if (whereItyped == this.txt_levelTwoLevelsToGenerate) {  				this.livesimStreamingSettings.LevelTwoLevelsToGenerate = parsedInt;    			} else {  				Assembler.PopupException("ADD_TARGET_FOR_TYPING_PROPAGATION_FOR whereItyped[" + whereItyped.Text + "]/[" + whereItyped.Name + "]");  				return;  			}
Magic Number,Sq1.Core.Livesim,LivesimStreamingSettings,C:\repos\worldexplorer_SquareOne\Sq1.Core\Livesim\LivesimStreamingSettings.cs,LivesimStreamingSettings,The following statement contains a magic number: LevelTwoLevelsToGenerate = 10;
Magic Number,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The following statement contains a magic number: try {  				fileStream = File.Open(this.Abspath' FileMode.Open' FileAccess.Read' FileShare.Read);  				binaryReader = new BinaryReader(fileStream);    				string symbol_IGNOREDv3 = "NOT_READ_FROM_FILE";  				string symbolHumanReadable_IGNOREDv3;  				  				double version = binaryReader.ReadDouble();  				if (version != this.barFileCurrentVersion) {  					resaveRequiredByVersionMismatch = true;  					string msg = "WILL_RESAVE_IN_CURRENT_BAR_BINARY_FORMAT"  						+ " version[" + version + "] => this.barFileCurrentVersion[" + this.barFileCurrentVersion + "]"  						+ " resaveRequiredByVersionMismatch[" + resaveRequiredByVersionMismatch + "]";  					Assembler.PopupException(msg + msig' null' false);  				}  				  				if (version == 1) {  					//Assembler.PopupException("LoadBars[" + this.Relpath + "]: version[" + version + "]");  					symbol_IGNOREDv3 = binaryReader.ReadString();  					symbolHumanReadable_IGNOREDv3 = binaryReader.ReadString();  				} else if (version <= 2) {  					byte[] bytesSymbol = new byte[this.symbolMaxLength];  					binaryReader.Read(bytesSymbol' 0' this.symbolMaxLength);  					symbol_IGNOREDv3 = this.byteArrayToString(bytesSymbol);    					byte[] bytesSymbolHR = new byte[this.symbolHRMaxLength];  					binaryReader.Read(bytesSymbolHR' 0' this.symbolHRMaxLength);  					symbolHumanReadable_IGNOREDv3 = this.byteArrayToString(bytesSymbolHR);  				} else if (version <= 3) {  					// NO_SYMBOL_AND_HR_IS_PRESENT_IN_FILE  					int a = 1;  				}  				BarScale barScale = (BarScale)binaryReader.ReadInt32();  				int barInterval = binaryReader.ReadInt32();  				int barsStored = binaryReader.ReadInt32();  				this.headerSize = binaryReader.BaseStream.Position;		// BARS_LOAD_TELEMETRY    				BarScaleInterval scaleInterval = new BarScaleInterval(barScale' barInterval);  				//string shortFnameIneedMorePathParts = Path.GetFileName(this.Abspath);  				//string shortFname = this.Abspath.Substring(this.Abspath.IndexOf("" + Path.DirectorySeparatorChar + "Data" + Path.DirectorySeparatorChar + "") + 6);  				string shortFname = this.Relpath;  				//v1'2 AFTER_IMPLEMENTING_FIXED_SYMBOL_WIDTH_IGNORING_WHAT_I_READ_FROM_FILE  bars = new Bars(symbol' scaleInterval' shortFname);  				string v3ignoresSymbolFromFile = (this.barFileCurrentVersion <=2) ? symbol_IGNOREDv3 : this.Symbol;  				bars = new Bars(v3ignoresSymbolFromFile' scaleInterval' shortFname);  				  				//http://stackoverflow.com/questions/58380/avoiding-first-chance-exception-messages-when-the-exception-is-safely-handled  				//for (int barsRead = 0; barsRead<barsStored; barsRead++) {  				while (binaryReader.BaseStream.Position < binaryReader.BaseStream.Length) {  					long ticks = binaryReader.ReadInt64();  					DateTime dateTimeOpen;  					try {  						dateTimeOpen = new DateTime(ticks);  					} catch (Exception ex) {  						string msg = "FAILED_TO_CONVERT_TO_DATE_TICKS=[" + ticks + "]";  						long leftBoundaryOffendedBy = DateTime.MinValue.Ticks - ticks;  						if (leftBoundaryOffendedBy > 0) {  							msg += " leftBoundaryOffendedBy[" + leftBoundaryOffendedBy + "]";  						}  						long rightBoundaryOffendedBy = ticks - DateTime.MaxValue.Ticks;  						if (rightBoundaryOffendedBy > 0) {  							msg += " rightBoundaryOffendedBy[" + rightBoundaryOffendedBy + "]";  						}    						string illiteracyDive = ""  							+ " DateTime.MinValue.Ticks[" + DateTime.MinValue.Ticks+ "] ..."  							+ " DateTime.MaxValue.Ticks[" + DateTime.MaxValue.Ticks + "]";  						Assembler.PopupException(msg + illiteracyDive' ex' false);  						break;  					}  					double open		= binaryReader.ReadDouble();  					double high		= binaryReader.ReadDouble();  					double low		= binaryReader.ReadDouble();  					double close	= binaryReader.ReadDouble();  					double volume	= binaryReader.ReadDouble();  					barsReadTotal++;  					if (this.oneBarSize == 0) {  						// I want to print out the size of header and bar' but I don't want to extract save-able members from Bars and Bar to use Marshal.SizeOf(<T>)  						this.oneBarSize = binaryReader.BaseStream.Position - this.headerSize;	// BARS_LOAD_TELEMETRY  					}  					try {  						Bar barAdded = bars.BarStatic_createAppendAttach(dateTimeOpen' open' high' low' close' volume' true);  					} catch (Exception ex) {  						barsFailedCheckOHLCV++;  						// already reported exception in CheckOHLCVthrow  						string msg2 = " barsFailedCheckOHLCV[" + barsFailedCheckOHLCV + "]  barsReadTotal[" + barsReadTotal + "] bars.Count[" + bars.Count + "]"  							+ " binaryReader.BaseStream.Position[" + binaryReader.BaseStream.Position + "]/[" + binaryReader.BaseStream.Length + "]";  						Assembler.PopupException(msg2 + msig' ex' false);  						continue;	//just in case if you add code below :)  					}  				}  				  				string msg3 = "BARS_LOAD_ALL_TELEMETRY SIZEOF(header)[" + this.headerSize + "] SIZEOF(Bar)[" + this.oneBarSize + "]"  					+ " version[" + version + "] bars[" + bars + "] Relpath[" + this.Relpath + "]";  				//Assembler.PopupException(msg3 + msig' null' false);  				try {  					long barSize = this.barSizesByVersion[(int)version];  					if (barSize != this.oneBarSize) {  						//NOOOOOO this.barSizesByVersion[(int)version] = this.oneBarSize;  					}  				} catch (Exception ex) {  					string msg2 = "FAILED_TO_SYNC this.barSizesByVersion[" + version + "]";  					Assembler.PopupException(msg2 + msig' ex);  				}  	  				try {  					long headerSize = this.headerSizesByVersion[version];  					if (headerSize != this.headerSize) {  						#if DEBUG  						this.headerSizesByVersion[version] = this.headerSize;  						Assembler.PopupException("WHILE_LOADING_BARS_FILE_OVERWRITTEN_WITH_HEADER_FROM_NEWER_VERSION NEW_HEADER_SIZE[" + this.headerSize + "] " + msg3);  						#endif  					}  				} catch (Exception ex) {  					string msg2 = "FAILED_TO_SYNC this.headerSizesByVersion[" + version + "]";  					Assembler.PopupException(msg2 + msig' ex);  				}  			} catch (Exception ex) {  				string msg = "BARS_LOAD_ALL_FAILED[" + this.Abspath + "]";  				Assembler.PopupException(msg + msig' ex);  			} finally {  				if (binaryReader != null) {  					binaryReader.Close();  					binaryReader.Dispose();  				}  				if (fileStream != null) {  					fileStream.Close();  					fileStream.Dispose();  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The following statement contains a magic number: try {  				fileStream = File.Open(this.Abspath' FileMode.Open' FileAccess.Read' FileShare.Read);  				binaryReader = new BinaryReader(fileStream);    				string symbol_IGNOREDv3 = "NOT_READ_FROM_FILE";  				string symbolHumanReadable_IGNOREDv3;  				  				double version = binaryReader.ReadDouble();  				if (version != this.barFileCurrentVersion) {  					resaveRequiredByVersionMismatch = true;  					string msg = "WILL_RESAVE_IN_CURRENT_BAR_BINARY_FORMAT"  						+ " version[" + version + "] => this.barFileCurrentVersion[" + this.barFileCurrentVersion + "]"  						+ " resaveRequiredByVersionMismatch[" + resaveRequiredByVersionMismatch + "]";  					Assembler.PopupException(msg + msig' null' false);  				}  				  				if (version == 1) {  					//Assembler.PopupException("LoadBars[" + this.Relpath + "]: version[" + version + "]");  					symbol_IGNOREDv3 = binaryReader.ReadString();  					symbolHumanReadable_IGNOREDv3 = binaryReader.ReadString();  				} else if (version <= 2) {  					byte[] bytesSymbol = new byte[this.symbolMaxLength];  					binaryReader.Read(bytesSymbol' 0' this.symbolMaxLength);  					symbol_IGNOREDv3 = this.byteArrayToString(bytesSymbol);    					byte[] bytesSymbolHR = new byte[this.symbolHRMaxLength];  					binaryReader.Read(bytesSymbolHR' 0' this.symbolHRMaxLength);  					symbolHumanReadable_IGNOREDv3 = this.byteArrayToString(bytesSymbolHR);  				} else if (version <= 3) {  					// NO_SYMBOL_AND_HR_IS_PRESENT_IN_FILE  					int a = 1;  				}  				BarScale barScale = (BarScale)binaryReader.ReadInt32();  				int barInterval = binaryReader.ReadInt32();  				int barsStored = binaryReader.ReadInt32();  				this.headerSize = binaryReader.BaseStream.Position;		// BARS_LOAD_TELEMETRY    				BarScaleInterval scaleInterval = new BarScaleInterval(barScale' barInterval);  				//string shortFnameIneedMorePathParts = Path.GetFileName(this.Abspath);  				//string shortFname = this.Abspath.Substring(this.Abspath.IndexOf("" + Path.DirectorySeparatorChar + "Data" + Path.DirectorySeparatorChar + "") + 6);  				string shortFname = this.Relpath;  				//v1'2 AFTER_IMPLEMENTING_FIXED_SYMBOL_WIDTH_IGNORING_WHAT_I_READ_FROM_FILE  bars = new Bars(symbol' scaleInterval' shortFname);  				string v3ignoresSymbolFromFile = (this.barFileCurrentVersion <=2) ? symbol_IGNOREDv3 : this.Symbol;  				bars = new Bars(v3ignoresSymbolFromFile' scaleInterval' shortFname);  				  				//http://stackoverflow.com/questions/58380/avoiding-first-chance-exception-messages-when-the-exception-is-safely-handled  				//for (int barsRead = 0; barsRead<barsStored; barsRead++) {  				while (binaryReader.BaseStream.Position < binaryReader.BaseStream.Length) {  					long ticks = binaryReader.ReadInt64();  					DateTime dateTimeOpen;  					try {  						dateTimeOpen = new DateTime(ticks);  					} catch (Exception ex) {  						string msg = "FAILED_TO_CONVERT_TO_DATE_TICKS=[" + ticks + "]";  						long leftBoundaryOffendedBy = DateTime.MinValue.Ticks - ticks;  						if (leftBoundaryOffendedBy > 0) {  							msg += " leftBoundaryOffendedBy[" + leftBoundaryOffendedBy + "]";  						}  						long rightBoundaryOffendedBy = ticks - DateTime.MaxValue.Ticks;  						if (rightBoundaryOffendedBy > 0) {  							msg += " rightBoundaryOffendedBy[" + rightBoundaryOffendedBy + "]";  						}    						string illiteracyDive = ""  							+ " DateTime.MinValue.Ticks[" + DateTime.MinValue.Ticks+ "] ..."  							+ " DateTime.MaxValue.Ticks[" + DateTime.MaxValue.Ticks + "]";  						Assembler.PopupException(msg + illiteracyDive' ex' false);  						break;  					}  					double open		= binaryReader.ReadDouble();  					double high		= binaryReader.ReadDouble();  					double low		= binaryReader.ReadDouble();  					double close	= binaryReader.ReadDouble();  					double volume	= binaryReader.ReadDouble();  					barsReadTotal++;  					if (this.oneBarSize == 0) {  						// I want to print out the size of header and bar' but I don't want to extract save-able members from Bars and Bar to use Marshal.SizeOf(<T>)  						this.oneBarSize = binaryReader.BaseStream.Position - this.headerSize;	// BARS_LOAD_TELEMETRY  					}  					try {  						Bar barAdded = bars.BarStatic_createAppendAttach(dateTimeOpen' open' high' low' close' volume' true);  					} catch (Exception ex) {  						barsFailedCheckOHLCV++;  						// already reported exception in CheckOHLCVthrow  						string msg2 = " barsFailedCheckOHLCV[" + barsFailedCheckOHLCV + "]  barsReadTotal[" + barsReadTotal + "] bars.Count[" + bars.Count + "]"  							+ " binaryReader.BaseStream.Position[" + binaryReader.BaseStream.Position + "]/[" + binaryReader.BaseStream.Length + "]";  						Assembler.PopupException(msg2 + msig' ex' false);  						continue;	//just in case if you add code below :)  					}  				}  				  				string msg3 = "BARS_LOAD_ALL_TELEMETRY SIZEOF(header)[" + this.headerSize + "] SIZEOF(Bar)[" + this.oneBarSize + "]"  					+ " version[" + version + "] bars[" + bars + "] Relpath[" + this.Relpath + "]";  				//Assembler.PopupException(msg3 + msig' null' false);  				try {  					long barSize = this.barSizesByVersion[(int)version];  					if (barSize != this.oneBarSize) {  						//NOOOOOO this.barSizesByVersion[(int)version] = this.oneBarSize;  					}  				} catch (Exception ex) {  					string msg2 = "FAILED_TO_SYNC this.barSizesByVersion[" + version + "]";  					Assembler.PopupException(msg2 + msig' ex);  				}  	  				try {  					long headerSize = this.headerSizesByVersion[version];  					if (headerSize != this.headerSize) {  						#if DEBUG  						this.headerSizesByVersion[version] = this.headerSize;  						Assembler.PopupException("WHILE_LOADING_BARS_FILE_OVERWRITTEN_WITH_HEADER_FROM_NEWER_VERSION NEW_HEADER_SIZE[" + this.headerSize + "] " + msg3);  						#endif  					}  				} catch (Exception ex) {  					string msg2 = "FAILED_TO_SYNC this.headerSizesByVersion[" + version + "]";  					Assembler.PopupException(msg2 + msig' ex);  				}  			} catch (Exception ex) {  				string msg = "BARS_LOAD_ALL_FAILED[" + this.Abspath + "]";  				Assembler.PopupException(msg + msig' ex);  			} finally {  				if (binaryReader != null) {  					binaryReader.Close();  					binaryReader.Dispose();  				}  				if (fileStream != null) {  					fileStream.Close();  					fileStream.Dispose();  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsLoadAll_nullUnsafe,The following statement contains a magic number: try {  				fileStream = File.Open(this.Abspath' FileMode.Open' FileAccess.Read' FileShare.Read);  				binaryReader = new BinaryReader(fileStream);    				string symbol_IGNOREDv3 = "NOT_READ_FROM_FILE";  				string symbolHumanReadable_IGNOREDv3;  				  				double version = binaryReader.ReadDouble();  				if (version != this.barFileCurrentVersion) {  					resaveRequiredByVersionMismatch = true;  					string msg = "WILL_RESAVE_IN_CURRENT_BAR_BINARY_FORMAT"  						+ " version[" + version + "] => this.barFileCurrentVersion[" + this.barFileCurrentVersion + "]"  						+ " resaveRequiredByVersionMismatch[" + resaveRequiredByVersionMismatch + "]";  					Assembler.PopupException(msg + msig' null' false);  				}  				  				if (version == 1) {  					//Assembler.PopupException("LoadBars[" + this.Relpath + "]: version[" + version + "]");  					symbol_IGNOREDv3 = binaryReader.ReadString();  					symbolHumanReadable_IGNOREDv3 = binaryReader.ReadString();  				} else if (version <= 2) {  					byte[] bytesSymbol = new byte[this.symbolMaxLength];  					binaryReader.Read(bytesSymbol' 0' this.symbolMaxLength);  					symbol_IGNOREDv3 = this.byteArrayToString(bytesSymbol);    					byte[] bytesSymbolHR = new byte[this.symbolHRMaxLength];  					binaryReader.Read(bytesSymbolHR' 0' this.symbolHRMaxLength);  					symbolHumanReadable_IGNOREDv3 = this.byteArrayToString(bytesSymbolHR);  				} else if (version <= 3) {  					// NO_SYMBOL_AND_HR_IS_PRESENT_IN_FILE  					int a = 1;  				}  				BarScale barScale = (BarScale)binaryReader.ReadInt32();  				int barInterval = binaryReader.ReadInt32();  				int barsStored = binaryReader.ReadInt32();  				this.headerSize = binaryReader.BaseStream.Position;		// BARS_LOAD_TELEMETRY    				BarScaleInterval scaleInterval = new BarScaleInterval(barScale' barInterval);  				//string shortFnameIneedMorePathParts = Path.GetFileName(this.Abspath);  				//string shortFname = this.Abspath.Substring(this.Abspath.IndexOf("" + Path.DirectorySeparatorChar + "Data" + Path.DirectorySeparatorChar + "") + 6);  				string shortFname = this.Relpath;  				//v1'2 AFTER_IMPLEMENTING_FIXED_SYMBOL_WIDTH_IGNORING_WHAT_I_READ_FROM_FILE  bars = new Bars(symbol' scaleInterval' shortFname);  				string v3ignoresSymbolFromFile = (this.barFileCurrentVersion <=2) ? symbol_IGNOREDv3 : this.Symbol;  				bars = new Bars(v3ignoresSymbolFromFile' scaleInterval' shortFname);  				  				//http://stackoverflow.com/questions/58380/avoiding-first-chance-exception-messages-when-the-exception-is-safely-handled  				//for (int barsRead = 0; barsRead<barsStored; barsRead++) {  				while (binaryReader.BaseStream.Position < binaryReader.BaseStream.Length) {  					long ticks = binaryReader.ReadInt64();  					DateTime dateTimeOpen;  					try {  						dateTimeOpen = new DateTime(ticks);  					} catch (Exception ex) {  						string msg = "FAILED_TO_CONVERT_TO_DATE_TICKS=[" + ticks + "]";  						long leftBoundaryOffendedBy = DateTime.MinValue.Ticks - ticks;  						if (leftBoundaryOffendedBy > 0) {  							msg += " leftBoundaryOffendedBy[" + leftBoundaryOffendedBy + "]";  						}  						long rightBoundaryOffendedBy = ticks - DateTime.MaxValue.Ticks;  						if (rightBoundaryOffendedBy > 0) {  							msg += " rightBoundaryOffendedBy[" + rightBoundaryOffendedBy + "]";  						}    						string illiteracyDive = ""  							+ " DateTime.MinValue.Ticks[" + DateTime.MinValue.Ticks+ "] ..."  							+ " DateTime.MaxValue.Ticks[" + DateTime.MaxValue.Ticks + "]";  						Assembler.PopupException(msg + illiteracyDive' ex' false);  						break;  					}  					double open		= binaryReader.ReadDouble();  					double high		= binaryReader.ReadDouble();  					double low		= binaryReader.ReadDouble();  					double close	= binaryReader.ReadDouble();  					double volume	= binaryReader.ReadDouble();  					barsReadTotal++;  					if (this.oneBarSize == 0) {  						// I want to print out the size of header and bar' but I don't want to extract save-able members from Bars and Bar to use Marshal.SizeOf(<T>)  						this.oneBarSize = binaryReader.BaseStream.Position - this.headerSize;	// BARS_LOAD_TELEMETRY  					}  					try {  						Bar barAdded = bars.BarStatic_createAppendAttach(dateTimeOpen' open' high' low' close' volume' true);  					} catch (Exception ex) {  						barsFailedCheckOHLCV++;  						// already reported exception in CheckOHLCVthrow  						string msg2 = " barsFailedCheckOHLCV[" + barsFailedCheckOHLCV + "]  barsReadTotal[" + barsReadTotal + "] bars.Count[" + bars.Count + "]"  							+ " binaryReader.BaseStream.Position[" + binaryReader.BaseStream.Position + "]/[" + binaryReader.BaseStream.Length + "]";  						Assembler.PopupException(msg2 + msig' ex' false);  						continue;	//just in case if you add code below :)  					}  				}  				  				string msg3 = "BARS_LOAD_ALL_TELEMETRY SIZEOF(header)[" + this.headerSize + "] SIZEOF(Bar)[" + this.oneBarSize + "]"  					+ " version[" + version + "] bars[" + bars + "] Relpath[" + this.Relpath + "]";  				//Assembler.PopupException(msg3 + msig' null' false);  				try {  					long barSize = this.barSizesByVersion[(int)version];  					if (barSize != this.oneBarSize) {  						//NOOOOOO this.barSizesByVersion[(int)version] = this.oneBarSize;  					}  				} catch (Exception ex) {  					string msg2 = "FAILED_TO_SYNC this.barSizesByVersion[" + version + "]";  					Assembler.PopupException(msg2 + msig' ex);  				}  	  				try {  					long headerSize = this.headerSizesByVersion[version];  					if (headerSize != this.headerSize) {  						#if DEBUG  						this.headerSizesByVersion[version] = this.headerSize;  						Assembler.PopupException("WHILE_LOADING_BARS_FILE_OVERWRITTEN_WITH_HEADER_FROM_NEWER_VERSION NEW_HEADER_SIZE[" + this.headerSize + "] " + msg3);  						#endif  					}  				} catch (Exception ex) {  					string msg2 = "FAILED_TO_SYNC this.headerSizesByVersion[" + version + "]";  					Assembler.PopupException(msg2 + msig' ex);  				}  			} catch (Exception ex) {  				string msg = "BARS_LOAD_ALL_FAILED[" + this.Abspath + "]";  				Assembler.PopupException(msg + msig' ex);  			} finally {  				if (binaryReader != null) {  					binaryReader.Close();  					binaryReader.Dispose();  				}  				if (fileStream != null) {  					fileStream.Close();  					fileStream.Dispose();  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsSave,The following statement contains a magic number: try {  				// LAZY to extract save-able members from Bars and Bar to use Marshal.SizeOf(<T>) TODO create header structure and have its length the same both for Read & Write  				  				// HEADER BEGIN  				binaryWriter = new BinaryWriter(fileStream);  				binaryWriter.Write((double)this.barFileCurrentVersion); // yes it was double :)  				if (this.barFileCurrentVersion == 1) {  					binaryWriter.Write(bars.Symbol);  					binaryWriter.Write(bars.SymbolHumanReadable);  				} else if (this.barFileCurrentVersion <= 2) {  					byte[] byteBufferSymbol = this.stringToByteArray(bars.Symbol' this.symbolMaxLength);  					binaryWriter.Write(byteBufferSymbol);  					byte[] byteBufferSymbolHR = this.stringToByteArray(bars.SymbolHumanReadable' this.symbolHRMaxLength);  					binaryWriter.Write(byteBufferSymbolHR);  				} else if (this.barFileCurrentVersion <= 3) {  					// NO_SYMBOL_AND_HR_IS_PRESENT_IN_FILE  				}  				binaryWriter.Write((int)bars.ScaleInterval.Scale);  				binaryWriter.Write(bars.ScaleInterval.Interval);  				binaryWriter.Write(bars.Count);  				// HEADER END  				  				for (int i = 0; i < bars.Count; i++) {  					Bar bar = bars[i];  					try {  						bar.CheckOHLCVthrow();	//	catching the exception will display stacktrace in ExceptionsForm  					} catch (Exception ex) {  						barsFailedCheckOHLCV++;  						string msg = "NOT_SAVING_TO_FILE_THIS_BAR__TOO_LATE_TO_FIND_WHO_GENERATED_IT barAllZeroes bar[" + bar + "]";  						Assembler.PopupException(msg' ex' false);  						continue;  					}  					binaryWriter.Write(bar.DateTimeOpen.Ticks);  					binaryWriter.Write(bar.Open);  					binaryWriter.Write(bar.High);  					binaryWriter.Write(bar.Low);  					binaryWriter.Write(bar.Close);  					binaryWriter.Write(bar.Volume);  					barsSaved++;  				}  			} catch (Exception ex) {  				string msg = "Error while Saving bars[" + this + "] into [" + this.Abspath + "]";  				Assembler.PopupException(msg' ex);  			} finally {  				if (binaryWriter != null) {  					binaryWriter.Close();  					binaryWriter.Dispose();  				}  				if (fileStream != null) {  					fileStream.Close();  					fileStream.Dispose();  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryBarsFile,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryBarsFile.Obsolete.cs,barsSave,The following statement contains a magic number: try {  				// LAZY to extract save-able members from Bars and Bar to use Marshal.SizeOf(<T>) TODO create header structure and have its length the same both for Read & Write  				  				// HEADER BEGIN  				binaryWriter = new BinaryWriter(fileStream);  				binaryWriter.Write((double)this.barFileCurrentVersion); // yes it was double :)  				if (this.barFileCurrentVersion == 1) {  					binaryWriter.Write(bars.Symbol);  					binaryWriter.Write(bars.SymbolHumanReadable);  				} else if (this.barFileCurrentVersion <= 2) {  					byte[] byteBufferSymbol = this.stringToByteArray(bars.Symbol' this.symbolMaxLength);  					binaryWriter.Write(byteBufferSymbol);  					byte[] byteBufferSymbolHR = this.stringToByteArray(bars.SymbolHumanReadable' this.symbolHRMaxLength);  					binaryWriter.Write(byteBufferSymbolHR);  				} else if (this.barFileCurrentVersion <= 3) {  					// NO_SYMBOL_AND_HR_IS_PRESENT_IN_FILE  				}  				binaryWriter.Write((int)bars.ScaleInterval.Scale);  				binaryWriter.Write(bars.ScaleInterval.Interval);  				binaryWriter.Write(bars.Count);  				// HEADER END  				  				for (int i = 0; i < bars.Count; i++) {  					Bar bar = bars[i];  					try {  						bar.CheckOHLCVthrow();	//	catching the exception will display stacktrace in ExceptionsForm  					} catch (Exception ex) {  						barsFailedCheckOHLCV++;  						string msg = "NOT_SAVING_TO_FILE_THIS_BAR__TOO_LATE_TO_FIND_WHO_GENERATED_IT barAllZeroes bar[" + bar + "]";  						Assembler.PopupException(msg' ex' false);  						continue;  					}  					binaryWriter.Write(bar.DateTimeOpen.Ticks);  					binaryWriter.Write(bar.Open);  					binaryWriter.Write(bar.High);  					binaryWriter.Write(bar.Low);  					binaryWriter.Write(bar.Close);  					binaryWriter.Write(bar.Volume);  					barsSaved++;  				}  			} catch (Exception ex) {  				string msg = "Error while Saving bars[" + this + "] into [" + this.Abspath + "]";  				Assembler.PopupException(msg' ex);  			} finally {  				if (binaryWriter != null) {  					binaryWriter.Close();  					binaryWriter.Dispose();  				}  				if (fileStream != null) {  					fileStream.Close();  					fileStream.Dispose();  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,jsonRename,The following statement contains a magic number: if (Directory.Exists(abspathNewJsonName)) {  				string abspathNewRandomFolderName = Path.Combine(this.AbsPath' jsonRelnameAfterRename + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  				int newNameGenTrialsDone = 0;  				int newNameGenTrialsLimit = 1000;  				while (Directory.Exists(abspathNewRandomFolderName)) {  					abspathNewRandomFolderName = Path.Combine(this.AbsPath' jsonRelnameAfterRename + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  					newNameGenTrialsDone++;  					if (newNameGenTrialsDone >= newNameGenTrialsLimit) {  						string fatal = "CHECK_YOUR_FOLDER_IT_HAS_WAY_TOO_MANY_-OutOfMyWay-_FOLDERS LAST_EXISTING[" + abspathNewRandomFolderName + "]"  							+ " newNameGenTrialsDone[" + newNameGenTrialsDone + "] >= newNameGenTrialsLimit[" +  newNameGenTrialsLimit + "]";  						//throw new Exception(fatal + msig);  						Assembler.PopupException(fatal + msig);  						return ret;  					}  				}  				string msg = "DATASOURCE_NEW_FOLDER_ALREADY_EXISTS abspathNewFolderName[" + abspathNewJsonName + "]=>renamingToRandom[" + abspathNewRandomFolderName + "] TO_GET_CLEAR_WAY";  				try {  					Directory.Move(abspathNewJsonName' abspathNewRandomFolderName);  					Assembler.PopupException(msg + msig);  				} catch (Exception ex) {  					msg = "RENAME_FAILED__GRANT_YOURSELF_FULL_CONTROL_TO_FOLDER this.AbsPath[" + this.AbsPath + "] " + msg;  					Assembler.PopupException(msg + msig' ex);  					return ret;  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,jsonRename,The following statement contains a magic number: if (Directory.Exists(abspathNewJsonName)) {  				string abspathNewRandomFolderName = Path.Combine(this.AbsPath' jsonRelnameAfterRename + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  				int newNameGenTrialsDone = 0;  				int newNameGenTrialsLimit = 1000;  				while (Directory.Exists(abspathNewRandomFolderName)) {  					abspathNewRandomFolderName = Path.Combine(this.AbsPath' jsonRelnameAfterRename + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  					newNameGenTrialsDone++;  					if (newNameGenTrialsDone >= newNameGenTrialsLimit) {  						string fatal = "CHECK_YOUR_FOLDER_IT_HAS_WAY_TOO_MANY_-OutOfMyWay-_FOLDERS LAST_EXISTING[" + abspathNewRandomFolderName + "]"  							+ " newNameGenTrialsDone[" + newNameGenTrialsDone + "] >= newNameGenTrialsLimit[" +  newNameGenTrialsLimit + "]";  						//throw new Exception(fatal + msig);  						Assembler.PopupException(fatal + msig);  						return ret;  					}  				}  				string msg = "DATASOURCE_NEW_FOLDER_ALREADY_EXISTS abspathNewFolderName[" + abspathNewJsonName + "]=>renamingToRandom[" + abspathNewRandomFolderName + "] TO_GET_CLEAR_WAY";  				try {  					Directory.Move(abspathNewJsonName' abspathNewRandomFolderName);  					Assembler.PopupException(msg + msig);  				} catch (Exception ex) {  					msg = "RENAME_FAILED__GRANT_YOURSELF_FULL_CONTROL_TO_FOLDER this.AbsPath[" + this.AbsPath + "] " + msg;  					Assembler.PopupException(msg + msig' ex);  					return ret;  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,jsonRename,The following statement contains a magic number: if (Directory.Exists(abspathNewJsonName)) {  				string abspathNewRandomFolderName = Path.Combine(this.AbsPath' jsonRelnameAfterRename + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  				int newNameGenTrialsDone = 0;  				int newNameGenTrialsLimit = 1000;  				while (Directory.Exists(abspathNewRandomFolderName)) {  					abspathNewRandomFolderName = Path.Combine(this.AbsPath' jsonRelnameAfterRename + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  					newNameGenTrialsDone++;  					if (newNameGenTrialsDone >= newNameGenTrialsLimit) {  						string fatal = "CHECK_YOUR_FOLDER_IT_HAS_WAY_TOO_MANY_-OutOfMyWay-_FOLDERS LAST_EXISTING[" + abspathNewRandomFolderName + "]"  							+ " newNameGenTrialsDone[" + newNameGenTrialsDone + "] >= newNameGenTrialsLimit[" +  newNameGenTrialsLimit + "]";  						//throw new Exception(fatal + msig);  						Assembler.PopupException(fatal + msig);  						return ret;  					}  				}  				string msg = "DATASOURCE_NEW_FOLDER_ALREADY_EXISTS abspathNewFolderName[" + abspathNewJsonName + "]=>renamingToRandom[" + abspathNewRandomFolderName + "] TO_GET_CLEAR_WAY";  				try {  					Directory.Move(abspathNewJsonName' abspathNewRandomFolderName);  					Assembler.PopupException(msg + msig);  				} catch (Exception ex) {  					msg = "RENAME_FAILED__GRANT_YOURSELF_FULL_CONTROL_TO_FOLDER this.AbsPath[" + this.AbsPath + "] " + msg;  					Assembler.PopupException(msg + msig' ex);  					return ret;  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,jsonRename,The following statement contains a magic number: if (Directory.Exists(abspathNewJsonName)) {  				string abspathNewRandomFolderName = Path.Combine(this.AbsPath' jsonRelnameAfterRename + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  				int newNameGenTrialsDone = 0;  				int newNameGenTrialsLimit = 1000;  				while (Directory.Exists(abspathNewRandomFolderName)) {  					abspathNewRandomFolderName = Path.Combine(this.AbsPath' jsonRelnameAfterRename + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  					newNameGenTrialsDone++;  					if (newNameGenTrialsDone >= newNameGenTrialsLimit) {  						string fatal = "CHECK_YOUR_FOLDER_IT_HAS_WAY_TOO_MANY_-OutOfMyWay-_FOLDERS LAST_EXISTING[" + abspathNewRandomFolderName + "]"  							+ " newNameGenTrialsDone[" + newNameGenTrialsDone + "] >= newNameGenTrialsLimit[" +  newNameGenTrialsLimit + "]";  						//throw new Exception(fatal + msig);  						Assembler.PopupException(fatal + msig);  						return ret;  					}  				}  				string msg = "DATASOURCE_NEW_FOLDER_ALREADY_EXISTS abspathNewFolderName[" + abspathNewJsonName + "]=>renamingToRandom[" + abspathNewRandomFolderName + "] TO_GET_CLEAR_WAY";  				try {  					Directory.Move(abspathNewJsonName' abspathNewRandomFolderName);  					Assembler.PopupException(msg + msig);  				} catch (Exception ex) {  					msg = "RENAME_FAILED__GRANT_YOURSELF_FULL_CONTROL_TO_FOLDER this.AbsPath[" + this.AbsPath + "] " + msg;  					Assembler.PopupException(msg + msig' ex);  					return ret;  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryJsonsInFolder<DATASOURCE>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryJsonsInFolder.cs,jsonRename,The following statement contains a magic number: if (Directory.Exists(abspathNewJsonName)) {  				string abspathNewRandomFolderName = Path.Combine(this.AbsPath' jsonRelnameAfterRename + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  				int newNameGenTrialsDone = 0;  				int newNameGenTrialsLimit = 1000;  				while (Directory.Exists(abspathNewRandomFolderName)) {  					abspathNewRandomFolderName = Path.Combine(this.AbsPath' jsonRelnameAfterRename + "-OutOfMyWay-" + new Random().Next(1000000' 9999999));  					newNameGenTrialsDone++;  					if (newNameGenTrialsDone >= newNameGenTrialsLimit) {  						string fatal = "CHECK_YOUR_FOLDER_IT_HAS_WAY_TOO_MANY_-OutOfMyWay-_FOLDERS LAST_EXISTING[" + abspathNewRandomFolderName + "]"  							+ " newNameGenTrialsDone[" + newNameGenTrialsDone + "] >= newNameGenTrialsLimit[" +  newNameGenTrialsLimit + "]";  						//throw new Exception(fatal + msig);  						Assembler.PopupException(fatal + msig);  						return ret;  					}  				}  				string msg = "DATASOURCE_NEW_FOLDER_ALREADY_EXISTS abspathNewFolderName[" + abspathNewJsonName + "]=>renamingToRandom[" + abspathNewRandomFolderName + "] TO_GET_CLEAR_WAY";  				try {  					Directory.Move(abspathNewJsonName' abspathNewRandomFolderName);  					Assembler.PopupException(msg + msig);  				} catch (Exception ex) {  					msg = "RENAME_FAILED__GRANT_YOURSELF_FULL_CONTROL_TO_FOLDER this.AbsPath[" + this.AbsPath + "] " + msg;  					Assembler.PopupException(msg + msig' ex);  					return ret;  				}  			}
Magic Number,Sq1.Core.Repositories,RepositorySerializerMarketInfos,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositorySerializerMarketInfos.cs,parseCsv,The following statement contains a magic number: using (StreamReader textReader = new StreamReader(filename)) {  				CsvConfiguration cfg = new CsvConfiguration();  				cfg.Delimiter = delimeters;  				cfg.AllowComments = true;  				var csv = new CsvReader(textReader' cfg);  				while (csv.Read()) {  					string[] fields = csv.CurrentRecord;  					if (fields.Length < 3) continue;  					//cfg.AllowComments = true if (fields[0].TrimStart(" ".ToCharArray()).StartsWith("#")) continue;    					string timeZoneWindowsName = fields[1].Trim();		// Central Standard Time  					string timeZoneGmtCity = fields[2].Trim();			// (GMT-06:00) Central Time (US and Canada)    					if (ret.ContainsKey(timeZoneGmtCity)) continue;  					ret.Add(timeZoneGmtCity' timeZoneWindowsName);  				}  			}
Magic Number,Sq1.Core.Repositories,RepositorySerializerMarketInfos,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositorySerializerMarketInfos.cs,parseCsv,The following statement contains a magic number: using (StreamReader textReader = new StreamReader(filename)) {  				CsvConfiguration cfg = new CsvConfiguration();  				cfg.Delimiter = delimeters;  				cfg.AllowComments = true;  				var csv = new CsvReader(textReader' cfg);  				while (csv.Read()) {  					string[] fields = csv.CurrentRecord;  					if (fields.Length < 3) continue;  					//cfg.AllowComments = true if (fields[0].TrimStart(" ".ToCharArray()).StartsWith("#")) continue;    					string timeZoneWindowsName = fields[1].Trim();		// Central Standard Time  					string timeZoneGmtCity = fields[2].Trim();			// (GMT-06:00) Central Time (US and Canada)    					if (ret.ContainsKey(timeZoneGmtCity)) continue;  					ret.Add(timeZoneGmtCity' timeZoneWindowsName);  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,FolderRenameModifyNameTillNoException,The following statement contains a magic number: int limit = 10;
Magic Number,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,FolderRenameCheckThrow,The following statement contains a magic number: if (folderNameFrom.Length > 4) {  				string substr = folderNameFrom.Substring(folderNameFrom.Length - 4);  				if (substr.ToUpper() == ".DLL") {  					string msg = "Adjust your GUI so that folder.ActivatedFromDll is not rename-able and its folder";  					throw new Exception(msig + msg);  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,FolderRenameCheckThrow,The following statement contains a magic number: if (folderNameFrom.Length > 4) {  				string substr = folderNameFrom.Substring(folderNameFrom.Length - 4);  				if (substr.ToUpper() == ".DLL") {  					string msg = "Adjust your GUI so that folder.ActivatedFromDll is not rename-able and its folder";  					throw new Exception(msig + msg);  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,FolderDelete,The following statement contains a magic number: if (folderName.Length > 4) {  				string substr = folderName.Substring(folderName.Length - 4);  				if (substr.ToUpper() == ".DLL") {  					string msg = "Adjust your GUI so that folder.ActivatedFromDll is not rename-able and its folder";  					throw new Exception(msig + msg);  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,FolderDelete,The following statement contains a magic number: if (folderName.Length > 4) {  				string substr = folderName.Substring(folderName.Length - 4);  				if (substr.ToUpper() == ".DLL") {  					string msg = "Adjust your GUI so that folder.ActivatedFromDll is not rename-able and its folder";  					throw new Exception(msig + msg);  				}  			}
Magic Number,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,StrategyRenameModifyNameTillNoException,The following statement contains a magic number: int limit = 10;
Magic Number,Sq1.Core.Repositories,RepositoryDllJsonStrategies,C:\repos\worldexplorer_SquareOne\Sq1.Core\Repositories\RepositoryDllJsonStrategies.cs,GenerateStrategyName,The following statement contains a magic number: int limit = 100;
Magic Number,Sq1.Core.Sequencing,SequencedBacktests,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SequencedBacktests.cs,CalculateProfitFactorAverage,The following statement contains a magic number: this.ProfitFactorAverage = Math.Round(this.ProfitFactorAverage' 2);
Magic Number,Sq1.Core.Sequencing,SequencedBacktests,C:\repos\worldexplorer_SquareOne\Sq1.Core\Sequencing\SequencedBacktests.cs,Clear,The following statement contains a magic number: this.SubsetPercentage = 100;
Magic Number,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,Indicator,The following statement contains a magic number: Decimals = 2;
Magic Number,Sq1.Core.Indicators,Indicator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\Indicator.cs,checkBandValue,The following statement contains a magic number: if (valueOk == true && bandLowerOrUpper.Count < 2) {  				string msg = "INDICATOR_BAND_PREVIOUS_VALUE_DOESNT_EXIST " + bandSeriesName  					 + ".Count=[" + bandLowerOrUpper.Count + "] must be >= 2";  				Assembler.PopupException(msg + msig);  				valueOk = false;  			}
Magic Number,Sq1.Core.Indicators,IndicatorAverageTrueRange,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAverageTrueRange.cs,IndicatorAverageTrueRange,The following statement contains a magic number: ParamPeriod = new IndicatorParameter("Period"' 5' 1' 11' 2);
Magic Number,Sq1.Core.Indicators,IndicatorAverageTrueRange,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAverageTrueRange.cs,IndicatorAverageTrueRange,The following statement contains a magic number: ParamPeriod = new IndicatorParameter("Period"' 5' 1' 11' 2);
Magic Number,Sq1.Core.Indicators,IndicatorAverageTrueRange,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAverageTrueRange.cs,IndicatorAverageTrueRange,The following statement contains a magic number: ParamPeriod = new IndicatorParameter("Period"' 5' 1' 11' 2);
Magic Number,Sq1.Core.Indicators,IndicatorAtrBand,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAtrBand.cs,IndicatorAtrBand,The following statement contains a magic number: this.ParamMultiplier = new IndicatorParameter("Multiplier"' 1' 0.1' 10' 0.1);
Magic Number,Sq1.Core.Indicators,IndicatorAtrBand,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAtrBand.cs,IndicatorAtrBand,The following statement contains a magic number: this.ParamMultiplier = new IndicatorParameter("Multiplier"' 1' 0.1' 10' 0.1);
Magic Number,Sq1.Core.Indicators,IndicatorAtrBand,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorAtrBand.cs,IndicatorAtrBand,The following statement contains a magic number: this.ParamMultiplier = new IndicatorParameter("Multiplier"' 1' 0.1' 10' 0.1);
Magic Number,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,IndicatorMovingAverageSimple,The following statement contains a magic number: ParamPeriod = new IndicatorParameter("Period"' 55' 11' 99' 11);
Magic Number,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,IndicatorMovingAverageSimple,The following statement contains a magic number: ParamPeriod = new IndicatorParameter("Period"' 55' 11' 99' 11);
Magic Number,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,IndicatorMovingAverageSimple,The following statement contains a magic number: ParamPeriod = new IndicatorParameter("Period"' 55' 11' 99' 11);
Magic Number,Sq1.Core.Indicators,IndicatorMovingAverageSimple,C:\repos\worldexplorer_SquareOne\Sq1.Core\Indicators\IndicatorMovingAverageSimple.cs,IndicatorMovingAverageSimple,The following statement contains a magic number: ParamPeriod = new IndicatorParameter("Period"' 55' 11' 99' 11);
Magic Number,Sq1.Core.Serializers,SerializerLogrotate<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Serializers\SerializerLogrotate.cs,SerializerLogrotate,The following statement contains a magic number: this.logRotateSizeLimit = 2 * 1024 * 1024;
Magic Number,Sq1.Core.Serializers,SerializerLogrotate<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Serializers\SerializerLogrotate.cs,SerializerLogrotate,The following statement contains a magic number: this.logRotateSizeLimit = 2 * 1024 * 1024;
Magic Number,Sq1.Core.Serializers,SerializerLogrotate<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Serializers\SerializerLogrotate.cs,SerializerLogrotate,The following statement contains a magic number: this.logRotateSizeLimit = 2 * 1024 * 1024;
Magic Number,Sq1.Core.StrategyBase,ContextChart,C:\repos\worldexplorer_SquareOne\Sq1.Core\Charting\ContextChart.cs,ContextChart,The following statement contains a magic number: DataRange					= new BarDataRange(500);
Magic Number,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,BacktesterRun_trampoline,The following statement contains a magic number: if (inNewThread) {  				int ThreadPoolAvailablePercentageLimit = 20;  				int threadPoolAvailablePercentage = this.getThreadPoolAvailable_percentage();  				if (threadPoolAvailablePercentage < ThreadPoolAvailablePercentageLimit) {  					string msg = "NOT_SCHEDULING_RUN_SIMULATION QueueUserWorkItem(backtesterRunSimulationThreadEntryPoint)"  						+ " because threadPoolAvailablePercentage[" + threadPoolAvailablePercentage  						+ "]<" + ThreadPoolAvailablePercentageLimit + "%";  					#if DEBUG  					Debugger.Break();  					#endif  					throw new Exception(msg);  				}  				//this.MainForm.PopupException("SCHEDULING_RUN_SIMULATION for Strategy[" + this.Executor.Strategy + "] on Bars[" + this.Executor.Bars + "]");    				//v1  				//ThreadPool.QueueUserWorkItem(new WaitCallback(this.backtesterRunSimulationThreadEntryPoint));  				  				//v2  				//http://stackoverflow.com/questions/7582853/what-wpf-threading-approach-should-i-go-with/7584422#7584422  				//Task.Factory.StartNew(() => {  				//	// Background work  				//	this.backtesterRunSimulationThreadEntryPoint();  				//}).ContinueWith((t) => {  				//	// Update UI thread  				//	executeAfterSimulation();  				//}' TaskScheduler.FromCurrentSynchronizationContext());    				//v3  				Task backtesterTask = new Task(this.BacktesterRunSimulation_threadEntry_exceptionCatcher);  				if (executeAfterSimulationEvenIfIFailed != null) {  					backtesterTask.ContinueWith((t) => {  						executeAfterSimulationEvenIfIFailed(this);  						//this.PerformanceAfterBacktest = new SystemPerformance(this);	// MULTITHREADING_ISSUE__YOU_MUST_PASS_CLONE_AND_THEN_LET_OTHER_DISPOSABLE_EXECUTOR_TO_RUN_ANOTHER_BACKTEST  					});  				}  				//ON_REQUESTING_ABORT_TASK_DIES_WITHOUT_INVOKING_CONTINUE_WITH started.Start(TaskScheduler.FromCurrentSynchronizationContext());  				backtesterTask.Start();		// WHO_DOES t.Dispose() ?  			} else {  				//this.Executor.BacktesterRunSimulation();  				//this.ChartForm.Chart.DoInvalidate();  				this.BacktesterRunSimulation_threadEntry_exceptionCatcher();  				if (executeAfterSimulationEvenIfIFailed != null) {  					executeAfterSimulationEvenIfIFailed(this);  				}  			}
Magic Number,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,getThreadPoolAvailable_percentage,The following statement contains a magic number: return (completionPortThreadsMax / completionPortThreadsAvailable) * 100;
Magic Number,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,callbackAlertFilled_moveAround_invokeScript_reenterablyUnprotected,The following statement contains a magic number: if (proto != null) {  				// 0. once again' set ExitAlert to What was actually filled' because prototypeEntry created SL & TP' which were both written into ExitAlert;  				// so if we caught the Loss and SL was executed' position.ExitAlert will still contain TP if we don't set it here  				bool exitIsDifferent = alertFilled.PositionAffected.ExitAlert != null && alertFilled.PositionAffected.ExitAlert != alertFilled;  				if (alertFilled.IsExitAlert && exitIsDifferent) {  					alertFilled.PositionAffected.ExitAlertAttach(alertFilled);  				}  				// 1. alert.PositionAffected.Prototype.StopLossAlertForAnnihilation and TP will get assigned  				alertsNewAfterAlertFilled.AddRange(this.PositionPrototypeActivator.PositionActivator_entryPoint__alertFilled_createSlTp_orAnnihilateCounterparty(alertFilled)' this' msig);  				// quick check: there must be {SL+TP} OR Annihilator  				//this.Backtester.IsBacktestingNow == false &&  				if (alertFilled.IsEntryAlert) {  					// DONT_SCREAM_SO_MUCH IF_OFFSETS_WERE_ZERO_OR_WRONG_POLARITY_NO_SL_TP_ARE_CREATED CreateStopLossFromPositionPrototype() CreateTakeProfitFromPositionPrototype()  					//if (proto.StopLossAlertForAnnihilation == null) {  					//	string msg = "NONSENSE@Entry: proto.StopLossAlert is NULL???..";  					//	throw new Exception(msg);  					//}  					//if (proto.TakeProfitAlertForAnnihilation == null) {  					//	string msg = "NONSENSE@Entry: proto.TakeProfitAlert is NULL???..";  					//	throw new Exception(msg);  					//}  					//if (alertsNewAfterAlertFilled.Count == 0) {  					//	string msg = "NONSENSE@Entry: alertsNewSlAndTp.Count=0"  					//		+ "; this.PositionPrototypeActivator.AlertFilledCreateSlTpOrAnnihilateCounterparty(alertFilled)"  					//		+ " should return 2 alerts; I don't want to create new list from {proto.SL' proto.TP}";  					//	throw new Exception(msg);  					//}  				}  				if (alertFilled.IsExitAlert) {  					if (alertsNewAfterAlertFilled.Count > 0) {  						string msg = "NONSENSE@Exit: there must be no alerts (got " + alertsNewAfterAlertFilled.Count + "): killer works silently";  						#if DEBUG  						Debugger.Break();  						#endif  						throw new Exception(msg);  					}  				}    				if (alertsNewAfterAlertFilled.Count > 0) {  					List<Alert> alertsNewAfterExecSafeCopy = alertsNewAfterAlertFilled.SafeCopy(this' msig);    					#region copypaste BEGIN' helping GuiHasTimeRebuildReportersAndExecution to find prototyped alerts  					if (this.ChartShadow != null) {  						//bool guiHasTime = false;  						foreach (Alert alert in alertsNewAfterExecSafeCopy) {  							try {  								Assembler.InstanceInitialized.AlertsForChart.Add(this.ChartShadow' alert);  								//if (guiHasTime == false) guiHasTime = alert.GuiHasTimeRebuildReportersAndExecution;  							} catch (Exception ex) {  								string msg = "ADDING_TO_DICTIONARY_MANY_TO_ONE";  								Assembler.PopupException(msg' ex);  							}  						}  					} else {  						if (this.Sequencer.IsRunningNow == false) {  							string msg = "CHART_SHADOW_MUST_BE_NULL_ONLY_WHEN_OPTIMIZING__BACKTEST_AND_LIVESIM_MUST_HAVE_CHART_SHADOW_ASSOCIATED";  							Assembler.PopupException(msg);  						}  					}  					#endregion    					if (this.IsStrategyEmittingOrders) {  						Quote quoteHackForLive = quoteFilledThisAlertNullForLive;  						if (quoteHackForLive == null) {  							quoteHackForLive = alertFilled.QuoteLastWhenThisAlertFilled;	// unconditionally filled 130 lines above  						}  						this.EnrichAlerts_withQuoteCreated(alertsNewAfterExecSafeCopy' quoteHackForLive);  						this.OrderProcessor.Emit_createOrders_forScriptGeneratedAlerts_eachInNewThread(alertsNewAfterExecSafeCopy' setStatusSubmitting' true);  	  						// 3. Script using proto might move SL and TP which require ORDERS to be moved' not NULLs  						int twoMinutes = 120000;  						if (alertFilled.IsEntryAlert) {  							// there must be SL.OrderFollowed!=null and TP.OrderFollowed!=null  							if (proto.StopLossAlert_forMoveAndAnnihilation.OrderFollowed == null) {  								string msg = "StopLossAlert.OrderFollowed is NULL!!! CreateOrdersSubmitToBrokerAdapterInNewThreads() didnt do its job; engaging ManualResetEvent.WaitOne()";  								this.PopupException(msg);    								Stopwatch waitedForStopLossOrder = new Stopwatch();  								waitedForStopLossOrder.Start();    								if (this.BacktesterOrLivesimulator.ImRunningLivesim) {  									bool unpaused = this.Livesimulator.IsPaused_waitForever_untilUnpaused;  								} else {  									proto.StopLossAlert_forMoveAndAnnihilation.MreOrderFollowedIsAssignedNow.WaitOne(twoMinutes);  								}    								waitedForStopLossOrder.Stop();  								msg = "waited " + waitedForStopLossOrder.ElapsedMilliseconds + "ms for StopLossAlert.OrderFollowed";    								if (proto.StopLossAlert_forMoveAndAnnihilation.OrderFollowed == null) {  									msg += ": NO_SUCCESS still null!!!";  									this.PopupException(msg);  								} else {  									proto.StopLossAlert_forMoveAndAnnihilation.OrderFollowed.appendMessage(msg);  									this.PopupException(msg);  								}  							//} else {  							//	string msg = "you are definitely crazy' StopLossAlert.OrderFollowed is a single-threaded assignment";  							//	Assembler.PopupException(msg);  							}  	  							if (proto.TakeProfitAlert_forMoveAndAnnihilation.OrderFollowed == null) {  								string msg = "TakeProfitAlert.OrderFollowed is NULL!!! CreateOrdersSubmitToBrokerAdapterInNewThreads() didnt do its job; engaging ManualResetEvent.WaitOne()";  								this.PopupException(msg);  								Stopwatch waitedForTakeProfitOrder = new Stopwatch();  								waitedForTakeProfitOrder.Start();  								proto.TakeProfitAlert_forMoveAndAnnihilation.MreOrderFollowedIsAssignedNow.WaitOne(twoMinutes);  								waitedForTakeProfitOrder.Stop();  								msg = "waited " + waitedForTakeProfitOrder.ElapsedMilliseconds + "ms for TakeProfitAlert.OrderFollowed";  								if (proto.TakeProfitAlert_forMoveAndAnnihilation.OrderFollowed == null) {  									msg += ": NO_SUCCESS still null!!!";  									this.PopupException(msg);  								} else {  									proto.TakeProfitAlert_forMoveAndAnnihilation.OrderFollowed.appendMessage(msg);  									this.PopupException(msg);  								}  							//} else {  							//	string msg = "you are definitely crazy' TakeProfitAlert.OrderFollowed is a single-threaded assignment";  							//	Assembler.PopupException(msg);  							}  						}  						if (this.BacktesterOrLivesimulator.ImRunningChartlessBacktesting == false) {  							this.ChartShadow.AlertsPlaced_addRealtime(alertsNewAfterExecSafeCopy);  						}  					}  				}  			}
Magic Number,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,checkThrow_alertCanBeCreated,The following statement contains a magic number: string invoker = (new StackFrame(3' true).GetMethod().Name) + "(): ";
Magic Number,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,PositionClose_immediately,The following statement contains a magic number: if (annotateAtBars_forEachClosedPosition) {  				this.ChartShadow.BarAnnotationDrawModify(barIndex' "bar#" + barIndex + positionOpen.ToString()'  					"cp" + positionOpen.EntryFilledBarIndex + ":" + killedOnce.Count'  					null' Color.Maroon' Color.Empty' false' 30' true);  			}
Magic Number,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,PositionSizeCalculate,The following statement contains a magic number: if (symbolInfo.SecurityType == SecurityType.Stock && scriptContext.RoundEquityLots) {  				double roundedLots100 = (ret / 100.0) * 100.0;  				if (ret < 100.0 && scriptContext.RoundEquityLotsToUpperHundred) {  					roundedLots100 = 100.0;  				}  				ret = roundedLots100;  			}
Magic Number,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,PositionSizeCalculate,The following statement contains a magic number: if (symbolInfo.SecurityType == SecurityType.Stock && scriptContext.RoundEquityLots) {  				double roundedLots100 = (ret / 100.0) * 100.0;  				if (ret < 100.0 && scriptContext.RoundEquityLotsToUpperHundred) {  					roundedLots100 = 100.0;  				}  				ret = roundedLots100;  			}
Magic Number,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,PositionSizeCalculate,The following statement contains a magic number: if (symbolInfo.SecurityType == SecurityType.Stock && scriptContext.RoundEquityLots) {  				double roundedLots100 = (ret / 100.0) * 100.0;  				if (ret < 100.0 && scriptContext.RoundEquityLotsToUpperHundred) {  					roundedLots100 = 100.0;  				}  				ret = roundedLots100;  			}
Magic Number,Sq1.Core.StrategyBase,ScriptExecutor,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\ScriptExecutor.BacktestLauncher.cs,PositionSizeCalculate,The following statement contains a magic number: if (symbolInfo.SecurityType == SecurityType.Stock && scriptContext.RoundEquityLots) {  				double roundedLots100 = (ret / 100.0) * 100.0;  				if (ret < 100.0 && scriptContext.RoundEquityLotsToUpperHundred) {  					roundedLots100 = 100.0;  				}  				ret = roundedLots100;  			}
Magic Number,Sq1.Core.StrategyBase,Strategy,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\Strategy.ScriptContext.cs,Strategy,The following statement contains a magic number: this.ExceptionsLimitToAbortBacktest 	= 10;
Magic Number,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,CumulativeAppendOrReplaceForPositionClosedOrOpenNow,The following statement contains a magic number: if (preLastPositionTracked != null) {  				if (this.CumulativeNetProfitDollar.ContainsKey(preLastPositionTracked) == false) {  					if (this.CumulativeNetProfitDollar.Count > this.PositionsImTracking.Count - 2) {  						string msg2 = "CumulativeProfitDollar_SHOULD_ALREADY_CONTAIN_preLastPositionTracked " + preLastPositionTracked;  						Assembler.PopupException(msg2);  					}  				} else {  					prevCumProfitDollar = this.CumulativeNetProfitDollar[preLastPositionTracked];  				}  				if (this.CumulativeNetProfitPercent.ContainsKey(preLastPositionTracked) == false) {  					if (this.CumulativeNetProfitPercent.Count > this.PositionsImTracking.Count - 2) {  						string msg2 = "CumulativeProfitPercent_SHOULD_ALREADY_CONTAIN_preLastPositionTracked " + preLastPositionTracked;  						Assembler.PopupException(msg2);  					}  				} else {  					prevCumProfitPercent = this.CumulativeNetProfitPercent[preLastPositionTracked];  				}  			}
Magic Number,Sq1.Core.StrategyBase,SystemPerformanceSlice,C:\repos\worldexplorer_SquareOne\Sq1.Core\StrategyBase\SystemPerformanceSlice.cs,CumulativeAppendOrReplaceForPositionClosedOrOpenNow,The following statement contains a magic number: if (preLastPositionTracked != null) {  				if (this.CumulativeNetProfitDollar.ContainsKey(preLastPositionTracked) == false) {  					if (this.CumulativeNetProfitDollar.Count > this.PositionsImTracking.Count - 2) {  						string msg2 = "CumulativeProfitDollar_SHOULD_ALREADY_CONTAIN_preLastPositionTracked " + preLastPositionTracked;  						Assembler.PopupException(msg2);  					}  				} else {  					prevCumProfitDollar = this.CumulativeNetProfitDollar[preLastPositionTracked];  				}  				if (this.CumulativeNetProfitPercent.ContainsKey(preLastPositionTracked) == false) {  					if (this.CumulativeNetProfitPercent.Count > this.PositionsImTracking.Count - 2) {  						string msg2 = "CumulativeProfitPercent_SHOULD_ALREADY_CONTAIN_preLastPositionTracked " + preLastPositionTracked;  						Assembler.PopupException(msg2);  					}  				} else {  					prevCumProfitPercent = this.CumulativeNetProfitPercent[preLastPositionTracked];  				}  			}
Magic Number,Sq1.Core.Streaming,StreamingAdapter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\StreamingAdapter.OverrideMe.cs,StreamingAdapter,The following statement contains a magic number: Level2RefreshRateMs								= 200;
Magic Number,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,PushingThreadStop_waitConfirmed,The following statement contains a magic number: try {  				this.confirmThreadExited.Reset();  				this.exitPushingThreadRequested = true;  				this.signalTo_pauseUnpauseAbort();  				bool exitConfirmed = this.confirmThreadExited.WaitOne(this.heartbeatTimeout * 2);  				string msg = exitConfirmed ? "THREAD_EXITED__" : "EXITING_THREAD_DIDNT_CONFIRM_ITS_OWN_EXIT__";  				Assembler.PopupException(msg + msig' null' false);  			} catch (Exception ex) {  				string msg = "IMPOSSIBLE_HAPPENED_WHILE_PUSHING_THREAD_STARTING/STOPPING";  				Assembler.PopupException(msg + msig' ex);  			}
Magic Number,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pushingThreadStart_waitConfirmed,The following statement contains a magic number: try {  				this.confirmThreadStarted.Reset();  				this.bufferPusher.Start();  				bool startConfirmed = this.confirmThreadStarted.WaitOne(this.heartbeatTimeout * 2);  				string msg = startConfirmed ? "PUMPING_THREAD_STARTED_CONFIRMED" : "PUMPING_THREAD_STARTED_NOT_CONFIRMED";  				if (startConfirmed == false) {  					msg += " is this the reason for slow appStartup?...";  					Assembler.PopupException(msg + msig' null' false);  				}  			} catch (Exception ex) {  				string msg = "IMPOSSIBLE_HAPPENED_WHILE_PUSHING_THREAD_STARTING";  				Assembler.PopupException(msg + msig' ex);  			}
Magic Number,Sq1.Core.Streaming,PumpPerSymbol<QUOTE;STREAMING_CONSUMER_CHILD>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Streaming\PumpPerSymbol.cs,pusherEntryPoint,The following statement contains a magic number: try {  				this.timesThreadWasStarted++;  				this.confirmThreadStarted.Set();  				while (this.exitPushingThreadRequested == false) {  					bool chartDiThread = this.SymbolChannel.ReasonIwasCreated_propagatedFromDistributor.Contains(DistributorCharts.LIVE_CHARTS_FOR);  					bool solidifThread = this.SymbolChannel.ReasonIwasCreated_propagatedFromDistributor.Contains(DistributorCharts.SOLIDIFIERS_FOR);  					bool livesimThread = this.SymbolChannel.ReasonIwasCreated_propagatedFromDistributor.Contains(DistributorCharts.SUBSTITUTED_LIVESIM_STARTED);  					msig = this.ToString();    					#region OPTIMIZE_ME  					if (this.UpdateThreadNameAfterMaxConsumersSubscribed) {  						string msg = "looks like only for Solidifier Thread (adding more symbols will be reflected in ThreadName after appRestart)";  						base.SetThreadName();  						this.UpdateThreadNameAfterMaxConsumersSubscribed = false;  					} else {  						if (chartDiThread || livesimThread) {  							string msg = "excessive calls here' poor SetThreadName() has to check if ThreadName != null";  							base.SetThreadName();  						} else if (solidifThread) {  							string msg = "ThreadName already set with this.UpdateThreadNameAfterMaxConsumersSubscribed";  						} else {  							string msg = "do you have an effective filtering criteria";  						}  					}  					#endregion    					//DEBUGGING_100%CPU#1  					Stopwatch mustBeHeartBeatInterval = new Stopwatch();  					mustBeHeartBeatInterval.Start();    					bool gotQuoteTrue_pausingUnpausingAbortingTrue_heartBeatExpiredFalse = this.hasQuoteToPush_blockingAtHeartBeatRate;    					//DEBUGGING_100%CPU#2  					mustBeHeartBeatInterval.Stop();  					bool waitedLessThanHalfInterval = mustBeHeartBeatInterval.ElapsedMilliseconds < this.heartbeatTimeout / 2;  					if (waitedLessThanHalfInterval  							//&& livesimThread  						) {  						string msg = "I_MUST_BE_IN_LIVESIM_OR_REAL"  							+ " mustBeHeartBeatInterval.ElapsedMilliseconds[" + mustBeHeartBeatInterval.ElapsedMilliseconds + "]"  							+ " this.heartbeatTimeout[" + this.heartbeatTimeout + "]";  						//Assembler.PopupException(msg' null' false);  					}    					if (this.exitPushingThreadRequested) {  						string msg = "ABORTING_PUMP_AFTER_SeparatePushingThreadEnabled=false_OR_ IDisposable.Dispose()";  						Assembler.PopupException(msg' null' false);  						break;	// breaks WHILE and exits the thread  					}  					if (Assembler.InstanceInitialized.MainFormClosingIgnoreReLayoutDockedForms == true) {  						string msg = "AM_I_CLOSING_THE_APPLICATION? MainFormClosingIgnoreReLayoutDockedForms == true";  						//Assembler.PopupException(msg);  						break;	// breaks WHILE and exits the thread  					}    					if (this.pauseRequested) {  						this.pauseRequested = false;  						this.confirmPaused.Set();	// whoever was waiting for PushConsumersPaused=true rest assured that pauseRequested is satisfied (no more quotes pumping anymore until unPauseRequested)  						if (this.QQ.Count > 0) {  							string msg = "PUSHER_COLLECTED_QUOTES_THAT_WILL_STUCK: qq.Count[" + this.QQ.Count + "] ";  							Assembler.PopupException(msg + msig' null' false);  						}  						continue;	// I_TOLD_TO_PAUSE_THEM!!! here might be quotes regardless my fake HasQuoteToPush = true  					}  					if (this.unPauseRequested) {  						this.unPauseRequested = false;  						this.confirmPaused.Reset();	// this.HasQuoteToPushWrite = true;	//fake gate open  						this.confirmUnpaused.Set();	// whoever was waiting for PushConsumersPaused=false rest assured that unPauseRequested is satisfied (quotes pumping from now on until pauseRequested)  						if (this.QQ.Count > 0) {  							string msg = "PUSHER_COLLECTED_QUOTES_DURING_PAUSE: qq.Count[" + this.QQ.Count + "] ";  							Assembler.PopupException(msg + msig' null' false);  						}  						continue;	// I_TOLD_TO_UNPAUSE_THEM!!! here might be quotes regardless my fake HasQuoteToPush = true  					}    					if (this.Paused) {  						//if (this.qq.Count == 0) continue;  						string msg = "PAUSED";  						if (this.QQ.Count > 0) {  							msg += "_BUT_QUEUE_HAS_GROWN_ALREADY qq.Count[" + this.QQ.Count + "]";  						} else {  							msg += "_AND_QUEUE_IS_EMPTY_SO_FAR";  						}  						//Assembler.PopupException(msg + msig' null' false);  						bool unPausedNow = this.confirmUnpaused.WaitOne(this.heartbeatTimeout);  						//bool unPausedNow = this.confirmUnpaused.WaitOne(-1);  						if (unPausedNow == false) {  							if (livesimThread) {  								msg = "STILL_PAUSED_AFTER=" + this.heartbeatTimeout + "sec";  								Assembler.PopupException(msg + msig' null' false);  							} else {  								msg = "WILL_RECHECK_IF_UNPAUSED_ON_NEXT_HEARTBEAT_IN_MILLISEC=" + this.heartbeatTimeout + " " + msg;  								//Assembler.PopupException(msg + msig' null' false);  							}  						}  						continue;  					}  					if (solidifThread == false) {  						string msg1 = "IM_UNPAUSED_AFTER_LIVESIM_OR_BACKTEST_FINISHED_OR_STARTED???=" + msig;  						//Assembler.PopupException(msg1' null' false);  					}    					int quotesCollected = base.QQ.Count;  					try {  						if (quotesCollected > 0) {  							if (chartDiThread) {  								string msg1 = "I_CAN_BE_TOO_EARLY_INDICATORS_MAY_HAVE_NOT_GOTTEN_EXECUTOR_YET";  							}  							int quotesProcessed = base.FlushQuotesQueued();  						}  					} catch (Exception exFlush) {  						Assembler.PopupException(msig' exFlush);  					} finally {  						if (this.hasQuoteToPush_nonBlocking == true) {  							this.hasQuoteToPush_nonBlocking  = false;  						}  					}  				}  				this.confirmThreadExited.Set();		// unblocks whoever was Wait()ing  			} catch (Exception ex) {  				string msg = "PUMPING_THREAD_EXITED_NON_RESUMABLY " + this.bufferPusher.ToString() + " for ChannelManaged[" + this.ToString() + "]";  				Assembler.PopupException(msg + msig' ex);  			}
Magic Number,Sq1.Core.Support,ConcurrentList<T>,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\ConcurrentList.cs,PreLast_nullUnsafe,The following statement contains a magic number: try {  				base.WaitAndLockFor(owner' lockPurpose' waitMillis);  				if (ret != null) {  					string msg = "PARANOID I_WANT_NULL_HERE!!! NOT_TRUSTING_default(T)_AND_GENERIC_TYPE_CAN_NOT_BE_ASSIGNED_TO_NULL";  					Assembler.PopupException(msg);  				}  				if (this.InnerList.Count > 1) ret = this.InnerList[this.InnerList.Count - 2];  			} finally {  				base.UnLockFor(owner' lockPurpose);  			}
Magic Number,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,UserControlResizeable,The following statement contains a magic number: PaddingMouseReceiving = new Padding(4' 4' 4' 4);
Magic Number,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,UserControlResizeable,The following statement contains a magic number: PaddingMouseReceiving = new Padding(4' 4' 4' 4);
Magic Number,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,UserControlResizeable,The following statement contains a magic number: PaddingMouseReceiving = new Padding(4' 4' 4' 4);
Magic Number,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,UserControlResizeable,The following statement contains a magic number: PaddingMouseReceiving = new Padding(4' 4' 4' 4);
Magic Number,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,OnResize,The following statement contains a magic number: this.UserControlInner.Size = new Size(  				base.Width	- this.PaddingMouseReceiving.Right	- this.UserControlInner.Location.X - this.borderThickness*2'  				base.Height - this.PaddingMouseReceiving.Bottom - this.UserControlInner.Location.Y - this.borderThickness*2);
Magic Number,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,OnResize,The following statement contains a magic number: this.UserControlInner.Size = new Size(  				base.Width	- this.PaddingMouseReceiving.Right	- this.UserControlInner.Location.X - this.borderThickness*2'  				base.Height - this.PaddingMouseReceiving.Bottom - this.UserControlInner.Location.Y - this.borderThickness*2);
Magic Number,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,InitializeComponent,The following statement contains a magic number: this.UserControlInner.Size = new System.Drawing.Size(497' 275);
Magic Number,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,InitializeComponent,The following statement contains a magic number: this.UserControlInner.Size = new System.Drawing.Size(497' 275);
Magic Number,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(501' 279);
Magic Number,Sq1.Core.Support,UserControlResizeable,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlResizeable.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(501' 279);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.UserControlInner.Padding = new System.Windows.Forms.Padding(0' 18' 0' 0);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.UserControlInner.Size = new System.Drawing.Size(206' 402);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.UserControlInner.Size = new System.Drawing.Size(206' 402);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.pnlWindowTitle.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(204)));
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.pnlWindowTitle.Location = new System.Drawing.Point(4' 4);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.pnlWindowTitle.Location = new System.Drawing.Point(4' 4);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.pnlWindowTitle.Size = new System.Drawing.Size(206' 19);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.pnlWindowTitle.Size = new System.Drawing.Size(206' 19);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.lblWindowTitle.Location = new System.Drawing.Point(3' 2);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.lblWindowTitle.Location = new System.Drawing.Point(3' 2);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.lblWindowTitle.Size = new System.Drawing.Size(232' 13);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.lblWindowTitle.Size = new System.Drawing.Size(232' 13);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(214' 410);
Magic Number,Sq1.Core.Support,UserControlTitled,C:\repos\worldexplorer_SquareOne\Sq1.Core\Support\UserControlTitled.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(214' 410);
Missing Default,Sq1.Core.Backtesting,BacktestQuotesGenerator,C:\repos\worldexplorer_SquareOne\Sq1.Core\Backtesting\BacktestQuotesGenerator.cs,GenerateNewQuote_childrenHelper,The following switch statement is missing a default case: switch (bidOrAsk) {  				case BidOrAsk.Bid:  					ret.Bid = priceAligned;  					ret.TradedAt = BidOrAsk.Bid;  					modeler.FillAskBasedOnBid_aligned(ret);  					if (ret.Spread == 0) {  						string msig = " returned by modeler[" + modeler + "] for quote[" + ret + "]";  						string msg = "SPREAD_MUST_NOT_BE_ZERO_AFTER GenerateFillAskBasedOnBid()";  						Assembler.PopupException(msg + msig);  						#if DEBUG  						Debugger.Break();  						#endif  					}  					break;  				case BidOrAsk.Ask:  					ret.Ask = priceAligned;  					ret.TradedAt = BidOrAsk.Ask;  					modeler.FillBidBasedOnAsk_aligned(ret);  					if (ret.Spread == 0) {  						string msig = " returned by modeler[" + modeler + "] for quote[" + ret + "]";  						string msg = "SPREAD_MUST_NOT_BE_ZERO_AFTER GenerateFillAskBasedOnBid()";  						Assembler.PopupException(msg + msig);  						#if DEBUG  						Debugger.Break();  						#endif  					}  					break;  				case BidOrAsk.UNKNOWN:  					modeler.GeneratedQuoteFillBidAsk(ret' barSimulated' priceAligned);  					// I_DONT_KNOW_WHAT_TO_PUT_HERE  					ret.TradedAt = BidOrAsk.Bid;  					if (ret.Spread == 0) {  						string msig = " returned by modeler[" + modeler + "] for quote[" + ret + "]";  						string msg = "SPREAD_MUST_NOT_BE_ZERO_AFTER GeneratedQuoteFillBidAsk()";  						Assembler.PopupException(msg + msig);  						#if DEBUG  						Debugger.Break();  						#endif  					}  					break;  			}
Missing Default,Sq1.Core.DataTypes,MarketInfo,C:\repos\worldexplorer_SquareOne\Sq1.Core\DataTypes\MarketInfo.cs,GetNextMarketServerTimeStamp,The following switch statement is missing a default case: switch (scale.Scale) {  				case BarScale.Tick:  					throw new ArgumentException("Tick scale is not supported");  				case BarScale.Second:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Second / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' serverDateTime.Minute' valueCeiled);  					if (addNextRank) ret = ret.AddMinutes(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddSeconds((double)scale.Interval);  					}  					break;  				case BarScale.Minute:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 60) {  						addNextRank = true;  						valueCeiled -= 60;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddHours(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddMinutes((double)scale.Interval);  					}  					bool afterClose = this.isMarket_afterClose_serverTime(ret);  					bool beforeOpen = this.isMarket_BeforeOpen_serverTime(ret);  					if (beforeOpen) {  						ret = this.AdvanceToThisDayOpen(ret);  					} else {  						if (afterClose) {  							ret = this.AdvanceToNextDayOpen(ret);  						}  					}    					break;  				case BarScale.Hour:  					intervalsCeiled = (int)Math.Floor((double)(serverDateTime.Minute / scale.Interval));  					valueCeiled = (intervalsCeiled + 1) * scale.Interval;  					if (valueCeiled >= 24) {  						addNextRank = true;  						valueCeiled -= 24;  					}  					ret = new DateTime(serverDateTime.Year' serverDateTime.Month' serverDateTime.Day'  						serverDateTime.Hour' valueCeiled' 0);  					if (addNextRank) ret = ret.AddDays(1);    					clearingTimespan = GetClearingTimespan_ifMarketSuspended(ret);  					if (clearingTimespan != null) {  						ret = this.AdvanceToWhenClearingResumes(ret' clearingTimespan);  						//ret = ret.AddHours((double)scale.Interval);  					}  					if (this.isMarket_afterClose_serverTime(ret)) {  						ret = this.AdvanceToNextDayOpen(ret);  						//ret = ret.AddHours((double)scale.Interval);  					}  					break;  				case BarScale.Daily:  					ret = this.AdvanceToNextDayOpen(ret);  					break;  				case BarScale.Weekly:  					ret = this.AdvanceToNextDayOpen(ret);  					while (ret.DayOfWeek != DayOfWeek.Friday) {  						ret = ret.AddDays(1.0);  					}  					if (this.IsTradeableDayServerTime(ret) == false) {  						if (ret.Day == serverDateTime.Day - 1) {  							ret = ret.AddDays(7.0);  							if (!this.IsTradeableDayServerTime(ret)) {  								ret = ret.AddDays(-1.0);  							}  						} else {  							ret = ret.AddDays(-1.0);  						}  					}  					break;  				case BarScale.Monthly:  					if (nextMonth == 13) {  						nextMonth = 1;  						year++;  					}  					ret = new DateTime(year' nextMonth' 1' 0' 0' 0);  					ret = this.AdvanceToNextDayOpen(ret);  					ret = ret.AddDays(-1.0);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Quarterly:  					if (nextMonth == 13) {  						year++;  						nextMonth = 1;  					} else {  						nextMonth = ((int)Math.Floor((double)ret.Month / 3)) * 3;  					}  					ret = new DateTime(year' nextMonth' 28);  					do {  						ret = ret.AddDays(1.0);  					} while (ret.Month == nextMonth);  					ret = ret.AddDays(-1.0);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  				case BarScale.Yearly:  					ret = new DateTime(ret.Year + 1' 12' 31);  					ret = this.AdvanceToNextDayOpen(ret);  					while (!this.IsTradeableDayServerTime(ret)) {  						ret = ret.AddDays(-1.0);  					}  					break;  			}
Missing Default,Sq1.Core.Execution,ExecutorDataSnapshot,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\ExecutorDataSnapshot.ScriptExecWatchdog.cs,AlertEnriched_register,The following switch statement is missing a default case: switch (dumped) {  				case ByBarDumpStatus.BarAlreadyContainedTheAlertToAdd:  					string msg1 = "DUPE while adding JUST CREATED??? alert[" + alert + "]";  					throw new Exception(msg1);  					break;  				case ByBarDumpStatus.SequentialAlertAddedForExistingBarInHistory:  					string msg2 = "Here is the case when PrototypeActivator changed alert[" + alert + "]";  					break;  			}
Missing Default,Sq1.Core.Execution,MarketConverter,C:\repos\worldexplorer_SquareOne\Sq1.Core\Execution\MarketConverter.cs,AlertPendingToBrushColor,The following switch statement is missing a default case: switch (alert.Direction) {  				case Direction.Buy:  					brush = Brushes.Blue;  					break;  				case Direction.Sell:  					brush = Brushes.Red;  					break;  				case Direction.Short:  					brush = Brushes.Fuchsia;  					break;  				case Direction.Cover:  					brush = Brushes.Green;  					break;  			}
