Implementation smell,Namespace,Class,File,Method,Description
Long Method,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,ChartControl,The method has 74 lines of code.
Long Method,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,Initialize,The method has 63 lines of code.
Long Method,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The method has 179 lines of code.
Long Method,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,SelectPosition,The method has 70 lines of code.
Long Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The method has 80 lines of code.
Long Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintBackgroundDoubleBuffered,The method has 128 lines of code.
Long Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The method has 60 lines of code.
Long Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseMove,The method has 196 lines of code.
Long Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The method has 256 lines of code.
Long Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderIndicators,The method has 85 lines of code.
Long Method,Sq1.Charting,PanelIndicator,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelIndicator.cs,PaintWholeSurfaceBarsNotEmpty,The method has 60 lines of code.
Long Method,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The method has 224 lines of code.
Long Method,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartLines,The method has 79 lines of code.
Long Method,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The method has 90 lines of code.
Long Method,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,LineAddOrModify,The method has 69 lines of code.
Long Method,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The method has 207 lines of code.
Long Method,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The method has 293 lines of code.
Long Method,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The method has 246 lines of code.
Long Method,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The method has 85 lines of code.
Long Method,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The method has 92 lines of code.
Long Method,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The method has 91 lines of code.
Long Method,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The method has 97 lines of code.
Long Method,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,propagateColumns,The method has 98 lines of code.
Long Method,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,propagateRows,The method has 97 lines of code.
Long Method,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The method has 181 lines of code.
Complex Method,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,Initialize,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,PanelLocationInChartControl,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,keysToReaction,Cyclomatic complexity of the method is 26
Complex Method,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,CalculateGutterWidthNecessaryToFitPriceVolumeLabels,Cyclomatic complexity of the method is 11
Complex Method,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,SelectPosition,Cyclomatic complexity of the method is 7
Complex Method,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,HostPanelForIndicatorGet,Cyclomatic complexity of the method is 11
Complex Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,Cyclomatic complexity of the method is 12
Complex Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintBackgroundDoubleBuffered,Cyclomatic complexity of the method is 21
Complex Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,Cyclomatic complexity of the method is 16
Complex Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,PaintWholeSurfaceBarsNotEmpty,Cyclomatic complexity of the method is 7
Complex Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseMove,Cyclomatic complexity of the method is 27
Complex Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,Cyclomatic complexity of the method is 49
Complex Method,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderIndicators,Cyclomatic complexity of the method is 14
Complex Method,Sq1.Charting,PanelIndicator,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelIndicator.cs,PaintWholeSurfaceBarsNotEmpty,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,OnPaintDoubleBuffered,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,Cyclomatic complexity of the method is 28
Complex Method,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPositionLineForArrow,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartLines,Cyclomatic complexity of the method is 10
Complex Method,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,Cyclomatic complexity of the method is 16
Complex Method,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,LineAddOrModify,Cyclomatic complexity of the method is 14
Complex Method,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,ChartLabelAddOrModify,Cyclomatic complexity of the method is 7
Complex Method,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,BarAnnotationAddOrModify,Cyclomatic complexity of the method is 12
Complex Method,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,PopulateWithChartSettings,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,propagateColumns,Cyclomatic complexity of the method is 14
Complex Method,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,propagateRows,Cyclomatic complexity of the method is 14
Complex Method,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,InitializeCreateSplittersDistributeFor,Cyclomatic complexity of the method is 10
Complex Method,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,distributeColumns,Cyclomatic complexity of the method is 7
Complex Method,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,distributeRows,Cyclomatic complexity of the method is 7
Complex Method,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,OnResize,Cyclomatic complexity of the method is 8
Complex Method,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitter_MouseMove,Cyclomatic complexity of the method is 9
Complex Method,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitter_MouseUp,Cyclomatic complexity of the method is 7
Complex Method,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,Cyclomatic complexity of the method is 19
Complex Method,Sq1.Charting.MultiSplit,MultiSplitter,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitter.EventConsumer.cs,OnPaintDoubleBuffered,Cyclomatic complexity of the method is 7
Long Parameter List,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,Initialize,The method has 4 parameters.
Long Parameter List,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,LineDrawModify,The method has 8 parameters.
Long Parameter List,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,ChartLabelDrawOnNextLineModify,The method has 5 parameters.
Long Parameter List,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,BarAnnotationDrawModify,The method has 9 parameters.
Long Parameter List,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabelOnNextLine,The method has 6 parameters.
Long Parameter List,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The method has 8 parameters.
Long Parameter List,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderBarHistogram,The method has 4 parameters.
Long Parameter List,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderBarCandle,The method has 7 parameters.
Long Parameter List,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,LineAddOrModify,The method has 8 parameters.
Long Parameter List,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,ChartLabelAddOrModify,The method has 5 parameters.
Long Parameter List,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,BarAnnotationAddOrModify,The method has 9 parameters.
Long Parameter List,Sq1.Charting.MultiSplit,MultiSplitter,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitter.EventConsumer.cs,MultiSplitter,The method has 4 parameters.
Long Parameter List,Sq1.Charting.OnChart,OnChartBarAnnotation,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\OnChart\OnChartBarAnnotation.cs,OnChartBarAnnotation,The method has 8 parameters.
Long Parameter List,Sq1.Charting.OnChart,OnChartLabel,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\OnChart\OnChartLabel.cs,OnChartLabel,The method has 5 parameters.
Long Parameter List,Sq1.Charting.OnChart,OnChartLine,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\OnChart\OnChartLine.cs,OnChartLine,The method has 7 parameters.
Long Identifier,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,Initialize,The length of the parameter removeChartShadowFromOldSymbolAndAddToLoadingBars is 49.
Long Identifier,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,TooltipPriceShowAlone,The length of the parameter multiSplitterHorizontalpanelOffset is 34.
Long Identifier,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,TooltipPositionAndPriceShow,The length of the parameter multiSplitterHorizontalpanelOffset is 34.
Long Identifier,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,OnStrategyExecutedOneQuote_unblinkDataSourceTree,The length of the parameter refreshDataSourceTree_invokedInGuiThread_afterTimerExpired is 58.
Long Identifier,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,switchToGui_executeCodeLinkingTwoUnrelatedDlls,The length of the parameter refreshDataSourceTree_invokedInGuiThread is 40.
Long Identifier,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,AlertsPendingStillNotFilledForBarAdd,The length of the parameter alertsPendingAtCurrentBarSafeCopy is 33.
Long Identifier,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,HostPanelForIndicatorGet,The length of the parameter needToReReadSplitterPositionsSinceIndicatorsWereAdded is 53.
Long Identifier,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The length of the parameter makingHpaddingLookLikeVpadding is 30.
Long Identifier,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,BarToXshadowBeyondGoInside,The length of the parameter barIndexCanBeBeyondVisibleSlidingWindow is 39.
Long Identifier,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,BarToXBeyondGoInside,The length of the parameter barIndexCanBeBeyondVisibleSlidingWindow is 39.
Long Identifier,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderIndicators,The length of the parameter skipPaintingIndicatorsBacktestDidntRunOrIncomplete is 50.
Long Identifier,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the parameter stripeHeightWillContainMeasuredText is 35.
Long Identifier,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the parameter diffFromQuoteAskAsPriceStepsAway is 32.
Long Identifier,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the parameter diffFromQuoteBidAsPriceStepsAway is 32.
Long Identifier,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderAlertsPending_bigAquaDot_atPriceEmitted_ifExistForBar,The length of the parameter alertPending_priceScript_zeroForMarket is 38.
Long Identifier,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The length of the parameter verticalOffsetForNextStackedAnnotationsAboveSameBar is 51.
Long Identifier,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The length of the parameter verticalOffsetForMextStackedAnnotationsBelowSameBar is 51.
Long Identifier,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,AlertsPendingStillNotFilledForBarAdd,The length of the parameter alertsPendingAtCurrentBarSafeCopy is 33.
Long Identifier,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The length of the parameter dockPaneStripToolWindowGradient1 is 32.
Long Identifier,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,PanelAddSplitterCreateAdd,The length of the parameter redistributeAfterAddingOneNotManyResistributeManual is 51.
Long Identifier,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitter_MouseMove,The length of the parameter mousePositionFromSplitContainerUpperLeft is 40.
Long Identifier,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterDraggingNow_PanelsSwap,The length of the parameter mousePositionFromSplitContainerUpperLeft is 40.
Long Identifier,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The length of the parameter mousePositionFromSplitContainerUpperLeft is 40.
Long Identifier,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The length of the parameter mouseMovedLeftFromPointClicked is 30.
Long Identifier,Sq1.Charting.MultiSplit,MultiSplitContainer,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainer.cs,LocationOfInnerMultisplitContainer,The length of the parameter mustContainMultiSplitContainer is 30.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,Initialize,The length of the statement  "		string msg = "SYMBOL_REMOVED_FROM_DATASOURCE / LIVESIM_ABORTED_WITH_NO_BARS_TO_RESTORE CLEARING_CHART"// I_CANT_ATTACH_BAR_EVENTS_TO_NULL_BARS DONT_PASS_EMPTY_BARS_TO_CHART_CONTROL " " is 182.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,Initialize,The length of the statement  "	base.Initialize (barsNotNull' strategySavedInChartSettings' removeChartShadowFromOldSymbolAndAddToLoadingBars' invalidateAllPanels); " is 132.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,Initialize,The length of the statement  "	//this.hScrollBar.ValueCurrent = this.hScrollBar.Maximum;	// I just sync'ed this.hScrollBar.Maximum = this.Bars.Count - 1 " is 121.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,Initialize,The length of the statement  "	// after I reduced BarRange{500bars => 100bars} in MainForm' don't set this.hScrollBar.Value here' I'll invoke ScrollToLastBarRight() upstack " is 141.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,Initialize,The length of the statement  "	//v1 if (this.ChartSettings.ScrollPositionAtBarIndex >= this.hScrollBar.Minimum && this.ChartSettings.ScrollPositionAtBarIndex <= this.hScrollBar.Maximum) { " is 156.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,Initialize,The length of the statement  "	if (this.ChartSettings.ScrollPositionAtBarIndex < this.hScrollBar.Minimum || this.ChartSettings.ScrollPositionAtBarIndex > this.hScrollBar.Maximum) { " is 149.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,SyncHorizontalScrollToBarsCount,The length of the statement  "	// this.HorizontalScroll represents the scrolling window for the content' useful in UserControl.Autoscroll when an innerPanel is wider or has Top|Left < 0  " is 154.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,SyncHorizontalScrollToBarsCount,The length of the statement  "	// I'm not using Panel.HorizontalScroll because I'll never have anything "inner" larger; I'm painting the sliding bar window on Graphics " is 136.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,barEventsAttach,The length of the statement  "	//OBSOLETE_NOW__USE_STREAMING_CONSUMERS_INSTEAD this.Bars.OnBarStreamingAdded				+= new EventHandler<BarEventArgs>(chartControl_BarStreamingUpdatedMerged_ShouldTriggerRepaint_WontUpdateBtnTriggeringScriptTimeline); " is 214.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,barEventsAttach,The length of the statement  "	//OBSOLETE_NOW__USE_STREAMING_CONSUMERS_INSTEAD this.Bars.OnBarStreamingUpdatedMerged		+= new EventHandler<BarEventArgs>(chartControl_BarStreamingUpdatedMerged_ShouldTriggerRepaint_WontUpdateBtnTriggeringScriptTimeline); " is 220.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,barEventsAttach,The length of the statement  "	Assembler.InstanceInitialized.RepositoryJsonDataSources.OnSymbolRemovedDone -= new EventHandler<DataSourceSymbolEventArgs> (repositoryJsonDataSources_OnSymbolRemoved_clearChart); " is 178.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,barEventsAttach,The length of the statement  "	Assembler.InstanceInitialized.RepositoryJsonDataSources.OnSymbolRemovedDone += new EventHandler<DataSourceSymbolEventArgs> (repositoryJsonDataSources_OnSymbolRemoved_clearChart); " is 178.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,barEventsDetach,The length of the statement  "	//OBSOLETE_NOW__USE_STREAMING_CONSUMERS_INSTEAD this.Bars.OnBarStreamingUpdatedMerged		-= new EventHandler<BarEventArgs>(chartControl_BarStreamingUpdatedMerged_ShouldTriggerRepaint_WontUpdateBtnTriggeringScriptTimeline); " is 220.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,barEventsDetach,The length of the statement  "	//OBSOLETE_NOW__USE_STREAMING_CONSUMERS_INSTEAD this.Bars.OnBarStreamingAdded				-= new EventHandler<BarEventArgs>(chartControl_BarStreamingUpdatedMerged_ShouldTriggerRepaint_WontUpdateBtnTriggeringScriptTimeline); " is 214.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,PanelLocationInChartControl,The length of the statement  "			x = this.multiSplitColumns_Level2_PriceVolumeMultisplit.LocationOfInnerMultisplitContainer (this.multiSplitRowsVolumePrice).X; " is 126.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,PanelLocationInChartControl,The length of the statement  "		string msg = "PANEL_MUST_BE_ADDED_IN_VERTICAL/HORIZONTAL_MULTISPLIT_CONTAINER priceIndicatorVolumeOrLevel2[" + priceIndicatorVolumeOrLevel2.ToString () + "].ParentMultiSplitContainer_nullUnsafe = null"; " is 202.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,PanelLocationInChartControl,The length of the statement  "			string msg = "YOU_CHANGED_THE_LAYOUT__THERE_MUST_BE_ONLY_TWO_COLUMNS__ONE=LEVEL2'ANOTHER=MULTISPLITTER_WITH_PRICE_VOLUME_INDICATORS"; " is 133.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,PanelLocationInChartControl,The length of the statement  "		x = this.multiSplitColumns_Level2_PriceVolumeMultisplit.LocationOfInnerMultisplitContainer (this.multiSplitRowsVolumePrice).X; " is 126.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,PanelLocationInChartControl,The length of the statement  "	string msg2 = "PANEL_ADDED_IN_UNKNOWN_MULTISPLIT_CONTAINER__NOT_VERTICAL/HORIZONTAL_I_KNOW_OF" + " priceIndicatorVolumeOrLevel2[" + priceIndicatorVolumeOrLevel2.ToString () + "].ParentMultiSplitContainer_nullUnsafe[" + whichMultisplitter.ToString () + "]"; " is 256.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,TooltipPriceShowAlone,The length of the statement  "		y = this.HeightMinusBottomHscrollbar - this.tooltipPrice.Height - this.ChartSettings.TooltipBordersMarginToKeepBordersVisible; " is 126.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,TooltipPositionAndPriceShow,The length of the statement  "		//				if (xPosition < 0) {	// positionTooltip is wider' dont squeeze priceTooltip but take the same side as the big brother " is 123.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,TooltipPositionAndPriceShow,The length of the statement  "		yPrice = this.HeightMinusBottomHscrollbar - twoTooltipsCombinedHeight - this.ChartSettings.TooltipBordersMarginToKeepBordersVisible; " is 132.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,tooltipPositionShowXY,The length of the statement  "	//if (this.tooltipPosition.Location == newLocation) {	//Point is a structure with Equals() overriden => we are safe to compare " is 126.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,PropagateSplitterManorderDistanceIfFullyDeserialized,The length of the statement  "		string msg = "YOU_INVOKED_ME_WITH_ZERO_EFFECT__SET_FullyDeserializedLayoutComplete=true_FIRST //PropagateSplitterManorderDistanceIfFullyDeserialized()"; " is 152.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,PropagateSplitterManorderDistanceIfFullyDeserialized,The length of the statement  "	//MULTISPLITTER_IS_SPAMMED_BY_ONRESIZE_BUT_IT_WORKS_FOR_HORIZONTAL_AND_IT_DOESNT_SET_X_FOR_LEVEL2_IF_ON_RIGHTMOST_COLUMN " is 120.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,PropagateSplitterManorderDistanceIfFullyDeserialized,The length of the statement  "	//v3 NOT_UNDER_WINDOWS if (Assembler.InstanceInitialized.SplitterEventsAreAllowedNsecAfterLaunchHopingInitialInnerDockResizingIsFinished == false) { " is 148.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,PropagateSplitterManorderDistanceIfFullyDeserialized,The length of the statement  "	this.multiSplitColumns_Level2_PriceVolumeMultisplit.SplitterPropertiesByPanelNameSet (this.ChartSettings.MultiSplitterColumnsPropertiesByPanelName); " is 148.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,PropagateSplitterManorderDistanceIfFullyDeserialized,The length of the statement  "	this.multiSplitRowsVolumePrice.SplitterPropertiesByPanelNameSet (this.ChartSettings.MultiSplitterRowsPropertiesByPanelName); " is 124.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(ChartControl)); " is 133.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The length of the statement  "	this.splitContainerChartVsRange.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right))); " is 250.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The length of the statement  "	this.PanelPrice.Font = new System.Drawing.Font ("Consolas"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 149.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,OnResize,The length of the statement  "		//Debugger.Break();	// HAPPENS_WHEN_WINDOW_IS_MINIMIZED OR BEFORE_FIRST_PAINT_SETS_GutterRightWidth_cached... how to disable any OnPaint when app isn't visible?...  " is 163.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,OnMouseLeave,The length of the statement  "	// DOESNT_WORK this.InvalidateAllPanels();	//	DRAWING_CURRENT_JUMPING_STREAMING_VALUE_ON_GUTTER_SINCE_MOUSE_WENT_OUT_OF_BOUNDARIES " is 130.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,chartControl_BarStreamingUpdatedMerged_ShouldTriggerRepaint_WontUpdateBtnTriggeringScriptTimeline,The length of the statement  "	// doing same thing from GUI thread at PanelLevel2.renderLevel2() got me even closer to realtime (after pausing a Livesim " is 121.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,chartControl_BarStreamingUpdatedMerged_ShouldTriggerRepaint_WontUpdateBtnTriggeringScriptTimeline,The length of the statement  "	// and repainting Level2 whole thing was misplaced comparing to PanelPrice spread) but looked really random' not behind and not ahead; " is 134.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,chartControl_BarStreamingUpdatedMerged_ShouldTriggerRepaint_WontUpdateBtnTriggeringScriptTimeline,The length of the statement  "	// but main reason is ConcurrentLocker was spitting messages (I dont remember what exactly but easy to move back to renderLevel2() and see) " is 139.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,chartControl_BarStreamingUpdatedMerged_ShouldTriggerRepaint_WontUpdateBtnTriggeringScriptTimeline,The length of the statement  "	//if (this.ScriptExecutorObjects.Asks_frozenAsc_forOnePaint.Count > 0 && this.ScriptExecutorObjects.Bids_frozenDesc_forOnePaint.Count > 0) { " is 140.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,chartControl_BarStreamingUpdatedMerged_ShouldTriggerRepaint_WontUpdateBtnTriggeringScriptTimeline,The length of the statement  "	//    List<double> bids_priceLevels_DESC = new List<double>(this.ScriptExecutorObjects.Bids_frozenDesc_forOnePaint.Keys); " is 121.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,chartControl_BarStreamingUpdatedMerged_ShouldTriggerRepaint_WontUpdateBtnTriggeringScriptTimeline,The length of the statement  "	this.ExecutorObjects_frozenForRendering.LevelTwo_frozen_forOnePaint = snap.GetLevelTwoFrozenSorted_forSymbol_nullUnsafe (this.Bars.Symbol' "CLONING_BIDS_ASKS_FOR_PAINTING_FOREGROUND_ON_PanelLevel2"' "PanelLevel2"); " is 214.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,chartControl_BarStreamingUpdatedMerged_ShouldTriggerRepaint_WontUpdateBtnTriggeringScriptTimeline,The length of the statement  "	// UPDATED_VIA_ PrintQuoteTimestampOnStrategyTriggeringButtonBeforeExecution() updating 00:00:00.000 on ChartForm.btnStreamingTriggersScript " is 140.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,multiSplitContainerColumns_OnResizing_OnSplitterMoveOrDragEnded,The length of the statement  "	//WORKS_WHEN_COMMENTED_SURPRISE if (Assembler.InstanceInitialized.SplitterEventsAreAllowedNsecAfterLaunchHopingInitialInnerDockResizingIsFinished == false) return; " is 163.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,multiSplitContainerRows_OnResizing_OnSplitterMoveOrDragEnded,The length of the statement  "	//WORKS_WHEN_COMMENTED_SURPRISE if (Assembler.InstanceInitialized.SplitterEventsAreAllowedNsecAfterLaunchHopingInitialInnerDockResizingIsFinished == false) return; " is 163.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,SerializeSplitterDistanceOrPanelName,The length of the statement  "	this.ChartSettings.MultiSplitterRowsPropertiesByPanelName = this.multiSplitRowsVolumePrice.SplitterPropertiesByPanelNameGet (); " is 127.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,SerializeSplitterDistanceOrPanelName,The length of the statement  "	this.ChartSettings.MultiSplitterColumnsPropertiesByPanelName = this.multiSplitColumns_Level2_PriceVolumeMultisplit.SplitterPropertiesByPanelNameGet (); " is 151.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,SerializeSplitterDistanceOrPanelName,The length of the statement  "	// that will show that 10s delay actually makes better sense than relying on MainFormDockFormsFullyDeserializedLayoutComplete in ChartControl.PropagateSplitterManorderDistanceIfFullyDeserialized() " is 196.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,repositoryJsonDataSources_OnSymbolRemoved_clearChart,The length of the statement  "	string msig = " //repositoryJsonDataSource_OnSymbolRemoved_clearChart(" + e.Symbol + ") chart[" + this.ToString () + "]"; " is 121.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,repositoryJsonDataSources_OnSymbolRemoved_clearChart,The length of the statement  "		string msg = "IGNORING_DELETION_OTHER_DATASOURCE_NOT_IM_ACTUALLY_DISPLAYING" + " this.Bars.DataSource[" + this.Bars.DataSource + "] != e.DataSource[" + e.DataSource + "]"; " is 171.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,repositoryJsonDataSources_OnSymbolRemoved_clearChart,The length of the statement  "		string msg = "IGNORING_DELETION_OTHER_SYMBOL_NOT_IM_ACTUALLY_DISPLAYING" + " this.Bars.Symbol[" + this.Bars.Symbol + "] != e.Symbol[" + e.Symbol + "]"; " is 151.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,simulateDockFill,The length of the statement  "		string msg = "YOU_INVOKED_ChartControl.Initialize()_FROM_ChartControl.ctor(RANDOM_GENERATED_BARS) CHART_CONTROL_NOT_ADDED_TO_ANY_FORM"; " is 135.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,OnStrategyExecutedOneQuote_unblinkDataSourceTree,The length of the statement  "	Color colorize = this.Executor.IsStreamingTriggeringScript ? ChartControl.colorBackgroundGreen_barsSubscribed_scriptIsTriggering : ChartControl.colorBackgroundRed_barsSubscribed_scriptNotTriggering; " is 198.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,CalculateGutterWidthNecessaryToFitPriceVolumeLabels,The length of the statement  "	//			string visiblePriceMaxFormatted = this.ValueFormattedToSymbolInfoDecimalsOr5(this.panelPrice.VisibleMaxDoubleMinValueUnsafe); " is 130.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,CalculateGutterWidthNecessaryToFitPriceVolumeLabels,The length of the statement  "	//			string visibleVolumeMaxFormatted = this.ValueFormattedToSymbolInfoDecimalsOr5(this.panelPrice.VisibleMaxDoubleMinValueUnsafe' false); " is 138.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,CalculateGutterWidthNecessaryToFitPriceVolumeLabels,The length of the statement  "			string msg = "VISIBLE_WINDOW_NOT_CALCULATED_YET OwnValuesCalculated.Count=" + panelIndicator.Indicator.OwnValuesCalculated.Count + " while VisibleBarLeft[" + this.VisibleBarLeft + "] VisibleBarRight[" + this.VisibleBarRight + "]"; " is 230.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,SelectPosition,The length of the statement  "	// COPYPASTE_SOURCE=PanelNamedFolding.handleTooltipsPositionAndPrice()_DESTINATION=ChartShadowProtocol.SelectPosition() begin " is 125.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,SelectPosition,The length of the statement  "	// COPYPASTE_SOURCE=PanelNamedFolding.handleTooltipsPositionAndPrice()_DESTINATION=ChartShadowProtocol.SelectPosition() end " is 123.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,AlertsPendingStillNotFilledForBarAdd,The length of the statement  "	this.ExecutorObjects_frozenForRendering.AlertsPendingStillNotFilledForBarAdd (barIndex' alertsPendingAtCurrentBarSafeCopy); " is 123.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,LineDrawModify,The length of the statement  "	// OnChartLine.Status = {AddOrModify's output}' so that the Script could base decisions upon status of the operation done to OnChartLine " is 136.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,LineDrawModify,The length of the statement  "	// HACK current implementation is based on responsibilities-vs-DLLs distribution which might not be optimal; returning only Status should be enough " is 147.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,LineDrawModify,The length of the statement  "		line = this.ExecutorObjects_frozenForRendering.LineAddOrModify (lineId' barStart' priceStart' barEnd' priceEnd' color' width' debugParametersDidntChange); " is 154.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,ChartLabelDrawOnNextLineModify,The length of the statement  "		OnChartLabel label = this.ExecutorObjects_frozenForRendering.ChartLabelAddOrModify (labelId' labelText' font' colorFore' colorBack); " is 132.
Long Statement,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,BarAnnotationDrawModify,The length of the statement  "		barAnnotation = this.ExecutorObjects_frozenForRendering.BarAnnotationAddOrModify (barIndex' barAnnotationId' barAnnotationText' font' colorForeground' colorBackground' aboveBar' verticalPadding' popupParametersDidntChange); " is 223.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnResize,The length of the statement  "			if (Assembler.IsInitialized && Assembler.InstanceInitialized.MainFormDockFormsFullyDeserializedLayoutComplete == false) return;" is 127.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The length of the statement  "		string msg = "PanelNamedFolding[" + this.PanelName + "].ChartControl=null; invoke PanelNamedFolding.Initialize() from derived.ctor()"; " is 134.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The length of the statement  "		string msg = "" + " VisibleBarLeft_cached[" + this.VisibleBarLeft_cached + "]!=VisibleBarLeft[" + this.ChartControl.VisibleBarLeft + "]" + " FORCING_BACKGROUND_PAINT_SYNC_KOZ_REFRESH()_INVOKES_ONLY_FOREGROUND"//+ " ChartControl.RefreshAllPanelsIsSignalled=" + this.ChartControl.RefreshAllPanelsIsSignalled " is 305.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The length of the statement  "		msg = "GOT VisibleBarLeft_cached[" + this.VisibleBarLeft_cached + "] VisibleBarLeft[" + this.ChartControl.VisibleBarLeft + "] AFTER" + msg; " is 139.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The length of the statement  "		//	string msg = "MUST_BE_POSITIVE#2_this.VisibleRangeWithTwoSqueezers_cached[" + this.VisibleRangeWithTwoSqueezers_cached + "] panel[" + this.ToString() + "]"; " is 159.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The length of the statement  "			string msg = "PANEL_BASE_PAINT_ENTRY_POINT_PROTECTS_DERIVED_FROM_INVOKING_PaintWholeSurfaceBarsNotEmpty()" + " occurs for JSON-Scripted Strategies with PanelIndicator* open without indicator's data" + " moving beyond right bar makes all panels blank"; " is 251.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintBackgroundDoubleBuffered,The length of the statement  "				string msg = "this.ChartControl.VisibleBarRight_MUST_BE_POSITIVE_KOZ_YOU_HAVE_BARS[" + this.ChartControl.Bars.Count + "]"; " is 122.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintBackgroundDoubleBuffered,The length of the statement  "			string msg = "WASTED_ASSIGNMENT_WILL_THROW_SOON" + " this.PanelHeightMinusGutterBottomHeight[" + this.PanelHeightMinusGutterBottomHeight_cached + "]<=0"; " is 153.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,renderBarBackgrounds,The length of the statement  "			string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)"; " is 147.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,renderBarBackgrounds,The length of the statement  "		Color backgroundMoreTransparent = Color.FromArgb (this.ChartControl.ChartSettings.BarsBackgroundTransparencyAlpha' backgroundSetByScript); " is 138.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabelOnNextLine,The length of the statement  "		this.ChartLabelsUpperLeftYincremental += (this.ChartControl != null) ? this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 : 15; " is 145.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The length of the statement  "		labelPlate.Width = labelMeasuredWidth + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 + makingHpaddingLookLikeVpadding * 2; " is 146.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The length of the statement  "			int extendedBySquare = this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquarePadding * 2 + this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquareSize; " is 176.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The length of the statement  "			square.Y = this.ChartLabelsUpperLeftYincremental + this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquarePadding; " is 126.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The length of the statement  "			int squareAndRightPadding = this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquareSize + this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquarePadding; " is 177.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The length of the statement  "		// moving text label to align middle vertically for Consolas'8 and Arial'8 (Courier New or some other font looked exactly valign=middle but I won't use it)  " is 155.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,PaintWholeSurfaceBarsNotEmpty,The length of the statement  "	//		base.VisibleMinMinusTopSqueezer_cached' this.VisibleMaxPlusBottomSqueezer_cached' this.VisibleRangeWithTwoSqueezers_cached " is 126.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,PaintWholeSurfaceBarsNotEmpty,The length of the statement  "	string msig = " " + this.PanelName + ".PanelPrice'Volume.PaintWholeSurfaceBarsNotEmpty() " + this.BarsIdent + " " + this.Parent.ToString (); " is 140.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,PaintWholeSurfaceBarsNotEmpty,The length of the statement  "		string msg = "RANGE_CAN_NOT_BE_ZERO_WHEN_YOU_HAVE_BARS.COUNT[" + this.ChartControl.Bars.Count + "] [" + this.ToString () + "].VisibleRange_cached=0"; " is 149.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,PaintWholeSurfaceBarsNotEmpty,The length of the statement  "	this.VisibleRangeWithTwoSqueezers_cached = this.VisibleMaxPlusBottomSqueezer_cached - this.VisibleMinMinusTopSqueezer_cached; " is 125.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,PaintWholeSurfaceBarsNotEmpty,The length of the statement  "	msig = " this.VisibleRangeWithTwoSqueezers_cached[" + this.VisibleRangeWithTwoSqueezers_cached + "]:" + " [" + this.VisibleMinMinusTopSqueezer_cached + "]...[" + this.VisibleMaxPlusBottomSqueezer_cached + "]" + msig; " is 216.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,PaintBackgroundWholeSurfaceBarsNotEmpty,The length of the statement  "	//this.PaintError(g' "YOU_DIDNT_OVERRIDE_IN_DERIVED[" + this.PanelName + "]: protected override void PaintBackgroundWholeSurfaceBarsNotEmpty(Graphics g)"); " is 155.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,XToBar,The length of the statement  "	for (int i = this.visibleBarRightExisting; i >= this.visibleBarLeftExisting; i--' offsetFromRight -= this.BarWidthIncludingPadding_cached) { " is 140.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,ensureFontMetricsAreCalculated,The length of the statement  "		this.GutterRightFontHeight_cached = (int)g.MeasureString ("ABC123`'jg]"' this.ChartControl.ChartSettings.GutterRightFont).Height; " is 129.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,ensureFontMetricsAreCalculated,The length of the statement  "		this.GutterBottomFontHeight_cached = (int)g.MeasureString ("ABC123`'jg]"' this.ChartControl.ChartSettings.GutterBottomFont).Height; " is 131.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,ensureFontMetricsAreCalculated,The length of the statement  "		this.GutterBottomHeight_cached = this.GutterBottomFontHeight_cached + this.ChartControl.ChartSettings.GutterBottomPadding * 2; " is 126.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,SetWidthIgnoreResize,The length of the statement  "				string msg = "BEOYND_PARENTS_WIDTH__NOT_TALKING_ABOUT_BORDERS panelWidth[" + panelWidth + "] >= base.Parent.Width[" + base.Parent.Width + "]"; " is 142.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,SetHeightIgnoreResize,The length of the statement  "				string msg = "BEOYND_PARENTS_HEIGHT__NOT_TALKING_ABOUT_BORDERS panelWidth[" + panelHeight + "] >= base.Parent.Width[" + base.Parent.Height + "]"; " is 145.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseEnter,The length of the statement  "		//DEBUGGING_HEIGHT_CACHED__REDUCING_NUMBER_OF_EVENTS__IM_OK_WITH_CROSSHAIR_STUCK this.ChartControl.InvalidateAllPanels(); " is 121.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseLeave,The length of the statement  "		//DEBUGGING_HEIGHT_CACHED__REDUCING_NUMBER_OF_EVENTS__IM_OK_WITH_CROSSHAIR_STUCK this.ChartControl.InvalidateAllPanels(); " is 121.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseLeave,The length of the statement  "	// WHEN_ONMOUSEOVER_TOOLTIP_I_GET_MOUSELEAVE_HERE__FOLLOWING_INVALIDATE_WILL_HIDE this.ChartControl.TooltipPositionHide(); " is 122.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseLeave,The length of the statement  "	//DEBUGGING_HEIGHT_CACHED__REDUCING_NUMBER_OF_EVENTS__IM_OK_WITH_CROSSHAIR_STUCK this.ChartControl.InvalidateAllPanels();	//	DRAWING_CURRENT_JUMPING_STREAMING_VALUE_ON_GUTTER_SINCE_MOUSE_WENT_OUT_OF_BOUNDARIES " is 209.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseMove,The length of the statement  "		if (this.dragButtonPressed == true && this.scrollingHorizontally == false && this.squeezingHorizontally == false && this.squeezingVertically == false) { " is 152.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseMove,The length of the statement  "				// first move after this.mousePressed means DRAG!! wasn't in UserControl due to ambiguity between OnMouseMove and OnMouseDrag' probably " is 135.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseMove,The length of the statement  "				// first move after this.mousePressed means DRAG!! wasn't in UserControl due to ambiguity between OnMouseMove and OnMouseDrag' probably " is 135.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseMove,The length of the statement  "				// first move after this.mousePressed means DRAG!! wasn't in UserControl due to ambiguity between OnMouseMove and OnMouseDrag' probably " is 135.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseMove,The length of the statement  "				//if (this.VisibleMin_cached <= 0) return;		//this.HorizontalScroll IS NOT USED!!! use Parent's instead! ChartControl.HorizontalScroll " is 134.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseMove,The length of the statement  "			if (Math.Abs (this.squeezeHorizontalXstarted - e.X) <= this.ChartControl.ChartSettings.ScrollSqueezeMouseDragSensitivityPx) " is 123.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseMove,The length of the statement  "			if (Math.Abs (this.squeezeHorizontalXprev - XnotBeyond0height) < this.ChartControl.ChartSettings.SqueezeHorizontalMouse1pxDistanceReceivedToOneStep) " is 148.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseMove,The length of the statement  "			if (Math.Abs (this.squeezeVerticalYstarted - e.Y) <= this.ChartControl.ChartSettings.ScrollSqueezeMouseDragSensitivityPx) " is 121.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,handleTooltipsPositionAndPrice,The length of the statement  "	// COPYPASTE_SOURCE=PanelNamedFolding.handleTooltipsPositionAndPrice()_DESTINATION=ChartShadowProtocol.SelectPosition() begin  " is 125.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,handleTooltipsPositionAndPrice,The length of the statement  "	Dictionary<int' List<AlertArrow>> alertArrowsListByBar = this.ChartControl.ExecutorObjects_frozenForRendering.AlertArrowsListByBar; " is 131.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,handleTooltipsPositionAndPrice,The length of the statement  "	// COPYPASTE_SOURCE=PanelNamedFolding.handleTooltipsPositionAndPrice()_DESTINATION=ChartShadowProtocol.SelectPosition() end  " is 123.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,handleTooltipPrice,The length of the statement  "	//if (this.scrollingHorizontally == false || this.squeezingHorizontally == false || this.squeezingVertically == false) return; " is 126.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,handleTooltipPrice,The length of the statement  "		// FAILED		hide the priceTooltip when mouse hovers <= chart drag is "blocked"' mouse "cross" doesn't update (I want to see the price of current mouse position)   " is 159.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,handleTooltipPrice,The length of the statement  "		// WHY			TooltipPriceClientRectangleOrEmptyIfInvisible.Location is (always) 0:0' I'm lazy to offset TooltipPosition to parent's (ChartControl's) coordinates; " is 157.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,handleTooltipPrice,The length of the statement  "		//int verticalSensitivityIncreased = 4;	// doesn't cause flickering' keep TooltipSurfacePaddingFromBarLeftRightToAvoidMouseLeave > 2 " is 132.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,handleTooltipPrice,The length of the statement  "		bool mouseIsOverBarRectangle = e.Y >= rectangleBarWithShadows.Top - verticalSensitivityIncreased && e.Y <= rectangleBarWithShadows.Bottom + verticalSensitivityIncreased; " is 169.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "		string msg = "NEVER_HAPPENED_SO_FAR MUST_NOT_BE_NEGATIVE_INFINITY this.VisibleRangeWithTwoSqueezers_cached[" + this.VisibleRangeWithTwoSqueezers_cached + "]"; " is 158.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "		string msg = "[" + this.PanelName + "]-PANEL_HEIGHT_MUST_BE_POSITIVE_this.PanelHeightMinusGutterBottomHeight_cached[" + this.PanelHeightMinusGutterBottomHeight_cached + "]"; " is 173.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "		msg += "; this.ChartSettings.ScrollPositionAtBarIndex seems to be ZERO (Chartontrol.cs:82) => move the slider to change&serialize"; " is 131.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "		string msg = "[" + this.PanelName + "]-GUTTER_FONT_HEIGHT_MUST_BE_POSITIVE_this.GutterRightFontHeight_cached[" + this.GutterRightFontHeight_cached + "]]"; " is 154.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "		double gridStep = this.calculateOptimalVeritcalGridStep (this.VisibleRangeWithTwoSqueezers_cached' howManyLinesWillFit); " is 120.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "					g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesHorizontal' 0' gridY' this.PanelWidthMinusRightPriceGutter - 1' gridY); " is 127.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "			//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(gridPrice' this.ThisPanelIsPricePanel); " is 124.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "			g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp); " is 182.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "			//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(mousePrice' this.ThisPanelIsPricePanel); " is 125.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "					g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' brushIndicatorInverted' labelXalignedRight' labelYadjustedUp); " is 146.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "				g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp); " is 182.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "		g.DrawLine (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground' mouseBarMiddleX' 0' mouseBarMiddleX' base.Height); " is 136.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "			string barLeftmostFormatted = barLeftmost.DateTimeOpen.ToString (this.ChartControl.ChartSettings.GutterBottomDateFormatDayOpener); " is 130.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "			int barLeftmostWidth = (int)g.MeasureString (barLeftmostFormatted' this.ChartControl.ChartSettings.GutterBottomFont).Width; " is 123.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "			//g.DrawLine(this.ChartControl.ChartSettings.PenGridlinesVerticalNewDate' barLeftmostX' 0' barLeftmostX' this.PanelHeightMinusGutterBottomHeight_cached); " is 153.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "			g.DrawString (barLeftmostFormatted' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushGutterBottomNewDateForeground' barLeftmostX' y); " is 171.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "			for (int i = this.visibleBarRightExisting - 1; i >= this.visibleBarLeftExisting; i--' barPrevX -= this.BarWidthIncludingPadding_cached) { " is 137.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "					g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesVerticalNewDate' barPrevX' 0' barPrevX' this.PanelHeightMinusGutterBottomHeight_cached - 1); " is 148.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "				string barDayOpener = barOpenerPrevDay.DateTimeOpen.ToString (this.ChartControl.ChartSettings.GutterBottomDateFormatDayOpener); " is 127.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "					g.DrawString (barDayOpener' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushGutterBottomNewDateForeground' rect.Left' rect.Top); " is 167.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "		int barMiddleX = this.PanelWidthMinusRightPriceGutter - this.BarWidthIncludingPadding_cached + this.BarShadowXoffset_cached; " is 124.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "		for (int i = this.visibleBarRightExisting; i >= this.visibleBarLeftExisting; i--' barMiddleX -= this.BarWidthIncludingPadding_cached) { " is 135.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "				g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesVertical' barMiddleX' 0' barMiddleX' this.PanelHeightMinusGutterBottomHeight_cached - 1); " is 145.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "			g.DrawString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushGutterBottomForeground' xLabel' y); " is 151.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The length of the statement  "				g.DrawString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushMousePositionTrackOnGuttersInverted' xLabel' y); " is 164.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderBarHistogram,The length of the statement  "	var brushDown = (fillDownCandleBody) ? this.ChartControl.ChartSettings.BrushVolumeBarDown : this.ChartControl.ChartSettings.BrushVolumeBarUp; " is 141.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderBarHistogram,The length of the statement  "	//if (fillDownCandleBody) histogramBarInverted.Width--;	// SYNC_WITH_RenderBarCandle drawing using a pen produces 1px narrower rectangle that drawing using a brush???... " is 169.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderIndicators,The length of the statement  "	bool skipPaintingIndicatorsBacktestDidntRunOrIncomplete = this.ChartControl.ExecutorObjects_frozenForRendering.IndicatorsAllHaveNoOwnValues; " is 140.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderIndicators,The length of the statement  "		//				int candleBodyHeight = barYLowInverted - barYHighInverted;		// height is measured DOWN the screen from candleBodyInverted.Y' not UP " is 137.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderIndicators,The length of the statement  "		//				candleBodyInverted.Y = barYHighInverted;					// drawing down' since Y grows down the screen from left upper corner (0:0) " is 126.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderIndicators,The length of the statement  "				string msg2 = "SKIPPING_RENDERING_INDICATOR_TITLES for indicator[" + indicator + "].BarsEffective[" + indicator.BarsEffective + "].BarFirst=null"; " is 146.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderIndicators,The length of the statement  "			string dateFirst = indicator.BarsEffective.BarFirst.DateTimeOpen.ToString (Assembler.DateTimeFormatIndicatorHasNoValuesFor); " is 124.
Long Statement,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderIndicators,The length of the statement  "			string dateLast = indicator.BarsEffective.BarLast.DateTimeOpen.ToString (Assembler.DateTimeFormatIndicatorHasNoValuesFor); " is 122.
Long Statement,Sq1.Charting,PanelIndicator,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelIndicator.cs,PaintWholeSurfaceBarsNotEmpty,The length of the statement  "	//		base.VisibleMinMinusTopSqueezer_cached' this.VisibleMaxPlusBottomSqueezer_cached' this.VisibleRangeWithTwoSqueezers_cached " is 126.
Long Statement,Sq1.Charting,PanelIndicator,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelIndicator.cs,PaintWholeSurfaceBarsNotEmpty,The length of the statement  "	bool valuesAreConstantOrNaN = (visibleMinCandidateMaxUnsafe == double.MaxValue && visibleMaxCandidateMinUnsafe == double.MinValue) || visibleMinCandidateMaxUnsafe == visibleMaxCandidateMinUnsafe; " is 195.
Long Statement,Sq1.Charting,PanelIndicator,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelIndicator.cs,PaintWholeSurfaceBarsNotEmpty,The length of the statement  "	this.VisibleRangeWithTwoSqueezers_cached = this.VisibleMaxPlusBottomSqueezer_cached - VisibleMinMinusTopSqueezer_cached; " is 120.
Long Statement,Sq1.Charting,PanelIndicator,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelIndicator.cs,PaintWholeSurfaceBarsNotEmpty,The length of the statement  "	msig = " this.VisibleRangeWithTwoSqueezers_cached[" + this.VisibleRangeWithTwoSqueezers_cached + "]:" + " [" + this.VisibleMinMinusTopSqueezer_cached + "]...[" + this.VisibleMaxPlusBottomSqueezer_cached + "]" + msig; " is 216.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,InitializeWithNonEmptyBars,The length of the statement  "	// LAZY to check if ChartControl is initialized with every new Bars selected by user and ChartControl pushes itself again to its Panels " is 135.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "	//LevelTwoHalfSortedFrozen asks_frozenAsc_forOnePaint		= base.ChartControl.ScriptExecutorObjects.Asks_frozenAsc_forOnePaint; " is 124.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "	//LevelTwoHalfSortedFrozen bids_frozenDesc_forOnePaint	= base.ChartControl.ScriptExecutorObjects.Bids_frozenDesc_forOnePaint; " is 125.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "	LevelTwoFrozen levelTwo_frozenForOnePaint = base.ChartControl.ExecutorObjects_frozenForRendering.LevelTwo_frozen_forOnePaint; " is 125.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		string msg = "HAPPENS_AT_FIRST_FEW_QUOTES_OF_STARTING_LIVESIM base.ChartControl.ScriptExecutorObjects.Asks_sortedCachedForOnePaint=null"; " is 137.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		string msg = "HAPPENS_AT_FIRST_FEW_QUOTES_OF_STARTING_LIVESIM base.ChartControl.ScriptExecutorObjects.Bids_frozenDesc_forOnePaint=null"; " is 136.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		int howManyBidPriceLevelsWillFit = (int)Math.Round ((base.ClientRectangle.Height - quoteBidYofsetted) / (double)pxPerPriceStep_Height); " is 135.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		// they are not equal because of the height of the DomControl; spread is not accounted so I leave some space for the spread by trimming a longer moustache " is 154.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "	//	using (Pen brown = new Pen(Color.SaddleBrown)) g.DrawLine(brown' 0' mouseOveredPriceY' base.Width' mouseOveredPriceY); " is 121.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "	//using (Pen black = new Pen(Color.Black)) g.DrawLine(black' 0' pxPricePanelVertialOffset' base.Width' pxPricePanelVertialOffset); " is 130.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "	//v1 foreach (double ask in asks_cachedForOnePaint.Keys) {		// Keys may be unsorted in a regular Dictionary => rendering price levels randomly " is 142.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "			// using panelPrice.PixelsPerPriceStep5pxLeast_cached as minimal step (making price level wider on PanelLevel2 than price level displayed on PanelPrice for visual convenience) " is 175.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		Rectangle horizontalBar = base.ParentMultiSplitIamLast ? new Rectangle (0' yAsk - pxPerPriceStep_Height' lotsRelativeWidth' pxPerPriceStep_Height) : new Rectangle (base.Width - lotsRelativeWidth' yAsk - pxPerPriceStep_Height' lotsRelativeWidth' pxPerPriceStep_Height); " is 268.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		leftUpContour [1] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yAsk) : new Point (base.Width - lotsRelativeWidth' yAsk); " is 138.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		leftUpContour [2] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yAsk - pxPerPriceStep_Height) : new Point (base.Width - lotsRelativeWidth' yAsk - pxPerPriceStep_Height); " is 186.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		int xLabel = base.ParentMultiSplitIamLast ? lotsRelativeWidth - labelMeasurementsWidth - base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal : base.Width - lotsRelativeWidth + base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal; " is 246.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		g.DrawString (lotCumulativeFormatted' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushLevelTwoLot' xLabel' yLabel); " is 153.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "			// using panelPrice.PixelsPerPriceStep5pxLeast_cached as minimal step (making price level wider on PanelLevel2 than price level displayed on PanelPrice for visual convenience) " is 175.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		Rectangle horizontalBar = base.ParentMultiSplitIamLast ? new Rectangle (0' yBid' lotsRelativeWidth' pxPerPriceStep_Height) : new Rectangle (base.Width - lotsRelativeWidth' yBid' lotsRelativeWidth' pxPerPriceStep_Height); " is 220.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		leftDownContour [1] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yBid) : new Point (base.Width - lotsRelativeWidth' yBid); " is 140.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		leftDownContour [2] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yBid + pxPerPriceStep_Height) : new Point (base.Width - lotsRelativeWidth' yBid + pxPerPriceStep_Height); " is 188.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		int xLabel = base.ParentMultiSplitIamLast ? lotsRelativeWidth - labelMeasurementsWidth - base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal : base.Width - lotsRelativeWidth + base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal; " is 246.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The length of the statement  "		g.DrawString (lotCumulativeFormatted' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushLevelTwoLot' xLabel' yLabel); " is 153.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderBidAsk,The length of the statement  "	//Quote quoteLastFromDictionary = this.StreamingDataSnapshot_nullUnsafe.LastQuoteCloneGetForSymbol(base.ChartControl.Bars.Symbol); " is 130.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderBidAsk,The length of the statement  "	//	string msg = "GOOD_THAT_YOU_CACHED DATASNAP_UNSYNCED_EXECOBJ quoteLast[" + quoteLast + "] != quoteLastFromDictionary[" + quoteLastFromDictionary + "]"; " is 154.
Long Statement,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderBidAsk,The length of the statement  "	g.DrawString (label' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushSpreadLabel' xLabel' yBid + 3); " is 138.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,PaintWholeSurfaceBarsNotEmpty,The length of the statement  "	//		base.VisibleMinMinusTopSqueezer_cached' this.VisibleMaxPlusBottomSqueezer_cached' this.VisibleRangeWithTwoSqueezers_cached " is 126.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,alignVisiblePositionArrowsAndCountMaxOutstanding,The length of the statement  "	Dictionary<int' List<AlertArrow>> arrowListByBar = base.ChartControl.ExecutorObjects_frozenForRendering.AlertArrowsListByBar; " is 125.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderBarsPrice,The length of the statement  "			string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)"; " is 147.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderAlertsPending_bigAquaDot_atPriceEmitted_ifExistForBar,The length of the statement  "	Dictionary<int' AlertList> alertPendingListByBar = base.ChartControl.ExecutorObjects_frozenForRendering.AlertsPlacedByBar; " is 122.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderAlertsPending_bigAquaDot_atPriceEmitted_ifExistForBar,The length of the statement  "	List<Alert> alertsPending = alertPendingListByBar [barIndex].SafeCopy (this' "//renderPendingAlertsIfExistForBar(WAIT)"); " is 121.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPosition_smallBrownDot_atPriceFilled_arrowsLines_ifExistForBar,The length of the statement  "	Dictionary<int' List<AlertArrow>> alertArrowsListByBar = base.ChartControl.ExecutorObjects_frozenForRendering.AlertArrowsListByBar; " is 131.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPosition_smallBrownDot_atPriceFilled_arrowsLines_ifExistForBar,The length of the statement  "			Rectangle entryPlannedRect = new Rectangle (entryPlannedX - ellipsePlannedRadius' entryPlannedY - ellipsePlannedRadius' ellipsePlannedDiameter' ellipsePlannedDiameter); " is 168.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPosition_smallBrownDot_atPriceFilled_arrowsLines_ifExistForBar,The length of the statement  "				Rectangle entryFilledRect = new Rectangle (entryPlannedX - 2' entryFilledOnY - 2' ellipseFilledDiameter' ellipseFilledDiameter); " is 128.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPosition_smallBrownDot_atPriceFilled_arrowsLines_ifExistForBar,The length of the statement  "			Rectangle exitPlannedRect = new Rectangle (exitPlannedX - ellipsePlannedRadius' exitPlannedY - ellipsePlannedRadius' ellipsePlannedDiameter' ellipsePlannedDiameter); " is 165.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPosition_smallBrownDot_atPriceFilled_arrowsLines_ifExistForBar,The length of the statement  "				Rectangle exitFilledRect = new Rectangle (exitPlannedX - ellipseFilledRadius' exitFilledOnY - ellipseFilledRadius' ellipseFilledDiameter' ellipseFilledDiameter); " is 161.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPositionLineForArrow,The length of the statement  "		penLine = (arrow.Position.NetProfit > 0) ? base.ChartControl.ChartSettings.PenPositionLineEntryExitConnectedProfit : base.ChartControl.ChartSettings.PenPositionLineEntryExitConnectedLoss; " is 187.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartLines,The length of the statement  "		string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)"; " is 147.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartLines,The length of the statement  "	//v3 - will work faster closer to right edge of Chart (fastest when StreamingBar is displayed); will display all lines that start AND end beoynd VisibleBars " is 156.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartLabels,The length of the statement  "		string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)"; " is 147.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The length of the statement  "		string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)"; " is 147.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The length of the statement  "			string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)"; " is 147.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The length of the statement  "		Dictionary<int' List<AlertArrow>> alertArrowsListByBar = base.ChartControl.ExecutorObjects_frozenForRendering.AlertArrowsListByBar; " is 131.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The length of the statement  "				string msg = "PREVENT_Y_BEYOUND_VISIBLE_DUE_TO_EXCEEDED_BAR_ANNOTATION_PADDING (due to barAnnotation.VerticalPaddingPx = Int32.MaxValue)"; " is 138.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The length of the statement  "				y = barAnnotation.AboveBar ? verticalOffsetForNextStackedAnnotationsAboveSameBar : this.PanelHeightMinusGutterBottomHeight_cached - labelHeightMeasured - verticalOffsetForMextStackedAnnotationsBelowSameBar - 3; " is 210.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The length of the statement  "			base.DrawLabel (g' x' y' barAnnotation.BarAnnotationText' barAnnotation.Font' barAnnotation.ColorForeground' barAnnotation.ColorBackground' false); " is 147.
Long Statement,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderBidAsk,The length of the statement  "		g.DrawString ("spread[" + spreadFormatted + "]"' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushSpreadLabel' 5' yBid + 3); " is 161.
Long Statement,Sq1.Charting,PanelVolume,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelVolume.cs,PaintWholeSurfaceBarsNotEmpty,The length of the statement  "	//		base.VisibleMinMinusTopSqueezer_cached' this.VisibleMaxPlusBottomSqueezer_cached' this.VisibleRangeWithTwoSqueezers_cached " is 126.
Long Statement,Sq1.Charting,PanelVolume,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelVolume.cs,renderBarsVolume,The length of the statement  "			string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)"; " is 147.
Long Statement,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,PositionArrowsRealtimeAdd,The length of the statement  "	//		NO_NEED_TO_CACHE_OPENING_ALERT_BITMAP_FOR_JUST_CLOSED_POSITIONS AlertArrow.Bitmap is dynamic for EntryAlerts until the position is closed; " is 142.
Long Statement,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,AlertsPlacedRealtimeAdd,The length of the statement  "			this.AlertsPlacedByBar.Add (placedBarIndex' new AlertList ("ALERTS_FOR_PlacedBarIndex[" + placedBarIndex + "]"' null' null)); " is 125.
Long Statement,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,AlertsPlacedRealtimeAdd,The length of the statement  "		pendingsForBar.AddNoDupe (alert' this' "//AlertsPlacedRealtimeAdd(WAIT)[" + placedBarIndex + "]"' ConcurrentWatchdog.TIMEOUT_DEFAULT' false); " is 141.
Long Statement,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,AlertsPendingStillNotFilledForBarAdd,The length of the statement  "		string msg = "MOST_LIKELY_INVOKED_FROM_CALLBACK_WITH_PREVIOUS_BAR_INDEX MUST_HAVE_BEEN_ADDED_BY_AlertsPlacedRealtimeAdd(): AlertsPlacedByBar[" + barIndexStillNotFilled + "]"; " is 174.
Long Statement,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,AlertsPendingStillNotFilledForBarAdd,The length of the statement  "		this.AlertsPlacedByBar.Add (barIndexStillNotFilled' new AlertList ("ALERTS_FOR_barIndexStillNotFilled[" + barIndexStillNotFilled + "]"' null' null)); " is 149.
Long Statement,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,AlertsPendingStillNotFilledForBarAdd,The length of the statement  "	pendingsForBar.AddRange (alertsPendingAtCurrentBarSafeCopy' this' "//AlertsPendingStillNotFilledForBarAdd(WAIT)[" + barIndexStillNotFilled + "]"' ConcurrentWatchdog.TIMEOUT_DEFAULT' false); " is 189.
Long Statement,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,LineAddOrModify,The length of the statement  "	if (lineToModify.BarLeft == barLeft && lineToModify.PriceLeft == priceLeft && lineToModify.BarRight == barRight && lineToModify.PriceRight == priceRight && lineToModify.Color == color && lineToModify.Width == width) { " is 217.
Long Statement,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,LineAddOrModify,The length of the statement  "			string msg = "LINES_BY_LEFT_MUST_CONTAIN_PREVIOUSLY_ADDED_LINE" + " LinesByLeftBar[" + barLeft + "].Count[" + linesByLeftImMovingTo.Count + "]"; " is 144.
Long Statement,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,LineAddOrModify,The length of the statement  "			string msg = "LINES_BY_RIGHT_MUST_CONTAIN_PREVIOUSLY_ADDED_LINE" + " LinesByRightBar[" + barRight + "].Count[" + linesByRightImMovingTo.Count + "]"; " is 148.
Long Statement,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,ChartLabelAddOrModify,The length of the statement  "	if (labelToModify.LabelText == labelText && labelToModify.Font == font && labelToModify.ColorForeground == colorFore && labelToModify.ColorBackground == colorBack) { " is 165.
Long Statement,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,BarAnnotationAddOrModify,The length of the statement  "		OnChartBarAnnotation barAnnotationCreated = new OnChartBarAnnotation (barAnnotationId' barAnnotationText' font' colorForeground' colorBackground' aboveBar' verticalPadding' popupParametersDidntChange); " is 201.
Long Statement,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,BarAnnotationAddOrModify,The length of the statement  "	if (barAnnotationToModify.BarAnnotationText == barAnnotationText && barAnnotationToModify.Font == font && barAnnotationToModify.ColorForeground == colorForeground && barAnnotationToModify.ColorBackground == colorBackground && barAnnotationToModify.AboveBar == aboveBar && barAnnotationToModify.VerticalPaddingPx == verticalPadding//NOT_VALUABLE_PARAMETER_TO_HIDE_REPORTING && barAnnotationToModify.ReportDidntChangeStatus	== reportDidntChangeStatus " is 448.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,PopulateWithChartSettings,The length of the statement  "		// triggering event to invoke toolStripComboBox1_SelectedIndexChanged => testing chartSettingsSelected_nullUnsafe + Initialize() " is 128.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The length of the statement  "	this.propertyGrid1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right))); " is 237.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The length of the statement  "	this.propertyGrid1.PropertyValueChanged += new System.Windows.Forms.PropertyValueChangedEventHandler (this.propertyGrid1_PropertyValueChanged); " is 143.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The length of the statement  "	this.mniltbSaveCurrentAs.UserTyped += new System.EventHandler<Sq1.Widgets.LabeledTextBox.LabeledTextBoxUserTypedArgs> (this.mniltbSaveCurrentAs_UserTyped); " is 155.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The length of the statement  "	this.mniltbDuplicate.UserTyped += new System.EventHandler<Sq1.Widgets.LabeledTextBox.LabeledTextBoxUserTypedArgs> (this.mniltbDuplicate_UserTyped); " is 147.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The length of the statement  "	this.mniltbRenameTo.UserTyped += new System.EventHandler<Sq1.Widgets.LabeledTextBox.LabeledTextBoxUserTypedArgs> (this.mniltbRenameTo_UserTyped); " is 145.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The length of the statement  "	this.mniAddNew.UserTyped += new System.EventHandler<Sq1.Widgets.LabeledTextBox.LabeledTextBoxUserTypedArgs> (this.mniAddNew_UserTyped); " is 135.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,cbxSettings_SelectedIndexChanged,The length of the statement  "		string msg = "WHATT???? sender as ComboBox != this.toolStripItemComboBox1.ComboBox //toolStripItemComboBox1_SelectedIndexChanged()"; " is 132.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,cbxSettings_SelectedIndexChanged,The length of the statement  "		string msg = "YOU_MUST_ComboBox.SelectValue(CURRENT_CHART_CONTROL.ChartSettings)__USE_PopulateWithChartSettings()" + "; now this.toolStripItemComboBox1.ComboBox.SelectedItem as ChartSettings=null"; " is 197.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,cbxSettings_SelectedIndexChanged,The length of the statement  "	// I want to keep dropdown open to save the user from monkey-clicking; when I initialize() at startup' this.rebuildingDropdown=true and I don't reach to here; " is 158.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,cbxSettings_SelectedIndexChanged,The length of the statement  "	// the only time I'm kicked in is when I switch charts => ChartSettingsEditorControl syncs to the current chart's settings; " is 123.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,propertyGrid1_PropertyValueChanged,The length of the statement  "		string msg = "I_CAN_NOT_SERIALIZE_CHART_SETTINGS_AFTER_PROPERTY_CHANGE chartSettings.ContainsKey(" + selected.StrategyName + ")=false"; " is 135.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,populateTemplate,The length of the statement  "		string msg = "I_CAN_NOT_SERIALIZE_CHART_SETTINGS_AFTER_PROPERTY_CHANGE chartSettings.ContainsKey(" + selected.StrategyName + ")=false"; " is 135.
Long Statement,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,populateTemplate,The length of the statement  "				string msg = "I_REFUSE_TO_CHANGE_CHECKED_AFTER_ABSORBED {this.ctxTemplates.Item[" + each + "] as ToolStripMenuItem = null}"; " is 124.
Long Statement,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,PopulateTooltip,The length of the statement  "	this.lblSlippagesVal.Text = position.EntryFilled_slippage.ToString () + " / " + position.ExitFilled_slippage.ToString (); " is 121.
Long Statement,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The length of the statement  "	this.lblDateVal.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 158.
Long Statement,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,OnMouseMove,The length of the statement  "	//return;		//TURNED_OFF_KOZ__INVALIDATING_ALL_STILL_LETS_SOMETIME__MOUSE_OVER_TOOLTIP__IT_HAPPENS_TO_BE_INITIALIZED_WITH_NULL_CREISI " is 132.
Long Statement,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,OnMouseMove,The length of the statement  "		string msg = "I_REFUSE_TRANSPARENT_MOUSEMOVE_FORWARDING__WHEN_ONMOUSEOVER_TOOLTIP_I_GET_MOUSELEAVE_HERE__FOLLOWING_INVALIDATE_WILL_HIDE"; " is 137.
Long Statement,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The length of the statement  "	this.lblHeaderVal.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right))); " is 191.
Long Statement,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The length of the statement  "	this.lblHeaderVal.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 160.
Long Statement,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The length of the statement  "	this.lblOpenVal.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 146.
Long Statement,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The length of the statement  "	this.lblHighVal.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 146.
Long Statement,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The length of the statement  "	this.lblLowVal.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 145.
Long Statement,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The length of the statement  "	this.lblCloseVal.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The length of the statement  "	this.lblVolumeVal.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 148.
Long Statement,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The length of the statement  "	this.lnkAlertsVal.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 148.
Long Statement,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,OnMouseMove,The length of the statement  "	//return;		//TURNED_OFF_KOZ__INVALIDATING_ALL_STILL_LETS_SOMETIME__MOUSE_OVER_TOOLTIP__IT_HAPPENS_TO_BE_INITIALIZED_WITH_NULL_CREISI " is 132.
Long Statement,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,OnMouseMove,The length of the statement  "		string msg = "I_REFUSE_TRANSPARENT_MOUSEMOVE_FORWARDING__WHEN_ONMOUSEOVER_TOOLTIP_I_GET_MOUSELEAVE_HERE__FOLLOWING_INVALIDATE_WILL_HIDE"; " is 137.
Long Statement,Sq1.Charting.Demo,ExceptionsForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\ExceptionsForm.cs,PopupException,The length of the statement  "	//v1 SWITCHING_TO_GUI_THREAD_AS_ONE_STEP___MAY_GET_VERY_CLUMSY_WHEN_MANY_THREADS_POPUP_THEIR_EXCEPTIONS_AT_THE_SAME_TIME " is 120.
Long Statement,Sq1.Charting.Demo,ExceptionsForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\ExceptionsForm.cs,InitializeComponent,The length of the statement  "	this.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(204))); " is 152.
Long Statement,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The length of the statement  "	WeifenLuo.WinFormsUI.Docking.AutoHideStripSkin autoHideStripSkin1 = new WeifenLuo.WinFormsUI.Docking.AutoHideStripSkin (); " is 122.
Long Statement,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The length of the statement  "	WeifenLuo.WinFormsUI.Docking.DockPanelGradient dockPanelGradient1 = new WeifenLuo.WinFormsUI.Docking.DockPanelGradient (); " is 122.
Long Statement,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The length of the statement  "	WeifenLuo.WinFormsUI.Docking.DockPaneStripSkin dockPaneStripSkin1 = new WeifenLuo.WinFormsUI.Docking.DockPaneStripSkin (); " is 122.
Long Statement,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The length of the statement  "	WeifenLuo.WinFormsUI.Docking.DockPaneStripGradient dockPaneStripGradient1 = new WeifenLuo.WinFormsUI.Docking.DockPaneStripGradient (); " is 134.
Long Statement,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The length of the statement  "	WeifenLuo.WinFormsUI.Docking.DockPanelGradient dockPanelGradient2 = new WeifenLuo.WinFormsUI.Docking.DockPanelGradient (); " is 122.
Long Statement,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The length of the statement  "	WeifenLuo.WinFormsUI.Docking.DockPaneStripToolWindowGradient dockPaneStripToolWindowGradient1 = new WeifenLuo.WinFormsUI.Docking.DockPaneStripToolWindowGradient (); " is 164.
Long Statement,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The length of the statement  "	WeifenLuo.WinFormsUI.Docking.DockPanelGradient dockPanelGradient3 = new WeifenLuo.WinFormsUI.Docking.DockPanelGradient (); " is 122.
Long Statement,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The length of the statement  "	this.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(204))); " is 152.
Long Statement,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(TestChartForm)); " is 134.
Long Statement,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The length of the statement  "	this.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(204))); " is 152.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,SplitterPropertiesByPanelNameGet,The length of the statement  "		#region CANT_ACCESS_PANELS_FROM_SlidersAutoGrow_SliderValueChanged()__NEED_MultiSplitterPropertiesByPanelName_SYNCED_TO_RESTORE_AFTER_DESERIALIZATION " is 149.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,SplitterPropertiesByPanelNameSet,The length of the statement  "		string msg = "multisplit container doesn't get indicators panels added when WorkspaceLoad()" + "; if I return here to skip PropagateSplitterManorderDistance' will I be re-invoked after indicators are added?"; " is 208.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,SplitterPropertiesByPanelNameSet,The length of the statement  "			string msg = "CRITICAL YOU_ADDED_RENAMED_A_PANEL_AFTER_BUILDING_PROPERTIES or DESERIALIZED_DICTIONARY_CONTAINS_OLD_CONTENT_OR_NAMES_OF_PANELS"; " is 143.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,SplitterPropertiesByPanelNameSet,The length of the statement  "			string msg = "REPLACE_WITH_MORE_RELIABLE_ALGORITHM YOU_SWAPPED_PANELS_AND_SAVED_IN_PROPERTIES__NEED_TO_MOVE_INSIDE_ARRAYS"; " is 123.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,SplitterPropertiesByPanelNameSet,The length of the statement  "	int thingsIchanged = this.VerticalizeAllLogic ? this.propagateColumns (splitterPropertiesByPanelName) : this.propagateRows (splitterPropertiesByPanelName); " is 155.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,propagateColumns,The length of the statement  "			string msg = "MUST_BE_INITIALIZED_EARLIER splitter[" + splitter.Name + "].Width[" + splitter.Width + "] => [" + this.SplitterHeight + "]"; " is 138.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,propagateColumns,The length of the statement  "			string msg = "TO_UNDELAY_SIZE_PROPAGATION_INVOKE_base.SuspendLayout()_UPSTACK panel.Width[" + panel.Width + "] != newWidth[" + newWidth + "]"; " is 142.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,propagateColumns,The length of the statement  "			string msg = "TO_UNDELAY_SIZE_PROPAGATION_INVOKE_base.SuspendLayout()_UPSTACK panel.Width[" + panel.Width + "] != newWidth[" + newWidth + "]"; " is 142.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,propagateColumns,The length of the statement  "		string msg = "USER_LEFT_WHOLE_CHART_CONTROL_TOO_NARROW_BEFORE_RESTART LOWER_PANEL_GETS_CUT_BY_HSCROLLBAR roundingError[" + roundingError + "]"; " is 143.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,propagateRows,The length of the statement  "			string msg = "MUST_BE_INITIALIZED_EARLIER splitter[" + splitter.Name + "].Height[" + splitter.Height + "] => [" + this.SplitterHeight + "]"; " is 140.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,propagateRows,The length of the statement  "			string msg = "TO_UNDELAY_SIZE_PROPAGATION_INVOKE_base.SuspendLayout()_UPSTACK panel.Height[" + panel.Height + "] != newHeight[" + newHeight + "]"; " is 146.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,propagateRows,The length of the statement  "			string msg = "TO_UNDELAY_SIZE_PROPAGATION_INVOKE_base.SuspendLayout()_UPSTACK panel.Width[" + panel.Width + "] != baseWidth[" + baseWidth + "]"; " is 144.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,propagateRows,The length of the statement  "		string msg = "USER_LEFT_WHOLE_CHART_CONTROL_TOO_NARROW_BEFORE_RESTART LOWER_PANEL_GETS_CUT_BY_HSCROLLBAR roundingError[" + roundingError + "]"; " is 143.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,InitializeCreateSplittersDistributeFor,The length of the statement  "		msg += " AssignPanelBelowAbove_setMinimalSize_fromPanelsList() and DistributePanelsAndSplitters() are invoked in ChartControl.PropagateSplitterManorderDistanceIfFullyDeserialized"; " is 180.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,DistributePanelsAndSplitters,The length of the statement  "	Dictionary<string' MultiSplitterProperties> splittersDistributed = this.VerticalizeAllLogic ? this.distributeColumns () : this.distributeRows (); " is 145.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,distributeColumns,The length of the statement  "	// we need proportional vertical fill when 1) a new panel was added' 2) an old panel was removed' 3) Initialize(List<Panel>)' 4) OnResize " is 137.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,distributeColumns,The length of the statement  "	//panelsWidthEffective -= this.splitters.Count * 2;	// panel start NEXT pixel after splitter's boundary => each panel has 1px less space " is 136.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,distributeColumns,The length of the statement  "		MultiSplitterProperties splitterDistance = new MultiSplitterProperties (i' x' this.SplitterHeight' panelWidthStretched); " is 120.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,distributeRows,The length of the statement  "	// we need proportional vertical fill when 1) a new panel was added' 2) an old panel was removed' 3) Initialize(List<Panel>)' 4) OnResize " is 137.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,distributeRows,The length of the statement  "	//BOTTOM_4PX_GRAY panelsHeightEffective -= this.splitters.Count * 2;	// panel start NEXT pixel after splitter's boundary => each panel has 1px less space " is 153.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,distributeRows,The length of the statement  "		MultiSplitterProperties splitterDistance = new MultiSplitterProperties (i' y' this.SplitterHeight' panelHeightStretched); " is 121.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,PanelAddSplitterCreateAdd,The length of the statement  "		string msg = "CHECK_CAREFULLY_YOU_ARE_ADDING_ME_TO_MY_OWN_CONTROLS__BEEN_THERE__WINFORMS_EXCEPTION_WILL_FOLLOW_NEXT_LINE"; " is 122.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,PanelAddSplitterCreateAdd,The length of the statement  "		string msg = "I expect panels be removed from miltisplitContainer.Parent" + " so that only miltisplitContainer.Size will trigger miltisplitContainer.Controls.*.Resize()"; " is 170.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,PanelAddSplitterCreateAdd,The length of the statement  "	// WILL_DO_LATER_ONCE_FOR_ALL__PropagateSplitterManorderDistanceIfFullyDeserialized() this.AssignPanelBelowAbove_fromPanelsList(); " is 130.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterCreateAdd,The length of the statement  "	MultiSplitter splitter = new MultiSplitter (GrabHandleWidth' ColorGrabHandle' this.VerticalizeAllLogic' this.DebugSplitter); " is 124.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,SetWidthIgnoreResize,The length of the statement  "				string msg = "BEOYND_PARENTS_WIDTH__NOT_TALKING_ABOUT_BORDERS panelWidth[" + panelWidth + "] >= base.Parent.Width[" + base.Parent.Width + "]"; " is 142.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,SetHeightIgnoreResize,The length of the statement  "				string msg = "BEOYND_PARENTS_HEIGHT__NOT_TALKING_ABOUT_BORDERS panelWidth[" + panelHeight + "] >= base.Parent.Width[" + base.Parent.Height + "]"; " is 145.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,OnResize,The length of the statement  "	// I NEED UserControlDoubleBuffered to rebuild its offscreen buffer size and sync !!! otherwize the canvas for chart etc stays the same ingoring MainForm.Resizes " is 161.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,OnResize,The length of the statement  "	//if (Assembler.InstanceInitialized.SplitterEventsAreAllowedNsecAfterLaunchHopingInitialInnerDockResizingIsFinished) return; " is 124.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,OnResize,The length of the statement  "				//NO_TRANSFER_TO_THEM_RESIZE_HOPING_THEY_WILL_REPAINT_FULL_NEW_SIZE splitter.Invalidate();	// base.Invalidate() below doesn't reposition the dots " is 145.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,OnResize,The length of the statement  "				//NO_TRANSFER_TO_THEM_RESIZE_HOPING_THEY_WILL_REPAINT_FULL_NEW_SIZE splitter.Invalidate();	// base.Invalidate() below doesn't reposition the dots " is 145.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,OnResize,The length of the statement  "		//base.OnResize(e);	// hoping it will invoke all my tenants and they will repaint gray black splitters without mouseovers " is 121.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,OnPaintBackgroundDoubleBuffered,The length of the statement  "	//	string msg = "CONTROL.INVALIDATE()_IS_VERY_UNLIKELY_TO_THROW //MultiSplitContainerGeneric<PANEL_BASE>.OnPaintBackground()"; " is 126.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,OnPaintDoubleBuffered,The length of the statement  "	//if (Assembler.InstanceInitialized.SplitterEventsAreAllowedNsecAfterLaunchHopingInitialInnerDockResizingIsFinished) return; " is 124.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,OnPaintDoubleBuffered,The length of the statement  "				string msg = "YOU_GOT_MORE_(DESERIALIZED)_SPLITTERS_THAN_PANELS__MUST_BE_EQUAL  //MultiSplitContainerGeneric<PANEL_BASE>.OnPaint()"; " is 132.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,panel_MouseEnter,The length of the statement  "		string msg = "I_MUST_BE_SUBSCRIBED_TO_TYPE " + typeof(PANEL_BASE) + "; got sender[" + sender.GetType () + "] //panel_MouseEnter()"; " is 131.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,panel_MouseEnter,The length of the statement  "		//splitterAboveTarget.Text = this.splitterResizeOrDragStartedText + " targetIndex[" + this.panelMouseIsOverNowIndexDropTarget + "]"; " is 132.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,panel_MouseEnter,The length of the statement  "		splitterForThisPanel.Text = " target[" + this.panelMouseIsOverNow.Text + "] index[" + this.panelMouseIsOverNowIndexDropTarget + "]"; " is 132.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitter_MouseMove,The length of the statement  "	// introducted this event filter koz 100% CPU when clicked on splitted and not moving (only when this.VerticalizeAllLogic=true) " is 127.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitter_MouseMove,The length of the statement  "		Point mousePositionFromSplitContainerUpperLeft = new Point (e.X + this.splitterStartedResizeOrDragPoint.X' e.Y + this.splitterStartedResizeOrDragPoint.Y); " is 154.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitter_MouseDown,The length of the statement  "	this.splitterStartedResizeOrDragPoint = this.VerticalizeAllLogic == false ? new Point (splitter.Location.X + e.X' splitter.Location.Y + e.Y - splitter.Height) : new Point (splitter.Location.X + e.X - splitter.Width' splitter.Location.Y + e.Y); " is 243.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterDraggingNow_PanelsSwap,The length of the statement  "	// I_HATE_HACKING_WINDOWS_FORMS mousedrag doesn't fire panel_MouseEnter()/panel_MouseLeave() even if the mouse is above them now' simulating it manually here " is 157.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterDraggingNow_PanelsSwap,The length of the statement  "		Point offsetted = new Point (mousePositionFromSplitContainerUpperLeft.X - panel.Location.X' mousePositionFromSplitContainerUpperLeft.Y - panel.Location.Y); " is 155.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterDraggingNow_PanelsSwap,The length of the statement  "		Rectangle panelAndSplitterRect = this.VerticalizeAllLogic ? new Rectangle (0' 0' panel.Width' panel.Height + splitterAbove.Height) : new Rectangle (0' 0' panel.Width + splitterAbove.Width' panel.Height); " is 203.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The length of the statement  "		int mouseMovedLeftFromPointClicked = this.splitterStartedResizeOrDragPoint.X - mousePositionFromSplitContainerUpperLeft.X; " is 122.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The length of the statement  "	//v1 this.DistributePanelsAndSplitters();		// otherwize black rectangles flying unproportionally mouse move <= splitter must move and location of the right/bottom pane (above we set only the Widths) " is 198.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitter,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitter.EventConsumer.cs,OnPaintBackgroundDoubleBuffered,The length of the statement  "		// MAKES_SENSE_TO_REPAINT_EACH_ONRESIZE()_HERE_TO_AVOID_BLACK_UNTIL_MOUSEOVER AND BASE_DOESNT_PAINT_POSPONING_FLUSHING_BACKGROUNDS_ON_FINAL_FOREGROUND " is 150.
Long Statement,Sq1.Charting.MultiSplit,MultiSplitter,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitter.EventConsumer.cs,OnPaintDoubleBuffered,The length of the statement  "		Rectangle grabRect = this.verticalizeAllLogic == false ? new Rectangle (0' 0' this.grabHandleWidth' base.Height) : new Rectangle (0' 0' base.Width' this.grabHandleWidth); " is 170.
Long Statement,Sq1.Charting.OnChart,OnChartBarAnnotation,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\OnChart\OnChartBarAnnotation.cs,ToString,The length of the statement  "	string ret = "Status[" + Enum.GetName (typeof(OnChartObjectOperationStatus)' this.Status) + "]" + " BarAnnotationText[" + BarAnnotationText + "]" + " Font[" + Font + "]" + " ColorFore[" + ColorForeground + "]" + " ColorBack[" + ColorBackground + "]" + " AboveBar[" + AboveBar + "]" + " VerticalPaddingPx[" + VerticalPaddingPx + "]"; " is 332.
Long Statement,Sq1.Charting.OnChart,OnChartLabel,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\OnChart\OnChartLabel.cs,ToString,The length of the statement  "	string ret = "Status[" + Enum.GetName (typeof(OnChartObjectOperationStatus)' this.Status) + "]" + " LabelText[" + LabelText + "]" + " Font[" + Font + "]" + " ColorFore[" + ColorForeground + "]" + " ColorBack[" + ColorBackground + "]"; " is 234.
Long Statement,Sq1.Charting.OnChart,OnChartLine,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\OnChart\OnChartLine.cs,ToString,The length of the statement  "	string ret = "Status[" + Enum.GetName (typeof(OnChartObjectOperationStatus)' this.Status) + "]" + " BarLeft[" + BarLeft + "]" + " PriceLeft[" + PriceLeft + "]" + " BarRight[" + BarRight + "]" + " PriceRight[" + PriceRight + "]" + " Color[" + Color + "]" + " Width[" + Width + "]"; " is 280.
Complex Conditional,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnMouseMove,The conditional expression  "this.dragButtonPressed == true && this.scrollingHorizontally == false && this.squeezingHorizontally == false && this.squeezingVertically == false"  is complex.
Complex Conditional,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,LineAddOrModify,The conditional expression  "lineToModify.BarLeft == barLeft && lineToModify.PriceLeft == priceLeft && lineToModify.BarRight == barRight && lineToModify.PriceRight == priceRight && lineToModify.Color == color && lineToModify.Width == width"  is complex.
Complex Conditional,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,ChartLabelAddOrModify,The conditional expression  "labelToModify.LabelText == labelText && labelToModify.Font == font && labelToModify.ColorForeground == colorFore && labelToModify.ColorBackground == colorBack"  is complex.
Complex Conditional,Sq1.Charting,ExecutorObjects_FrozenForRendering,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ExecutorObjects_FrozenForRendering.cs,BarAnnotationAddOrModify,The conditional expression  "barAnnotationToModify.BarAnnotationText == barAnnotationText && barAnnotationToModify.Font == font && barAnnotationToModify.ColorForeground == colorForeground && barAnnotationToModify.ColorBackground == colorBackground && barAnnotationToModify.AboveBar == aboveBar && barAnnotationToModify.VerticalPaddingPx == verticalPadding"  is complex.
Magic Number,Sq1.Charting,AlertArrow,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\AlertArrow.cs,AlertArrow,The following statement contains a magic number: this.XBarMiddle = 99;  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBar.Location = new System.Drawing.Point (0' 323);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBar.Size = new System.Drawing.Size (840' 17);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.hScrollBar.Size = new System.Drawing.Size (840' 17);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.splitContainerChartVsRange.Size = new System.Drawing.Size (840' 323);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.splitContainerChartVsRange.Size = new System.Drawing.Size (840' 323);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.splitContainerChartVsRange.SplitterDistance = 266;  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLevel2.Location = new System.Drawing.Point (363' 13);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLevel2.Location = new System.Drawing.Point (363' 13);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLevel2.MinimumSize = new System.Drawing.Size (1' 15);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLevel2.Size = new System.Drawing.Size (11' 212);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLevel2.Size = new System.Drawing.Size (11' 212);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.panelLevel2.TabIndex = 4;  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.tooltipPrice.Location = new System.Drawing.Point (564' 102);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.tooltipPrice.Location = new System.Drawing.Point (564' 102);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.tooltipPrice.Size = new System.Drawing.Size (116' 116);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.tooltipPrice.Size = new System.Drawing.Size (116' 116);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.tooltipPosition.Location = new System.Drawing.Point (696' 3);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.tooltipPosition.Location = new System.Drawing.Point (696' 3);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.tooltipPosition.Size = new System.Drawing.Size (139' 215);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.tooltipPosition.Size = new System.Drawing.Size (139' 215);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitColumns_Level2_PriceVolumeMultisplit.Location = new System.Drawing.Point (399' 91);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitColumns_Level2_PriceVolumeMultisplit.Location = new System.Drawing.Point (399' 91);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitColumns_Level2_PriceVolumeMultisplit.Size = new System.Drawing.Size (97' 118);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitColumns_Level2_PriceVolumeMultisplit.Size = new System.Drawing.Size (97' 118);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitColumns_Level2_PriceVolumeMultisplit.TabIndex = 3;  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.lblWinFormDesignerComment.Location = new System.Drawing.Point (396' 3);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.lblWinFormDesignerComment.Location = new System.Drawing.Point (396' 3);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.lblWinFormDesignerComment.Size = new System.Drawing.Size (293' 97);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.lblWinFormDesignerComment.Size = new System.Drawing.Size (293' 97);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.lblWinFormDesignerComment.TabIndex = 2;  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitRowsVolumePrice.Location = new System.Drawing.Point (474' 130);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitRowsVolumePrice.Location = new System.Drawing.Point (474' 130);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitRowsVolumePrice.Size = new System.Drawing.Size (84' 88);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitRowsVolumePrice.Size = new System.Drawing.Size (84' 88);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.Location = new System.Drawing.Point (3' 13);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.Location = new System.Drawing.Point (3' 13);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.MinimumSize = new System.Drawing.Size (20' 15);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.MinimumSize = new System.Drawing.Size (20' 15);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.Size = new System.Drawing.Size (354' 15);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.Size = new System.Drawing.Size (354' 15);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.PanelPrice.Location = new System.Drawing.Point (3' 34);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.PanelPrice.Location = new System.Drawing.Point (3' 34);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.PanelPrice.MinimumSize = new System.Drawing.Size (20' 25);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.PanelPrice.MinimumSize = new System.Drawing.Size (20' 25);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.PanelPrice.Size = new System.Drawing.Size (354' 191);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.PanelPrice.Size = new System.Drawing.Size (354' 191);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.RangeMax = new System.DateTime (2013' 5' 12' 0' 0' 0' 0);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.RangeMax = new System.DateTime (2013' 5' 12' 0' 0' 0' 0);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.RangeMax = new System.DateTime (2013' 5' 12' 0' 0' 0' 0);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.RangeMin = new System.DateTime (2010' 5' 12' 0' 0' 0' 0);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.RangeMin = new System.DateTime (2010' 5' 12' 0' 0' 0' 0);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.RangeMin = new System.DateTime (2010' 5' 12' 0' 0' 0' 0);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.Size = new System.Drawing.Size (840' 53);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.Size = new System.Drawing.Size (840' 53);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.ValueMax = new System.DateTime (2012' 5' 12' 0' 0' 0' 0);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.ValueMax = new System.DateTime (2012' 5' 12' 0' 0' 0' 0);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.ValueMax = new System.DateTime (2012' 5' 12' 0' 0' 0' 0);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.ValueMin = new System.DateTime (2011' 5' 12' 0' 0' 0' 0);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.ValueMin = new System.DateTime (2011' 5' 12' 0' 0' 0' 0);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.RangeBar.ValueMin = new System.DateTime (2011' 5' 12' 0' 0' 0' 0);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (840' 340);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (840' 340);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,OnStrategyExecutedOneQuote_unblinkDataSourceTree,The following statement contains a magic number: if (this.timerUnblink == null)  	this.timerUnblink = new TimeredBlock (this' 200);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,OnStrategyExecutedOneQuote_unblinkDataSourceTree,The following statement contains a magic number: this.timerUnblink = new TimeredBlock (this' 200);  
Magic Number,Sq1.Charting,ChartControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartControl.cs,CalculateGutterWidthNecessaryToFitPriceVolumeLabels,The following statement contains a magic number: ret += this.ChartSettings.GutterRightPadding * 2;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: try {  	//DIDNT_MOVE_TO_PanelDoubleBuffered.OnPaint()_CHILDREN_DONT_GET_WHOLE_SURFACE_CLIPPED  	e.Graphics.SetClip (base.ClientRectangle);  	// always repaint whole Panel; by default' only extended area is "Clipped"  	this.ChartControl.SyncHorizontalScrollToBarsCount ();  	//if (this.VisibleRangeWithTwoSqueezers_cached <= 0) {  	//	string msg = "MUST_BE_POSITIVE#2_this.VisibleRangeWithTwoSqueezers_cached[" + this.VisibleRangeWithTwoSqueezers_cached + "] panel[" + this.ToString() + "]";  	//	Assembler.PopupException(msg + msig);  	//	return;  	//}  	if (this.PanelHasValuesForVisibleBarWindow == false) {  		string msg = "PANEL_BASE_PAINT_ENTRY_POINT_PROTECTS_DERIVED_FROM_INVOKING_PaintWholeSurfaceBarsNotEmpty()" + " occurs for JSON-Scripted Strategies with PanelIndicator* open without indicator's data" + " moving beyond right bar makes all panels blank";  		//Assembler.PopupException(msg + msig' null' false);  		return;  	}  	this.RepaintSernoForeground++;  	this.PaintWholeSurfaceBarsNotEmpty (e.Graphics);  	// GOOD: we get here once per panel  	// BT_ONSLIDERS_OFF>BT_NOW>SWITCH_SYMBOL=>INDICATOR.OWNVALUES.COUNT=0=>DONT_RENDER_INDICATORS_BUT_RENDER_BARS  	this.RenderIndicators (e.Graphics);  	if (this.PanelName == null) {  		this.DrawError (e.Graphics' "SET_TO_EMPTY_STRING_TO_HIDE: this.PanelName=null");  		return;  	}  	// draw Panel Title on top of anything that the panel draws  	if (this.thisPanelIsIndicatorPanel) {  		PanelIndicator meCasted = this as PanelIndicator;  		//PanelIndicator should draw PanelName with Indicator.LineColor  		using (var brush = new SolidBrush (meCasted.Indicator.LineColor)) {  			// if (base.DesignMode) this.ChartControl will be NULL  			Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  			e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  		}  	} else {  		using (var brush = new SolidBrush (this.ForeColor)) {  			// if (base.DesignMode) this.ChartControl will be NULL  			Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  			e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  		}  	}  	//this.ChartControl.ChartSettings.DisposeAllGDIs_handlesLeakHunter();  } catch (Exception ex) {  	string msg = "OnPaintDoubleBuffered(): caught[" + ex.Message + "]";  	//Assembler.PopupException(msg + msig' ex);  	this.DrawError (e.Graphics' msg);  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: try {  	//DIDNT_MOVE_TO_PanelDoubleBuffered.OnPaint()_CHILDREN_DONT_GET_WHOLE_SURFACE_CLIPPED  	e.Graphics.SetClip (base.ClientRectangle);  	// always repaint whole Panel; by default' only extended area is "Clipped"  	this.ChartControl.SyncHorizontalScrollToBarsCount ();  	//if (this.VisibleRangeWithTwoSqueezers_cached <= 0) {  	//	string msg = "MUST_BE_POSITIVE#2_this.VisibleRangeWithTwoSqueezers_cached[" + this.VisibleRangeWithTwoSqueezers_cached + "] panel[" + this.ToString() + "]";  	//	Assembler.PopupException(msg + msig);  	//	return;  	//}  	if (this.PanelHasValuesForVisibleBarWindow == false) {  		string msg = "PANEL_BASE_PAINT_ENTRY_POINT_PROTECTS_DERIVED_FROM_INVOKING_PaintWholeSurfaceBarsNotEmpty()" + " occurs for JSON-Scripted Strategies with PanelIndicator* open without indicator's data" + " moving beyond right bar makes all panels blank";  		//Assembler.PopupException(msg + msig' null' false);  		return;  	}  	this.RepaintSernoForeground++;  	this.PaintWholeSurfaceBarsNotEmpty (e.Graphics);  	// GOOD: we get here once per panel  	// BT_ONSLIDERS_OFF>BT_NOW>SWITCH_SYMBOL=>INDICATOR.OWNVALUES.COUNT=0=>DONT_RENDER_INDICATORS_BUT_RENDER_BARS  	this.RenderIndicators (e.Graphics);  	if (this.PanelName == null) {  		this.DrawError (e.Graphics' "SET_TO_EMPTY_STRING_TO_HIDE: this.PanelName=null");  		return;  	}  	// draw Panel Title on top of anything that the panel draws  	if (this.thisPanelIsIndicatorPanel) {  		PanelIndicator meCasted = this as PanelIndicator;  		//PanelIndicator should draw PanelName with Indicator.LineColor  		using (var brush = new SolidBrush (meCasted.Indicator.LineColor)) {  			// if (base.DesignMode) this.ChartControl will be NULL  			Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  			e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  		}  	} else {  		using (var brush = new SolidBrush (this.ForeColor)) {  			// if (base.DesignMode) this.ChartControl will be NULL  			Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  			e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  		}  	}  	//this.ChartControl.ChartSettings.DisposeAllGDIs_handlesLeakHunter();  } catch (Exception ex) {  	string msg = "OnPaintDoubleBuffered(): caught[" + ex.Message + "]";  	//Assembler.PopupException(msg + msig' ex);  	this.DrawError (e.Graphics' msg);  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: try {  	//DIDNT_MOVE_TO_PanelDoubleBuffered.OnPaint()_CHILDREN_DONT_GET_WHOLE_SURFACE_CLIPPED  	e.Graphics.SetClip (base.ClientRectangle);  	// always repaint whole Panel; by default' only extended area is "Clipped"  	this.ChartControl.SyncHorizontalScrollToBarsCount ();  	//if (this.VisibleRangeWithTwoSqueezers_cached <= 0) {  	//	string msg = "MUST_BE_POSITIVE#2_this.VisibleRangeWithTwoSqueezers_cached[" + this.VisibleRangeWithTwoSqueezers_cached + "] panel[" + this.ToString() + "]";  	//	Assembler.PopupException(msg + msig);  	//	return;  	//}  	if (this.PanelHasValuesForVisibleBarWindow == false) {  		string msg = "PANEL_BASE_PAINT_ENTRY_POINT_PROTECTS_DERIVED_FROM_INVOKING_PaintWholeSurfaceBarsNotEmpty()" + " occurs for JSON-Scripted Strategies with PanelIndicator* open without indicator's data" + " moving beyond right bar makes all panels blank";  		//Assembler.PopupException(msg + msig' null' false);  		return;  	}  	this.RepaintSernoForeground++;  	this.PaintWholeSurfaceBarsNotEmpty (e.Graphics);  	// GOOD: we get here once per panel  	// BT_ONSLIDERS_OFF>BT_NOW>SWITCH_SYMBOL=>INDICATOR.OWNVALUES.COUNT=0=>DONT_RENDER_INDICATORS_BUT_RENDER_BARS  	this.RenderIndicators (e.Graphics);  	if (this.PanelName == null) {  		this.DrawError (e.Graphics' "SET_TO_EMPTY_STRING_TO_HIDE: this.PanelName=null");  		return;  	}  	// draw Panel Title on top of anything that the panel draws  	if (this.thisPanelIsIndicatorPanel) {  		PanelIndicator meCasted = this as PanelIndicator;  		//PanelIndicator should draw PanelName with Indicator.LineColor  		using (var brush = new SolidBrush (meCasted.Indicator.LineColor)) {  			// if (base.DesignMode) this.ChartControl will be NULL  			Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  			e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  		}  	} else {  		using (var brush = new SolidBrush (this.ForeColor)) {  			// if (base.DesignMode) this.ChartControl will be NULL  			Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  			e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  		}  	}  	//this.ChartControl.ChartSettings.DisposeAllGDIs_handlesLeakHunter();  } catch (Exception ex) {  	string msg = "OnPaintDoubleBuffered(): caught[" + ex.Message + "]";  	//Assembler.PopupException(msg + msig' ex);  	this.DrawError (e.Graphics' msg);  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: try {  	//DIDNT_MOVE_TO_PanelDoubleBuffered.OnPaint()_CHILDREN_DONT_GET_WHOLE_SURFACE_CLIPPED  	e.Graphics.SetClip (base.ClientRectangle);  	// always repaint whole Panel; by default' only extended area is "Clipped"  	this.ChartControl.SyncHorizontalScrollToBarsCount ();  	//if (this.VisibleRangeWithTwoSqueezers_cached <= 0) {  	//	string msg = "MUST_BE_POSITIVE#2_this.VisibleRangeWithTwoSqueezers_cached[" + this.VisibleRangeWithTwoSqueezers_cached + "] panel[" + this.ToString() + "]";  	//	Assembler.PopupException(msg + msig);  	//	return;  	//}  	if (this.PanelHasValuesForVisibleBarWindow == false) {  		string msg = "PANEL_BASE_PAINT_ENTRY_POINT_PROTECTS_DERIVED_FROM_INVOKING_PaintWholeSurfaceBarsNotEmpty()" + " occurs for JSON-Scripted Strategies with PanelIndicator* open without indicator's data" + " moving beyond right bar makes all panels blank";  		//Assembler.PopupException(msg + msig' null' false);  		return;  	}  	this.RepaintSernoForeground++;  	this.PaintWholeSurfaceBarsNotEmpty (e.Graphics);  	// GOOD: we get here once per panel  	// BT_ONSLIDERS_OFF>BT_NOW>SWITCH_SYMBOL=>INDICATOR.OWNVALUES.COUNT=0=>DONT_RENDER_INDICATORS_BUT_RENDER_BARS  	this.RenderIndicators (e.Graphics);  	if (this.PanelName == null) {  		this.DrawError (e.Graphics' "SET_TO_EMPTY_STRING_TO_HIDE: this.PanelName=null");  		return;  	}  	// draw Panel Title on top of anything that the panel draws  	if (this.thisPanelIsIndicatorPanel) {  		PanelIndicator meCasted = this as PanelIndicator;  		//PanelIndicator should draw PanelName with Indicator.LineColor  		using (var brush = new SolidBrush (meCasted.Indicator.LineColor)) {  			// if (base.DesignMode) this.ChartControl will be NULL  			Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  			e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  		}  	} else {  		using (var brush = new SolidBrush (this.ForeColor)) {  			// if (base.DesignMode) this.ChartControl will be NULL  			Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  			e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  		}  	}  	//this.ChartControl.ChartSettings.DisposeAllGDIs_handlesLeakHunter();  } catch (Exception ex) {  	string msg = "OnPaintDoubleBuffered(): caught[" + ex.Message + "]";  	//Assembler.PopupException(msg + msig' ex);  	this.DrawError (e.Graphics' msg);  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: if (this.thisPanelIsIndicatorPanel) {  	PanelIndicator meCasted = this as PanelIndicator;  	//PanelIndicator should draw PanelName with Indicator.LineColor  	using (var brush = new SolidBrush (meCasted.Indicator.LineColor)) {  		// if (base.DesignMode) this.ChartControl will be NULL  		Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  		e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  	}  } else {  	using (var brush = new SolidBrush (this.ForeColor)) {  		// if (base.DesignMode) this.ChartControl will be NULL  		Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  		e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: if (this.thisPanelIsIndicatorPanel) {  	PanelIndicator meCasted = this as PanelIndicator;  	//PanelIndicator should draw PanelName with Indicator.LineColor  	using (var brush = new SolidBrush (meCasted.Indicator.LineColor)) {  		// if (base.DesignMode) this.ChartControl will be NULL  		Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  		e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  	}  } else {  	using (var brush = new SolidBrush (this.ForeColor)) {  		// if (base.DesignMode) this.ChartControl will be NULL  		Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  		e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: if (this.thisPanelIsIndicatorPanel) {  	PanelIndicator meCasted = this as PanelIndicator;  	//PanelIndicator should draw PanelName with Indicator.LineColor  	using (var brush = new SolidBrush (meCasted.Indicator.LineColor)) {  		// if (base.DesignMode) this.ChartControl will be NULL  		Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  		e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  	}  } else {  	using (var brush = new SolidBrush (this.ForeColor)) {  		// if (base.DesignMode) this.ChartControl will be NULL  		Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  		e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: if (this.thisPanelIsIndicatorPanel) {  	PanelIndicator meCasted = this as PanelIndicator;  	//PanelIndicator should draw PanelName with Indicator.LineColor  	using (var brush = new SolidBrush (meCasted.Indicator.LineColor)) {  		// if (base.DesignMode) this.ChartControl will be NULL  		Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  		e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  	}  } else {  	using (var brush = new SolidBrush (this.ForeColor)) {  		// if (base.DesignMode) this.ChartControl will be NULL  		Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  		e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: using (var brush = new SolidBrush (meCasted.Indicator.LineColor)) {  	// if (base.DesignMode) this.ChartControl will be NULL  	Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  	e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: using (var brush = new SolidBrush (meCasted.Indicator.LineColor)) {  	// if (base.DesignMode) this.ChartControl will be NULL  	Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  	e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: using (var brush = new SolidBrush (this.ForeColor)) {  	// if (base.DesignMode) this.ChartControl will be NULL  	Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  	e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: using (var brush = new SolidBrush (this.ForeColor)) {  	// if (base.DesignMode) this.ChartControl will be NULL  	Font font = (this.ChartControl != null) ? this.ChartControl.ChartSettings.PanelNameAndSymbolFont : this.Font;  	e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintDoubleBuffered,The following statement contains a magic number: e.Graphics.DrawString (this.PanelNameAndSymbol' font' brush' new Point (2' 2));  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintBackgroundDoubleBuffered,The following statement contains a magic number: if (this.ChartControl == null) {  	//e.Graphics.Clear(SystemColors.Control);  	e.Graphics.Clear (base.BackColor);  	using (Pen penRed = new Pen (Color.Brown' 1)) {  		e.Graphics.DrawLine (penRed' 0' 0' base.Width' base.Height);  	}  	this.ChartLabelsUpperLeftYincremental = 10;  	this.DrawError (e.Graphics' "OnPaintBackgroundDoubleBuffered got this.ChartControl=null");  	return;  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,OnPaintBackgroundDoubleBuffered,The following statement contains a magic number: this.ChartLabelsUpperLeftYincremental = 10;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabelOnNextLine,The following statement contains a magic number: if (drawBackgroundRectangle) {  	// if (base.DesignMode) this.ChartControl will be NULL  	this.ChartLabelsUpperLeftYincremental += (this.ChartControl != null) ? this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 : 15;  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabelOnNextLine,The following statement contains a magic number: if (drawBackgroundRectangle) {  	// if (base.DesignMode) this.ChartControl will be NULL  	this.ChartLabelsUpperLeftYincremental += (this.ChartControl != null) ? this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 : 15;  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabelOnNextLine,The following statement contains a magic number: this.ChartLabelsUpperLeftYincremental += (this.ChartControl != null) ? this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 : 15;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabelOnNextLine,The following statement contains a magic number: this.ChartLabelsUpperLeftYincremental += (this.ChartControl != null) ? this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 : 15;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The following statement contains a magic number: if (drawBackgroundRectangle) {  	int makingHpaddingLookLikeVpadding = 2;  	Rectangle labelPlate = new Rectangle ();  	labelPlate.X = x - this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding - makingHpaddingLookLikeVpadding;  	labelPlate.Y = y - this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding;  	labelPlate.Width = labelMeasuredWidth + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 + makingHpaddingLookLikeVpadding * 2;  	labelPlate.Height = labelMeasuredHeight + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2;  	if (labelPlate.X < 0)  		labelPlate.X = 0;  	if (labelPlate.Y < 0)  		labelPlate.Y = 0;  	if (drawIndicatorSquare) {  		int extendedBySquare = this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquarePadding * 2 + this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquareSize;  		labelPlate.Width += extendedBySquare;  	}  	using (var brushLabelPlate = new SolidBrush (colorBackground))  		g.FillRectangle (brushLabelPlate' labelPlate);  	using (var penLabelPlateBorder = new Pen (Color.LightGray))  		g.DrawRectangle (penLabelPlateBorder' labelPlate);  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The following statement contains a magic number: if (drawBackgroundRectangle) {  	int makingHpaddingLookLikeVpadding = 2;  	Rectangle labelPlate = new Rectangle ();  	labelPlate.X = x - this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding - makingHpaddingLookLikeVpadding;  	labelPlate.Y = y - this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding;  	labelPlate.Width = labelMeasuredWidth + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 + makingHpaddingLookLikeVpadding * 2;  	labelPlate.Height = labelMeasuredHeight + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2;  	if (labelPlate.X < 0)  		labelPlate.X = 0;  	if (labelPlate.Y < 0)  		labelPlate.Y = 0;  	if (drawIndicatorSquare) {  		int extendedBySquare = this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquarePadding * 2 + this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquareSize;  		labelPlate.Width += extendedBySquare;  	}  	using (var brushLabelPlate = new SolidBrush (colorBackground))  		g.FillRectangle (brushLabelPlate' labelPlate);  	using (var penLabelPlateBorder = new Pen (Color.LightGray))  		g.DrawRectangle (penLabelPlateBorder' labelPlate);  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The following statement contains a magic number: if (drawBackgroundRectangle) {  	int makingHpaddingLookLikeVpadding = 2;  	Rectangle labelPlate = new Rectangle ();  	labelPlate.X = x - this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding - makingHpaddingLookLikeVpadding;  	labelPlate.Y = y - this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding;  	labelPlate.Width = labelMeasuredWidth + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 + makingHpaddingLookLikeVpadding * 2;  	labelPlate.Height = labelMeasuredHeight + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2;  	if (labelPlate.X < 0)  		labelPlate.X = 0;  	if (labelPlate.Y < 0)  		labelPlate.Y = 0;  	if (drawIndicatorSquare) {  		int extendedBySquare = this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquarePadding * 2 + this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquareSize;  		labelPlate.Width += extendedBySquare;  	}  	using (var brushLabelPlate = new SolidBrush (colorBackground))  		g.FillRectangle (brushLabelPlate' labelPlate);  	using (var penLabelPlateBorder = new Pen (Color.LightGray))  		g.DrawRectangle (penLabelPlateBorder' labelPlate);  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The following statement contains a magic number: if (drawBackgroundRectangle) {  	int makingHpaddingLookLikeVpadding = 2;  	Rectangle labelPlate = new Rectangle ();  	labelPlate.X = x - this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding - makingHpaddingLookLikeVpadding;  	labelPlate.Y = y - this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding;  	labelPlate.Width = labelMeasuredWidth + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 + makingHpaddingLookLikeVpadding * 2;  	labelPlate.Height = labelMeasuredHeight + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2;  	if (labelPlate.X < 0)  		labelPlate.X = 0;  	if (labelPlate.Y < 0)  		labelPlate.Y = 0;  	if (drawIndicatorSquare) {  		int extendedBySquare = this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquarePadding * 2 + this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquareSize;  		labelPlate.Width += extendedBySquare;  	}  	using (var brushLabelPlate = new SolidBrush (colorBackground))  		g.FillRectangle (brushLabelPlate' labelPlate);  	using (var penLabelPlateBorder = new Pen (Color.LightGray))  		g.DrawRectangle (penLabelPlateBorder' labelPlate);  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The following statement contains a magic number: if (drawBackgroundRectangle) {  	int makingHpaddingLookLikeVpadding = 2;  	Rectangle labelPlate = new Rectangle ();  	labelPlate.X = x - this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding - makingHpaddingLookLikeVpadding;  	labelPlate.Y = y - this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding;  	labelPlate.Width = labelMeasuredWidth + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 + makingHpaddingLookLikeVpadding * 2;  	labelPlate.Height = labelMeasuredHeight + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2;  	if (labelPlate.X < 0)  		labelPlate.X = 0;  	if (labelPlate.Y < 0)  		labelPlate.Y = 0;  	if (drawIndicatorSquare) {  		int extendedBySquare = this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquarePadding * 2 + this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquareSize;  		labelPlate.Width += extendedBySquare;  	}  	using (var brushLabelPlate = new SolidBrush (colorBackground))  		g.FillRectangle (brushLabelPlate' labelPlate);  	using (var penLabelPlateBorder = new Pen (Color.LightGray))  		g.DrawRectangle (penLabelPlateBorder' labelPlate);  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The following statement contains a magic number: labelPlate.Width = labelMeasuredWidth + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 + makingHpaddingLookLikeVpadding * 2;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The following statement contains a magic number: labelPlate.Width = labelMeasuredWidth + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2 + makingHpaddingLookLikeVpadding * 2;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The following statement contains a magic number: labelPlate.Height = labelMeasuredHeight + this.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding * 2;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,DrawLabel,The following statement contains a magic number: if (drawIndicatorSquare) {  	int extendedBySquare = this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquarePadding * 2 + this.ChartControl.ChartSettings.ChartLabelsUpperLeftIndicatorSquareSize;  	labelPlate.Width += extendedBySquare;  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,BarToXBeyondGoInside,The following statement contains a magic number: if (ret == -2) {  	return this.ChartControl.ChartWidthMinusGutterRightPrice;  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,BarToX,The following statement contains a magic number: if (barVisible > this.VisibleBarRight_cached)  	return -2;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,BarToX,The following statement contains a magic number: return -2;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,XToBar,The following statement contains a magic number: if (xMouseOver > this.PanelWidthMinusRightPriceGutter)  	return -2;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,XToBar,The following statement contains a magic number: return -2;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,XToBar,The following statement contains a magic number: return -3;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,ValueToYinverted,The following statement contains a magic number: if (this.ChartControl.BarsEmpty)  	return 666;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,ValueToYinverted,The following statement contains a magic number: return 666;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,YinvertedToValue,The following statement contains a magic number: if (this.ChartControl.BarsEmpty)  	return 777;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,YinvertedToValue,The following statement contains a magic number: return 777;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,ensureFontMetricsAreCalculated,The following statement contains a magic number: if (this.GutterRightFontHeight_cached == -1) {  	this.GutterRightFontHeight_cached = (int)g.MeasureString ("ABC123`'jg]"' this.ChartControl.ChartSettings.GutterRightFont).Height;  	//}  	//if (this.GutterRightFontHeightHalf_cached == -1) {  	this.GutterRightFontHeightHalf_cached = (int)(this.GutterRightFontHeight_cached / 2F);  	//}  	//if (this.GutterBottomFontHeight_cached == -1) {  	this.GutterBottomFontHeight_cached = (int)g.MeasureString ("ABC123`'jg]"' this.ChartControl.ChartSettings.GutterBottomFont).Height;  	//}  	//if (this.GutterBottomHeight_cached == -1) {  	this.GutterBottomHeight_cached = this.GutterBottomFontHeight_cached + this.ChartControl.ChartSettings.GutterBottomPadding * 2;  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,ensureFontMetricsAreCalculated,The following statement contains a magic number: this.GutterBottomHeight_cached = this.GutterBottomFontHeight_cached + this.ChartControl.ChartSettings.GutterBottomPadding * 2;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (shorten) {  	double num = Math.Abs (value);  	if (num >= 1000000000000.0) {  		value /= 1000000000000.0;  		return value.ToString (format) + "T";  	}  	if (num >= 1000000000.0) {  		value /= 1000000000.0;  		return value.ToString (format) + "B";  	}  	if (num >= 1000000.0) {  		value /= 1000000.0;  		return value.ToString (format) + "M";  	}  	if (num >= 10000.0) {  		value /= 1000.0;  		return value.ToString (format) + "K";  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (shorten) {  	double num = Math.Abs (value);  	if (num >= 1000000000000.0) {  		value /= 1000000000000.0;  		return value.ToString (format) + "T";  	}  	if (num >= 1000000000.0) {  		value /= 1000000000.0;  		return value.ToString (format) + "B";  	}  	if (num >= 1000000.0) {  		value /= 1000000.0;  		return value.ToString (format) + "M";  	}  	if (num >= 10000.0) {  		value /= 1000.0;  		return value.ToString (format) + "K";  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (shorten) {  	double num = Math.Abs (value);  	if (num >= 1000000000000.0) {  		value /= 1000000000000.0;  		return value.ToString (format) + "T";  	}  	if (num >= 1000000000.0) {  		value /= 1000000000.0;  		return value.ToString (format) + "B";  	}  	if (num >= 1000000.0) {  		value /= 1000000.0;  		return value.ToString (format) + "M";  	}  	if (num >= 10000.0) {  		value /= 1000.0;  		return value.ToString (format) + "K";  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (shorten) {  	double num = Math.Abs (value);  	if (num >= 1000000000000.0) {  		value /= 1000000000000.0;  		return value.ToString (format) + "T";  	}  	if (num >= 1000000000.0) {  		value /= 1000000000.0;  		return value.ToString (format) + "B";  	}  	if (num >= 1000000.0) {  		value /= 1000000.0;  		return value.ToString (format) + "M";  	}  	if (num >= 10000.0) {  		value /= 1000.0;  		return value.ToString (format) + "K";  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (shorten) {  	double num = Math.Abs (value);  	if (num >= 1000000000000.0) {  		value /= 1000000000000.0;  		return value.ToString (format) + "T";  	}  	if (num >= 1000000000.0) {  		value /= 1000000000.0;  		return value.ToString (format) + "B";  	}  	if (num >= 1000000.0) {  		value /= 1000000.0;  		return value.ToString (format) + "M";  	}  	if (num >= 10000.0) {  		value /= 1000.0;  		return value.ToString (format) + "K";  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (shorten) {  	double num = Math.Abs (value);  	if (num >= 1000000000000.0) {  		value /= 1000000000000.0;  		return value.ToString (format) + "T";  	}  	if (num >= 1000000000.0) {  		value /= 1000000000.0;  		return value.ToString (format) + "B";  	}  	if (num >= 1000000.0) {  		value /= 1000000.0;  		return value.ToString (format) + "M";  	}  	if (num >= 10000.0) {  		value /= 1000.0;  		return value.ToString (format) + "K";  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (shorten) {  	double num = Math.Abs (value);  	if (num >= 1000000000000.0) {  		value /= 1000000000000.0;  		return value.ToString (format) + "T";  	}  	if (num >= 1000000000.0) {  		value /= 1000000000.0;  		return value.ToString (format) + "B";  	}  	if (num >= 1000000.0) {  		value /= 1000000.0;  		return value.ToString (format) + "M";  	}  	if (num >= 10000.0) {  		value /= 1000.0;  		return value.ToString (format) + "K";  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (shorten) {  	double num = Math.Abs (value);  	if (num >= 1000000000000.0) {  		value /= 1000000000000.0;  		return value.ToString (format) + "T";  	}  	if (num >= 1000000000.0) {  		value /= 1000000000.0;  		return value.ToString (format) + "B";  	}  	if (num >= 1000000.0) {  		value /= 1000000.0;  		return value.ToString (format) + "M";  	}  	if (num >= 10000.0) {  		value /= 1000.0;  		return value.ToString (format) + "K";  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (num >= 1000000000000.0) {  	value /= 1000000000000.0;  	return value.ToString (format) + "T";  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (num >= 1000000000000.0) {  	value /= 1000000000000.0;  	return value.ToString (format) + "T";  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: value /= 1000000000000.0;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (num >= 1000000000.0) {  	value /= 1000000000.0;  	return value.ToString (format) + "B";  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (num >= 1000000000.0) {  	value /= 1000000000.0;  	return value.ToString (format) + "B";  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: value /= 1000000000.0;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (num >= 1000000.0) {  	value /= 1000000.0;  	return value.ToString (format) + "M";  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (num >= 1000000.0) {  	value /= 1000000.0;  	return value.ToString (format) + "M";  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: value /= 1000000.0;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (num >= 10000.0) {  	value /= 1000.0;  	return value.ToString (format) + "K";  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: if (num >= 10000.0) {  	value /= 1000.0;  	return value.ToString (format) + "K";  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,FormatValue,The following statement contains a magic number: value /= 1000.0;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: if (this.GutterRightDraw) {  	int minDistanceInFontHeights = this.ThisPanelIsPricePanel ? 3 : 2;  	int minDistancePixels = minDistanceInFontHeights * this.GutterRightFontHeight_cached;  	//int panelHeightPlusSqueezers = this.PanelHeightMinusGutterBottomHeight_cached + this.PaddingVerticalSqueeze * 2;  	int panelHeightPlusSqueezers = this.PanelHeightMinusGutterBottomHeight_cached;  	double howManyLinesWillFit = panelHeightPlusSqueezers / (double)minDistancePixels;  	double gridStep = this.calculateOptimalVeritcalGridStep (this.VisibleRangeWithTwoSqueezers_cached' howManyLinesWillFit);  	double extraOverFound = this.VisibleMinMinusTopSqueezer_cached % gridStep;  	// 6447 % 50 = 47  	double gridStart = this.VisibleMinMinusTopSqueezer_cached - extraOverFound + gridStep;  	int stripesCanFit = (int)(this.VisibleRangeWithTwoSqueezers_cached / gridStep);  	double gridEnd = gridStart + gridStep * stripesCanFit;  	if (gridEnd >= this.VisibleMaxPlusBottomSqueezer_cached)  		gridEnd -= gridStep;  	for (double gridPrice = gridStart; gridPrice <= gridEnd; gridPrice += gridStep) {  		int gridY = this.ValueToYinverted (gridPrice);  		try {  			if (this.ChartControl.ChartSettings.GridlinesHorizontalShow) {  				g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesHorizontal' 0' gridY' this.PanelWidthMinusRightPriceGutter - 1' gridY);  			}  		} catch (Exception ex) {  			Assembler.PopupException (null' ex' false);  		}  		int labelYadjustedUp = (int)gridY - this.GutterRightFontHeightHalf_cached;  		labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  		//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(gridPrice' this.ThisPanelIsPricePanel);  		//v2 can be price' volume or indicator  		string panelValueFormatted = this.FormatValue (gridPrice);  		int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  		int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  		g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  	}  	if (mouseTrack) {  		// && this.moveHorizontalYprev > -1  		int mouseY = this.moveHorizontalYprev;  		if (this.mouseOver == false || this.moveHorizontalYprev == -1) {  			if (double.IsNaN (panelValueForBarMouseOvered) == false) {  				mouseY = this.ValueToYinverted (panelValueForBarMouseOvered);  			} else {  				string msg = "DRAWING_CURRENT_JUMPING_STREAMING_VALUE_ON_GUTTER_SINCE_MOUSE_WENT_OUT_OF_BOUNDARIES";  				int lastIndex = this.ValueIndexLastAvailableMinusOneUnsafe;  				if (double.IsNaN (lastIndex) == false) {  					double lastValue = this.ValueGetNaNunsafe (lastIndex);  					if (double.IsNaN (lastValue)) {  						msg = "INDICATOR_MAY_HAS_NAN_FOR_BARS<PERIOD lastValue[" + lastValue + "] " + msg;  						//Assembler.PopupException(msg' null' false);  					} else {  						mouseY = this.ValueToYinverted (lastValue);  					}  				}  			}  		}  		double mousePrice = this.YinvertedToValue (mouseY);  		int labelYadjustedUp = (int)mouseY - this.GutterRightFontHeightHalf_cached;  		labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  		//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(mousePrice' this.ThisPanelIsPricePanel);  		//v2 can be price' volume or indicator  		string panelValueFormatted = this.FormatValue (mousePrice);  		int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  		int labelHeight = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Height;  		int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  		int pxBelowBottomBoundary = (labelYadjustedUp + labelHeight) - base.Height;  		if (pxBelowBottomBoundary > 0) {  			labelYadjustedUp -= pxBelowBottomBoundary;  		}  		Rectangle plate = new Rectangle (labelXalignedRight' labelYadjustedUp - 2' labelWidth + 2' labelHeight + 3);  		if (base.ForeColor != Color.Empty) {  			using (SolidBrush indicatorColorBrush = new SolidBrush (base.ForeColor)) {  				g.FillRectangle (indicatorColorBrush' plate);  			}  			using (SolidBrush brushIndicatorInverted = new SolidBrush (base.BackColor)) {  				g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' brushIndicatorInverted' labelXalignedRight' labelYadjustedUp);  			}  		} else {  			g.FillRectangle (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground.Brush' plate);  			g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  		}  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: if (this.GutterRightDraw) {  	int minDistanceInFontHeights = this.ThisPanelIsPricePanel ? 3 : 2;  	int minDistancePixels = minDistanceInFontHeights * this.GutterRightFontHeight_cached;  	//int panelHeightPlusSqueezers = this.PanelHeightMinusGutterBottomHeight_cached + this.PaddingVerticalSqueeze * 2;  	int panelHeightPlusSqueezers = this.PanelHeightMinusGutterBottomHeight_cached;  	double howManyLinesWillFit = panelHeightPlusSqueezers / (double)minDistancePixels;  	double gridStep = this.calculateOptimalVeritcalGridStep (this.VisibleRangeWithTwoSqueezers_cached' howManyLinesWillFit);  	double extraOverFound = this.VisibleMinMinusTopSqueezer_cached % gridStep;  	// 6447 % 50 = 47  	double gridStart = this.VisibleMinMinusTopSqueezer_cached - extraOverFound + gridStep;  	int stripesCanFit = (int)(this.VisibleRangeWithTwoSqueezers_cached / gridStep);  	double gridEnd = gridStart + gridStep * stripesCanFit;  	if (gridEnd >= this.VisibleMaxPlusBottomSqueezer_cached)  		gridEnd -= gridStep;  	for (double gridPrice = gridStart; gridPrice <= gridEnd; gridPrice += gridStep) {  		int gridY = this.ValueToYinverted (gridPrice);  		try {  			if (this.ChartControl.ChartSettings.GridlinesHorizontalShow) {  				g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesHorizontal' 0' gridY' this.PanelWidthMinusRightPriceGutter - 1' gridY);  			}  		} catch (Exception ex) {  			Assembler.PopupException (null' ex' false);  		}  		int labelYadjustedUp = (int)gridY - this.GutterRightFontHeightHalf_cached;  		labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  		//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(gridPrice' this.ThisPanelIsPricePanel);  		//v2 can be price' volume or indicator  		string panelValueFormatted = this.FormatValue (gridPrice);  		int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  		int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  		g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  	}  	if (mouseTrack) {  		// && this.moveHorizontalYprev > -1  		int mouseY = this.moveHorizontalYprev;  		if (this.mouseOver == false || this.moveHorizontalYprev == -1) {  			if (double.IsNaN (panelValueForBarMouseOvered) == false) {  				mouseY = this.ValueToYinverted (panelValueForBarMouseOvered);  			} else {  				string msg = "DRAWING_CURRENT_JUMPING_STREAMING_VALUE_ON_GUTTER_SINCE_MOUSE_WENT_OUT_OF_BOUNDARIES";  				int lastIndex = this.ValueIndexLastAvailableMinusOneUnsafe;  				if (double.IsNaN (lastIndex) == false) {  					double lastValue = this.ValueGetNaNunsafe (lastIndex);  					if (double.IsNaN (lastValue)) {  						msg = "INDICATOR_MAY_HAS_NAN_FOR_BARS<PERIOD lastValue[" + lastValue + "] " + msg;  						//Assembler.PopupException(msg' null' false);  					} else {  						mouseY = this.ValueToYinverted (lastValue);  					}  				}  			}  		}  		double mousePrice = this.YinvertedToValue (mouseY);  		int labelYadjustedUp = (int)mouseY - this.GutterRightFontHeightHalf_cached;  		labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  		//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(mousePrice' this.ThisPanelIsPricePanel);  		//v2 can be price' volume or indicator  		string panelValueFormatted = this.FormatValue (mousePrice);  		int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  		int labelHeight = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Height;  		int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  		int pxBelowBottomBoundary = (labelYadjustedUp + labelHeight) - base.Height;  		if (pxBelowBottomBoundary > 0) {  			labelYadjustedUp -= pxBelowBottomBoundary;  		}  		Rectangle plate = new Rectangle (labelXalignedRight' labelYadjustedUp - 2' labelWidth + 2' labelHeight + 3);  		if (base.ForeColor != Color.Empty) {  			using (SolidBrush indicatorColorBrush = new SolidBrush (base.ForeColor)) {  				g.FillRectangle (indicatorColorBrush' plate);  			}  			using (SolidBrush brushIndicatorInverted = new SolidBrush (base.BackColor)) {  				g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' brushIndicatorInverted' labelXalignedRight' labelYadjustedUp);  			}  		} else {  			g.FillRectangle (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground.Brush' plate);  			g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  		}  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: if (this.GutterRightDraw) {  	int minDistanceInFontHeights = this.ThisPanelIsPricePanel ? 3 : 2;  	int minDistancePixels = minDistanceInFontHeights * this.GutterRightFontHeight_cached;  	//int panelHeightPlusSqueezers = this.PanelHeightMinusGutterBottomHeight_cached + this.PaddingVerticalSqueeze * 2;  	int panelHeightPlusSqueezers = this.PanelHeightMinusGutterBottomHeight_cached;  	double howManyLinesWillFit = panelHeightPlusSqueezers / (double)minDistancePixels;  	double gridStep = this.calculateOptimalVeritcalGridStep (this.VisibleRangeWithTwoSqueezers_cached' howManyLinesWillFit);  	double extraOverFound = this.VisibleMinMinusTopSqueezer_cached % gridStep;  	// 6447 % 50 = 47  	double gridStart = this.VisibleMinMinusTopSqueezer_cached - extraOverFound + gridStep;  	int stripesCanFit = (int)(this.VisibleRangeWithTwoSqueezers_cached / gridStep);  	double gridEnd = gridStart + gridStep * stripesCanFit;  	if (gridEnd >= this.VisibleMaxPlusBottomSqueezer_cached)  		gridEnd -= gridStep;  	for (double gridPrice = gridStart; gridPrice <= gridEnd; gridPrice += gridStep) {  		int gridY = this.ValueToYinverted (gridPrice);  		try {  			if (this.ChartControl.ChartSettings.GridlinesHorizontalShow) {  				g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesHorizontal' 0' gridY' this.PanelWidthMinusRightPriceGutter - 1' gridY);  			}  		} catch (Exception ex) {  			Assembler.PopupException (null' ex' false);  		}  		int labelYadjustedUp = (int)gridY - this.GutterRightFontHeightHalf_cached;  		labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  		//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(gridPrice' this.ThisPanelIsPricePanel);  		//v2 can be price' volume or indicator  		string panelValueFormatted = this.FormatValue (gridPrice);  		int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  		int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  		g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  	}  	if (mouseTrack) {  		// && this.moveHorizontalYprev > -1  		int mouseY = this.moveHorizontalYprev;  		if (this.mouseOver == false || this.moveHorizontalYprev == -1) {  			if (double.IsNaN (panelValueForBarMouseOvered) == false) {  				mouseY = this.ValueToYinverted (panelValueForBarMouseOvered);  			} else {  				string msg = "DRAWING_CURRENT_JUMPING_STREAMING_VALUE_ON_GUTTER_SINCE_MOUSE_WENT_OUT_OF_BOUNDARIES";  				int lastIndex = this.ValueIndexLastAvailableMinusOneUnsafe;  				if (double.IsNaN (lastIndex) == false) {  					double lastValue = this.ValueGetNaNunsafe (lastIndex);  					if (double.IsNaN (lastValue)) {  						msg = "INDICATOR_MAY_HAS_NAN_FOR_BARS<PERIOD lastValue[" + lastValue + "] " + msg;  						//Assembler.PopupException(msg' null' false);  					} else {  						mouseY = this.ValueToYinverted (lastValue);  					}  				}  			}  		}  		double mousePrice = this.YinvertedToValue (mouseY);  		int labelYadjustedUp = (int)mouseY - this.GutterRightFontHeightHalf_cached;  		labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  		//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(mousePrice' this.ThisPanelIsPricePanel);  		//v2 can be price' volume or indicator  		string panelValueFormatted = this.FormatValue (mousePrice);  		int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  		int labelHeight = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Height;  		int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  		int pxBelowBottomBoundary = (labelYadjustedUp + labelHeight) - base.Height;  		if (pxBelowBottomBoundary > 0) {  			labelYadjustedUp -= pxBelowBottomBoundary;  		}  		Rectangle plate = new Rectangle (labelXalignedRight' labelYadjustedUp - 2' labelWidth + 2' labelHeight + 3);  		if (base.ForeColor != Color.Empty) {  			using (SolidBrush indicatorColorBrush = new SolidBrush (base.ForeColor)) {  				g.FillRectangle (indicatorColorBrush' plate);  			}  			using (SolidBrush brushIndicatorInverted = new SolidBrush (base.BackColor)) {  				g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' brushIndicatorInverted' labelXalignedRight' labelYadjustedUp);  			}  		} else {  			g.FillRectangle (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground.Brush' plate);  			g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  		}  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: if (this.GutterRightDraw) {  	int minDistanceInFontHeights = this.ThisPanelIsPricePanel ? 3 : 2;  	int minDistancePixels = minDistanceInFontHeights * this.GutterRightFontHeight_cached;  	//int panelHeightPlusSqueezers = this.PanelHeightMinusGutterBottomHeight_cached + this.PaddingVerticalSqueeze * 2;  	int panelHeightPlusSqueezers = this.PanelHeightMinusGutterBottomHeight_cached;  	double howManyLinesWillFit = panelHeightPlusSqueezers / (double)minDistancePixels;  	double gridStep = this.calculateOptimalVeritcalGridStep (this.VisibleRangeWithTwoSqueezers_cached' howManyLinesWillFit);  	double extraOverFound = this.VisibleMinMinusTopSqueezer_cached % gridStep;  	// 6447 % 50 = 47  	double gridStart = this.VisibleMinMinusTopSqueezer_cached - extraOverFound + gridStep;  	int stripesCanFit = (int)(this.VisibleRangeWithTwoSqueezers_cached / gridStep);  	double gridEnd = gridStart + gridStep * stripesCanFit;  	if (gridEnd >= this.VisibleMaxPlusBottomSqueezer_cached)  		gridEnd -= gridStep;  	for (double gridPrice = gridStart; gridPrice <= gridEnd; gridPrice += gridStep) {  		int gridY = this.ValueToYinverted (gridPrice);  		try {  			if (this.ChartControl.ChartSettings.GridlinesHorizontalShow) {  				g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesHorizontal' 0' gridY' this.PanelWidthMinusRightPriceGutter - 1' gridY);  			}  		} catch (Exception ex) {  			Assembler.PopupException (null' ex' false);  		}  		int labelYadjustedUp = (int)gridY - this.GutterRightFontHeightHalf_cached;  		labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  		//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(gridPrice' this.ThisPanelIsPricePanel);  		//v2 can be price' volume or indicator  		string panelValueFormatted = this.FormatValue (gridPrice);  		int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  		int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  		g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  	}  	if (mouseTrack) {  		// && this.moveHorizontalYprev > -1  		int mouseY = this.moveHorizontalYprev;  		if (this.mouseOver == false || this.moveHorizontalYprev == -1) {  			if (double.IsNaN (panelValueForBarMouseOvered) == false) {  				mouseY = this.ValueToYinverted (panelValueForBarMouseOvered);  			} else {  				string msg = "DRAWING_CURRENT_JUMPING_STREAMING_VALUE_ON_GUTTER_SINCE_MOUSE_WENT_OUT_OF_BOUNDARIES";  				int lastIndex = this.ValueIndexLastAvailableMinusOneUnsafe;  				if (double.IsNaN (lastIndex) == false) {  					double lastValue = this.ValueGetNaNunsafe (lastIndex);  					if (double.IsNaN (lastValue)) {  						msg = "INDICATOR_MAY_HAS_NAN_FOR_BARS<PERIOD lastValue[" + lastValue + "] " + msg;  						//Assembler.PopupException(msg' null' false);  					} else {  						mouseY = this.ValueToYinverted (lastValue);  					}  				}  			}  		}  		double mousePrice = this.YinvertedToValue (mouseY);  		int labelYadjustedUp = (int)mouseY - this.GutterRightFontHeightHalf_cached;  		labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  		//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(mousePrice' this.ThisPanelIsPricePanel);  		//v2 can be price' volume or indicator  		string panelValueFormatted = this.FormatValue (mousePrice);  		int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  		int labelHeight = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Height;  		int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  		int pxBelowBottomBoundary = (labelYadjustedUp + labelHeight) - base.Height;  		if (pxBelowBottomBoundary > 0) {  			labelYadjustedUp -= pxBelowBottomBoundary;  		}  		Rectangle plate = new Rectangle (labelXalignedRight' labelYadjustedUp - 2' labelWidth + 2' labelHeight + 3);  		if (base.ForeColor != Color.Empty) {  			using (SolidBrush indicatorColorBrush = new SolidBrush (base.ForeColor)) {  				g.FillRectangle (indicatorColorBrush' plate);  			}  			using (SolidBrush brushIndicatorInverted = new SolidBrush (base.BackColor)) {  				g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' brushIndicatorInverted' labelXalignedRight' labelYadjustedUp);  			}  		} else {  			g.FillRectangle (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground.Brush' plate);  			g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  		}  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: if (this.GutterRightDraw) {  	int minDistanceInFontHeights = this.ThisPanelIsPricePanel ? 3 : 2;  	int minDistancePixels = minDistanceInFontHeights * this.GutterRightFontHeight_cached;  	//int panelHeightPlusSqueezers = this.PanelHeightMinusGutterBottomHeight_cached + this.PaddingVerticalSqueeze * 2;  	int panelHeightPlusSqueezers = this.PanelHeightMinusGutterBottomHeight_cached;  	double howManyLinesWillFit = panelHeightPlusSqueezers / (double)minDistancePixels;  	double gridStep = this.calculateOptimalVeritcalGridStep (this.VisibleRangeWithTwoSqueezers_cached' howManyLinesWillFit);  	double extraOverFound = this.VisibleMinMinusTopSqueezer_cached % gridStep;  	// 6447 % 50 = 47  	double gridStart = this.VisibleMinMinusTopSqueezer_cached - extraOverFound + gridStep;  	int stripesCanFit = (int)(this.VisibleRangeWithTwoSqueezers_cached / gridStep);  	double gridEnd = gridStart + gridStep * stripesCanFit;  	if (gridEnd >= this.VisibleMaxPlusBottomSqueezer_cached)  		gridEnd -= gridStep;  	for (double gridPrice = gridStart; gridPrice <= gridEnd; gridPrice += gridStep) {  		int gridY = this.ValueToYinverted (gridPrice);  		try {  			if (this.ChartControl.ChartSettings.GridlinesHorizontalShow) {  				g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesHorizontal' 0' gridY' this.PanelWidthMinusRightPriceGutter - 1' gridY);  			}  		} catch (Exception ex) {  			Assembler.PopupException (null' ex' false);  		}  		int labelYadjustedUp = (int)gridY - this.GutterRightFontHeightHalf_cached;  		labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  		//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(gridPrice' this.ThisPanelIsPricePanel);  		//v2 can be price' volume or indicator  		string panelValueFormatted = this.FormatValue (gridPrice);  		int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  		int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  		g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  	}  	if (mouseTrack) {  		// && this.moveHorizontalYprev > -1  		int mouseY = this.moveHorizontalYprev;  		if (this.mouseOver == false || this.moveHorizontalYprev == -1) {  			if (double.IsNaN (panelValueForBarMouseOvered) == false) {  				mouseY = this.ValueToYinverted (panelValueForBarMouseOvered);  			} else {  				string msg = "DRAWING_CURRENT_JUMPING_STREAMING_VALUE_ON_GUTTER_SINCE_MOUSE_WENT_OUT_OF_BOUNDARIES";  				int lastIndex = this.ValueIndexLastAvailableMinusOneUnsafe;  				if (double.IsNaN (lastIndex) == false) {  					double lastValue = this.ValueGetNaNunsafe (lastIndex);  					if (double.IsNaN (lastValue)) {  						msg = "INDICATOR_MAY_HAS_NAN_FOR_BARS<PERIOD lastValue[" + lastValue + "] " + msg;  						//Assembler.PopupException(msg' null' false);  					} else {  						mouseY = this.ValueToYinverted (lastValue);  					}  				}  			}  		}  		double mousePrice = this.YinvertedToValue (mouseY);  		int labelYadjustedUp = (int)mouseY - this.GutterRightFontHeightHalf_cached;  		labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  		//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(mousePrice' this.ThisPanelIsPricePanel);  		//v2 can be price' volume or indicator  		string panelValueFormatted = this.FormatValue (mousePrice);  		int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  		int labelHeight = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Height;  		int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  		int pxBelowBottomBoundary = (labelYadjustedUp + labelHeight) - base.Height;  		if (pxBelowBottomBoundary > 0) {  			labelYadjustedUp -= pxBelowBottomBoundary;  		}  		Rectangle plate = new Rectangle (labelXalignedRight' labelYadjustedUp - 2' labelWidth + 2' labelHeight + 3);  		if (base.ForeColor != Color.Empty) {  			using (SolidBrush indicatorColorBrush = new SolidBrush (base.ForeColor)) {  				g.FillRectangle (indicatorColorBrush' plate);  			}  			using (SolidBrush brushIndicatorInverted = new SolidBrush (base.BackColor)) {  				g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' brushIndicatorInverted' labelXalignedRight' labelYadjustedUp);  			}  		} else {  			g.FillRectangle (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground.Brush' plate);  			g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  		}  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: if (mouseTrack) {  	// && this.moveHorizontalYprev > -1  	int mouseY = this.moveHorizontalYprev;  	if (this.mouseOver == false || this.moveHorizontalYprev == -1) {  		if (double.IsNaN (panelValueForBarMouseOvered) == false) {  			mouseY = this.ValueToYinverted (panelValueForBarMouseOvered);  		} else {  			string msg = "DRAWING_CURRENT_JUMPING_STREAMING_VALUE_ON_GUTTER_SINCE_MOUSE_WENT_OUT_OF_BOUNDARIES";  			int lastIndex = this.ValueIndexLastAvailableMinusOneUnsafe;  			if (double.IsNaN (lastIndex) == false) {  				double lastValue = this.ValueGetNaNunsafe (lastIndex);  				if (double.IsNaN (lastValue)) {  					msg = "INDICATOR_MAY_HAS_NAN_FOR_BARS<PERIOD lastValue[" + lastValue + "] " + msg;  					//Assembler.PopupException(msg' null' false);  				} else {  					mouseY = this.ValueToYinverted (lastValue);  				}  			}  		}  	}  	double mousePrice = this.YinvertedToValue (mouseY);  	int labelYadjustedUp = (int)mouseY - this.GutterRightFontHeightHalf_cached;  	labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  	//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(mousePrice' this.ThisPanelIsPricePanel);  	//v2 can be price' volume or indicator  	string panelValueFormatted = this.FormatValue (mousePrice);  	int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  	int labelHeight = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Height;  	int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  	int pxBelowBottomBoundary = (labelYadjustedUp + labelHeight) - base.Height;  	if (pxBelowBottomBoundary > 0) {  		labelYadjustedUp -= pxBelowBottomBoundary;  	}  	Rectangle plate = new Rectangle (labelXalignedRight' labelYadjustedUp - 2' labelWidth + 2' labelHeight + 3);  	if (base.ForeColor != Color.Empty) {  		using (SolidBrush indicatorColorBrush = new SolidBrush (base.ForeColor)) {  			g.FillRectangle (indicatorColorBrush' plate);  		}  		using (SolidBrush brushIndicatorInverted = new SolidBrush (base.BackColor)) {  			g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' brushIndicatorInverted' labelXalignedRight' labelYadjustedUp);  		}  	} else {  		g.FillRectangle (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground.Brush' plate);  		g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: if (mouseTrack) {  	// && this.moveHorizontalYprev > -1  	int mouseY = this.moveHorizontalYprev;  	if (this.mouseOver == false || this.moveHorizontalYprev == -1) {  		if (double.IsNaN (panelValueForBarMouseOvered) == false) {  			mouseY = this.ValueToYinverted (panelValueForBarMouseOvered);  		} else {  			string msg = "DRAWING_CURRENT_JUMPING_STREAMING_VALUE_ON_GUTTER_SINCE_MOUSE_WENT_OUT_OF_BOUNDARIES";  			int lastIndex = this.ValueIndexLastAvailableMinusOneUnsafe;  			if (double.IsNaN (lastIndex) == false) {  				double lastValue = this.ValueGetNaNunsafe (lastIndex);  				if (double.IsNaN (lastValue)) {  					msg = "INDICATOR_MAY_HAS_NAN_FOR_BARS<PERIOD lastValue[" + lastValue + "] " + msg;  					//Assembler.PopupException(msg' null' false);  				} else {  					mouseY = this.ValueToYinverted (lastValue);  				}  			}  		}  	}  	double mousePrice = this.YinvertedToValue (mouseY);  	int labelYadjustedUp = (int)mouseY - this.GutterRightFontHeightHalf_cached;  	labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  	//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(mousePrice' this.ThisPanelIsPricePanel);  	//v2 can be price' volume or indicator  	string panelValueFormatted = this.FormatValue (mousePrice);  	int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  	int labelHeight = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Height;  	int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  	int pxBelowBottomBoundary = (labelYadjustedUp + labelHeight) - base.Height;  	if (pxBelowBottomBoundary > 0) {  		labelYadjustedUp -= pxBelowBottomBoundary;  	}  	Rectangle plate = new Rectangle (labelXalignedRight' labelYadjustedUp - 2' labelWidth + 2' labelHeight + 3);  	if (base.ForeColor != Color.Empty) {  		using (SolidBrush indicatorColorBrush = new SolidBrush (base.ForeColor)) {  			g.FillRectangle (indicatorColorBrush' plate);  		}  		using (SolidBrush brushIndicatorInverted = new SolidBrush (base.BackColor)) {  			g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' brushIndicatorInverted' labelXalignedRight' labelYadjustedUp);  		}  	} else {  		g.FillRectangle (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground.Brush' plate);  		g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: if (mouseTrack) {  	// && this.moveHorizontalYprev > -1  	int mouseY = this.moveHorizontalYprev;  	if (this.mouseOver == false || this.moveHorizontalYprev == -1) {  		if (double.IsNaN (panelValueForBarMouseOvered) == false) {  			mouseY = this.ValueToYinverted (panelValueForBarMouseOvered);  		} else {  			string msg = "DRAWING_CURRENT_JUMPING_STREAMING_VALUE_ON_GUTTER_SINCE_MOUSE_WENT_OUT_OF_BOUNDARIES";  			int lastIndex = this.ValueIndexLastAvailableMinusOneUnsafe;  			if (double.IsNaN (lastIndex) == false) {  				double lastValue = this.ValueGetNaNunsafe (lastIndex);  				if (double.IsNaN (lastValue)) {  					msg = "INDICATOR_MAY_HAS_NAN_FOR_BARS<PERIOD lastValue[" + lastValue + "] " + msg;  					//Assembler.PopupException(msg' null' false);  				} else {  					mouseY = this.ValueToYinverted (lastValue);  				}  			}  		}  	}  	double mousePrice = this.YinvertedToValue (mouseY);  	int labelYadjustedUp = (int)mouseY - this.GutterRightFontHeightHalf_cached;  	labelYadjustedUp = this.AdjustToPanelHeight (labelYadjustedUp);  	//v1 string priceFormatted = this.ChartControl.ValueFormattedToSymbolInfoDecimalsOr5(mousePrice' this.ThisPanelIsPricePanel);  	//v2 can be price' volume or indicator  	string panelValueFormatted = this.FormatValue (mousePrice);  	int labelWidth = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Width;  	int labelHeight = (int)g.MeasureString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont).Height;  	int labelXalignedRight = base.Width - this.ChartControl.ChartSettings.GutterRightPadding - labelWidth;  	int pxBelowBottomBoundary = (labelYadjustedUp + labelHeight) - base.Height;  	if (pxBelowBottomBoundary > 0) {  		labelYadjustedUp -= pxBelowBottomBoundary;  	}  	Rectangle plate = new Rectangle (labelXalignedRight' labelYadjustedUp - 2' labelWidth + 2' labelHeight + 3);  	if (base.ForeColor != Color.Empty) {  		using (SolidBrush indicatorColorBrush = new SolidBrush (base.ForeColor)) {  			g.FillRectangle (indicatorColorBrush' plate);  		}  		using (SolidBrush brushIndicatorInverted = new SolidBrush (base.BackColor)) {  			g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' brushIndicatorInverted' labelXalignedRight' labelYadjustedUp);  		}  	} else {  		g.FillRectangle (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground.Brush' plate);  		g.DrawString (panelValueFormatted' this.ChartControl.ChartSettings.GutterRightFont' this.ChartControl.ChartSettings.BrushGutterRightForeground' labelXalignedRight' labelYadjustedUp);  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: if (this.GutterBottomDraw) {  	if (this.GutterRightFontHeight_cached <= 0) {  		string msg = "SHOULDVE_BEEN_INVOKED_EARLIER: ensureFontMetricsAreCalculated()";  		Assembler.PopupException (msg);  		return;  		// not initialized yet  	}  	//this.ChartControl.ChartSettings.PenGridlinesVerticalNewDate.Width = 2f;  	int leftPadding = this.ChartControl.ChartSettings.GutterBottomPadding;  	int y = this.PanelHeightMinusGutterBottomHeight_cached + leftPadding;  	List<Rectangle> barDateLabelsAlreadyDrawn = new List<Rectangle> ();  	// I draw the beginning of the day no matter what  	bool isIntraday_cached = this.ChartControl.Bars.IsIntraday;  	if (isIntraday_cached) {  		//int dayOpenersDrawn = 0;  		//if (dayOpenersDrawn == 0) {	//draw in left corner the date anyway (too much eyeballing to find the date I need)  		Bar barLeftmost = this.ChartControl.Bars [this.visibleBarLeftExisting];  		string barLeftmostFormatted = barLeftmost.DateTimeOpen.ToString (this.ChartControl.ChartSettings.GutterBottomDateFormatDayOpener);  		int barLeftmostX = this.BarToX (this.visibleBarLeftExisting);  		int barLeftmostWidth = (int)g.MeasureString (barLeftmostFormatted' this.ChartControl.ChartSettings.GutterBottomFont).Width;  		barLeftmostX = this.adjustToBoundariesHorizontalGutter (barLeftmostX' barLeftmostWidth);  		//g.DrawLine(this.ChartControl.ChartSettings.PenGridlinesVerticalNewDate' barLeftmostX' 0' barLeftmostX' this.PanelHeightMinusGutterBottomHeight_cached);  		g.DrawString (barLeftmostFormatted' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushGutterBottomNewDateForeground' barLeftmostX' y);  		Rectangle rectLeftmost = new Rectangle (leftPadding' y' barLeftmostWidth' this.GutterRightFontHeight_cached);  		barDateLabelsAlreadyDrawn.Add (rectLeftmost);  		//}  		Bar barOpenerPrevDay = this.ChartControl.Bars [this.visibleBarRightExisting];  		int barPrevX = this.PanelWidthMinusRightPriceGutter - this.BarWidthIncludingPadding_cached;  		for (int i = this.visibleBarRightExisting - 1; i >= this.visibleBarLeftExisting; i--' barPrevX -= this.BarWidthIncludingPadding_cached) {  			Bar bar = this.ChartControl.Bars [i];  			if (bar.DateTimeOpen.Day == barOpenerPrevDay.DateTimeOpen.Day)  				continue;  			if (this.ChartControl.ChartSettings.GridlinesVerticalShow) {  				g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesVerticalNewDate' barPrevX' 0' barPrevX' this.PanelHeightMinusGutterBottomHeight_cached - 1);  			}  			string barDayOpener = barOpenerPrevDay.DateTimeOpen.ToString (this.ChartControl.ChartSettings.GutterBottomDateFormatDayOpener);  			int barDayOpenerWidth = (int)g.MeasureString (barDayOpener' this.ChartControl.ChartSettings.GutterBottomFont).Width;  			int barMiddleOrLeftX = barPrevX;  			// - barDayOpenerWidth / 2;  			barMiddleOrLeftX = this.adjustToBoundariesHorizontalGutter (barMiddleOrLeftX' barDayOpenerWidth);  			Rectangle rect = new Rectangle (barMiddleOrLeftX' y' barDayOpenerWidth' this.GutterRightFontHeight_cached);  			bool shoulddrawBarOpenerDate = true;  			foreach (Rectangle alreadyDrawn in barDateLabelsAlreadyDrawn) {  				if (rect.IntersectsWith (alreadyDrawn) == false)  					continue;  				shoulddrawBarOpenerDate = false;  				break;  			}  			if (shoulddrawBarOpenerDate) {  				g.DrawString (barDayOpener' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushGutterBottomNewDateForeground' rect.Left' rect.Top);  				barDateLabelsAlreadyDrawn.Add (rect);  				//dayOpenersDrawn++;  			}  			barOpenerPrevDay = bar;  		}  	}  	//this.ChartControl.ChartSettings.PenGridlinesVertical.Width = 1f;  	int barMiddleX = this.PanelWidthMinusRightPriceGutter - this.BarWidthIncludingPadding_cached + this.BarShadowXoffset_cached;  	for (int i = this.visibleBarRightExisting; i >= this.visibleBarLeftExisting; i--' barMiddleX -= this.BarWidthIncludingPadding_cached) {  		Bar bar = this.ChartControl.Bars [i];  		if (isIntraday_cached && bar.DateTimeOpen.Minute > 0)  			continue;  		string dateFormatted = bar.DateTimeOpen.ToString (this.formatForBars);  		int dateFormattedWidth = (int)g.MeasureString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont).Width;  		int xLabel = barMiddleX - dateFormattedWidth / 2;  		if (xLabel < 0)  			xLabel = 0;  		Rectangle proposal = new Rectangle (xLabel' y' dateFormattedWidth' this.GutterRightFontHeight_cached);  		bool tooCrowded = false;  		foreach (Rectangle alreadyDrawn in barDateLabelsAlreadyDrawn) {  			if (proposal.IntersectsWith (alreadyDrawn) == false)  				continue;  			tooCrowded = true;  			break;  		}  		if (tooCrowded)  			continue;  		if (this.ChartControl.ChartSettings.GridlinesVerticalShow) {  			g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesVertical' barMiddleX' 0' barMiddleX' this.PanelHeightMinusGutterBottomHeight_cached - 1);  		}  		g.DrawString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushGutterBottomForeground' xLabel' y);  		barDateLabelsAlreadyDrawn.Add (proposal);  	}  	if (mouseTrack) {  		// && this.moveHorizontalXprev > -1  		int mouseX = this.moveHorizontalXprev;  		int mouseBarIndex = this.XToBar (mouseX);  		int mouseBarX = this.BarToX (mouseBarIndex);  		int mouseBarMiddleX = mouseBarX + this.BarShadowOffset;  		Bar mouseBar = this.ChartControl.Bars [mouseBarIndex];  		if (null != mouseBar) {  			string dateFormatted = mouseBar.DateTimeOpen.ToString (this.formatForBars);  			int dateFormattedWidth = (int)g.MeasureString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont).Width;  			int xLabel = (int)Math.Floor (mouseBarMiddleX - dateFormattedWidth / 2f);  			if (xLabel < 0)  				xLabel = 0;  			Rectangle plate = new Rectangle (xLabel' y' dateFormattedWidth + 2' this.GutterRightFontHeight_cached);  			g.FillRectangle (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground.Brush' plate);  			g.DrawString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushMousePositionTrackOnGuttersInverted' xLabel' y);  		}  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: if (this.GutterBottomDraw) {  	if (this.GutterRightFontHeight_cached <= 0) {  		string msg = "SHOULDVE_BEEN_INVOKED_EARLIER: ensureFontMetricsAreCalculated()";  		Assembler.PopupException (msg);  		return;  		// not initialized yet  	}  	//this.ChartControl.ChartSettings.PenGridlinesVerticalNewDate.Width = 2f;  	int leftPadding = this.ChartControl.ChartSettings.GutterBottomPadding;  	int y = this.PanelHeightMinusGutterBottomHeight_cached + leftPadding;  	List<Rectangle> barDateLabelsAlreadyDrawn = new List<Rectangle> ();  	// I draw the beginning of the day no matter what  	bool isIntraday_cached = this.ChartControl.Bars.IsIntraday;  	if (isIntraday_cached) {  		//int dayOpenersDrawn = 0;  		//if (dayOpenersDrawn == 0) {	//draw in left corner the date anyway (too much eyeballing to find the date I need)  		Bar barLeftmost = this.ChartControl.Bars [this.visibleBarLeftExisting];  		string barLeftmostFormatted = barLeftmost.DateTimeOpen.ToString (this.ChartControl.ChartSettings.GutterBottomDateFormatDayOpener);  		int barLeftmostX = this.BarToX (this.visibleBarLeftExisting);  		int barLeftmostWidth = (int)g.MeasureString (barLeftmostFormatted' this.ChartControl.ChartSettings.GutterBottomFont).Width;  		barLeftmostX = this.adjustToBoundariesHorizontalGutter (barLeftmostX' barLeftmostWidth);  		//g.DrawLine(this.ChartControl.ChartSettings.PenGridlinesVerticalNewDate' barLeftmostX' 0' barLeftmostX' this.PanelHeightMinusGutterBottomHeight_cached);  		g.DrawString (barLeftmostFormatted' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushGutterBottomNewDateForeground' barLeftmostX' y);  		Rectangle rectLeftmost = new Rectangle (leftPadding' y' barLeftmostWidth' this.GutterRightFontHeight_cached);  		barDateLabelsAlreadyDrawn.Add (rectLeftmost);  		//}  		Bar barOpenerPrevDay = this.ChartControl.Bars [this.visibleBarRightExisting];  		int barPrevX = this.PanelWidthMinusRightPriceGutter - this.BarWidthIncludingPadding_cached;  		for (int i = this.visibleBarRightExisting - 1; i >= this.visibleBarLeftExisting; i--' barPrevX -= this.BarWidthIncludingPadding_cached) {  			Bar bar = this.ChartControl.Bars [i];  			if (bar.DateTimeOpen.Day == barOpenerPrevDay.DateTimeOpen.Day)  				continue;  			if (this.ChartControl.ChartSettings.GridlinesVerticalShow) {  				g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesVerticalNewDate' barPrevX' 0' barPrevX' this.PanelHeightMinusGutterBottomHeight_cached - 1);  			}  			string barDayOpener = barOpenerPrevDay.DateTimeOpen.ToString (this.ChartControl.ChartSettings.GutterBottomDateFormatDayOpener);  			int barDayOpenerWidth = (int)g.MeasureString (barDayOpener' this.ChartControl.ChartSettings.GutterBottomFont).Width;  			int barMiddleOrLeftX = barPrevX;  			// - barDayOpenerWidth / 2;  			barMiddleOrLeftX = this.adjustToBoundariesHorizontalGutter (barMiddleOrLeftX' barDayOpenerWidth);  			Rectangle rect = new Rectangle (barMiddleOrLeftX' y' barDayOpenerWidth' this.GutterRightFontHeight_cached);  			bool shoulddrawBarOpenerDate = true;  			foreach (Rectangle alreadyDrawn in barDateLabelsAlreadyDrawn) {  				if (rect.IntersectsWith (alreadyDrawn) == false)  					continue;  				shoulddrawBarOpenerDate = false;  				break;  			}  			if (shoulddrawBarOpenerDate) {  				g.DrawString (barDayOpener' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushGutterBottomNewDateForeground' rect.Left' rect.Top);  				barDateLabelsAlreadyDrawn.Add (rect);  				//dayOpenersDrawn++;  			}  			barOpenerPrevDay = bar;  		}  	}  	//this.ChartControl.ChartSettings.PenGridlinesVertical.Width = 1f;  	int barMiddleX = this.PanelWidthMinusRightPriceGutter - this.BarWidthIncludingPadding_cached + this.BarShadowXoffset_cached;  	for (int i = this.visibleBarRightExisting; i >= this.visibleBarLeftExisting; i--' barMiddleX -= this.BarWidthIncludingPadding_cached) {  		Bar bar = this.ChartControl.Bars [i];  		if (isIntraday_cached && bar.DateTimeOpen.Minute > 0)  			continue;  		string dateFormatted = bar.DateTimeOpen.ToString (this.formatForBars);  		int dateFormattedWidth = (int)g.MeasureString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont).Width;  		int xLabel = barMiddleX - dateFormattedWidth / 2;  		if (xLabel < 0)  			xLabel = 0;  		Rectangle proposal = new Rectangle (xLabel' y' dateFormattedWidth' this.GutterRightFontHeight_cached);  		bool tooCrowded = false;  		foreach (Rectangle alreadyDrawn in barDateLabelsAlreadyDrawn) {  			if (proposal.IntersectsWith (alreadyDrawn) == false)  				continue;  			tooCrowded = true;  			break;  		}  		if (tooCrowded)  			continue;  		if (this.ChartControl.ChartSettings.GridlinesVerticalShow) {  			g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesVertical' barMiddleX' 0' barMiddleX' this.PanelHeightMinusGutterBottomHeight_cached - 1);  		}  		g.DrawString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushGutterBottomForeground' xLabel' y);  		barDateLabelsAlreadyDrawn.Add (proposal);  	}  	if (mouseTrack) {  		// && this.moveHorizontalXprev > -1  		int mouseX = this.moveHorizontalXprev;  		int mouseBarIndex = this.XToBar (mouseX);  		int mouseBarX = this.BarToX (mouseBarIndex);  		int mouseBarMiddleX = mouseBarX + this.BarShadowOffset;  		Bar mouseBar = this.ChartControl.Bars [mouseBarIndex];  		if (null != mouseBar) {  			string dateFormatted = mouseBar.DateTimeOpen.ToString (this.formatForBars);  			int dateFormattedWidth = (int)g.MeasureString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont).Width;  			int xLabel = (int)Math.Floor (mouseBarMiddleX - dateFormattedWidth / 2f);  			if (xLabel < 0)  				xLabel = 0;  			Rectangle plate = new Rectangle (xLabel' y' dateFormattedWidth + 2' this.GutterRightFontHeight_cached);  			g.FillRectangle (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground.Brush' plate);  			g.DrawString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushMousePositionTrackOnGuttersInverted' xLabel' y);  		}  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: for (int i = this.visibleBarRightExisting; i >= this.visibleBarLeftExisting; i--' barMiddleX -= this.BarWidthIncludingPadding_cached) {  	Bar bar = this.ChartControl.Bars [i];  	if (isIntraday_cached && bar.DateTimeOpen.Minute > 0)  		continue;  	string dateFormatted = bar.DateTimeOpen.ToString (this.formatForBars);  	int dateFormattedWidth = (int)g.MeasureString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont).Width;  	int xLabel = barMiddleX - dateFormattedWidth / 2;  	if (xLabel < 0)  		xLabel = 0;  	Rectangle proposal = new Rectangle (xLabel' y' dateFormattedWidth' this.GutterRightFontHeight_cached);  	bool tooCrowded = false;  	foreach (Rectangle alreadyDrawn in barDateLabelsAlreadyDrawn) {  		if (proposal.IntersectsWith (alreadyDrawn) == false)  			continue;  		tooCrowded = true;  		break;  	}  	if (tooCrowded)  		continue;  	if (this.ChartControl.ChartSettings.GridlinesVerticalShow) {  		g.DrawLine (this.ChartControl.ChartSettings.PenGridlinesVertical' barMiddleX' 0' barMiddleX' this.PanelHeightMinusGutterBottomHeight_cached - 1);  	}  	g.DrawString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushGutterBottomForeground' xLabel' y);  	barDateLabelsAlreadyDrawn.Add (proposal);  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: if (mouseTrack) {  	// && this.moveHorizontalXprev > -1  	int mouseX = this.moveHorizontalXprev;  	int mouseBarIndex = this.XToBar (mouseX);  	int mouseBarX = this.BarToX (mouseBarIndex);  	int mouseBarMiddleX = mouseBarX + this.BarShadowOffset;  	Bar mouseBar = this.ChartControl.Bars [mouseBarIndex];  	if (null != mouseBar) {  		string dateFormatted = mouseBar.DateTimeOpen.ToString (this.formatForBars);  		int dateFormattedWidth = (int)g.MeasureString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont).Width;  		int xLabel = (int)Math.Floor (mouseBarMiddleX - dateFormattedWidth / 2f);  		if (xLabel < 0)  			xLabel = 0;  		Rectangle plate = new Rectangle (xLabel' y' dateFormattedWidth + 2' this.GutterRightFontHeight_cached);  		g.FillRectangle (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground.Brush' plate);  		g.DrawString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushMousePositionTrackOnGuttersInverted' xLabel' y);  	}  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The following statement contains a magic number: if (null != mouseBar) {  	string dateFormatted = mouseBar.DateTimeOpen.ToString (this.formatForBars);  	int dateFormattedWidth = (int)g.MeasureString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont).Width;  	int xLabel = (int)Math.Floor (mouseBarMiddleX - dateFormattedWidth / 2f);  	if (xLabel < 0)  		xLabel = 0;  	Rectangle plate = new Rectangle (xLabel' y' dateFormattedWidth + 2' this.GutterRightFontHeight_cached);  	g.FillRectangle (this.ChartControl.ChartSettings.PenMousePositionTrackOnGuttersForeground.Brush' plate);  	g.DrawString (dateFormatted' this.ChartControl.ChartSettings.GutterBottomFont' this.ChartControl.ChartSettings.BrushMousePositionTrackOnGuttersInverted' xLabel' y);  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,calculateOptimalVeritcalGridStep,The following statement contains a magic number: if (magPow == -0.5) {  	string msg = "NEVER_HAPPENED_SO_FAR magPow[" + magPow + "]=-0.5";  	Assembler.PopupException (msg' null' false);  	return 0;  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,calculateOptimalVeritcalGridStep,The following statement contains a magic number: try {  	magMsd = (int)(tempStep / magPow + 0.5);  } catch (Exception ex) {  	string msg = "NEVER_HAPPENED_SO_FAR tempStep[" + tempStep + "] / magPow[" + magPow + "] + 0.5";  	Assembler.PopupException (msg' ex' false);  	return 10;  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,calculateOptimalVeritcalGridStep,The following statement contains a magic number: try {  	magMsd = (int)(tempStep / magPow + 0.5);  } catch (Exception ex) {  	string msg = "NEVER_HAPPENED_SO_FAR tempStep[" + tempStep + "] / magPow[" + magPow + "] + 0.5";  	Assembler.PopupException (msg' ex' false);  	return 10;  }  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,calculateOptimalVeritcalGridStep,The following statement contains a magic number: magMsd = (int)(tempStep / magPow + 0.5);  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,calculateOptimalVeritcalGridStep,The following statement contains a magic number: return 10;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,calculateOptimalVeritcalGridStep,The following statement contains a magic number: if (magMsd > 5.0)  	magMsd = 10.0f;  else if (magMsd > 2.0)  	magMsd = 5.0f;  else if (magMsd > 1.0)  	magMsd = 2.0f;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,calculateOptimalVeritcalGridStep,The following statement contains a magic number: if (magMsd > 5.0)  	magMsd = 10.0f;  else if (magMsd > 2.0)  	magMsd = 5.0f;  else if (magMsd > 1.0)  	magMsd = 2.0f;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,calculateOptimalVeritcalGridStep,The following statement contains a magic number: if (magMsd > 2.0)  	magMsd = 5.0f;  else if (magMsd > 1.0)  	magMsd = 2.0f;  
Magic Number,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,RenderIndicators,The following statement contains a magic number: this.ChartLabelsUpperLeftYincremental += 13;  
Magic Number,Sq1.Charting,PanelIndicator,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelIndicator.cs,PanelIndicator,The following statement contains a magic number: base.MinimumSize = new Size (20' 15);  
Magic Number,Sq1.Charting,PanelIndicator,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelIndicator.cs,PanelIndicator,The following statement contains a magic number: base.MinimumSize = new Size (20' 15);  
Magic Number,Sq1.Charting,PanelIndicator,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelIndicator.cs,PaintWholeSurfaceBarsNotEmpty,The following statement contains a magic number: if (valuesAreConstantOrNaN && double.IsNaN (firstNonNan) == false) {  	visibleMinCandidateMaxUnsafe = firstNonNan - firstNonNan * 0.1;  	// bandLower: -10%   	visibleMaxCandidateMinUnsafe = firstNonNan + firstNonNan * 0.1;  	// bandUpper: +10%  } else {  	if (visibleMinCandidateMaxUnsafe == double.MaxValue) {  		string msg = "ALL_OWN_CALCULATED_INDICATOR_VALUES_BETWEEN_BARLEFT_BARRIGHT_ARE_NANS";  		Assembler.PopupException (msg' null' false);  		return;  	}  	if (visibleMaxCandidateMinUnsafe == double.MinValue) {  		string msg = "ALL_OWN_CALCULATED_INDICATOR_VALUES_BETWEEN_BARLEFT_BARRIGHT_ARE_NANS";  		Assembler.PopupException (msg' null' false);  		return;  	}  }  
Magic Number,Sq1.Charting,PanelIndicator,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelIndicator.cs,PaintWholeSurfaceBarsNotEmpty,The following statement contains a magic number: if (valuesAreConstantOrNaN && double.IsNaN (firstNonNan) == false) {  	visibleMinCandidateMaxUnsafe = firstNonNan - firstNonNan * 0.1;  	// bandLower: -10%   	visibleMaxCandidateMinUnsafe = firstNonNan + firstNonNan * 0.1;  	// bandUpper: +10%  } else {  	if (visibleMinCandidateMaxUnsafe == double.MaxValue) {  		string msg = "ALL_OWN_CALCULATED_INDICATOR_VALUES_BETWEEN_BARLEFT_BARRIGHT_ARE_NANS";  		Assembler.PopupException (msg' null' false);  		return;  	}  	if (visibleMaxCandidateMinUnsafe == double.MinValue) {  		string msg = "ALL_OWN_CALCULATED_INDICATOR_VALUES_BETWEEN_BARLEFT_BARRIGHT_ARE_NANS";  		Assembler.PopupException (msg' null' false);  		return;  	}  }  
Magic Number,Sq1.Charting,PanelIndicator,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelIndicator.cs,PaintWholeSurfaceBarsNotEmpty,The following statement contains a magic number: visibleMinCandidateMaxUnsafe = firstNonNan - firstNonNan * 0.1;  
Magic Number,Sq1.Charting,PanelIndicator,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelIndicator.cs,PaintWholeSurfaceBarsNotEmpty,The following statement contains a magic number: visibleMaxCandidateMinUnsafe = firstNonNan + firstNonNan * 0.1;  
Magic Number,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,PanelLevel2,The following statement contains a magic number: base.MinimumSize = new Size (1' 15);  
Magic Number,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The following statement contains a magic number: foreach (KeyValuePair<double' double> keyValue in asks_frozenAsc_forOnePaint) {  	double ask = keyValue.Key;  	double lotAbsolute = keyValue.Value;  	double lotCumulative = asks_frozenAsc_forOnePaint.LotsCumulative [ask];  	double lotsRelative = lotCumulative;  	// -lotsMin;  	#if DEBUG  	if (lotCumulativePrev != 0) {  		if (lotCumulativePrev >= lotCumulative) {  			string msg = "ASKS_MUST_INCREASE_AND_LOTS_CUMULATIVE_MUST_GROW";  			Assembler.PopupException (msg);  		}  	}  	lotCumulativePrev = lotCumulative;  	#endif  	int yAsk = -1;  	if (stripeHeightWillContainMeasuredText) {  		// using panelPrice.PixelsPerPriceStep5pxLeast_cached as minimal step (making price level wider on PanelLevel2 than price level displayed on PanelPrice for visual convenience)  		double diffFromQuoteAsk = ask - quoteAsk;  		int diffFromQuoteAskAsPriceStepsAway = (int)Math.Ceiling (diffFromQuoteAsk / priceStep);  		int diffFromQuoteAskY = diffFromQuoteAskAsPriceStepsAway * pxPerPriceStep_Height;  		yAsk = quoteAskYoffsetted - diffFromQuoteAskY;  		//v1 askY -= diffFromMinAsPriceStepsAway * pxPerPriceStep_Height;  	} else {  		panelPrice.ValueToYinverted (ask);  		if (yAsk <= 0) {  			string msg = "FIRST_EVER_BAR_IS_BUGGY__NOT_PAINTED_PROPERLY_ON_PANEL_PRICE";  			continue;  		}  		yAsk += pxPricePanelVertialOffset;  		//using (Pen gray = new Pen(Color.Gainsboro)) g.DrawLine(gray' 0' askY' base.Width' askY);  		//continue;  	}  	int lotsRelativeWidth = (int)Math.Round (lotsRelative * pxPerLot_Width);  	Rectangle horizontalBar = base.ParentMultiSplitIamLast ? new Rectangle (0' yAsk - pxPerPriceStep_Height' lotsRelativeWidth' pxPerPriceStep_Height) : new Rectangle (base.Width - lotsRelativeWidth' yAsk - pxPerPriceStep_Height' lotsRelativeWidth' pxPerPriceStep_Height);  	//if (base.ClientRectangle.Contains(horizontalBar) == false) continue;  	if (base.ClientRectangle.IntersectsWith (horizontalBar) == false)  		continue;  	g.FillRectangle (base.ChartControl.ChartSettings.BrushLevelTwoAskColorBackground' horizontalBar);  	Point[] leftUpContour = new Point[3];  	leftUpContour [0] = base.ParentMultiSplitIamLast ? new Point (0' yAsk) : new Point (base.Width' yAsk);  	leftUpContour [1] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yAsk) : new Point (base.Width - lotsRelativeWidth' yAsk);  	leftUpContour [2] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yAsk - pxPerPriceStep_Height) : new Point (base.Width - lotsRelativeWidth' yAsk - pxPerPriceStep_Height);  	g.DrawLines (base.ChartControl.ChartSettings.PenLevelTwoAskColorContour' leftUpContour);  	string lotCumulativeFormatted = lotCumulative.ToString (base.VolumeFormat);  	SizeF labelMeasurements = g.MeasureString (lotCumulativeFormatted' base.ChartControl.ChartSettings.LevelTwoLotFont);  	int labelMeasurementsWidth = (int)Math.Round (labelMeasurements.Width);  	int xLabel = base.ParentMultiSplitIamLast ? lotsRelativeWidth - labelMeasurementsWidth - base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal : base.Width - lotsRelativeWidth + base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal;  	if (xLabel > base.Width)  		xLabel = base.Width;  	if (base.ParentMultiSplitIamLast) {  		if (xLabel < 0)  			xLabel = 0;  	} else {  		if (xLabel + labelMeasurementsWidth + base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal > base.Width) {  			xLabel = base.Width - labelMeasurementsWidth - base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal;  		}  	}  	//int middleOfBar = (int)(pxPerPriceStep_Height / 2d);  	//int middleOfLabel = (int)(labelMeasurements.Height / 2d);  	int yLabel = yAsk - (int)labelMeasurements.Height;  	//Math.Min(middleOfBar' middleOfLabel);	// volume drawn inside the horizontalBar' above actual ask  	if (yLabel > base.Height)  		yLabel = base.Height;  	g.DrawString (lotCumulativeFormatted' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushLevelTwoLot' xLabel' yLabel);  }  
Magic Number,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The following statement contains a magic number: foreach (KeyValuePair<double' double> keyValue in asks_frozenAsc_forOnePaint) {  	double ask = keyValue.Key;  	double lotAbsolute = keyValue.Value;  	double lotCumulative = asks_frozenAsc_forOnePaint.LotsCumulative [ask];  	double lotsRelative = lotCumulative;  	// -lotsMin;  	#if DEBUG  	if (lotCumulativePrev != 0) {  		if (lotCumulativePrev >= lotCumulative) {  			string msg = "ASKS_MUST_INCREASE_AND_LOTS_CUMULATIVE_MUST_GROW";  			Assembler.PopupException (msg);  		}  	}  	lotCumulativePrev = lotCumulative;  	#endif  	int yAsk = -1;  	if (stripeHeightWillContainMeasuredText) {  		// using panelPrice.PixelsPerPriceStep5pxLeast_cached as minimal step (making price level wider on PanelLevel2 than price level displayed on PanelPrice for visual convenience)  		double diffFromQuoteAsk = ask - quoteAsk;  		int diffFromQuoteAskAsPriceStepsAway = (int)Math.Ceiling (diffFromQuoteAsk / priceStep);  		int diffFromQuoteAskY = diffFromQuoteAskAsPriceStepsAway * pxPerPriceStep_Height;  		yAsk = quoteAskYoffsetted - diffFromQuoteAskY;  		//v1 askY -= diffFromMinAsPriceStepsAway * pxPerPriceStep_Height;  	} else {  		panelPrice.ValueToYinverted (ask);  		if (yAsk <= 0) {  			string msg = "FIRST_EVER_BAR_IS_BUGGY__NOT_PAINTED_PROPERLY_ON_PANEL_PRICE";  			continue;  		}  		yAsk += pxPricePanelVertialOffset;  		//using (Pen gray = new Pen(Color.Gainsboro)) g.DrawLine(gray' 0' askY' base.Width' askY);  		//continue;  	}  	int lotsRelativeWidth = (int)Math.Round (lotsRelative * pxPerLot_Width);  	Rectangle horizontalBar = base.ParentMultiSplitIamLast ? new Rectangle (0' yAsk - pxPerPriceStep_Height' lotsRelativeWidth' pxPerPriceStep_Height) : new Rectangle (base.Width - lotsRelativeWidth' yAsk - pxPerPriceStep_Height' lotsRelativeWidth' pxPerPriceStep_Height);  	//if (base.ClientRectangle.Contains(horizontalBar) == false) continue;  	if (base.ClientRectangle.IntersectsWith (horizontalBar) == false)  		continue;  	g.FillRectangle (base.ChartControl.ChartSettings.BrushLevelTwoAskColorBackground' horizontalBar);  	Point[] leftUpContour = new Point[3];  	leftUpContour [0] = base.ParentMultiSplitIamLast ? new Point (0' yAsk) : new Point (base.Width' yAsk);  	leftUpContour [1] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yAsk) : new Point (base.Width - lotsRelativeWidth' yAsk);  	leftUpContour [2] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yAsk - pxPerPriceStep_Height) : new Point (base.Width - lotsRelativeWidth' yAsk - pxPerPriceStep_Height);  	g.DrawLines (base.ChartControl.ChartSettings.PenLevelTwoAskColorContour' leftUpContour);  	string lotCumulativeFormatted = lotCumulative.ToString (base.VolumeFormat);  	SizeF labelMeasurements = g.MeasureString (lotCumulativeFormatted' base.ChartControl.ChartSettings.LevelTwoLotFont);  	int labelMeasurementsWidth = (int)Math.Round (labelMeasurements.Width);  	int xLabel = base.ParentMultiSplitIamLast ? lotsRelativeWidth - labelMeasurementsWidth - base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal : base.Width - lotsRelativeWidth + base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal;  	if (xLabel > base.Width)  		xLabel = base.Width;  	if (base.ParentMultiSplitIamLast) {  		if (xLabel < 0)  			xLabel = 0;  	} else {  		if (xLabel + labelMeasurementsWidth + base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal > base.Width) {  			xLabel = base.Width - labelMeasurementsWidth - base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal;  		}  	}  	//int middleOfBar = (int)(pxPerPriceStep_Height / 2d);  	//int middleOfLabel = (int)(labelMeasurements.Height / 2d);  	int yLabel = yAsk - (int)labelMeasurements.Height;  	//Math.Min(middleOfBar' middleOfLabel);	// volume drawn inside the horizontalBar' above actual ask  	if (yLabel > base.Height)  		yLabel = base.Height;  	g.DrawString (lotCumulativeFormatted' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushLevelTwoLot' xLabel' yLabel);  }  
Magic Number,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The following statement contains a magic number: leftUpContour [2] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yAsk - pxPerPriceStep_Height) : new Point (base.Width - lotsRelativeWidth' yAsk - pxPerPriceStep_Height);  
Magic Number,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The following statement contains a magic number: foreach (KeyValuePair<double' double> keyValue in bids_frozenDesc_forOnePaint) {  	double bid = keyValue.Key;  	double lotAbsolute = keyValue.Value;  	double lotCumulative = bids_frozenDesc_forOnePaint.LotsCumulative [bid];  	double lotsRelative = lotCumulative;  	// -lotsMin;  	#if DEBUG  	if (lotCumulativePrev != 0) {  		if (lotCumulativePrev >= lotCumulative) {  			string msg = "BIDS_MUST_DECREAS_BUT_LOTS_CUMULATIVE_MUST_GROW";  			Assembler.PopupException (msg);  		}  	}  	lotCumulativePrev = lotCumulative;  	#endif  	int yBid = -1;  	if (stripeHeightWillContainMeasuredText) {  		// using panelPrice.PixelsPerPriceStep5pxLeast_cached as minimal step (making price level wider on PanelLevel2 than price level displayed on PanelPrice for visual convenience)  		double diffFromQuoteBid = quoteBid - bid;  		int diffFromQuoteBidAsPriceStepsAway = (int)Math.Ceiling (diffFromQuoteBid / priceStep);  		int diffFromQuoteBidY = diffFromQuoteBidAsPriceStepsAway * pxPerPriceStep_Height;  		yBid = quoteBidYofsetted + diffFromQuoteBidY;  		//v1 bidY -= diffFromMinAsPriceStepsAway * pxPerPriceStep_Height;  	} else {  		panelPrice.ValueToYinverted (bid);  		if (yBid <= 0) {  			string msg = "FIRST_EVER_BAR_IS_BUGGY__NOT_PAINTED_PROPERLY_ON_PANEL_PRICE";  			continue;  		}  		yBid += pxPricePanelVertialOffset;  		//using (Pen gray = new Pen(Color.Gainsboro)) g.DrawLine(gray' 0' askY' base.Width' askY);  		//continue;  	}  	int lotsRelativeWidth = (int)Math.Round (lotsRelative * pxPerLot_Width);  	Rectangle horizontalBar = base.ParentMultiSplitIamLast ? new Rectangle (0' yBid' lotsRelativeWidth' pxPerPriceStep_Height) : new Rectangle (base.Width - lotsRelativeWidth' yBid' lotsRelativeWidth' pxPerPriceStep_Height);  	//if (base.ClientRectangle.Contains(horizontalBar) == false) continue;  	if (base.ClientRectangle.IntersectsWith (horizontalBar) == false)  		continue;  	g.FillRectangle (base.ChartControl.ChartSettings.BrushLevelTwoBidColorBackground' horizontalBar);  	Point[] leftDownContour = new Point[3];  	leftDownContour [0] = base.ParentMultiSplitIamLast ? new Point (0' yBid) : new Point (base.Width' yBid);  	leftDownContour [1] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yBid) : new Point (base.Width - lotsRelativeWidth' yBid);  	leftDownContour [2] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yBid + pxPerPriceStep_Height) : new Point (base.Width - lotsRelativeWidth' yBid + pxPerPriceStep_Height);  	g.DrawLines (base.ChartControl.ChartSettings.PenLevelTwoBidColorContour' leftDownContour);  	string lotCumulativeFormatted = lotCumulative.ToString (base.VolumeFormat);  	SizeF labelMeasurements = g.MeasureString (lotCumulativeFormatted' base.ChartControl.ChartSettings.LevelTwoLotFont);  	int labelMeasurementsWidth = (int)Math.Round (labelMeasurements.Width);  	int xLabel = base.ParentMultiSplitIamLast ? lotsRelativeWidth - labelMeasurementsWidth - base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal : base.Width - lotsRelativeWidth + base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal;  	if (base.ParentMultiSplitIamLast) {  		if (xLabel < 0)  			xLabel = 0;  	} else {  		if (xLabel + labelMeasurementsWidth + base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal > base.Width) {  			xLabel = base.Width - labelMeasurementsWidth - base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal;  		}  	}  	//int middleOfBar = (int)(pxPerPriceStep_Height / 2d);  	//int middleOfLabel = (int)(labelMeasurements.Height / 2d);  	int yLabel = yBid + 1;  	//Math.Min(middleOfBar' middleOfLabel);	// volume drawn inside the horizontalBar' below actual bid  	if (yLabel < 0)  		yLabel = 0;  	g.DrawString (lotCumulativeFormatted' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushLevelTwoLot' xLabel' yLabel);  }  
Magic Number,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The following statement contains a magic number: foreach (KeyValuePair<double' double> keyValue in bids_frozenDesc_forOnePaint) {  	double bid = keyValue.Key;  	double lotAbsolute = keyValue.Value;  	double lotCumulative = bids_frozenDesc_forOnePaint.LotsCumulative [bid];  	double lotsRelative = lotCumulative;  	// -lotsMin;  	#if DEBUG  	if (lotCumulativePrev != 0) {  		if (lotCumulativePrev >= lotCumulative) {  			string msg = "BIDS_MUST_DECREAS_BUT_LOTS_CUMULATIVE_MUST_GROW";  			Assembler.PopupException (msg);  		}  	}  	lotCumulativePrev = lotCumulative;  	#endif  	int yBid = -1;  	if (stripeHeightWillContainMeasuredText) {  		// using panelPrice.PixelsPerPriceStep5pxLeast_cached as minimal step (making price level wider on PanelLevel2 than price level displayed on PanelPrice for visual convenience)  		double diffFromQuoteBid = quoteBid - bid;  		int diffFromQuoteBidAsPriceStepsAway = (int)Math.Ceiling (diffFromQuoteBid / priceStep);  		int diffFromQuoteBidY = diffFromQuoteBidAsPriceStepsAway * pxPerPriceStep_Height;  		yBid = quoteBidYofsetted + diffFromQuoteBidY;  		//v1 bidY -= diffFromMinAsPriceStepsAway * pxPerPriceStep_Height;  	} else {  		panelPrice.ValueToYinverted (bid);  		if (yBid <= 0) {  			string msg = "FIRST_EVER_BAR_IS_BUGGY__NOT_PAINTED_PROPERLY_ON_PANEL_PRICE";  			continue;  		}  		yBid += pxPricePanelVertialOffset;  		//using (Pen gray = new Pen(Color.Gainsboro)) g.DrawLine(gray' 0' askY' base.Width' askY);  		//continue;  	}  	int lotsRelativeWidth = (int)Math.Round (lotsRelative * pxPerLot_Width);  	Rectangle horizontalBar = base.ParentMultiSplitIamLast ? new Rectangle (0' yBid' lotsRelativeWidth' pxPerPriceStep_Height) : new Rectangle (base.Width - lotsRelativeWidth' yBid' lotsRelativeWidth' pxPerPriceStep_Height);  	//if (base.ClientRectangle.Contains(horizontalBar) == false) continue;  	if (base.ClientRectangle.IntersectsWith (horizontalBar) == false)  		continue;  	g.FillRectangle (base.ChartControl.ChartSettings.BrushLevelTwoBidColorBackground' horizontalBar);  	Point[] leftDownContour = new Point[3];  	leftDownContour [0] = base.ParentMultiSplitIamLast ? new Point (0' yBid) : new Point (base.Width' yBid);  	leftDownContour [1] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yBid) : new Point (base.Width - lotsRelativeWidth' yBid);  	leftDownContour [2] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yBid + pxPerPriceStep_Height) : new Point (base.Width - lotsRelativeWidth' yBid + pxPerPriceStep_Height);  	g.DrawLines (base.ChartControl.ChartSettings.PenLevelTwoBidColorContour' leftDownContour);  	string lotCumulativeFormatted = lotCumulative.ToString (base.VolumeFormat);  	SizeF labelMeasurements = g.MeasureString (lotCumulativeFormatted' base.ChartControl.ChartSettings.LevelTwoLotFont);  	int labelMeasurementsWidth = (int)Math.Round (labelMeasurements.Width);  	int xLabel = base.ParentMultiSplitIamLast ? lotsRelativeWidth - labelMeasurementsWidth - base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal : base.Width - lotsRelativeWidth + base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal;  	if (base.ParentMultiSplitIamLast) {  		if (xLabel < 0)  			xLabel = 0;  	} else {  		if (xLabel + labelMeasurementsWidth + base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal > base.Width) {  			xLabel = base.Width - labelMeasurementsWidth - base.ChartControl.ChartSettings.LevelTwoLotPaddingHorizontal;  		}  	}  	//int middleOfBar = (int)(pxPerPriceStep_Height / 2d);  	//int middleOfLabel = (int)(labelMeasurements.Height / 2d);  	int yLabel = yBid + 1;  	//Math.Min(middleOfBar' middleOfLabel);	// volume drawn inside the horizontalBar' below actual bid  	if (yLabel < 0)  		yLabel = 0;  	g.DrawString (lotCumulativeFormatted' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushLevelTwoLot' xLabel' yLabel);  }  
Magic Number,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderLevel2,The following statement contains a magic number: leftDownContour [2] = base.ParentMultiSplitIamLast ? new Point (lotsRelativeWidth' yBid + pxPerPriceStep_Height) : new Point (base.Width - lotsRelativeWidth' yBid + pxPerPriceStep_Height);  
Magic Number,Sq1.Charting,PanelLevel2,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelLevel2.cs,renderBidAsk,The following statement contains a magic number: g.DrawString (label' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushSpreadLabel' xLabel' yBid + 3);  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,PanelPrice,The following statement contains a magic number: base.MinimumSize = new Size (20' 25);  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,PanelPrice,The following statement contains a magic number: base.MinimumSize = new Size (20' 25);  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPosition_smallBrownDot_atPriceFilled_arrowsLines_ifExistForBar,The following statement contains a magic number: foreach (AlertArrow arrow in arrows) {  	//g.DrawImage(position.Bitmap' new Point(shadowX' position.Ytransient));  	//MOVED_TO_AlignVisiblePositionArrowsAndCountMaxOutstanding() position.XBarMiddle = shadowX;  	if (arrow.Bitmap != null) {  		g.DrawImage (arrow.Bitmap' arrow.Location);  		//g.DrawImageUnscaled(position.Bitmap' position.Location);  		//http://stackoverflow.com/questions/7690546/replace-gdi-drawimage-with-pinvoked-gdi-and-transparent-pngs  		//http://stackoverflow.com/questions/264720/gdi-graphicsdrawimage-really-slow  		//g.FillRectangle(position.BitmapTextureBrush' position.ClientRectangle);  	}  	this.renderPositionLineForArrow (arrow' g' false);  	Position position = arrow.Position;  	int ellipsePlannedDiameter = base.ChartControl.ChartSettings.PositionPlannedEllipseDiameter;  	//6  	int ellipsePlannedRadius = (int)(Math.Round (ellipsePlannedDiameter / 2f));  	int ellipseFilledDiameter = base.ChartControl.ChartSettings.PositionFilledDotDiameter;  	//4  	int ellipseFilledRadius = (int)(Math.Round (ellipseFilledDiameter / 2f));  	if (arrow.ArrowIsForPositionEntry) {  		int entryPlannedX = shadowX;  		int entryPlannedY = base.ValueToYinverted (position.EntryEmitted_price);  		Rectangle entryPlannedRect = new Rectangle (entryPlannedX - ellipsePlannedRadius' entryPlannedY - ellipsePlannedRadius' ellipsePlannedDiameter' ellipsePlannedDiameter);  		g.DrawEllipse (base.ChartControl.ChartSettings.PenPositionPlannedEllipse' entryPlannedRect);  		if (position.IsEntryFilled) {  			int entryFilledOnY = base.ValueToYinverted (position.EntryFilled_price);  			Rectangle entryFilledRect = new Rectangle (entryPlannedX - 2' entryFilledOnY - 2' ellipseFilledDiameter' ellipseFilledDiameter);  			g.FillEllipse (base.ChartControl.ChartSettings.BrushPositionFilledDot' entryFilledRect);  		}  	} else {  		int exitPlannedX = base.BarToXshadowBeyondGoInside (position.ExitBar.ParentBarsIndex);  		int exitPlannedY = base.ValueToYinverted (position.ExitEmitted_price);  		Rectangle exitPlannedRect = new Rectangle (exitPlannedX - ellipsePlannedRadius' exitPlannedY - ellipsePlannedRadius' ellipsePlannedDiameter' ellipsePlannedDiameter);  		g.DrawEllipse (base.ChartControl.ChartSettings.PenPositionPlannedEllipse' exitPlannedRect);  		if (position.IsExitFilled) {  			int exitFilledOnY = base.ValueToYinverted (position.ExitFilled_price);  			Rectangle exitFilledRect = new Rectangle (exitPlannedX - ellipseFilledRadius' exitFilledOnY - ellipseFilledRadius' ellipseFilledDiameter' ellipseFilledDiameter);  			g.FillEllipse (base.ChartControl.ChartSettings.BrushPositionFilledDot' exitFilledRect);  		}  	}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPosition_smallBrownDot_atPriceFilled_arrowsLines_ifExistForBar,The following statement contains a magic number: foreach (AlertArrow arrow in arrows) {  	//g.DrawImage(position.Bitmap' new Point(shadowX' position.Ytransient));  	//MOVED_TO_AlignVisiblePositionArrowsAndCountMaxOutstanding() position.XBarMiddle = shadowX;  	if (arrow.Bitmap != null) {  		g.DrawImage (arrow.Bitmap' arrow.Location);  		//g.DrawImageUnscaled(position.Bitmap' position.Location);  		//http://stackoverflow.com/questions/7690546/replace-gdi-drawimage-with-pinvoked-gdi-and-transparent-pngs  		//http://stackoverflow.com/questions/264720/gdi-graphicsdrawimage-really-slow  		//g.FillRectangle(position.BitmapTextureBrush' position.ClientRectangle);  	}  	this.renderPositionLineForArrow (arrow' g' false);  	Position position = arrow.Position;  	int ellipsePlannedDiameter = base.ChartControl.ChartSettings.PositionPlannedEllipseDiameter;  	//6  	int ellipsePlannedRadius = (int)(Math.Round (ellipsePlannedDiameter / 2f));  	int ellipseFilledDiameter = base.ChartControl.ChartSettings.PositionFilledDotDiameter;  	//4  	int ellipseFilledRadius = (int)(Math.Round (ellipseFilledDiameter / 2f));  	if (arrow.ArrowIsForPositionEntry) {  		int entryPlannedX = shadowX;  		int entryPlannedY = base.ValueToYinverted (position.EntryEmitted_price);  		Rectangle entryPlannedRect = new Rectangle (entryPlannedX - ellipsePlannedRadius' entryPlannedY - ellipsePlannedRadius' ellipsePlannedDiameter' ellipsePlannedDiameter);  		g.DrawEllipse (base.ChartControl.ChartSettings.PenPositionPlannedEllipse' entryPlannedRect);  		if (position.IsEntryFilled) {  			int entryFilledOnY = base.ValueToYinverted (position.EntryFilled_price);  			Rectangle entryFilledRect = new Rectangle (entryPlannedX - 2' entryFilledOnY - 2' ellipseFilledDiameter' ellipseFilledDiameter);  			g.FillEllipse (base.ChartControl.ChartSettings.BrushPositionFilledDot' entryFilledRect);  		}  	} else {  		int exitPlannedX = base.BarToXshadowBeyondGoInside (position.ExitBar.ParentBarsIndex);  		int exitPlannedY = base.ValueToYinverted (position.ExitEmitted_price);  		Rectangle exitPlannedRect = new Rectangle (exitPlannedX - ellipsePlannedRadius' exitPlannedY - ellipsePlannedRadius' ellipsePlannedDiameter' ellipsePlannedDiameter);  		g.DrawEllipse (base.ChartControl.ChartSettings.PenPositionPlannedEllipse' exitPlannedRect);  		if (position.IsExitFilled) {  			int exitFilledOnY = base.ValueToYinverted (position.ExitFilled_price);  			Rectangle exitFilledRect = new Rectangle (exitPlannedX - ellipseFilledRadius' exitFilledOnY - ellipseFilledRadius' ellipseFilledDiameter' ellipseFilledDiameter);  			g.FillEllipse (base.ChartControl.ChartSettings.BrushPositionFilledDot' exitFilledRect);  		}  	}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPosition_smallBrownDot_atPriceFilled_arrowsLines_ifExistForBar,The following statement contains a magic number: if (arrow.ArrowIsForPositionEntry) {  	int entryPlannedX = shadowX;  	int entryPlannedY = base.ValueToYinverted (position.EntryEmitted_price);  	Rectangle entryPlannedRect = new Rectangle (entryPlannedX - ellipsePlannedRadius' entryPlannedY - ellipsePlannedRadius' ellipsePlannedDiameter' ellipsePlannedDiameter);  	g.DrawEllipse (base.ChartControl.ChartSettings.PenPositionPlannedEllipse' entryPlannedRect);  	if (position.IsEntryFilled) {  		int entryFilledOnY = base.ValueToYinverted (position.EntryFilled_price);  		Rectangle entryFilledRect = new Rectangle (entryPlannedX - 2' entryFilledOnY - 2' ellipseFilledDiameter' ellipseFilledDiameter);  		g.FillEllipse (base.ChartControl.ChartSettings.BrushPositionFilledDot' entryFilledRect);  	}  } else {  	int exitPlannedX = base.BarToXshadowBeyondGoInside (position.ExitBar.ParentBarsIndex);  	int exitPlannedY = base.ValueToYinverted (position.ExitEmitted_price);  	Rectangle exitPlannedRect = new Rectangle (exitPlannedX - ellipsePlannedRadius' exitPlannedY - ellipsePlannedRadius' ellipsePlannedDiameter' ellipsePlannedDiameter);  	g.DrawEllipse (base.ChartControl.ChartSettings.PenPositionPlannedEllipse' exitPlannedRect);  	if (position.IsExitFilled) {  		int exitFilledOnY = base.ValueToYinverted (position.ExitFilled_price);  		Rectangle exitFilledRect = new Rectangle (exitPlannedX - ellipseFilledRadius' exitFilledOnY - ellipseFilledRadius' ellipseFilledDiameter' ellipseFilledDiameter);  		g.FillEllipse (base.ChartControl.ChartSettings.BrushPositionFilledDot' exitFilledRect);  	}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPosition_smallBrownDot_atPriceFilled_arrowsLines_ifExistForBar,The following statement contains a magic number: if (arrow.ArrowIsForPositionEntry) {  	int entryPlannedX = shadowX;  	int entryPlannedY = base.ValueToYinverted (position.EntryEmitted_price);  	Rectangle entryPlannedRect = new Rectangle (entryPlannedX - ellipsePlannedRadius' entryPlannedY - ellipsePlannedRadius' ellipsePlannedDiameter' ellipsePlannedDiameter);  	g.DrawEllipse (base.ChartControl.ChartSettings.PenPositionPlannedEllipse' entryPlannedRect);  	if (position.IsEntryFilled) {  		int entryFilledOnY = base.ValueToYinverted (position.EntryFilled_price);  		Rectangle entryFilledRect = new Rectangle (entryPlannedX - 2' entryFilledOnY - 2' ellipseFilledDiameter' ellipseFilledDiameter);  		g.FillEllipse (base.ChartControl.ChartSettings.BrushPositionFilledDot' entryFilledRect);  	}  } else {  	int exitPlannedX = base.BarToXshadowBeyondGoInside (position.ExitBar.ParentBarsIndex);  	int exitPlannedY = base.ValueToYinverted (position.ExitEmitted_price);  	Rectangle exitPlannedRect = new Rectangle (exitPlannedX - ellipsePlannedRadius' exitPlannedY - ellipsePlannedRadius' ellipsePlannedDiameter' ellipsePlannedDiameter);  	g.DrawEllipse (base.ChartControl.ChartSettings.PenPositionPlannedEllipse' exitPlannedRect);  	if (position.IsExitFilled) {  		int exitFilledOnY = base.ValueToYinverted (position.ExitFilled_price);  		Rectangle exitFilledRect = new Rectangle (exitPlannedX - ellipseFilledRadius' exitFilledOnY - ellipseFilledRadius' ellipseFilledDiameter' ellipseFilledDiameter);  		g.FillEllipse (base.ChartControl.ChartSettings.BrushPositionFilledDot' exitFilledRect);  	}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPosition_smallBrownDot_atPriceFilled_arrowsLines_ifExistForBar,The following statement contains a magic number: if (position.IsEntryFilled) {  	int entryFilledOnY = base.ValueToYinverted (position.EntryFilled_price);  	Rectangle entryFilledRect = new Rectangle (entryPlannedX - 2' entryFilledOnY - 2' ellipseFilledDiameter' ellipseFilledDiameter);  	g.FillEllipse (base.ChartControl.ChartSettings.BrushPositionFilledDot' entryFilledRect);  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderPosition_smallBrownDot_atPriceFilled_arrowsLines_ifExistForBar,The following statement contains a magic number: if (position.IsEntryFilled) {  	int entryFilledOnY = base.ValueToYinverted (position.EntryFilled_price);  	Rectangle entryFilledRect = new Rectangle (entryPlannedX - 2' entryFilledOnY - 2' ellipseFilledDiameter' ellipseFilledDiameter);  	g.FillEllipse (base.ChartControl.ChartSettings.BrushPositionFilledDot' entryFilledRect);  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: for (int barIndex = base.VisibleBarRight_cached; barIndex > base.VisibleBarLeft_cached; barIndex--) {  	if (barIndex >= base.ChartControl.Bars.Count) {  		// we want to display 0..64' but Bars has only 10 bars inside  		string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)";  		Assembler.PopupException ("MOVE_THIS_CHECK_UPSTACK renderBarsPrice(): " + msg);  		continue;  	}  	barXshadow -= base.BarWidthIncludingPadding_cached;  	if (eoFrozen.OnChartBarAnnotationsByBar.ContainsKey (barIndex) == false)  		continue;  	Bar bar = base.ChartControl.Bars [barIndex];  	int yForLabelsAbove = base.ValueToYinverted (bar.High);  	int yForLabelsBelow = base.ValueToYinverted (bar.Low);  	int paddingFromSettings = base.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding;  	// UNCLUTTER_ADD_POSITIONS_ARROWS_OFFSET begin  	Dictionary<int' List<AlertArrow>> alertArrowsListByBar = base.ChartControl.ExecutorObjects_frozenForRendering.AlertArrowsListByBar;  	if (alertArrowsListByBar.ContainsKey (barIndex)) {  		List<AlertArrow> arrows = alertArrowsListByBar [barIndex];  		foreach (AlertArrow arrow in arrows) {  			int arrowHeight = arrow.Height + base.ChartControl.ChartSettings.PositionArrowPaddingVertical;  			if (arrow.AboveBar)  				yForLabelsAbove -= arrowHeight + base.ChartControl.ChartSettings.PositionArrowPaddingVertical;  			else  				yForLabelsBelow += arrowHeight;  		}  	}  	// UNCLUTTER_ADD_POSITIONS_ARROWS_OFFSET end  	int verticalOffsetForNextStackedAnnotationsAboveSameBar = 0;  	int verticalOffsetForMextStackedAnnotationsBelowSameBar = 0;  	SortedDictionary<string' OnChartBarAnnotation> barAnnotationsById = eoFrozen.OnChartBarAnnotationsByBar [barIndex];  	foreach (OnChartBarAnnotation barAnnotation in barAnnotationsById.Values) {  		//DUPLICATION copypaste from DrawLabel  		Font font = (barAnnotation.Font != null) ? barAnnotation.Font : base.Font;  		SizeF measurements = g.MeasureString (barAnnotation.BarAnnotationText' font);  		int labelWidthMeasured = (int)measurements.Width;  		int labelHeightMeasured = (int)measurements.Height;  		int x = barXshadow - labelWidthMeasured / 2;  		int xPadding = barAnnotation.ShouldDrawBackground ? paddingFromSettings : 0;  		// WEIRD_BUT_IF_I_DONT_INCLUDE_PADDING_WHO_LABELS_WITH_AND_WITHOUTH_PADDING_ARE_PERFECTLY_CENTER_ALIGNED -= xPadding;  		int y = barAnnotation.AboveBar ? yForLabelsAbove - labelHeightMeasured : yForLabelsBelow;  		if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  			string msg = "PREVENT_Y_BEYOUND_VISIBLE_DUE_TO_EXCEEDED_BAR_ANNOTATION_PADDING (due to barAnnotation.VerticalPaddingPx = Int32.MaxValue)";  			y = barAnnotation.AboveBar ? verticalOffsetForNextStackedAnnotationsAboveSameBar : this.PanelHeightMinusGutterBottomHeight_cached - labelHeightMeasured - verticalOffsetForMextStackedAnnotationsBelowSameBar - 3;  			if (barAnnotation.AboveBar)  				verticalOffsetForNextStackedAnnotationsAboveSameBar += labelHeightMeasured;  			else  				verticalOffsetForMextStackedAnnotationsBelowSameBar += labelHeightMeasured;  			//					} else {  			//						if (verticalPaddingDueToManyStackedAnnotationsAboveSameBar > 0) {  			//							string msg = "TESTME_WHEN_REASONABLE_PADDING_MIXED_WITH_INT.MAXVALUE_FOR_SAME_BAR";  			//							Assembler.PopupException(msg);  			//						}  		}  		int yPadding = 0;  		if (barAnnotation.ShouldDrawBackground) {  			yPadding += barAnnotation.AboveBar ? -paddingFromSettings * 2 : paddingFromSettings;  		}  		y += yPadding;  		if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  			if (barAnnotation.AboveBar)  				verticalOffsetForNextStackedAnnotationsAboveSameBar += yPadding;  			else  				verticalOffsetForMextStackedAnnotationsBelowSameBar += yPadding;  		} else {  			y += (barAnnotation.AboveBar) ? -barAnnotation.VerticalPaddingPx : barAnnotation.VerticalPaddingPx;  		}  		base.DrawLabel (g' x' y' barAnnotation.BarAnnotationText' barAnnotation.Font' barAnnotation.ColorForeground' barAnnotation.ColorBackground' false);  		int labelHeightWithPadding = labelHeightMeasured;  		if (barAnnotation.ShouldDrawBackground) {  			labelHeightWithPadding += paddingFromSettings * 2;  		}  		if (barAnnotation.AboveBar) {  			yForLabelsAbove -= labelHeightWithPadding;  		} else {  			yForLabelsBelow += labelHeightWithPadding;  		}  	}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: for (int barIndex = base.VisibleBarRight_cached; barIndex > base.VisibleBarLeft_cached; barIndex--) {  	if (barIndex >= base.ChartControl.Bars.Count) {  		// we want to display 0..64' but Bars has only 10 bars inside  		string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)";  		Assembler.PopupException ("MOVE_THIS_CHECK_UPSTACK renderBarsPrice(): " + msg);  		continue;  	}  	barXshadow -= base.BarWidthIncludingPadding_cached;  	if (eoFrozen.OnChartBarAnnotationsByBar.ContainsKey (barIndex) == false)  		continue;  	Bar bar = base.ChartControl.Bars [barIndex];  	int yForLabelsAbove = base.ValueToYinverted (bar.High);  	int yForLabelsBelow = base.ValueToYinverted (bar.Low);  	int paddingFromSettings = base.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding;  	// UNCLUTTER_ADD_POSITIONS_ARROWS_OFFSET begin  	Dictionary<int' List<AlertArrow>> alertArrowsListByBar = base.ChartControl.ExecutorObjects_frozenForRendering.AlertArrowsListByBar;  	if (alertArrowsListByBar.ContainsKey (barIndex)) {  		List<AlertArrow> arrows = alertArrowsListByBar [barIndex];  		foreach (AlertArrow arrow in arrows) {  			int arrowHeight = arrow.Height + base.ChartControl.ChartSettings.PositionArrowPaddingVertical;  			if (arrow.AboveBar)  				yForLabelsAbove -= arrowHeight + base.ChartControl.ChartSettings.PositionArrowPaddingVertical;  			else  				yForLabelsBelow += arrowHeight;  		}  	}  	// UNCLUTTER_ADD_POSITIONS_ARROWS_OFFSET end  	int verticalOffsetForNextStackedAnnotationsAboveSameBar = 0;  	int verticalOffsetForMextStackedAnnotationsBelowSameBar = 0;  	SortedDictionary<string' OnChartBarAnnotation> barAnnotationsById = eoFrozen.OnChartBarAnnotationsByBar [barIndex];  	foreach (OnChartBarAnnotation barAnnotation in barAnnotationsById.Values) {  		//DUPLICATION copypaste from DrawLabel  		Font font = (barAnnotation.Font != null) ? barAnnotation.Font : base.Font;  		SizeF measurements = g.MeasureString (barAnnotation.BarAnnotationText' font);  		int labelWidthMeasured = (int)measurements.Width;  		int labelHeightMeasured = (int)measurements.Height;  		int x = barXshadow - labelWidthMeasured / 2;  		int xPadding = barAnnotation.ShouldDrawBackground ? paddingFromSettings : 0;  		// WEIRD_BUT_IF_I_DONT_INCLUDE_PADDING_WHO_LABELS_WITH_AND_WITHOUTH_PADDING_ARE_PERFECTLY_CENTER_ALIGNED -= xPadding;  		int y = barAnnotation.AboveBar ? yForLabelsAbove - labelHeightMeasured : yForLabelsBelow;  		if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  			string msg = "PREVENT_Y_BEYOUND_VISIBLE_DUE_TO_EXCEEDED_BAR_ANNOTATION_PADDING (due to barAnnotation.VerticalPaddingPx = Int32.MaxValue)";  			y = barAnnotation.AboveBar ? verticalOffsetForNextStackedAnnotationsAboveSameBar : this.PanelHeightMinusGutterBottomHeight_cached - labelHeightMeasured - verticalOffsetForMextStackedAnnotationsBelowSameBar - 3;  			if (barAnnotation.AboveBar)  				verticalOffsetForNextStackedAnnotationsAboveSameBar += labelHeightMeasured;  			else  				verticalOffsetForMextStackedAnnotationsBelowSameBar += labelHeightMeasured;  			//					} else {  			//						if (verticalPaddingDueToManyStackedAnnotationsAboveSameBar > 0) {  			//							string msg = "TESTME_WHEN_REASONABLE_PADDING_MIXED_WITH_INT.MAXVALUE_FOR_SAME_BAR";  			//							Assembler.PopupException(msg);  			//						}  		}  		int yPadding = 0;  		if (barAnnotation.ShouldDrawBackground) {  			yPadding += barAnnotation.AboveBar ? -paddingFromSettings * 2 : paddingFromSettings;  		}  		y += yPadding;  		if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  			if (barAnnotation.AboveBar)  				verticalOffsetForNextStackedAnnotationsAboveSameBar += yPadding;  			else  				verticalOffsetForMextStackedAnnotationsBelowSameBar += yPadding;  		} else {  			y += (barAnnotation.AboveBar) ? -barAnnotation.VerticalPaddingPx : barAnnotation.VerticalPaddingPx;  		}  		base.DrawLabel (g' x' y' barAnnotation.BarAnnotationText' barAnnotation.Font' barAnnotation.ColorForeground' barAnnotation.ColorBackground' false);  		int labelHeightWithPadding = labelHeightMeasured;  		if (barAnnotation.ShouldDrawBackground) {  			labelHeightWithPadding += paddingFromSettings * 2;  		}  		if (barAnnotation.AboveBar) {  			yForLabelsAbove -= labelHeightWithPadding;  		} else {  			yForLabelsBelow += labelHeightWithPadding;  		}  	}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: for (int barIndex = base.VisibleBarRight_cached; barIndex > base.VisibleBarLeft_cached; barIndex--) {  	if (barIndex >= base.ChartControl.Bars.Count) {  		// we want to display 0..64' but Bars has only 10 bars inside  		string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)";  		Assembler.PopupException ("MOVE_THIS_CHECK_UPSTACK renderBarsPrice(): " + msg);  		continue;  	}  	barXshadow -= base.BarWidthIncludingPadding_cached;  	if (eoFrozen.OnChartBarAnnotationsByBar.ContainsKey (barIndex) == false)  		continue;  	Bar bar = base.ChartControl.Bars [barIndex];  	int yForLabelsAbove = base.ValueToYinverted (bar.High);  	int yForLabelsBelow = base.ValueToYinverted (bar.Low);  	int paddingFromSettings = base.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding;  	// UNCLUTTER_ADD_POSITIONS_ARROWS_OFFSET begin  	Dictionary<int' List<AlertArrow>> alertArrowsListByBar = base.ChartControl.ExecutorObjects_frozenForRendering.AlertArrowsListByBar;  	if (alertArrowsListByBar.ContainsKey (barIndex)) {  		List<AlertArrow> arrows = alertArrowsListByBar [barIndex];  		foreach (AlertArrow arrow in arrows) {  			int arrowHeight = arrow.Height + base.ChartControl.ChartSettings.PositionArrowPaddingVertical;  			if (arrow.AboveBar)  				yForLabelsAbove -= arrowHeight + base.ChartControl.ChartSettings.PositionArrowPaddingVertical;  			else  				yForLabelsBelow += arrowHeight;  		}  	}  	// UNCLUTTER_ADD_POSITIONS_ARROWS_OFFSET end  	int verticalOffsetForNextStackedAnnotationsAboveSameBar = 0;  	int verticalOffsetForMextStackedAnnotationsBelowSameBar = 0;  	SortedDictionary<string' OnChartBarAnnotation> barAnnotationsById = eoFrozen.OnChartBarAnnotationsByBar [barIndex];  	foreach (OnChartBarAnnotation barAnnotation in barAnnotationsById.Values) {  		//DUPLICATION copypaste from DrawLabel  		Font font = (barAnnotation.Font != null) ? barAnnotation.Font : base.Font;  		SizeF measurements = g.MeasureString (barAnnotation.BarAnnotationText' font);  		int labelWidthMeasured = (int)measurements.Width;  		int labelHeightMeasured = (int)measurements.Height;  		int x = barXshadow - labelWidthMeasured / 2;  		int xPadding = barAnnotation.ShouldDrawBackground ? paddingFromSettings : 0;  		// WEIRD_BUT_IF_I_DONT_INCLUDE_PADDING_WHO_LABELS_WITH_AND_WITHOUTH_PADDING_ARE_PERFECTLY_CENTER_ALIGNED -= xPadding;  		int y = barAnnotation.AboveBar ? yForLabelsAbove - labelHeightMeasured : yForLabelsBelow;  		if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  			string msg = "PREVENT_Y_BEYOUND_VISIBLE_DUE_TO_EXCEEDED_BAR_ANNOTATION_PADDING (due to barAnnotation.VerticalPaddingPx = Int32.MaxValue)";  			y = barAnnotation.AboveBar ? verticalOffsetForNextStackedAnnotationsAboveSameBar : this.PanelHeightMinusGutterBottomHeight_cached - labelHeightMeasured - verticalOffsetForMextStackedAnnotationsBelowSameBar - 3;  			if (barAnnotation.AboveBar)  				verticalOffsetForNextStackedAnnotationsAboveSameBar += labelHeightMeasured;  			else  				verticalOffsetForMextStackedAnnotationsBelowSameBar += labelHeightMeasured;  			//					} else {  			//						if (verticalPaddingDueToManyStackedAnnotationsAboveSameBar > 0) {  			//							string msg = "TESTME_WHEN_REASONABLE_PADDING_MIXED_WITH_INT.MAXVALUE_FOR_SAME_BAR";  			//							Assembler.PopupException(msg);  			//						}  		}  		int yPadding = 0;  		if (barAnnotation.ShouldDrawBackground) {  			yPadding += barAnnotation.AboveBar ? -paddingFromSettings * 2 : paddingFromSettings;  		}  		y += yPadding;  		if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  			if (barAnnotation.AboveBar)  				verticalOffsetForNextStackedAnnotationsAboveSameBar += yPadding;  			else  				verticalOffsetForMextStackedAnnotationsBelowSameBar += yPadding;  		} else {  			y += (barAnnotation.AboveBar) ? -barAnnotation.VerticalPaddingPx : barAnnotation.VerticalPaddingPx;  		}  		base.DrawLabel (g' x' y' barAnnotation.BarAnnotationText' barAnnotation.Font' barAnnotation.ColorForeground' barAnnotation.ColorBackground' false);  		int labelHeightWithPadding = labelHeightMeasured;  		if (barAnnotation.ShouldDrawBackground) {  			labelHeightWithPadding += paddingFromSettings * 2;  		}  		if (barAnnotation.AboveBar) {  			yForLabelsAbove -= labelHeightWithPadding;  		} else {  			yForLabelsBelow += labelHeightWithPadding;  		}  	}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: for (int barIndex = base.VisibleBarRight_cached; barIndex > base.VisibleBarLeft_cached; barIndex--) {  	if (barIndex >= base.ChartControl.Bars.Count) {  		// we want to display 0..64' but Bars has only 10 bars inside  		string msg = "YOU_SHOULD_INVOKE_SyncHorizontalScrollToBarsCount_PRIOR_TO_RENDERING_I_DONT_KNOW_ITS_NOT_SYNCED_AFTER_ChartControl.Initialize(Bars)";  		Assembler.PopupException ("MOVE_THIS_CHECK_UPSTACK renderBarsPrice(): " + msg);  		continue;  	}  	barXshadow -= base.BarWidthIncludingPadding_cached;  	if (eoFrozen.OnChartBarAnnotationsByBar.ContainsKey (barIndex) == false)  		continue;  	Bar bar = base.ChartControl.Bars [barIndex];  	int yForLabelsAbove = base.ValueToYinverted (bar.High);  	int yForLabelsBelow = base.ValueToYinverted (bar.Low);  	int paddingFromSettings = base.ChartControl.ChartSettings.ChartLabelsUpperLeftPlatePadding;  	// UNCLUTTER_ADD_POSITIONS_ARROWS_OFFSET begin  	Dictionary<int' List<AlertArrow>> alertArrowsListByBar = base.ChartControl.ExecutorObjects_frozenForRendering.AlertArrowsListByBar;  	if (alertArrowsListByBar.ContainsKey (barIndex)) {  		List<AlertArrow> arrows = alertArrowsListByBar [barIndex];  		foreach (AlertArrow arrow in arrows) {  			int arrowHeight = arrow.Height + base.ChartControl.ChartSettings.PositionArrowPaddingVertical;  			if (arrow.AboveBar)  				yForLabelsAbove -= arrowHeight + base.ChartControl.ChartSettings.PositionArrowPaddingVertical;  			else  				yForLabelsBelow += arrowHeight;  		}  	}  	// UNCLUTTER_ADD_POSITIONS_ARROWS_OFFSET end  	int verticalOffsetForNextStackedAnnotationsAboveSameBar = 0;  	int verticalOffsetForMextStackedAnnotationsBelowSameBar = 0;  	SortedDictionary<string' OnChartBarAnnotation> barAnnotationsById = eoFrozen.OnChartBarAnnotationsByBar [barIndex];  	foreach (OnChartBarAnnotation barAnnotation in barAnnotationsById.Values) {  		//DUPLICATION copypaste from DrawLabel  		Font font = (barAnnotation.Font != null) ? barAnnotation.Font : base.Font;  		SizeF measurements = g.MeasureString (barAnnotation.BarAnnotationText' font);  		int labelWidthMeasured = (int)measurements.Width;  		int labelHeightMeasured = (int)measurements.Height;  		int x = barXshadow - labelWidthMeasured / 2;  		int xPadding = barAnnotation.ShouldDrawBackground ? paddingFromSettings : 0;  		// WEIRD_BUT_IF_I_DONT_INCLUDE_PADDING_WHO_LABELS_WITH_AND_WITHOUTH_PADDING_ARE_PERFECTLY_CENTER_ALIGNED -= xPadding;  		int y = barAnnotation.AboveBar ? yForLabelsAbove - labelHeightMeasured : yForLabelsBelow;  		if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  			string msg = "PREVENT_Y_BEYOUND_VISIBLE_DUE_TO_EXCEEDED_BAR_ANNOTATION_PADDING (due to barAnnotation.VerticalPaddingPx = Int32.MaxValue)";  			y = barAnnotation.AboveBar ? verticalOffsetForNextStackedAnnotationsAboveSameBar : this.PanelHeightMinusGutterBottomHeight_cached - labelHeightMeasured - verticalOffsetForMextStackedAnnotationsBelowSameBar - 3;  			if (barAnnotation.AboveBar)  				verticalOffsetForNextStackedAnnotationsAboveSameBar += labelHeightMeasured;  			else  				verticalOffsetForMextStackedAnnotationsBelowSameBar += labelHeightMeasured;  			//					} else {  			//						if (verticalPaddingDueToManyStackedAnnotationsAboveSameBar > 0) {  			//							string msg = "TESTME_WHEN_REASONABLE_PADDING_MIXED_WITH_INT.MAXVALUE_FOR_SAME_BAR";  			//							Assembler.PopupException(msg);  			//						}  		}  		int yPadding = 0;  		if (barAnnotation.ShouldDrawBackground) {  			yPadding += barAnnotation.AboveBar ? -paddingFromSettings * 2 : paddingFromSettings;  		}  		y += yPadding;  		if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  			if (barAnnotation.AboveBar)  				verticalOffsetForNextStackedAnnotationsAboveSameBar += yPadding;  			else  				verticalOffsetForMextStackedAnnotationsBelowSameBar += yPadding;  		} else {  			y += (barAnnotation.AboveBar) ? -barAnnotation.VerticalPaddingPx : barAnnotation.VerticalPaddingPx;  		}  		base.DrawLabel (g' x' y' barAnnotation.BarAnnotationText' barAnnotation.Font' barAnnotation.ColorForeground' barAnnotation.ColorBackground' false);  		int labelHeightWithPadding = labelHeightMeasured;  		if (barAnnotation.ShouldDrawBackground) {  			labelHeightWithPadding += paddingFromSettings * 2;  		}  		if (barAnnotation.AboveBar) {  			yForLabelsAbove -= labelHeightWithPadding;  		} else {  			yForLabelsBelow += labelHeightWithPadding;  		}  	}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: foreach (OnChartBarAnnotation barAnnotation in barAnnotationsById.Values) {  	//DUPLICATION copypaste from DrawLabel  	Font font = (barAnnotation.Font != null) ? barAnnotation.Font : base.Font;  	SizeF measurements = g.MeasureString (barAnnotation.BarAnnotationText' font);  	int labelWidthMeasured = (int)measurements.Width;  	int labelHeightMeasured = (int)measurements.Height;  	int x = barXshadow - labelWidthMeasured / 2;  	int xPadding = barAnnotation.ShouldDrawBackground ? paddingFromSettings : 0;  	// WEIRD_BUT_IF_I_DONT_INCLUDE_PADDING_WHO_LABELS_WITH_AND_WITHOUTH_PADDING_ARE_PERFECTLY_CENTER_ALIGNED -= xPadding;  	int y = barAnnotation.AboveBar ? yForLabelsAbove - labelHeightMeasured : yForLabelsBelow;  	if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  		string msg = "PREVENT_Y_BEYOUND_VISIBLE_DUE_TO_EXCEEDED_BAR_ANNOTATION_PADDING (due to barAnnotation.VerticalPaddingPx = Int32.MaxValue)";  		y = barAnnotation.AboveBar ? verticalOffsetForNextStackedAnnotationsAboveSameBar : this.PanelHeightMinusGutterBottomHeight_cached - labelHeightMeasured - verticalOffsetForMextStackedAnnotationsBelowSameBar - 3;  		if (barAnnotation.AboveBar)  			verticalOffsetForNextStackedAnnotationsAboveSameBar += labelHeightMeasured;  		else  			verticalOffsetForMextStackedAnnotationsBelowSameBar += labelHeightMeasured;  		//					} else {  		//						if (verticalPaddingDueToManyStackedAnnotationsAboveSameBar > 0) {  		//							string msg = "TESTME_WHEN_REASONABLE_PADDING_MIXED_WITH_INT.MAXVALUE_FOR_SAME_BAR";  		//							Assembler.PopupException(msg);  		//						}  	}  	int yPadding = 0;  	if (barAnnotation.ShouldDrawBackground) {  		yPadding += barAnnotation.AboveBar ? -paddingFromSettings * 2 : paddingFromSettings;  	}  	y += yPadding;  	if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  		if (barAnnotation.AboveBar)  			verticalOffsetForNextStackedAnnotationsAboveSameBar += yPadding;  		else  			verticalOffsetForMextStackedAnnotationsBelowSameBar += yPadding;  	} else {  		y += (barAnnotation.AboveBar) ? -barAnnotation.VerticalPaddingPx : barAnnotation.VerticalPaddingPx;  	}  	base.DrawLabel (g' x' y' barAnnotation.BarAnnotationText' barAnnotation.Font' barAnnotation.ColorForeground' barAnnotation.ColorBackground' false);  	int labelHeightWithPadding = labelHeightMeasured;  	if (barAnnotation.ShouldDrawBackground) {  		labelHeightWithPadding += paddingFromSettings * 2;  	}  	if (barAnnotation.AboveBar) {  		yForLabelsAbove -= labelHeightWithPadding;  	} else {  		yForLabelsBelow += labelHeightWithPadding;  	}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: foreach (OnChartBarAnnotation barAnnotation in barAnnotationsById.Values) {  	//DUPLICATION copypaste from DrawLabel  	Font font = (barAnnotation.Font != null) ? barAnnotation.Font : base.Font;  	SizeF measurements = g.MeasureString (barAnnotation.BarAnnotationText' font);  	int labelWidthMeasured = (int)measurements.Width;  	int labelHeightMeasured = (int)measurements.Height;  	int x = barXshadow - labelWidthMeasured / 2;  	int xPadding = barAnnotation.ShouldDrawBackground ? paddingFromSettings : 0;  	// WEIRD_BUT_IF_I_DONT_INCLUDE_PADDING_WHO_LABELS_WITH_AND_WITHOUTH_PADDING_ARE_PERFECTLY_CENTER_ALIGNED -= xPadding;  	int y = barAnnotation.AboveBar ? yForLabelsAbove - labelHeightMeasured : yForLabelsBelow;  	if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  		string msg = "PREVENT_Y_BEYOUND_VISIBLE_DUE_TO_EXCEEDED_BAR_ANNOTATION_PADDING (due to barAnnotation.VerticalPaddingPx = Int32.MaxValue)";  		y = barAnnotation.AboveBar ? verticalOffsetForNextStackedAnnotationsAboveSameBar : this.PanelHeightMinusGutterBottomHeight_cached - labelHeightMeasured - verticalOffsetForMextStackedAnnotationsBelowSameBar - 3;  		if (barAnnotation.AboveBar)  			verticalOffsetForNextStackedAnnotationsAboveSameBar += labelHeightMeasured;  		else  			verticalOffsetForMextStackedAnnotationsBelowSameBar += labelHeightMeasured;  		//					} else {  		//						if (verticalPaddingDueToManyStackedAnnotationsAboveSameBar > 0) {  		//							string msg = "TESTME_WHEN_REASONABLE_PADDING_MIXED_WITH_INT.MAXVALUE_FOR_SAME_BAR";  		//							Assembler.PopupException(msg);  		//						}  	}  	int yPadding = 0;  	if (barAnnotation.ShouldDrawBackground) {  		yPadding += barAnnotation.AboveBar ? -paddingFromSettings * 2 : paddingFromSettings;  	}  	y += yPadding;  	if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  		if (barAnnotation.AboveBar)  			verticalOffsetForNextStackedAnnotationsAboveSameBar += yPadding;  		else  			verticalOffsetForMextStackedAnnotationsBelowSameBar += yPadding;  	} else {  		y += (barAnnotation.AboveBar) ? -barAnnotation.VerticalPaddingPx : barAnnotation.VerticalPaddingPx;  	}  	base.DrawLabel (g' x' y' barAnnotation.BarAnnotationText' barAnnotation.Font' barAnnotation.ColorForeground' barAnnotation.ColorBackground' false);  	int labelHeightWithPadding = labelHeightMeasured;  	if (barAnnotation.ShouldDrawBackground) {  		labelHeightWithPadding += paddingFromSettings * 2;  	}  	if (barAnnotation.AboveBar) {  		yForLabelsAbove -= labelHeightWithPadding;  	} else {  		yForLabelsBelow += labelHeightWithPadding;  	}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: foreach (OnChartBarAnnotation barAnnotation in barAnnotationsById.Values) {  	//DUPLICATION copypaste from DrawLabel  	Font font = (barAnnotation.Font != null) ? barAnnotation.Font : base.Font;  	SizeF measurements = g.MeasureString (barAnnotation.BarAnnotationText' font);  	int labelWidthMeasured = (int)measurements.Width;  	int labelHeightMeasured = (int)measurements.Height;  	int x = barXshadow - labelWidthMeasured / 2;  	int xPadding = barAnnotation.ShouldDrawBackground ? paddingFromSettings : 0;  	// WEIRD_BUT_IF_I_DONT_INCLUDE_PADDING_WHO_LABELS_WITH_AND_WITHOUTH_PADDING_ARE_PERFECTLY_CENTER_ALIGNED -= xPadding;  	int y = barAnnotation.AboveBar ? yForLabelsAbove - labelHeightMeasured : yForLabelsBelow;  	if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  		string msg = "PREVENT_Y_BEYOUND_VISIBLE_DUE_TO_EXCEEDED_BAR_ANNOTATION_PADDING (due to barAnnotation.VerticalPaddingPx = Int32.MaxValue)";  		y = barAnnotation.AboveBar ? verticalOffsetForNextStackedAnnotationsAboveSameBar : this.PanelHeightMinusGutterBottomHeight_cached - labelHeightMeasured - verticalOffsetForMextStackedAnnotationsBelowSameBar - 3;  		if (barAnnotation.AboveBar)  			verticalOffsetForNextStackedAnnotationsAboveSameBar += labelHeightMeasured;  		else  			verticalOffsetForMextStackedAnnotationsBelowSameBar += labelHeightMeasured;  		//					} else {  		//						if (verticalPaddingDueToManyStackedAnnotationsAboveSameBar > 0) {  		//							string msg = "TESTME_WHEN_REASONABLE_PADDING_MIXED_WITH_INT.MAXVALUE_FOR_SAME_BAR";  		//							Assembler.PopupException(msg);  		//						}  	}  	int yPadding = 0;  	if (barAnnotation.ShouldDrawBackground) {  		yPadding += barAnnotation.AboveBar ? -paddingFromSettings * 2 : paddingFromSettings;  	}  	y += yPadding;  	if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  		if (barAnnotation.AboveBar)  			verticalOffsetForNextStackedAnnotationsAboveSameBar += yPadding;  		else  			verticalOffsetForMextStackedAnnotationsBelowSameBar += yPadding;  	} else {  		y += (barAnnotation.AboveBar) ? -barAnnotation.VerticalPaddingPx : barAnnotation.VerticalPaddingPx;  	}  	base.DrawLabel (g' x' y' barAnnotation.BarAnnotationText' barAnnotation.Font' barAnnotation.ColorForeground' barAnnotation.ColorBackground' false);  	int labelHeightWithPadding = labelHeightMeasured;  	if (barAnnotation.ShouldDrawBackground) {  		labelHeightWithPadding += paddingFromSettings * 2;  	}  	if (barAnnotation.AboveBar) {  		yForLabelsAbove -= labelHeightWithPadding;  	} else {  		yForLabelsBelow += labelHeightWithPadding;  	}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: foreach (OnChartBarAnnotation barAnnotation in barAnnotationsById.Values) {  	//DUPLICATION copypaste from DrawLabel  	Font font = (barAnnotation.Font != null) ? barAnnotation.Font : base.Font;  	SizeF measurements = g.MeasureString (barAnnotation.BarAnnotationText' font);  	int labelWidthMeasured = (int)measurements.Width;  	int labelHeightMeasured = (int)measurements.Height;  	int x = barXshadow - labelWidthMeasured / 2;  	int xPadding = barAnnotation.ShouldDrawBackground ? paddingFromSettings : 0;  	// WEIRD_BUT_IF_I_DONT_INCLUDE_PADDING_WHO_LABELS_WITH_AND_WITHOUTH_PADDING_ARE_PERFECTLY_CENTER_ALIGNED -= xPadding;  	int y = barAnnotation.AboveBar ? yForLabelsAbove - labelHeightMeasured : yForLabelsBelow;  	if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  		string msg = "PREVENT_Y_BEYOUND_VISIBLE_DUE_TO_EXCEEDED_BAR_ANNOTATION_PADDING (due to barAnnotation.VerticalPaddingPx = Int32.MaxValue)";  		y = barAnnotation.AboveBar ? verticalOffsetForNextStackedAnnotationsAboveSameBar : this.PanelHeightMinusGutterBottomHeight_cached - labelHeightMeasured - verticalOffsetForMextStackedAnnotationsBelowSameBar - 3;  		if (barAnnotation.AboveBar)  			verticalOffsetForNextStackedAnnotationsAboveSameBar += labelHeightMeasured;  		else  			verticalOffsetForMextStackedAnnotationsBelowSameBar += labelHeightMeasured;  		//					} else {  		//						if (verticalPaddingDueToManyStackedAnnotationsAboveSameBar > 0) {  		//							string msg = "TESTME_WHEN_REASONABLE_PADDING_MIXED_WITH_INT.MAXVALUE_FOR_SAME_BAR";  		//							Assembler.PopupException(msg);  		//						}  	}  	int yPadding = 0;  	if (barAnnotation.ShouldDrawBackground) {  		yPadding += barAnnotation.AboveBar ? -paddingFromSettings * 2 : paddingFromSettings;  	}  	y += yPadding;  	if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  		if (barAnnotation.AboveBar)  			verticalOffsetForNextStackedAnnotationsAboveSameBar += yPadding;  		else  			verticalOffsetForMextStackedAnnotationsBelowSameBar += yPadding;  	} else {  		y += (barAnnotation.AboveBar) ? -barAnnotation.VerticalPaddingPx : barAnnotation.VerticalPaddingPx;  	}  	base.DrawLabel (g' x' y' barAnnotation.BarAnnotationText' barAnnotation.Font' barAnnotation.ColorForeground' barAnnotation.ColorBackground' false);  	int labelHeightWithPadding = labelHeightMeasured;  	if (barAnnotation.ShouldDrawBackground) {  		labelHeightWithPadding += paddingFromSettings * 2;  	}  	if (barAnnotation.AboveBar) {  		yForLabelsAbove -= labelHeightWithPadding;  	} else {  		yForLabelsBelow += labelHeightWithPadding;  	}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: if (barAnnotation.VerticalPaddingPx == Int32.MaxValue) {  	string msg = "PREVENT_Y_BEYOUND_VISIBLE_DUE_TO_EXCEEDED_BAR_ANNOTATION_PADDING (due to barAnnotation.VerticalPaddingPx = Int32.MaxValue)";  	y = barAnnotation.AboveBar ? verticalOffsetForNextStackedAnnotationsAboveSameBar : this.PanelHeightMinusGutterBottomHeight_cached - labelHeightMeasured - verticalOffsetForMextStackedAnnotationsBelowSameBar - 3;  	if (barAnnotation.AboveBar)  		verticalOffsetForNextStackedAnnotationsAboveSameBar += labelHeightMeasured;  	else  		verticalOffsetForMextStackedAnnotationsBelowSameBar += labelHeightMeasured;  	//					} else {  	//						if (verticalPaddingDueToManyStackedAnnotationsAboveSameBar > 0) {  	//							string msg = "TESTME_WHEN_REASONABLE_PADDING_MIXED_WITH_INT.MAXVALUE_FOR_SAME_BAR";  	//							Assembler.PopupException(msg);  	//						}  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: y = barAnnotation.AboveBar ? verticalOffsetForNextStackedAnnotationsAboveSameBar : this.PanelHeightMinusGutterBottomHeight_cached - labelHeightMeasured - verticalOffsetForMextStackedAnnotationsBelowSameBar - 3;  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: if (barAnnotation.ShouldDrawBackground) {  	yPadding += barAnnotation.AboveBar ? -paddingFromSettings * 2 : paddingFromSettings;  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: yPadding += barAnnotation.AboveBar ? -paddingFromSettings * 2 : paddingFromSettings;  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: if (barAnnotation.ShouldDrawBackground) {  	labelHeightWithPadding += paddingFromSettings * 2;  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderOnChartBarAnnotations,The following statement contains a magic number: labelHeightWithPadding += paddingFromSettings * 2;  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderBidAsk,The following statement contains a magic number: if (double.IsNaN (spread) == false && base.ChartControl.ChartSettings.SpreadLabelColor != Color.Empty) {  	string spreadFormatted = spread.ToString (this.PriceFormat);  	g.DrawString ("spread[" + spreadFormatted + "]"' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushSpreadLabel' 5' yBid + 3);  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderBidAsk,The following statement contains a magic number: if (double.IsNaN (spread) == false && base.ChartControl.ChartSettings.SpreadLabelColor != Color.Empty) {  	string spreadFormatted = spread.ToString (this.PriceFormat);  	g.DrawString ("spread[" + spreadFormatted + "]"' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushSpreadLabel' 5' yBid + 3);  }  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderBidAsk,The following statement contains a magic number: g.DrawString ("spread[" + spreadFormatted + "]"' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushSpreadLabel' 5' yBid + 3);  
Magic Number,Sq1.Charting,PanelPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelPrice.cs,renderBidAsk,The following statement contains a magic number: g.DrawString ("spread[" + spreadFormatted + "]"' base.ChartControl.ChartSettings.SpreadLabelFont' base.ChartControl.ChartSettings.BrushSpreadLabel' 5' yBid + 3);  
Magic Number,Sq1.Charting,PanelVolume,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelVolume.cs,PanelVolume,The following statement contains a magic number: base.MinimumSize = new Size (20' 15);  
Magic Number,Sq1.Charting,PanelVolume,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelVolume.cs,PanelVolume,The following statement contains a magic number: base.MinimumSize = new Size (20' 15);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid1.Location = new System.Drawing.Point (0' -27);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid1.Size = new System.Drawing.Size (234' 605);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.propertyGrid1.Size = new System.Drawing.Size (234' 605);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Location = new System.Drawing.Point (0' 515);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Size = new System.Drawing.Size (234' 25);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Size = new System.Drawing.Size (234' 25);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.TabIndex = 2;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.cbxSettings.Size = new System.Drawing.Size (160' 23);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.cbxSettings.Size = new System.Drawing.Size (160' 23);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniAbsorbFromChart.Size = new System.Drawing.Size (75' 23);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniAbsorbFromChart.Size = new System.Drawing.Size (75' 23);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.ctxTemplates.Size = new System.Drawing.Size (61' 4);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.ctxTemplates.Size = new System.Drawing.Size (61' 4);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem5.Size = new System.Drawing.Size (181' 22);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem5.Size = new System.Drawing.Size (181' 22);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.ctxTemplateActions.MinimumSize = new System.Drawing.Size (300' 0);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.ctxTemplateActions.Size = new System.Drawing.Size (309' 156);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.ctxTemplateActions.Size = new System.Drawing.Size (309' 156);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniLoad.Size = new System.Drawing.Size (308' 22);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniLoad.Size = new System.Drawing.Size (308' 22);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbSaveCurrentAs.InputFieldOffsetX = 80;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbSaveCurrentAs.InputFieldWidth = 160;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbSaveCurrentAs.Size = new System.Drawing.Size (248' 21);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbSaveCurrentAs.Size = new System.Drawing.Size (248' 21);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbSaveCurrentAs.TextLeftWidth = 79;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbSaveCurrentAs.TextRightOffsetX = 243;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbSaveCurrentAs.TextRightWidth = 2;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size (305' 6);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size (305' 6);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbDuplicate.InputFieldOffsetX = 80;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbDuplicate.InputFieldWidth = 160;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbDuplicate.Size = new System.Drawing.Size (248' 21);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbDuplicate.Size = new System.Drawing.Size (248' 21);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbDuplicate.TextLeftWidth = 79;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbDuplicate.TextRightOffsetX = 243;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbDuplicate.TextRightWidth = 2;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbRenameTo.InputFieldOffsetX = 80;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbRenameTo.InputFieldWidth = 160;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbRenameTo.Size = new System.Drawing.Size (248' 21);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbRenameTo.Size = new System.Drawing.Size (248' 21);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbRenameTo.TextLeftWidth = 72;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbRenameTo.TextRightOffsetX = 243;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniltbRenameTo.TextRightWidth = 2;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size (305' 6);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size (305' 6);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniAddNew.InputFieldOffsetX = 80;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniAddNew.InputFieldWidth = 160;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniAddNew.Size = new System.Drawing.Size (248' 21);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniAddNew.Size = new System.Drawing.Size (248' 21);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniAddNew.TextLeftWidth = 61;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniAddNew.TextRightOffsetX = 243;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniAddNew.TextRightWidth = 2;  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniDelete.Size = new System.Drawing.Size (308' 22);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.mniDelete.Size = new System.Drawing.Size (308' 22);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (234' 540);  
Magic Number,Sq1.Charting,ChartSettingsEditorControl,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\ChartSettingsEditorControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (234' 540);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntry.Location = new System.Drawing.Point (2' 17);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntry.Location = new System.Drawing.Point (2' 17);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntry.Size = new System.Drawing.Size (61' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntry.Size = new System.Drawing.Size (61' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExit.Location = new System.Drawing.Point (2' 46);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExit.Location = new System.Drawing.Point (2' 46);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExit.Size = new System.Drawing.Size (73' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExit.Size = new System.Drawing.Size (73' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExit.TabIndex = 2;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDistancePoints.Location = new System.Drawing.Point (2' 78);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDistancePoints.Location = new System.Drawing.Point (2' 78);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDistancePoints.Size = new System.Drawing.Size (49' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDistancePoints.Size = new System.Drawing.Size (49' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDistancePoints.TabIndex = 3;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblShares.Location = new System.Drawing.Point (2' 91);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblShares.Location = new System.Drawing.Point (2' 91);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblShares.Size = new System.Drawing.Size (40' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblShares.Size = new System.Drawing.Size (40' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblShares.TabIndex = 4;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblNetProfitLoss.Location = new System.Drawing.Point (2' 131);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblNetProfitLoss.Location = new System.Drawing.Point (2' 131);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblNetProfitLoss.Size = new System.Drawing.Size (78' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblNetProfitLoss.Size = new System.Drawing.Size (78' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblNetProfitLoss.TabIndex = 5;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblCommission.Location = new System.Drawing.Point (2' 148);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblCommission.Location = new System.Drawing.Point (2' 148);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblCommission.Size = new System.Drawing.Size (66' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblCommission.Size = new System.Drawing.Size (66' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblCommission.TabIndex = 6;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDateVal.Size = new System.Drawing.Size (162' 15);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDateVal.Size = new System.Drawing.Size (162' 15);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDateVal.TabIndex = 7;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntryVal.Location = new System.Drawing.Point (85' 16);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntryVal.Location = new System.Drawing.Point (85' 16);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntryVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntryVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntryVal.TabIndex = 8;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExitVal.Location = new System.Drawing.Point (85' 46);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExitVal.Location = new System.Drawing.Point (85' 46);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExitVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExitVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExitVal.TabIndex = 9;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDistancePointsVal.Location = new System.Drawing.Point (85' 77);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDistancePointsVal.Location = new System.Drawing.Point (85' 77);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDistancePointsVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDistancePointsVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblDistancePointsVal.TabIndex = 10;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSharesVal.Location = new System.Drawing.Point (85' 90);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSharesVal.Location = new System.Drawing.Point (85' 90);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSharesVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSharesVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSharesVal.TabIndex = 11;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblNetProfitLossValue.Location = new System.Drawing.Point (85' 130);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblNetProfitLossValue.Location = new System.Drawing.Point (85' 130);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblNetProfitLossValue.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblNetProfitLossValue.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblNetProfitLossValue.TabIndex = 12;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblCommissionVal.Location = new System.Drawing.Point (88' 144);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblCommissionVal.Location = new System.Drawing.Point (88' 144);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblCommissionVal.Size = new System.Drawing.Size (47' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblCommissionVal.Size = new System.Drawing.Size (47' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblCommissionVal.TabIndex = 13;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblGrossProfitLossVal.Location = new System.Drawing.Point (85' 103);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblGrossProfitLossVal.Location = new System.Drawing.Point (85' 103);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblGrossProfitLossVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblGrossProfitLossVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblGrossProfitLossVal.TabIndex = 17;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblGrossProfitLoss.Location = new System.Drawing.Point (2' 104);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblGrossProfitLoss.Location = new System.Drawing.Point (2' 104);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblGrossProfitLoss.Size = new System.Drawing.Size (77' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblGrossProfitLoss.Size = new System.Drawing.Size (77' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblGrossProfitLoss.TabIndex = 16;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPoint2DollarVal.Location = new System.Drawing.Point (85' 116);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPoint2DollarVal.Location = new System.Drawing.Point (85' 116);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPoint2DollarVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPoint2DollarVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPoint2DollarVal.TabIndex = 31;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPoint2Dollar.Location = new System.Drawing.Point (2' 117);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPoint2Dollar.Location = new System.Drawing.Point (2' 117);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPoint2Dollar.Size = new System.Drawing.Size (64' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPoint2Dollar.Size = new System.Drawing.Size (64' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPoint2Dollar.TabIndex = 30;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPriceLevelSizeVal.Location = new System.Drawing.Point (88' 160);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPriceLevelSizeVal.Location = new System.Drawing.Point (88' 160);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPriceLevelSizeVal.Size = new System.Drawing.Size (47' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPriceLevelSizeVal.Size = new System.Drawing.Size (47' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPriceLevelSizeVal.TabIndex = 33;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPriceLevelSize.Location = new System.Drawing.Point (2' 161);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPriceLevelSize.Location = new System.Drawing.Point (2' 161);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPriceLevelSize.Size = new System.Drawing.Size (77' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPriceLevelSize.Size = new System.Drawing.Size (77' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblPriceLevelSize.TabIndex = 32;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblBasisPriceVal.Location = new System.Drawing.Point (85' 173);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblBasisPriceVal.Location = new System.Drawing.Point (85' 173);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblBasisPriceVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblBasisPriceVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblBasisPriceVal.TabIndex = 35;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblBasisPrice.Location = new System.Drawing.Point (2' 174);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblBasisPrice.Location = new System.Drawing.Point (2' 174);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblBasisPrice.Size = new System.Drawing.Size (56' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblBasisPrice.Size = new System.Drawing.Size (56' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblBasisPrice.TabIndex = 34;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSlippagesVal.Location = new System.Drawing.Point (85' 190);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSlippagesVal.Location = new System.Drawing.Point (85' 190);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSlippagesVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSlippagesVal.Size = new System.Drawing.Size (50' 14);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSlippagesVal.TabIndex = 37;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSlippages.Location = new System.Drawing.Point (2' 191);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSlippages.Location = new System.Drawing.Point (2' 191);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSlippages.Size = new System.Drawing.Size (53' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSlippages.Size = new System.Drawing.Size (53' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblSlippages.TabIndex = 36;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntrySignalVal.Location = new System.Drawing.Point (2' 31);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntrySignalVal.Location = new System.Drawing.Point (2' 31);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntrySignalVal.Size = new System.Drawing.Size (131' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntrySignalVal.Size = new System.Drawing.Size (131' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblEntrySignalVal.TabIndex = 38;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExitSignalVal.Location = new System.Drawing.Point (2' 60);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExitSignalVal.Location = new System.Drawing.Point (2' 60);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExitSignalVal.Size = new System.Drawing.Size (129' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExitSignalVal.Size = new System.Drawing.Size (129' 13);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.lblExitSignalVal.TabIndex = 39;  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (139' 215);  
Magic Number,Sq1.Charting,TooltipPosition,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPosition.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (139' 215);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOpen.Location = new System.Drawing.Point (3' 39);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOpen.Location = new System.Drawing.Point (3' 39);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOpen.Size = new System.Drawing.Size (33' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOpen.Size = new System.Drawing.Size (33' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHigh.Location = new System.Drawing.Point (3' 52);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHigh.Location = new System.Drawing.Point (3' 52);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHigh.Size = new System.Drawing.Size (29' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHigh.Size = new System.Drawing.Size (29' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHigh.TabIndex = 2;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblLow.Location = new System.Drawing.Point (3' 65);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblLow.Location = new System.Drawing.Point (3' 65);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblLow.Size = new System.Drawing.Size (27' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblLow.Size = new System.Drawing.Size (27' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblLow.TabIndex = 3;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblClose.Location = new System.Drawing.Point (3' 78);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblClose.Location = new System.Drawing.Point (3' 78);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblClose.Size = new System.Drawing.Size (33' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblClose.Size = new System.Drawing.Size (33' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblClose.TabIndex = 4;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHeaderVal.Padding = new System.Windows.Forms.Padding (2);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHeaderVal.Size = new System.Drawing.Size (117' 16);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHeaderVal.Size = new System.Drawing.Size (117' 16);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHeaderVal.TabIndex = 7;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOpenVal.Location = new System.Drawing.Point (54' 38);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOpenVal.Location = new System.Drawing.Point (54' 38);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOpenVal.Size = new System.Drawing.Size (57' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOpenVal.Size = new System.Drawing.Size (57' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOpenVal.TabIndex = 8;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHighVal.Location = new System.Drawing.Point (54' 52);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHighVal.Location = new System.Drawing.Point (54' 52);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHighVal.Size = new System.Drawing.Size (57' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHighVal.Size = new System.Drawing.Size (57' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblHighVal.TabIndex = 9;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblLowVal.Location = new System.Drawing.Point (54' 64);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblLowVal.Location = new System.Drawing.Point (54' 64);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblLowVal.Size = new System.Drawing.Size (57' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblLowVal.Size = new System.Drawing.Size (57' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblLowVal.TabIndex = 10;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblCloseVal.Location = new System.Drawing.Point (54' 77);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblCloseVal.Location = new System.Drawing.Point (54' 77);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblCloseVal.Size = new System.Drawing.Size (57' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblCloseVal.Size = new System.Drawing.Size (57' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblCloseVal.TabIndex = 11;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblVolumeVal.Location = new System.Drawing.Point (54' 97);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblVolumeVal.Location = new System.Drawing.Point (54' 97);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblVolumeVal.Size = new System.Drawing.Size (57' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblVolumeVal.Size = new System.Drawing.Size (57' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblVolumeVal.TabIndex = 15;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblVolume.Location = new System.Drawing.Point (3' 97);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblVolume.Location = new System.Drawing.Point (3' 97);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblVolume.Size = new System.Drawing.Size (42' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblVolume.Size = new System.Drawing.Size (42' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblVolume.TabIndex = 14;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblDateValue.Location = new System.Drawing.Point (3' 18);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblDateValue.Location = new System.Drawing.Point (3' 18);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblDateValue.Size = new System.Drawing.Size (84' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblDateValue.Size = new System.Drawing.Size (84' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblDateValue.TabIndex = 17;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblDate.Location = new System.Drawing.Point (20' 173);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblDate.Location = new System.Drawing.Point (20' 173);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblDate.Size = new System.Drawing.Size (30' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblDate.Size = new System.Drawing.Size (30' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblDate.TabIndex = 16;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkAlertsVal.Location = new System.Drawing.Point (97' 0);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkAlertsVal.Size = new System.Drawing.Size (20' 16);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkAlertsVal.Size = new System.Drawing.Size (20' 16);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkAlertsVal.TabIndex = 19;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkAlerts.Location = new System.Drawing.Point (67' 146);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkAlerts.Location = new System.Drawing.Point (67' 146);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkAlerts.Size = new System.Drawing.Size (33' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkAlerts.Size = new System.Drawing.Size (33' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkAlerts.TabIndex = 18;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOrdersVal.Location = new System.Drawing.Point (20' 160);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOrdersVal.Location = new System.Drawing.Point (20' 160);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOrdersVal.Size = new System.Drawing.Size (41' 14);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOrdersVal.Size = new System.Drawing.Size (41' 14);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblOrdersVal.TabIndex = 21;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkOrders.Location = new System.Drawing.Point (67' 160);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkOrders.Location = new System.Drawing.Point (67' 160);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkOrders.Size = new System.Drawing.Size (38' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkOrders.Size = new System.Drawing.Size (38' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkOrders.TabIndex = 20;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblPositionsVal.Location = new System.Drawing.Point (23' 146);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblPositionsVal.Location = new System.Drawing.Point (23' 146);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblPositionsVal.Size = new System.Drawing.Size (38' 14);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblPositionsVal.Size = new System.Drawing.Size (38' 14);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lblPositionsVal.TabIndex = 23;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkPositions.Location = new System.Drawing.Point (67' 173);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkPositions.Location = new System.Drawing.Point (67' 173);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkPositions.Size = new System.Drawing.Size (49' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkPositions.Size = new System.Drawing.Size (49' 13);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.lnkPositions.TabIndex = 22;  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (116' 116);  
Magic Number,Sq1.Charting,TooltipPrice,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\TooltipPrice.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (116' 116);  
Magic Number,Sq1.Charting.Demo,ExceptionsForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\ExceptionsForm.cs,InitializeComponent,The following statement contains a magic number: this.ExceptionControl.Size = new System.Drawing.Size (612' 402);  
Magic Number,Sq1.Charting.Demo,ExceptionsForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\ExceptionsForm.cs,InitializeComponent,The following statement contains a magic number: this.ExceptionControl.Size = new System.Drawing.Size (612' 402);  
Magic Number,Sq1.Charting.Demo,ExceptionsForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\ExceptionsForm.cs,InitializeComponent,The following statement contains a magic number: this.ExceptionControl.TabIndex = 5;  
Magic Number,Sq1.Charting.Demo,ExceptionsForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\ExceptionsForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleBaseSize = new System.Drawing.Size (5' 13);  
Magic Number,Sq1.Charting.Demo,ExceptionsForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\ExceptionsForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleBaseSize = new System.Drawing.Size (5' 13);  
Magic Number,Sq1.Charting.Demo,ExceptionsForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\ExceptionsForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (612' 402);  
Magic Number,Sq1.Charting.Demo,ExceptionsForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\ExceptionsForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (612' 402);  
Magic Number,Sq1.Charting.Demo,ExceptionsForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\ExceptionsForm.cs,InitializeComponent,The following statement contains a magic number: this.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(204)));  
Magic Number,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The following statement contains a magic number: this.dockPanel1.Size = new System.Drawing.Size (627' 309);  
Magic Number,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The following statement contains a magic number: this.dockPanel1.Size = new System.Drawing.Size (627' 309);  
Magic Number,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (627' 309);  
Magic Number,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (627' 309);  
Magic Number,Sq1.Charting.Demo,TestDockedChart,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestDockedChart.cs,InitializeComponent,The following statement contains a magic number: this.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(204)));  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,TestMultiSplit,The following statement contains a magic number: this.multiSplitContainerOfPanelBase1.SplitterHeight = 20;  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,TestMultiSplit,The following statement contains a magic number: this.multiSplitContainer1.SplitterHeight = 20;  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitContainer1.Size = new System.Drawing.Size (461' 505);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitContainer1.Size = new System.Drawing.Size (461' 505);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point (186' 11);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point (186' 11);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size (220' 67);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size (220' 67);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel2.Location = new System.Drawing.Point (148' 57);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel2.Location = new System.Drawing.Point (148' 57);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel2.Size = new System.Drawing.Size (200' 100);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel2.Size = new System.Drawing.Size (200' 100);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel2.TabIndex = 2;  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel3.Location = new System.Drawing.Point (23' 30);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel3.Location = new System.Drawing.Point (23' 30);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel3.Size = new System.Drawing.Size (200' 100);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel3.Size = new System.Drawing.Size (200' 100);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel3.TabIndex = 3;  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel4.Location = new System.Drawing.Point (228' 250);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel4.Location = new System.Drawing.Point (228' 250);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel4.Size = new System.Drawing.Size (200' 100);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel4.Size = new System.Drawing.Size (200' 100);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel4.TabIndex = 4;  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitContainerOfPanelBase1.Location = new System.Drawing.Point (25' 317);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitContainerOfPanelBase1.Location = new System.Drawing.Point (25' 317);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitContainerOfPanelBase1.Size = new System.Drawing.Size (150' 150);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitContainerOfPanelBase1.Size = new System.Drawing.Size (150' 150);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitContainerOfPanelBase1.TabIndex = 5;  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel5.Location = new System.Drawing.Point (192' 356);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel5.Location = new System.Drawing.Point (192' 356);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel5.Size = new System.Drawing.Size (200' 100);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel5.Size = new System.Drawing.Size (200' 100);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel5.TabIndex = 5;  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel6.Location = new System.Drawing.Point (206' 285);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel6.Location = new System.Drawing.Point (206' 285);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel6.Size = new System.Drawing.Size (200' 100);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel6.Size = new System.Drawing.Size (200' 100);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.panel6.TabIndex = 6;  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (461' 505);  
Magic Number,Sq1.Charting.Demo,TestMultiSplit,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestMultiSplit.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (461' 505);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitRowsVolumePrice.Location = new System.Drawing.Point (93' 183);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitRowsVolumePrice.Location = new System.Drawing.Point (93' 183);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitRowsVolumePrice.Size = new System.Drawing.Size (293' 94);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitRowsVolumePrice.Size = new System.Drawing.Size (293' 94);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitRowsVolumePrice.TabIndex = 4;  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitColumns_Level2_AnotherMultisplit.Location = new System.Drawing.Point (12' 27);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitColumns_Level2_AnotherMultisplit.Location = new System.Drawing.Point (12' 27);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitColumns_Level2_AnotherMultisplit.Size = new System.Drawing.Size (75' 250);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitColumns_Level2_AnotherMultisplit.Size = new System.Drawing.Size (75' 250);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.multiSplitColumns_Level2_AnotherMultisplit.TabIndex = 3;  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.Location = new System.Drawing.Point (180' 129);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.Location = new System.Drawing.Point (180' 129);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.MinimumSize = new System.Drawing.Size (25' 25);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.MinimumSize = new System.Drawing.Size (25' 25);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.Size = new System.Drawing.Size (206' 48);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.Size = new System.Drawing.Size (206' 48);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelVolume.TabIndex = 2;  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelPrice.Location = new System.Drawing.Point (180' 27);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelPrice.Location = new System.Drawing.Point (180' 27);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelPrice.MinimumSize = new System.Drawing.Size (25' 25);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelPrice.MinimumSize = new System.Drawing.Size (25' 25);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelPrice.Size = new System.Drawing.Size (206' 96);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelPrice.Size = new System.Drawing.Size (206' 96);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelLevel2.Location = new System.Drawing.Point (93' 27);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelLevel2.Location = new System.Drawing.Point (93' 27);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelLevel2.MinimumSize = new System.Drawing.Size (55' 25);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelLevel2.MinimumSize = new System.Drawing.Size (55' 25);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelLevel2.Size = new System.Drawing.Size (81' 150);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.panelLevel2.Size = new System.Drawing.Size (81' 150);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.tooltipPrice1.Size = new System.Drawing.Size (116' 116);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.tooltipPrice1.Size = new System.Drawing.Size (116' 116);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (620' 332);  
Magic Number,Sq1.Charting.Demo,TestPanels,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestPanels.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (620' 332);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Location = new System.Drawing.Point (0' 223);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Size = new System.Drawing.Size (476' 22);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Size = new System.Drawing.Size (476' 22);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabel1.Size = new System.Drawing.Size (118' 17);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabel1.Size = new System.Drawing.Size (118' 17);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripProgressBar1.Size = new System.Drawing.Size (100' 16);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripProgressBar1.Size = new System.Drawing.Size (100' 16);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripDropDownButton1.Size = new System.Drawing.Size (180' 20);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripDropDownButton1.Size = new System.Drawing.Size (180' 20);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.item3ToolStripMenuItem.Size = new System.Drawing.Size (104' 22);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.item3ToolStripMenuItem.Size = new System.Drawing.Size (104' 22);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.item2ToolStripMenuItem.Size = new System.Drawing.Size (104' 22);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.item2ToolStripMenuItem.Size = new System.Drawing.Size (104' 22);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.item1ToolStripMenuItem.Size = new System.Drawing.Size (104' 22);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.item1ToolStripMenuItem.Size = new System.Drawing.Size (104' 22);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.chartControl1.Padding = new System.Windows.Forms.Padding (0' 0' 0' 22);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.chartControl1.Size = new System.Drawing.Size (476' 245);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.chartControl1.Size = new System.Drawing.Size (476' 245);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (476' 245);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (476' 245);  
Magic Number,Sq1.Charting.Demo,TestChartForm,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\Demo\TestChartForm.cs,InitializeComponent,The following statement contains a magic number: this.Font = new System.Drawing.Font ("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(204)));  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,MultiSplitContainerGeneric,The following statement contains a magic number: SplitterHeight = 6;  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,MultiSplitContainerGeneric,The following statement contains a magic number: GrabHandleWidth = 30;  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,MultiSplitContainerGeneric,The following statement contains a magic number: MinimumPanelHeight = 5;  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,OnPaintDoubleBuffered,The following statement contains a magic number: try {  	for (int i = 0; i < this.panels.Count; i++) {  		//Control panel = this.panels[i];  		//panel.Invalidate();	// base.OnPaint() did it already  		if (i >= this.splitters.Count) {  			string msg = "YOU_GOT_MORE_(DESERIALIZED)_SPLITTERS_THAN_PANELS__MUST_BE_EQUAL  //MultiSplitContainerGeneric<PANEL_BASE>.OnPaint()";  			Assembler.PopupException (msg);  			continue;  		}  		MultiSplitter splitter = this.splitters [i];  		if (i == this.panelMouseIsOverNowIndexDropTarget) {  			// USING_NON_DOUBLE_BUFFERED_TO_PAINT_RED_SPLITTER_BACKGROUND_ON_DRAGGING_USING_GRIP...  			splitter.BackColor = ColorBackgroundSliderDroppingTarget;  		} else {  			splitter.BackColor = ColorBackgroundSliderRegular;  		}  		//splitter.Invalidate();  	}  	Point location = new Point (40' 10);  	e.Graphics.DrawString (this.panelText' this.Font' SystemBrushes.ControlText' location);  } catch (Exception ex) {  	string msg = "CONTROL.INVALIDATE()_IS_VERY_UNLIKELY_TO_THROW //MultiSplitContainerGeneric<PANEL_BASE>.OnPaint()";  	Assembler.PopupException (msg' ex);  }  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,OnPaintDoubleBuffered,The following statement contains a magic number: try {  	for (int i = 0; i < this.panels.Count; i++) {  		//Control panel = this.panels[i];  		//panel.Invalidate();	// base.OnPaint() did it already  		if (i >= this.splitters.Count) {  			string msg = "YOU_GOT_MORE_(DESERIALIZED)_SPLITTERS_THAN_PANELS__MUST_BE_EQUAL  //MultiSplitContainerGeneric<PANEL_BASE>.OnPaint()";  			Assembler.PopupException (msg);  			continue;  		}  		MultiSplitter splitter = this.splitters [i];  		if (i == this.panelMouseIsOverNowIndexDropTarget) {  			// USING_NON_DOUBLE_BUFFERED_TO_PAINT_RED_SPLITTER_BACKGROUND_ON_DRAGGING_USING_GRIP...  			splitter.BackColor = ColorBackgroundSliderDroppingTarget;  		} else {  			splitter.BackColor = ColorBackgroundSliderRegular;  		}  		//splitter.Invalidate();  	}  	Point location = new Point (40' 10);  	e.Graphics.DrawString (this.panelText' this.Font' SystemBrushes.ControlText' location);  } catch (Exception ex) {  	string msg = "CONTROL.INVALIDATE()_IS_VERY_UNLIKELY_TO_THROW //MultiSplitContainerGeneric<PANEL_BASE>.OnPaint()";  	Assembler.PopupException (msg' ex);  }  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (this.VerticalizeAllLogic == false) {  	// mouseMovingUp CAN BE NEGATIVE  	int mouseMovingUp = this.splitterStartedResizeOrDragPoint.Y - mousePositionFromSplitContainerUpperLeft.Y;  	if (mouseMovingUp > 0 && panelAbove.Height <= 5)  		return;  	if (mouseMovingUp < 0 && panelBelow.Height <= 5)  		return;  	if (mouseMovingUp < 0 && splitterIndex == this.splitters.Count - 1) {  		int baseHeight = base.Height;  		if (splitter.Location.Y + splitter.Height >= base.Height - 5) {  			return;  		}  	}  	int panelAboveMinimumHeight = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (multiSplitContainerAbove != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_HEIGHTS_AMONG_NESTED_PANELS__ABOVE_SPLITTER";  	//	panelAboveMinimumHeight = multiSplitContainerAbove.MinimalPanelHeights_SumIfHorizontal_MaxIfVertical;  	//} else {  	if (panelAbove.MinimumSize != default(Size)) {  		panelAboveMinimumHeight = panelAbove.MinimumSize.Height;  	}  	//}  	int panelAboveHeightProjected = panelAbove.Height - mouseMovingUp;  	if (panelAboveHeightProjected < panelAboveMinimumHeight) {  		Cursor.Current = Cursors.No;  		return;  	}  	int panelBelowMinimumHeight = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (multiSplitContainerBelow != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_HEIGHTS_AMONG_NESTED_PANELS__BELOW_SPLITTER";  	//	panelAboveMinimumHeight = multiSplitContainerBelow.MinimalPanelHeights_SumIfHorizontal_MaxIfVertical;  	//} else {  	if (panelBelow.MinimumSize != default(Size)) {  		panelBelowMinimumHeight = panelBelow.MinimumSize.Height;  	}  	//}  	int panelBelowHeightProjected = panelBelow.Height + mouseMovingUp;  	if (panelBelowHeightProjected < panelBelowMinimumHeight) {  		Cursor.Current = Cursors.No;  		return;  	}  	Cursor.Current = Cursors.HSplit;  	int panelBelowNewHeight = panelBelow.Height + mouseMovingUp;  	int panelAboveNewHeight = panelAbove.Height - mouseMovingUp;  	//PanelBase panelBaseBelow = panelBelow as PanelBase;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (panelBaseBelow != null) {  	//	panelBaseBelow			.SetHeightIgnoreResize(panelBelowNewHeight);  	//} else if (multiSplitContainerBelow != null) {  	//	multiSplitContainerBelow.SetHeightIgnoreResize(panelBelowNewHeight);  	//} else {  	if (panelBelow.Height != panelBelowNewHeight) {  		panelBelow.Height = panelBelowNewHeight;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  	//v2 REPLACEMENT_FOR_DistributePanelsAndSplitters()_BELOW  	Point panelBelowLocation = new Point (panelBelow.Location.X' panelBelow.Location.Y - mouseMovingUp);  	panelBelow.Location = panelBelowLocation;  	Point splitterLocation = new Point (splitter.Location.X' splitter.Location.Y - mouseMovingUp);  	splitter.Location = splitterLocation;  	thingsIchanged++;  	//v2 END  	//PanelBase panelBaseAbove = panelAbove as PanelBase;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (panelBaseAbove != null) {  	//	panelBaseAbove			.SetHeightIgnoreResize(panelAboveNewHeight);  	//} else if (multiSplitContainerAbove != null) {  	//	multiSplitContainerAbove.SetHeightIgnoreResize(panelAboveNewHeight);  	//} else {  	if (panelAbove.Height != panelAboveNewHeight) {  		panelAbove.Height = panelAboveNewHeight;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  } else {  	int mouseMovedLeftFromPointClicked = this.splitterStartedResizeOrDragPoint.X - mousePositionFromSplitContainerUpperLeft.X;  	if (mouseMovedLeftFromPointClicked > 0 && panelAbove.Width <= 5)  		return;  	if (mouseMovedLeftFromPointClicked < 0 && panelBelow.Width <= 5)  		return;  	if (mouseMovedLeftFromPointClicked < 0 && splitterIndex == this.splitters.Count - 1) {  		int baseHeight = base.Width;  		if (splitter.Location.X + splitter.Width >= base.Width - 5) {  			return;  		}  	}  	int panelAboveMinimumWidth = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (multiSplitContainerAbove != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_WIDTHS_AMONG_NESTED_PANELS__ABOVE_SPLITTER";  	//	panelAboveMinimumWidth = multiSplitContainerAbove.MinimalPanelWidths_SumIfVertical_MaxIfHorizontal;  	//} else {  	if (panelAbove.MinimumSize != default(Size)) {  		panelAboveMinimumWidth = panelAbove.MinimumSize.Width;  	}  	//}  	int panelAboveWidthProjected = panelAbove.Width - mouseMovedLeftFromPointClicked;  	if (panelAboveWidthProjected < panelAboveMinimumWidth) {  		Cursor.Current = Cursors.No;  		return;  	}  	int panelBelowMinimumWidth = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (multiSplitContainerBelow != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_WIDTHS_AMONG_NESTED_PANELS__BELOW_SPLITTER";  	//	panelBelowMinimumWidth = multiSplitContainerBelow.MinimalPanelWidths_SumIfVertical_MaxIfHorizontal;  	//} else {  	if (panelBelow.MinimumSize != default(Size)) {  		panelBelowMinimumWidth = panelBelow.MinimumSize.Width;  	}  	//}  	//panelBelow might be another MultiSplitContainer  	int panelBelowWidthProjected = panelBelow.Width + mouseMovedLeftFromPointClicked;  	if (panelBelowWidthProjected < panelBelowMinimumWidth) {  		Cursor.Current = Cursors.No;  		return;  	}  	Cursor.Current = Cursors.VSplit;  	int panelBelowNewWidth = panelBelow.Width + mouseMovedLeftFromPointClicked;  	int panelAboveNewWidth = panelAbove.Width - mouseMovedLeftFromPointClicked;  	//PanelBase panelBaseBelow = panelBelow as PanelBase;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (panelBaseBelow != null) {  	//	panelBaseBelow			.SetWidthIgnoreResize(panelBelowNewWidth);  	//} else if (multiSplitContainerBelow != null) {  	//	multiSplitContainerBelow.SetWidthIgnoreResize(panelBelowNewWidth);  	//} else {  	if (panelBelow.Width != panelBelowNewWidth) {  		panelBelow.Width = panelBelowNewWidth;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  	//v2 REPLACEMENT_FOR_DistributePanelsAndSplitters()_BELOW  	Point panelBelowLocation = new Point (panelBelow.Location.X - mouseMovedLeftFromPointClicked' panelBelow.Location.Y);  	panelBelow.Location = panelBelowLocation;  	Point splitterLocation = new Point (splitter.Location.X - mouseMovedLeftFromPointClicked' splitter.Location.Y);  	splitter.Location = splitterLocation;  	thingsIchanged++;  	//v2 END  	//PanelBase panelBaseAbove = panelAbove as PanelBase;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (panelBaseAbove != null) {  	//	panelBaseAbove			.SetWidthIgnoreResize(panelAboveNewWidth);  	//} else if (multiSplitContainerAbove != null) {  	//	multiSplitContainerAbove.SetWidthIgnoreResize(panelAboveNewWidth);  	//} else {  	if (panelAbove.Width != panelAboveNewWidth) {  		panelAbove.Width = panelAboveNewWidth;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  }  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (this.VerticalizeAllLogic == false) {  	// mouseMovingUp CAN BE NEGATIVE  	int mouseMovingUp = this.splitterStartedResizeOrDragPoint.Y - mousePositionFromSplitContainerUpperLeft.Y;  	if (mouseMovingUp > 0 && panelAbove.Height <= 5)  		return;  	if (mouseMovingUp < 0 && panelBelow.Height <= 5)  		return;  	if (mouseMovingUp < 0 && splitterIndex == this.splitters.Count - 1) {  		int baseHeight = base.Height;  		if (splitter.Location.Y + splitter.Height >= base.Height - 5) {  			return;  		}  	}  	int panelAboveMinimumHeight = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (multiSplitContainerAbove != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_HEIGHTS_AMONG_NESTED_PANELS__ABOVE_SPLITTER";  	//	panelAboveMinimumHeight = multiSplitContainerAbove.MinimalPanelHeights_SumIfHorizontal_MaxIfVertical;  	//} else {  	if (panelAbove.MinimumSize != default(Size)) {  		panelAboveMinimumHeight = panelAbove.MinimumSize.Height;  	}  	//}  	int panelAboveHeightProjected = panelAbove.Height - mouseMovingUp;  	if (panelAboveHeightProjected < panelAboveMinimumHeight) {  		Cursor.Current = Cursors.No;  		return;  	}  	int panelBelowMinimumHeight = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (multiSplitContainerBelow != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_HEIGHTS_AMONG_NESTED_PANELS__BELOW_SPLITTER";  	//	panelAboveMinimumHeight = multiSplitContainerBelow.MinimalPanelHeights_SumIfHorizontal_MaxIfVertical;  	//} else {  	if (panelBelow.MinimumSize != default(Size)) {  		panelBelowMinimumHeight = panelBelow.MinimumSize.Height;  	}  	//}  	int panelBelowHeightProjected = panelBelow.Height + mouseMovingUp;  	if (panelBelowHeightProjected < panelBelowMinimumHeight) {  		Cursor.Current = Cursors.No;  		return;  	}  	Cursor.Current = Cursors.HSplit;  	int panelBelowNewHeight = panelBelow.Height + mouseMovingUp;  	int panelAboveNewHeight = panelAbove.Height - mouseMovingUp;  	//PanelBase panelBaseBelow = panelBelow as PanelBase;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (panelBaseBelow != null) {  	//	panelBaseBelow			.SetHeightIgnoreResize(panelBelowNewHeight);  	//} else if (multiSplitContainerBelow != null) {  	//	multiSplitContainerBelow.SetHeightIgnoreResize(panelBelowNewHeight);  	//} else {  	if (panelBelow.Height != panelBelowNewHeight) {  		panelBelow.Height = panelBelowNewHeight;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  	//v2 REPLACEMENT_FOR_DistributePanelsAndSplitters()_BELOW  	Point panelBelowLocation = new Point (panelBelow.Location.X' panelBelow.Location.Y - mouseMovingUp);  	panelBelow.Location = panelBelowLocation;  	Point splitterLocation = new Point (splitter.Location.X' splitter.Location.Y - mouseMovingUp);  	splitter.Location = splitterLocation;  	thingsIchanged++;  	//v2 END  	//PanelBase panelBaseAbove = panelAbove as PanelBase;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (panelBaseAbove != null) {  	//	panelBaseAbove			.SetHeightIgnoreResize(panelAboveNewHeight);  	//} else if (multiSplitContainerAbove != null) {  	//	multiSplitContainerAbove.SetHeightIgnoreResize(panelAboveNewHeight);  	//} else {  	if (panelAbove.Height != panelAboveNewHeight) {  		panelAbove.Height = panelAboveNewHeight;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  } else {  	int mouseMovedLeftFromPointClicked = this.splitterStartedResizeOrDragPoint.X - mousePositionFromSplitContainerUpperLeft.X;  	if (mouseMovedLeftFromPointClicked > 0 && panelAbove.Width <= 5)  		return;  	if (mouseMovedLeftFromPointClicked < 0 && panelBelow.Width <= 5)  		return;  	if (mouseMovedLeftFromPointClicked < 0 && splitterIndex == this.splitters.Count - 1) {  		int baseHeight = base.Width;  		if (splitter.Location.X + splitter.Width >= base.Width - 5) {  			return;  		}  	}  	int panelAboveMinimumWidth = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (multiSplitContainerAbove != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_WIDTHS_AMONG_NESTED_PANELS__ABOVE_SPLITTER";  	//	panelAboveMinimumWidth = multiSplitContainerAbove.MinimalPanelWidths_SumIfVertical_MaxIfHorizontal;  	//} else {  	if (panelAbove.MinimumSize != default(Size)) {  		panelAboveMinimumWidth = panelAbove.MinimumSize.Width;  	}  	//}  	int panelAboveWidthProjected = panelAbove.Width - mouseMovedLeftFromPointClicked;  	if (panelAboveWidthProjected < panelAboveMinimumWidth) {  		Cursor.Current = Cursors.No;  		return;  	}  	int panelBelowMinimumWidth = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (multiSplitContainerBelow != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_WIDTHS_AMONG_NESTED_PANELS__BELOW_SPLITTER";  	//	panelBelowMinimumWidth = multiSplitContainerBelow.MinimalPanelWidths_SumIfVertical_MaxIfHorizontal;  	//} else {  	if (panelBelow.MinimumSize != default(Size)) {  		panelBelowMinimumWidth = panelBelow.MinimumSize.Width;  	}  	//}  	//panelBelow might be another MultiSplitContainer  	int panelBelowWidthProjected = panelBelow.Width + mouseMovedLeftFromPointClicked;  	if (panelBelowWidthProjected < panelBelowMinimumWidth) {  		Cursor.Current = Cursors.No;  		return;  	}  	Cursor.Current = Cursors.VSplit;  	int panelBelowNewWidth = panelBelow.Width + mouseMovedLeftFromPointClicked;  	int panelAboveNewWidth = panelAbove.Width - mouseMovedLeftFromPointClicked;  	//PanelBase panelBaseBelow = panelBelow as PanelBase;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (panelBaseBelow != null) {  	//	panelBaseBelow			.SetWidthIgnoreResize(panelBelowNewWidth);  	//} else if (multiSplitContainerBelow != null) {  	//	multiSplitContainerBelow.SetWidthIgnoreResize(panelBelowNewWidth);  	//} else {  	if (panelBelow.Width != panelBelowNewWidth) {  		panelBelow.Width = panelBelowNewWidth;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  	//v2 REPLACEMENT_FOR_DistributePanelsAndSplitters()_BELOW  	Point panelBelowLocation = new Point (panelBelow.Location.X - mouseMovedLeftFromPointClicked' panelBelow.Location.Y);  	panelBelow.Location = panelBelowLocation;  	Point splitterLocation = new Point (splitter.Location.X - mouseMovedLeftFromPointClicked' splitter.Location.Y);  	splitter.Location = splitterLocation;  	thingsIchanged++;  	//v2 END  	//PanelBase panelBaseAbove = panelAbove as PanelBase;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (panelBaseAbove != null) {  	//	panelBaseAbove			.SetWidthIgnoreResize(panelAboveNewWidth);  	//} else if (multiSplitContainerAbove != null) {  	//	multiSplitContainerAbove.SetWidthIgnoreResize(panelAboveNewWidth);  	//} else {  	if (panelAbove.Width != panelAboveNewWidth) {  		panelAbove.Width = panelAboveNewWidth;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  }  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (this.VerticalizeAllLogic == false) {  	// mouseMovingUp CAN BE NEGATIVE  	int mouseMovingUp = this.splitterStartedResizeOrDragPoint.Y - mousePositionFromSplitContainerUpperLeft.Y;  	if (mouseMovingUp > 0 && panelAbove.Height <= 5)  		return;  	if (mouseMovingUp < 0 && panelBelow.Height <= 5)  		return;  	if (mouseMovingUp < 0 && splitterIndex == this.splitters.Count - 1) {  		int baseHeight = base.Height;  		if (splitter.Location.Y + splitter.Height >= base.Height - 5) {  			return;  		}  	}  	int panelAboveMinimumHeight = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (multiSplitContainerAbove != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_HEIGHTS_AMONG_NESTED_PANELS__ABOVE_SPLITTER";  	//	panelAboveMinimumHeight = multiSplitContainerAbove.MinimalPanelHeights_SumIfHorizontal_MaxIfVertical;  	//} else {  	if (panelAbove.MinimumSize != default(Size)) {  		panelAboveMinimumHeight = panelAbove.MinimumSize.Height;  	}  	//}  	int panelAboveHeightProjected = panelAbove.Height - mouseMovingUp;  	if (panelAboveHeightProjected < panelAboveMinimumHeight) {  		Cursor.Current = Cursors.No;  		return;  	}  	int panelBelowMinimumHeight = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (multiSplitContainerBelow != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_HEIGHTS_AMONG_NESTED_PANELS__BELOW_SPLITTER";  	//	panelAboveMinimumHeight = multiSplitContainerBelow.MinimalPanelHeights_SumIfHorizontal_MaxIfVertical;  	//} else {  	if (panelBelow.MinimumSize != default(Size)) {  		panelBelowMinimumHeight = panelBelow.MinimumSize.Height;  	}  	//}  	int panelBelowHeightProjected = panelBelow.Height + mouseMovingUp;  	if (panelBelowHeightProjected < panelBelowMinimumHeight) {  		Cursor.Current = Cursors.No;  		return;  	}  	Cursor.Current = Cursors.HSplit;  	int panelBelowNewHeight = panelBelow.Height + mouseMovingUp;  	int panelAboveNewHeight = panelAbove.Height - mouseMovingUp;  	//PanelBase panelBaseBelow = panelBelow as PanelBase;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (panelBaseBelow != null) {  	//	panelBaseBelow			.SetHeightIgnoreResize(panelBelowNewHeight);  	//} else if (multiSplitContainerBelow != null) {  	//	multiSplitContainerBelow.SetHeightIgnoreResize(panelBelowNewHeight);  	//} else {  	if (panelBelow.Height != panelBelowNewHeight) {  		panelBelow.Height = panelBelowNewHeight;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  	//v2 REPLACEMENT_FOR_DistributePanelsAndSplitters()_BELOW  	Point panelBelowLocation = new Point (panelBelow.Location.X' panelBelow.Location.Y - mouseMovingUp);  	panelBelow.Location = panelBelowLocation;  	Point splitterLocation = new Point (splitter.Location.X' splitter.Location.Y - mouseMovingUp);  	splitter.Location = splitterLocation;  	thingsIchanged++;  	//v2 END  	//PanelBase panelBaseAbove = panelAbove as PanelBase;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (panelBaseAbove != null) {  	//	panelBaseAbove			.SetHeightIgnoreResize(panelAboveNewHeight);  	//} else if (multiSplitContainerAbove != null) {  	//	multiSplitContainerAbove.SetHeightIgnoreResize(panelAboveNewHeight);  	//} else {  	if (panelAbove.Height != panelAboveNewHeight) {  		panelAbove.Height = panelAboveNewHeight;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  } else {  	int mouseMovedLeftFromPointClicked = this.splitterStartedResizeOrDragPoint.X - mousePositionFromSplitContainerUpperLeft.X;  	if (mouseMovedLeftFromPointClicked > 0 && panelAbove.Width <= 5)  		return;  	if (mouseMovedLeftFromPointClicked < 0 && panelBelow.Width <= 5)  		return;  	if (mouseMovedLeftFromPointClicked < 0 && splitterIndex == this.splitters.Count - 1) {  		int baseHeight = base.Width;  		if (splitter.Location.X + splitter.Width >= base.Width - 5) {  			return;  		}  	}  	int panelAboveMinimumWidth = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (multiSplitContainerAbove != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_WIDTHS_AMONG_NESTED_PANELS__ABOVE_SPLITTER";  	//	panelAboveMinimumWidth = multiSplitContainerAbove.MinimalPanelWidths_SumIfVertical_MaxIfHorizontal;  	//} else {  	if (panelAbove.MinimumSize != default(Size)) {  		panelAboveMinimumWidth = panelAbove.MinimumSize.Width;  	}  	//}  	int panelAboveWidthProjected = panelAbove.Width - mouseMovedLeftFromPointClicked;  	if (panelAboveWidthProjected < panelAboveMinimumWidth) {  		Cursor.Current = Cursors.No;  		return;  	}  	int panelBelowMinimumWidth = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (multiSplitContainerBelow != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_WIDTHS_AMONG_NESTED_PANELS__BELOW_SPLITTER";  	//	panelBelowMinimumWidth = multiSplitContainerBelow.MinimalPanelWidths_SumIfVertical_MaxIfHorizontal;  	//} else {  	if (panelBelow.MinimumSize != default(Size)) {  		panelBelowMinimumWidth = panelBelow.MinimumSize.Width;  	}  	//}  	//panelBelow might be another MultiSplitContainer  	int panelBelowWidthProjected = panelBelow.Width + mouseMovedLeftFromPointClicked;  	if (panelBelowWidthProjected < panelBelowMinimumWidth) {  		Cursor.Current = Cursors.No;  		return;  	}  	Cursor.Current = Cursors.VSplit;  	int panelBelowNewWidth = panelBelow.Width + mouseMovedLeftFromPointClicked;  	int panelAboveNewWidth = panelAbove.Width - mouseMovedLeftFromPointClicked;  	//PanelBase panelBaseBelow = panelBelow as PanelBase;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (panelBaseBelow != null) {  	//	panelBaseBelow			.SetWidthIgnoreResize(panelBelowNewWidth);  	//} else if (multiSplitContainerBelow != null) {  	//	multiSplitContainerBelow.SetWidthIgnoreResize(panelBelowNewWidth);  	//} else {  	if (panelBelow.Width != panelBelowNewWidth) {  		panelBelow.Width = panelBelowNewWidth;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  	//v2 REPLACEMENT_FOR_DistributePanelsAndSplitters()_BELOW  	Point panelBelowLocation = new Point (panelBelow.Location.X - mouseMovedLeftFromPointClicked' panelBelow.Location.Y);  	panelBelow.Location = panelBelowLocation;  	Point splitterLocation = new Point (splitter.Location.X - mouseMovedLeftFromPointClicked' splitter.Location.Y);  	splitter.Location = splitterLocation;  	thingsIchanged++;  	//v2 END  	//PanelBase panelBaseAbove = panelAbove as PanelBase;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (panelBaseAbove != null) {  	//	panelBaseAbove			.SetWidthIgnoreResize(panelAboveNewWidth);  	//} else if (multiSplitContainerAbove != null) {  	//	multiSplitContainerAbove.SetWidthIgnoreResize(panelAboveNewWidth);  	//} else {  	if (panelAbove.Width != panelAboveNewWidth) {  		panelAbove.Width = panelAboveNewWidth;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  }  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (this.VerticalizeAllLogic == false) {  	// mouseMovingUp CAN BE NEGATIVE  	int mouseMovingUp = this.splitterStartedResizeOrDragPoint.Y - mousePositionFromSplitContainerUpperLeft.Y;  	if (mouseMovingUp > 0 && panelAbove.Height <= 5)  		return;  	if (mouseMovingUp < 0 && panelBelow.Height <= 5)  		return;  	if (mouseMovingUp < 0 && splitterIndex == this.splitters.Count - 1) {  		int baseHeight = base.Height;  		if (splitter.Location.Y + splitter.Height >= base.Height - 5) {  			return;  		}  	}  	int panelAboveMinimumHeight = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (multiSplitContainerAbove != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_HEIGHTS_AMONG_NESTED_PANELS__ABOVE_SPLITTER";  	//	panelAboveMinimumHeight = multiSplitContainerAbove.MinimalPanelHeights_SumIfHorizontal_MaxIfVertical;  	//} else {  	if (panelAbove.MinimumSize != default(Size)) {  		panelAboveMinimumHeight = panelAbove.MinimumSize.Height;  	}  	//}  	int panelAboveHeightProjected = panelAbove.Height - mouseMovingUp;  	if (panelAboveHeightProjected < panelAboveMinimumHeight) {  		Cursor.Current = Cursors.No;  		return;  	}  	int panelBelowMinimumHeight = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (multiSplitContainerBelow != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_HEIGHTS_AMONG_NESTED_PANELS__BELOW_SPLITTER";  	//	panelAboveMinimumHeight = multiSplitContainerBelow.MinimalPanelHeights_SumIfHorizontal_MaxIfVertical;  	//} else {  	if (panelBelow.MinimumSize != default(Size)) {  		panelBelowMinimumHeight = panelBelow.MinimumSize.Height;  	}  	//}  	int panelBelowHeightProjected = panelBelow.Height + mouseMovingUp;  	if (panelBelowHeightProjected < panelBelowMinimumHeight) {  		Cursor.Current = Cursors.No;  		return;  	}  	Cursor.Current = Cursors.HSplit;  	int panelBelowNewHeight = panelBelow.Height + mouseMovingUp;  	int panelAboveNewHeight = panelAbove.Height - mouseMovingUp;  	//PanelBase panelBaseBelow = panelBelow as PanelBase;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (panelBaseBelow != null) {  	//	panelBaseBelow			.SetHeightIgnoreResize(panelBelowNewHeight);  	//} else if (multiSplitContainerBelow != null) {  	//	multiSplitContainerBelow.SetHeightIgnoreResize(panelBelowNewHeight);  	//} else {  	if (panelBelow.Height != panelBelowNewHeight) {  		panelBelow.Height = panelBelowNewHeight;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  	//v2 REPLACEMENT_FOR_DistributePanelsAndSplitters()_BELOW  	Point panelBelowLocation = new Point (panelBelow.Location.X' panelBelow.Location.Y - mouseMovingUp);  	panelBelow.Location = panelBelowLocation;  	Point splitterLocation = new Point (splitter.Location.X' splitter.Location.Y - mouseMovingUp);  	splitter.Location = splitterLocation;  	thingsIchanged++;  	//v2 END  	//PanelBase panelBaseAbove = panelAbove as PanelBase;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (panelBaseAbove != null) {  	//	panelBaseAbove			.SetHeightIgnoreResize(panelAboveNewHeight);  	//} else if (multiSplitContainerAbove != null) {  	//	multiSplitContainerAbove.SetHeightIgnoreResize(panelAboveNewHeight);  	//} else {  	if (panelAbove.Height != panelAboveNewHeight) {  		panelAbove.Height = panelAboveNewHeight;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  } else {  	int mouseMovedLeftFromPointClicked = this.splitterStartedResizeOrDragPoint.X - mousePositionFromSplitContainerUpperLeft.X;  	if (mouseMovedLeftFromPointClicked > 0 && panelAbove.Width <= 5)  		return;  	if (mouseMovedLeftFromPointClicked < 0 && panelBelow.Width <= 5)  		return;  	if (mouseMovedLeftFromPointClicked < 0 && splitterIndex == this.splitters.Count - 1) {  		int baseHeight = base.Width;  		if (splitter.Location.X + splitter.Width >= base.Width - 5) {  			return;  		}  	}  	int panelAboveMinimumWidth = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (multiSplitContainerAbove != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_WIDTHS_AMONG_NESTED_PANELS__ABOVE_SPLITTER";  	//	panelAboveMinimumWidth = multiSplitContainerAbove.MinimalPanelWidths_SumIfVertical_MaxIfHorizontal;  	//} else {  	if (panelAbove.MinimumSize != default(Size)) {  		panelAboveMinimumWidth = panelAbove.MinimumSize.Width;  	}  	//}  	int panelAboveWidthProjected = panelAbove.Width - mouseMovedLeftFromPointClicked;  	if (panelAboveWidthProjected < panelAboveMinimumWidth) {  		Cursor.Current = Cursors.No;  		return;  	}  	int panelBelowMinimumWidth = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (multiSplitContainerBelow != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_WIDTHS_AMONG_NESTED_PANELS__BELOW_SPLITTER";  	//	panelBelowMinimumWidth = multiSplitContainerBelow.MinimalPanelWidths_SumIfVertical_MaxIfHorizontal;  	//} else {  	if (panelBelow.MinimumSize != default(Size)) {  		panelBelowMinimumWidth = panelBelow.MinimumSize.Width;  	}  	//}  	//panelBelow might be another MultiSplitContainer  	int panelBelowWidthProjected = panelBelow.Width + mouseMovedLeftFromPointClicked;  	if (panelBelowWidthProjected < panelBelowMinimumWidth) {  		Cursor.Current = Cursors.No;  		return;  	}  	Cursor.Current = Cursors.VSplit;  	int panelBelowNewWidth = panelBelow.Width + mouseMovedLeftFromPointClicked;  	int panelAboveNewWidth = panelAbove.Width - mouseMovedLeftFromPointClicked;  	//PanelBase panelBaseBelow = panelBelow as PanelBase;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (panelBaseBelow != null) {  	//	panelBaseBelow			.SetWidthIgnoreResize(panelBelowNewWidth);  	//} else if (multiSplitContainerBelow != null) {  	//	multiSplitContainerBelow.SetWidthIgnoreResize(panelBelowNewWidth);  	//} else {  	if (panelBelow.Width != panelBelowNewWidth) {  		panelBelow.Width = panelBelowNewWidth;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  	//v2 REPLACEMENT_FOR_DistributePanelsAndSplitters()_BELOW  	Point panelBelowLocation = new Point (panelBelow.Location.X - mouseMovedLeftFromPointClicked' panelBelow.Location.Y);  	panelBelow.Location = panelBelowLocation;  	Point splitterLocation = new Point (splitter.Location.X - mouseMovedLeftFromPointClicked' splitter.Location.Y);  	splitter.Location = splitterLocation;  	thingsIchanged++;  	//v2 END  	//PanelBase panelBaseAbove = panelAbove as PanelBase;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (panelBaseAbove != null) {  	//	panelBaseAbove			.SetWidthIgnoreResize(panelAboveNewWidth);  	//} else if (multiSplitContainerAbove != null) {  	//	multiSplitContainerAbove.SetWidthIgnoreResize(panelAboveNewWidth);  	//} else {  	if (panelAbove.Width != panelAboveNewWidth) {  		panelAbove.Width = panelAboveNewWidth;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  }  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (this.VerticalizeAllLogic == false) {  	// mouseMovingUp CAN BE NEGATIVE  	int mouseMovingUp = this.splitterStartedResizeOrDragPoint.Y - mousePositionFromSplitContainerUpperLeft.Y;  	if (mouseMovingUp > 0 && panelAbove.Height <= 5)  		return;  	if (mouseMovingUp < 0 && panelBelow.Height <= 5)  		return;  	if (mouseMovingUp < 0 && splitterIndex == this.splitters.Count - 1) {  		int baseHeight = base.Height;  		if (splitter.Location.Y + splitter.Height >= base.Height - 5) {  			return;  		}  	}  	int panelAboveMinimumHeight = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (multiSplitContainerAbove != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_HEIGHTS_AMONG_NESTED_PANELS__ABOVE_SPLITTER";  	//	panelAboveMinimumHeight = multiSplitContainerAbove.MinimalPanelHeights_SumIfHorizontal_MaxIfVertical;  	//} else {  	if (panelAbove.MinimumSize != default(Size)) {  		panelAboveMinimumHeight = panelAbove.MinimumSize.Height;  	}  	//}  	int panelAboveHeightProjected = panelAbove.Height - mouseMovingUp;  	if (panelAboveHeightProjected < panelAboveMinimumHeight) {  		Cursor.Current = Cursors.No;  		return;  	}  	int panelBelowMinimumHeight = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (multiSplitContainerBelow != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_HEIGHTS_AMONG_NESTED_PANELS__BELOW_SPLITTER";  	//	panelAboveMinimumHeight = multiSplitContainerBelow.MinimalPanelHeights_SumIfHorizontal_MaxIfVertical;  	//} else {  	if (panelBelow.MinimumSize != default(Size)) {  		panelBelowMinimumHeight = panelBelow.MinimumSize.Height;  	}  	//}  	int panelBelowHeightProjected = panelBelow.Height + mouseMovingUp;  	if (panelBelowHeightProjected < panelBelowMinimumHeight) {  		Cursor.Current = Cursors.No;  		return;  	}  	Cursor.Current = Cursors.HSplit;  	int panelBelowNewHeight = panelBelow.Height + mouseMovingUp;  	int panelAboveNewHeight = panelAbove.Height - mouseMovingUp;  	//PanelBase panelBaseBelow = panelBelow as PanelBase;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (panelBaseBelow != null) {  	//	panelBaseBelow			.SetHeightIgnoreResize(panelBelowNewHeight);  	//} else if (multiSplitContainerBelow != null) {  	//	multiSplitContainerBelow.SetHeightIgnoreResize(panelBelowNewHeight);  	//} else {  	if (panelBelow.Height != panelBelowNewHeight) {  		panelBelow.Height = panelBelowNewHeight;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  	//v2 REPLACEMENT_FOR_DistributePanelsAndSplitters()_BELOW  	Point panelBelowLocation = new Point (panelBelow.Location.X' panelBelow.Location.Y - mouseMovingUp);  	panelBelow.Location = panelBelowLocation;  	Point splitterLocation = new Point (splitter.Location.X' splitter.Location.Y - mouseMovingUp);  	splitter.Location = splitterLocation;  	thingsIchanged++;  	//v2 END  	//PanelBase panelBaseAbove = panelAbove as PanelBase;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (panelBaseAbove != null) {  	//	panelBaseAbove			.SetHeightIgnoreResize(panelAboveNewHeight);  	//} else if (multiSplitContainerAbove != null) {  	//	multiSplitContainerAbove.SetHeightIgnoreResize(panelAboveNewHeight);  	//} else {  	if (panelAbove.Height != panelAboveNewHeight) {  		panelAbove.Height = panelAboveNewHeight;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  } else {  	int mouseMovedLeftFromPointClicked = this.splitterStartedResizeOrDragPoint.X - mousePositionFromSplitContainerUpperLeft.X;  	if (mouseMovedLeftFromPointClicked > 0 && panelAbove.Width <= 5)  		return;  	if (mouseMovedLeftFromPointClicked < 0 && panelBelow.Width <= 5)  		return;  	if (mouseMovedLeftFromPointClicked < 0 && splitterIndex == this.splitters.Count - 1) {  		int baseHeight = base.Width;  		if (splitter.Location.X + splitter.Width >= base.Width - 5) {  			return;  		}  	}  	int panelAboveMinimumWidth = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (multiSplitContainerAbove != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_WIDTHS_AMONG_NESTED_PANELS__ABOVE_SPLITTER";  	//	panelAboveMinimumWidth = multiSplitContainerAbove.MinimalPanelWidths_SumIfVertical_MaxIfHorizontal;  	//} else {  	if (panelAbove.MinimumSize != default(Size)) {  		panelAboveMinimumWidth = panelAbove.MinimumSize.Width;  	}  	//}  	int panelAboveWidthProjected = panelAbove.Width - mouseMovedLeftFromPointClicked;  	if (panelAboveWidthProjected < panelAboveMinimumWidth) {  		Cursor.Current = Cursors.No;  		return;  	}  	int panelBelowMinimumWidth = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (multiSplitContainerBelow != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_WIDTHS_AMONG_NESTED_PANELS__BELOW_SPLITTER";  	//	panelBelowMinimumWidth = multiSplitContainerBelow.MinimalPanelWidths_SumIfVertical_MaxIfHorizontal;  	//} else {  	if (panelBelow.MinimumSize != default(Size)) {  		panelBelowMinimumWidth = panelBelow.MinimumSize.Width;  	}  	//}  	//panelBelow might be another MultiSplitContainer  	int panelBelowWidthProjected = panelBelow.Width + mouseMovedLeftFromPointClicked;  	if (panelBelowWidthProjected < panelBelowMinimumWidth) {  		Cursor.Current = Cursors.No;  		return;  	}  	Cursor.Current = Cursors.VSplit;  	int panelBelowNewWidth = panelBelow.Width + mouseMovedLeftFromPointClicked;  	int panelAboveNewWidth = panelAbove.Width - mouseMovedLeftFromPointClicked;  	//PanelBase panelBaseBelow = panelBelow as PanelBase;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (panelBaseBelow != null) {  	//	panelBaseBelow			.SetWidthIgnoreResize(panelBelowNewWidth);  	//} else if (multiSplitContainerBelow != null) {  	//	multiSplitContainerBelow.SetWidthIgnoreResize(panelBelowNewWidth);  	//} else {  	if (panelBelow.Width != panelBelowNewWidth) {  		panelBelow.Width = panelBelowNewWidth;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  	//v2 REPLACEMENT_FOR_DistributePanelsAndSplitters()_BELOW  	Point panelBelowLocation = new Point (panelBelow.Location.X - mouseMovedLeftFromPointClicked' panelBelow.Location.Y);  	panelBelow.Location = panelBelowLocation;  	Point splitterLocation = new Point (splitter.Location.X - mouseMovedLeftFromPointClicked' splitter.Location.Y);  	splitter.Location = splitterLocation;  	thingsIchanged++;  	//v2 END  	//PanelBase panelBaseAbove = panelAbove as PanelBase;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (panelBaseAbove != null) {  	//	panelBaseAbove			.SetWidthIgnoreResize(panelAboveNewWidth);  	//} else if (multiSplitContainerAbove != null) {  	//	multiSplitContainerAbove.SetWidthIgnoreResize(panelAboveNewWidth);  	//} else {  	if (panelAbove.Width != panelAboveNewWidth) {  		panelAbove.Width = panelAboveNewWidth;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  }  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (this.VerticalizeAllLogic == false) {  	// mouseMovingUp CAN BE NEGATIVE  	int mouseMovingUp = this.splitterStartedResizeOrDragPoint.Y - mousePositionFromSplitContainerUpperLeft.Y;  	if (mouseMovingUp > 0 && panelAbove.Height <= 5)  		return;  	if (mouseMovingUp < 0 && panelBelow.Height <= 5)  		return;  	if (mouseMovingUp < 0 && splitterIndex == this.splitters.Count - 1) {  		int baseHeight = base.Height;  		if (splitter.Location.Y + splitter.Height >= base.Height - 5) {  			return;  		}  	}  	int panelAboveMinimumHeight = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (multiSplitContainerAbove != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_HEIGHTS_AMONG_NESTED_PANELS__ABOVE_SPLITTER";  	//	panelAboveMinimumHeight = multiSplitContainerAbove.MinimalPanelHeights_SumIfHorizontal_MaxIfVertical;  	//} else {  	if (panelAbove.MinimumSize != default(Size)) {  		panelAboveMinimumHeight = panelAbove.MinimumSize.Height;  	}  	//}  	int panelAboveHeightProjected = panelAbove.Height - mouseMovingUp;  	if (panelAboveHeightProjected < panelAboveMinimumHeight) {  		Cursor.Current = Cursors.No;  		return;  	}  	int panelBelowMinimumHeight = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (multiSplitContainerBelow != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_HEIGHTS_AMONG_NESTED_PANELS__BELOW_SPLITTER";  	//	panelAboveMinimumHeight = multiSplitContainerBelow.MinimalPanelHeights_SumIfHorizontal_MaxIfVertical;  	//} else {  	if (panelBelow.MinimumSize != default(Size)) {  		panelBelowMinimumHeight = panelBelow.MinimumSize.Height;  	}  	//}  	int panelBelowHeightProjected = panelBelow.Height + mouseMovingUp;  	if (panelBelowHeightProjected < panelBelowMinimumHeight) {  		Cursor.Current = Cursors.No;  		return;  	}  	Cursor.Current = Cursors.HSplit;  	int panelBelowNewHeight = panelBelow.Height + mouseMovingUp;  	int panelAboveNewHeight = panelAbove.Height - mouseMovingUp;  	//PanelBase panelBaseBelow = panelBelow as PanelBase;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (panelBaseBelow != null) {  	//	panelBaseBelow			.SetHeightIgnoreResize(panelBelowNewHeight);  	//} else if (multiSplitContainerBelow != null) {  	//	multiSplitContainerBelow.SetHeightIgnoreResize(panelBelowNewHeight);  	//} else {  	if (panelBelow.Height != panelBelowNewHeight) {  		panelBelow.Height = panelBelowNewHeight;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  	//v2 REPLACEMENT_FOR_DistributePanelsAndSplitters()_BELOW  	Point panelBelowLocation = new Point (panelBelow.Location.X' panelBelow.Location.Y - mouseMovingUp);  	panelBelow.Location = panelBelowLocation;  	Point splitterLocation = new Point (splitter.Location.X' splitter.Location.Y - mouseMovingUp);  	splitter.Location = splitterLocation;  	thingsIchanged++;  	//v2 END  	//PanelBase panelBaseAbove = panelAbove as PanelBase;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (panelBaseAbove != null) {  	//	panelBaseAbove			.SetHeightIgnoreResize(panelAboveNewHeight);  	//} else if (multiSplitContainerAbove != null) {  	//	multiSplitContainerAbove.SetHeightIgnoreResize(panelAboveNewHeight);  	//} else {  	if (panelAbove.Height != panelAboveNewHeight) {  		panelAbove.Height = panelAboveNewHeight;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  } else {  	int mouseMovedLeftFromPointClicked = this.splitterStartedResizeOrDragPoint.X - mousePositionFromSplitContainerUpperLeft.X;  	if (mouseMovedLeftFromPointClicked > 0 && panelAbove.Width <= 5)  		return;  	if (mouseMovedLeftFromPointClicked < 0 && panelBelow.Width <= 5)  		return;  	if (mouseMovedLeftFromPointClicked < 0 && splitterIndex == this.splitters.Count - 1) {  		int baseHeight = base.Width;  		if (splitter.Location.X + splitter.Width >= base.Width - 5) {  			return;  		}  	}  	int panelAboveMinimumWidth = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (multiSplitContainerAbove != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_WIDTHS_AMONG_NESTED_PANELS__ABOVE_SPLITTER";  	//	panelAboveMinimumWidth = multiSplitContainerAbove.MinimalPanelWidths_SumIfVertical_MaxIfHorizontal;  	//} else {  	if (panelAbove.MinimumSize != default(Size)) {  		panelAboveMinimumWidth = panelAbove.MinimumSize.Width;  	}  	//}  	int panelAboveWidthProjected = panelAbove.Width - mouseMovedLeftFromPointClicked;  	if (panelAboveWidthProjected < panelAboveMinimumWidth) {  		Cursor.Current = Cursors.No;  		return;  	}  	int panelBelowMinimumWidth = this.MinimumPanelHeight;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (multiSplitContainerBelow != null) {		// I avoid setting MinimalSize for the MultiSplitContainer itself  	//	string msg = "CALCULATING_SUM_OF_MIN_WIDTHS_AMONG_NESTED_PANELS__BELOW_SPLITTER";  	//	panelBelowMinimumWidth = multiSplitContainerBelow.MinimalPanelWidths_SumIfVertical_MaxIfHorizontal;  	//} else {  	if (panelBelow.MinimumSize != default(Size)) {  		panelBelowMinimumWidth = panelBelow.MinimumSize.Width;  	}  	//}  	//panelBelow might be another MultiSplitContainer  	int panelBelowWidthProjected = panelBelow.Width + mouseMovedLeftFromPointClicked;  	if (panelBelowWidthProjected < panelBelowMinimumWidth) {  		Cursor.Current = Cursors.No;  		return;  	}  	Cursor.Current = Cursors.VSplit;  	int panelBelowNewWidth = panelBelow.Width + mouseMovedLeftFromPointClicked;  	int panelAboveNewWidth = panelAbove.Width - mouseMovedLeftFromPointClicked;  	//PanelBase panelBaseBelow = panelBelow as PanelBase;  	//MultiSplitContainer multiSplitContainerBelow = panelBelow as MultiSplitContainer;  	//if (panelBaseBelow != null) {  	//	panelBaseBelow			.SetWidthIgnoreResize(panelBelowNewWidth);  	//} else if (multiSplitContainerBelow != null) {  	//	multiSplitContainerBelow.SetWidthIgnoreResize(panelBelowNewWidth);  	//} else {  	if (panelBelow.Width != panelBelowNewWidth) {  		panelBelow.Width = panelBelowNewWidth;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  	//v2 REPLACEMENT_FOR_DistributePanelsAndSplitters()_BELOW  	Point panelBelowLocation = new Point (panelBelow.Location.X - mouseMovedLeftFromPointClicked' panelBelow.Location.Y);  	panelBelow.Location = panelBelowLocation;  	Point splitterLocation = new Point (splitter.Location.X - mouseMovedLeftFromPointClicked' splitter.Location.Y);  	splitter.Location = splitterLocation;  	thingsIchanged++;  	//v2 END  	//PanelBase panelBaseAbove = panelAbove as PanelBase;  	//MultiSplitContainer multiSplitContainerAbove = panelAbove as MultiSplitContainer;  	//if (panelBaseAbove != null) {  	//	panelBaseAbove			.SetWidthIgnoreResize(panelAboveNewWidth);  	//} else if (multiSplitContainerAbove != null) {  	//	multiSplitContainerAbove.SetWidthIgnoreResize(panelAboveNewWidth);  	//} else {  	if (panelAbove.Width != panelAboveNewWidth) {  		panelAbove.Width = panelAboveNewWidth;  		// will invoke OnResize() => Distribute()  		thingsIchanged++;  	}  	//}  }  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (mouseMovingUp > 0 && panelAbove.Height <= 5)  	return;  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (mouseMovingUp < 0 && panelBelow.Height <= 5)  	return;  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (mouseMovingUp < 0 && splitterIndex == this.splitters.Count - 1) {  	int baseHeight = base.Height;  	if (splitter.Location.Y + splitter.Height >= base.Height - 5) {  		return;  	}  }  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (splitter.Location.Y + splitter.Height >= base.Height - 5) {  	return;  }  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (mouseMovedLeftFromPointClicked > 0 && panelAbove.Width <= 5)  	return;  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (mouseMovedLeftFromPointClicked < 0 && panelBelow.Width <= 5)  	return;  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (mouseMovedLeftFromPointClicked < 0 && splitterIndex == this.splitters.Count - 1) {  	int baseHeight = base.Width;  	if (splitter.Location.X + splitter.Width >= base.Width - 5) {  		return;  	}  }  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitContainerGeneric,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitContainerGeneric.EventGenerator.cs,splitterMovingNow_PanelsResize,The following statement contains a magic number: if (splitter.Location.X + splitter.Width >= base.Width - 5) {  	return;  }  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitter,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitter.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (783' 10);  
Magic Number,Sq1.Charting.MultiSplit,MultiSplitter,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\MultiSplit\MultiSplitter.EventConsumer.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (783' 10);  
Duplicate Code,Sq1.Charting,PanelBase,D:\newReposJune17\worldexplorer_SquareOne\Sq1.Charting\PanelBase.EventConsumer.cs,GutterGridLinesRightBottomDrawForeground,The method contains a code clone-set at the following line numbers (starting from the method definition): ((27' 46)' (85' 104))
