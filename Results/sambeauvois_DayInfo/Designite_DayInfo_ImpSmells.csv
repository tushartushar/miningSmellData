Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DayInfo.Internals,DayDefinition,C:\repos\sambeauvois_DayInfo\DayInfo\Internals\DayDefinition.cs,GetForYear,Cyclomatic complexity of the method is 13
Long Statement,DayInfo,DayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\DayInfo.cs,RegisterAllDerived,The length of the statement  "	var types = currAssembly.DefinedTypes.Where (x => x.IsClass && !x.IsAbstract && x.IsSubclassOf (baseType)).Select (x => x.AsType ()); " is 133.
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,All,The following statement contains a magic number: if (list == null) {  	list = new List<ChristianDayInfo> ();  	list.Add (new ChristianDayInfo {  		DisplayName = Localized.EasterTitle'  		DisplayDescription = Localized.EasterDescription'  		EnglishName = "Easter monday"'  		IsHolliday = true'  		NativeName = "Pâques"'  		Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 1)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Ascension"'  		EnglishName = "Ascension"'  		IsHolliday = true'  		NativeName = "Ascension"'  		Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 39)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Lundi de Pentecote"'  		EnglishName = "pentecode_totransalate"'  		IsHolliday = true'  		NativeName = "Lundi de Pentecote"'  		Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 50)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Assomption"'  		EnglishName = "Assumption "'  		IsHolliday = true'  		NativeName = "Assomption"'  		Definition = new DayDefinition (15' Months.August)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Toussaint"'  		EnglishName = "All Saints"'  		IsHolliday = true'  		NativeName = "Toussaint"'  		Definition = new DayDefinition (1' Months.November)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Noël"'  		EnglishName = "Christmas"'  		IsHolliday = true'  		NativeName = "Noël"'  		Definition = new DayDefinition (25' Months.December)  	});  }  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,All,The following statement contains a magic number: if (list == null) {  	list = new List<ChristianDayInfo> ();  	list.Add (new ChristianDayInfo {  		DisplayName = Localized.EasterTitle'  		DisplayDescription = Localized.EasterDescription'  		EnglishName = "Easter monday"'  		IsHolliday = true'  		NativeName = "Pâques"'  		Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 1)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Ascension"'  		EnglishName = "Ascension"'  		IsHolliday = true'  		NativeName = "Ascension"'  		Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 39)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Lundi de Pentecote"'  		EnglishName = "pentecode_totransalate"'  		IsHolliday = true'  		NativeName = "Lundi de Pentecote"'  		Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 50)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Assomption"'  		EnglishName = "Assumption "'  		IsHolliday = true'  		NativeName = "Assomption"'  		Definition = new DayDefinition (15' Months.August)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Toussaint"'  		EnglishName = "All Saints"'  		IsHolliday = true'  		NativeName = "Toussaint"'  		Definition = new DayDefinition (1' Months.November)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Noël"'  		EnglishName = "Christmas"'  		IsHolliday = true'  		NativeName = "Noël"'  		Definition = new DayDefinition (25' Months.December)  	});  }  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,All,The following statement contains a magic number: if (list == null) {  	list = new List<ChristianDayInfo> ();  	list.Add (new ChristianDayInfo {  		DisplayName = Localized.EasterTitle'  		DisplayDescription = Localized.EasterDescription'  		EnglishName = "Easter monday"'  		IsHolliday = true'  		NativeName = "Pâques"'  		Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 1)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Ascension"'  		EnglishName = "Ascension"'  		IsHolliday = true'  		NativeName = "Ascension"'  		Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 39)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Lundi de Pentecote"'  		EnglishName = "pentecode_totransalate"'  		IsHolliday = true'  		NativeName = "Lundi de Pentecote"'  		Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 50)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Assomption"'  		EnglishName = "Assumption "'  		IsHolliday = true'  		NativeName = "Assomption"'  		Definition = new DayDefinition (15' Months.August)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Toussaint"'  		EnglishName = "All Saints"'  		IsHolliday = true'  		NativeName = "Toussaint"'  		Definition = new DayDefinition (1' Months.November)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Noël"'  		EnglishName = "Christmas"'  		IsHolliday = true'  		NativeName = "Noël"'  		Definition = new DayDefinition (25' Months.December)  	});  }  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,All,The following statement contains a magic number: if (list == null) {  	list = new List<ChristianDayInfo> ();  	list.Add (new ChristianDayInfo {  		DisplayName = Localized.EasterTitle'  		DisplayDescription = Localized.EasterDescription'  		EnglishName = "Easter monday"'  		IsHolliday = true'  		NativeName = "Pâques"'  		Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 1)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Ascension"'  		EnglishName = "Ascension"'  		IsHolliday = true'  		NativeName = "Ascension"'  		Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 39)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Lundi de Pentecote"'  		EnglishName = "pentecode_totransalate"'  		IsHolliday = true'  		NativeName = "Lundi de Pentecote"'  		Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 50)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Assomption"'  		EnglishName = "Assumption "'  		IsHolliday = true'  		NativeName = "Assomption"'  		Definition = new DayDefinition (15' Months.August)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Toussaint"'  		EnglishName = "All Saints"'  		IsHolliday = true'  		NativeName = "Toussaint"'  		Definition = new DayDefinition (1' Months.November)  	});  	list.Add (new ChristianDayInfo {  		DisplayName = "Noël"'  		EnglishName = "Christmas"'  		IsHolliday = true'  		NativeName = "Noël"'  		Definition = new DayDefinition (25' Months.December)  	});  }  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,All,The following statement contains a magic number: list.Add (new ChristianDayInfo {  	DisplayName = "Ascension"'  	EnglishName = "Ascension"'  	IsHolliday = true'  	NativeName = "Ascension"'  	Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 39)  });  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,All,The following statement contains a magic number: list.Add (new ChristianDayInfo {  	DisplayName = "Lundi de Pentecote"'  	EnglishName = "pentecode_totransalate"'  	IsHolliday = true'  	NativeName = "Lundi de Pentecote"'  	Definition = new DayDefinition ().DaysAfter (SpecialDays.ChristianEaster' 50)  });  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,All,The following statement contains a magic number: list.Add (new ChristianDayInfo {  	DisplayName = "Assomption"'  	EnglishName = "Assumption "'  	IsHolliday = true'  	NativeName = "Assomption"'  	Definition = new DayDefinition (15' Months.August)  });  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,All,The following statement contains a magic number: list.Add (new ChristianDayInfo {  	DisplayName = "Noël"'  	EnglishName = "Christmas"'  	IsHolliday = true'  	NativeName = "Noël"'  	Definition = new DayDefinition (25' Months.December)  });  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,GetEasterSunday,The following statement contains a magic number: day = i - ((year + (int)(year / 4) + i + 2 - c + (int)(c / 4)) % 7) + 28;  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,GetEasterSunday,The following statement contains a magic number: day = i - ((year + (int)(year / 4) + i + 2 - c + (int)(c / 4)) % 7) + 28;  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,GetEasterSunday,The following statement contains a magic number: day = i - ((year + (int)(year / 4) + i + 2 - c + (int)(c / 4)) % 7) + 28;  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,GetEasterSunday,The following statement contains a magic number: day = i - ((year + (int)(year / 4) + i + 2 - c + (int)(c / 4)) % 7) + 28;  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,GetEasterSunday,The following statement contains a magic number: day = i - ((year + (int)(year / 4) + i + 2 - c + (int)(c / 4)) % 7) + 28;  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,GetEasterSunday,The following statement contains a magic number: month = 3;  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,GetEasterSunday,The following statement contains a magic number: if (day > 31) {  	month++;  	day -= 31;  }  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,GetEasterSunday,The following statement contains a magic number: if (day > 31) {  	month++;  	day -= 31;  }  
Magic Number,DayInfo,ChristianDayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\ChristianDayInfo.cs,GetEasterSunday,The following statement contains a magic number: day -= 31;  
Magic Number,DayInfo,DayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\DayInfo.cs,GetLinksFromRessource,The following statement contains a magic number: if (linksAndtitle.Length <= 1) {  	yield return new Url {  		URL = rawLinks  	};  }  else {  	foreach (string linkAntTitle in linksAndtitle) {  		string[] parts = linkAntTitle.Split (new char[] {  			':'  		});  		if (parts.Length != 2) {  			yield return new Url {  				URL = linkAntTitle  			};  		}  		else {  			yield return new Url {  				Title = parts [0]'  				URL = parts [1]  			};  		}  	}  }  
Magic Number,DayInfo,DayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\DayInfo.cs,GetLinksFromRessource,The following statement contains a magic number: foreach (string linkAntTitle in linksAndtitle) {  	string[] parts = linkAntTitle.Split (new char[] {  		':'  	});  	if (parts.Length != 2) {  		yield return new Url {  			URL = linkAntTitle  		};  	}  	else {  		yield return new Url {  			Title = parts [0]'  			URL = parts [1]  		};  	}  }  
Magic Number,DayInfo,DayInfo,C:\repos\sambeauvois_DayInfo\DayInfo\DayInfo.cs,GetLinksFromRessource,The following statement contains a magic number: if (parts.Length != 2) {  	yield return new Url {  		URL = linkAntTitle  	};  }  else {  	yield return new Url {  		Title = parts [0]'  		URL = parts [1]  	};  }  
Magic Number,DayInfo.Europe,Belgium,C:\repos\sambeauvois_DayInfo\DayInfo\Europe\Belgium.cs,GetHollidays,The following statement contains a magic number: return new Belgium[] {  	new Belgium {  		DisplayName = "Nouvel an"'  		EnglishName = "New Year"'  		IsHolliday = true'  		NativeName = "Nouvel an"'  		Definition = new DayDefinition (1' Months.January)  	}'  	new Belgium {  		DisplayName = Localized.LabourDayTitle'  		DisplayDescription = Localized.LabourDayDescription'  		DisplayInfoURL = Localized.LabourDayLink'  		EnglishName = "Labour Day"'  		IsHolliday = true'  		NativeName = "Fête du travail"'  		Definition = new DayDefinition (1' Months.May)  	}'  	new Belgium {  		DisplayName = Localized.NationalDayTitle'  		DisplayDescription = Localized.NationalDayDescription'  		DisplayInfoURL = Localized.NationalDayLink'  		EnglishName = "National Day"'  		IsHolliday = true'  		NativeName = "Fête nationale"'  		Definition = new DayDefinition (21' Months.July)  	}'  	new Belgium {  		DisplayName = Localized.ArmisticeTitle'  		DisplayDescription = Localized.ArmisticeDescription'  		DisplayInfoURL = Localized.ArmisticeLink'  		EnglishName = "First Armistice"'  		IsHolliday = true'  		NativeName = "Armistice de 1918"'  		Definition = new DayDefinition (11' Months.November)'  		DisplayInfoURLs = GetLinksFromRessource (Localized.ArmisticeLinks)  	}  };  
Magic Number,DayInfo.Europe,Belgium,C:\repos\sambeauvois_DayInfo\DayInfo\Europe\Belgium.cs,GetHollidays,The following statement contains a magic number: return new Belgium[] {  	new Belgium {  		DisplayName = "Nouvel an"'  		EnglishName = "New Year"'  		IsHolliday = true'  		NativeName = "Nouvel an"'  		Definition = new DayDefinition (1' Months.January)  	}'  	new Belgium {  		DisplayName = Localized.LabourDayTitle'  		DisplayDescription = Localized.LabourDayDescription'  		DisplayInfoURL = Localized.LabourDayLink'  		EnglishName = "Labour Day"'  		IsHolliday = true'  		NativeName = "Fête du travail"'  		Definition = new DayDefinition (1' Months.May)  	}'  	new Belgium {  		DisplayName = Localized.NationalDayTitle'  		DisplayDescription = Localized.NationalDayDescription'  		DisplayInfoURL = Localized.NationalDayLink'  		EnglishName = "National Day"'  		IsHolliday = true'  		NativeName = "Fête nationale"'  		Definition = new DayDefinition (21' Months.July)  	}'  	new Belgium {  		DisplayName = Localized.ArmisticeTitle'  		DisplayDescription = Localized.ArmisticeDescription'  		DisplayInfoURL = Localized.ArmisticeLink'  		EnglishName = "First Armistice"'  		IsHolliday = true'  		NativeName = "Armistice de 1918"'  		Definition = new DayDefinition (11' Months.November)'  		DisplayInfoURLs = GetLinksFromRessource (Localized.ArmisticeLinks)  	}  };  
Magic Number,DayInfo.Europe,France,C:\repos\sambeauvois_DayInfo\DayInfo\Europe\France.cs,GetHollidays,The following statement contains a magic number: return new France[] {  	new France {  		DisplayName = "Nouvel an"'  		EnglishName = "New Year"'  		IsHolliday = true'  		NativeName = "Nouvel an"'  		Definition = new DayDefinition (1' Months.January)  	}'  	new France {  		DisplayName = "Fête du travail"'  		EnglishName = "Labour Day"'  		IsHolliday = true'  		NativeName = "Fête du travail"'  		Definition = new DayDefinition (1' Months.May)  	}'  	new France {  		DisplayName = "Fête nationale"'  		EnglishName = "National Day"'  		IsHolliday = true'  		NativeName = "Fête nationale"'  		Definition = new DayDefinition (14' Months.July)  	}  };  
Magic Number,DayInfo.Europe,Luxembourg,C:\repos\sambeauvois_DayInfo\DayInfo\Europe\Luxembourg.cs,GetHollidays,The following statement contains a magic number: return new Luxembourg[] {  	new Luxembourg {  		DisplayName = "Nouvel an"'  		EnglishName = "New Year"'  		IsHolliday = true'  		NativeName = "Nouvel an"'  		Definition = new DayDefinition (1' Months.January)  	}'  	new Luxembourg {  		DisplayName = "Fête du travail"'  		EnglishName = "Labour Day"'  		IsHolliday = true'  		NativeName = "Fête du travail"'  		Definition = new DayDefinition (1' Months.May)  	}'  	new Luxembourg {  		DisplayName = Localized.NationalDayTitle'  		EnglishName = "National Day"'  		IsHolliday = true'  		NativeName = "Fête nationale"'  		Definition = new DayDefinition (23' Months.June)  	}'  	new Luxembourg {  		DisplayName = "St Etienne"'  		EnglishName = "St Etienne"'  		IsHolliday = true'  		NativeName = "St Etienne"'  		Definition = new DayDefinition (26' Months.December)  	}  };  
Magic Number,DayInfo.Europe,Luxembourg,C:\repos\sambeauvois_DayInfo\DayInfo\Europe\Luxembourg.cs,GetHollidays,The following statement contains a magic number: return new Luxembourg[] {  	new Luxembourg {  		DisplayName = "Nouvel an"'  		EnglishName = "New Year"'  		IsHolliday = true'  		NativeName = "Nouvel an"'  		Definition = new DayDefinition (1' Months.January)  	}'  	new Luxembourg {  		DisplayName = "Fête du travail"'  		EnglishName = "Labour Day"'  		IsHolliday = true'  		NativeName = "Fête du travail"'  		Definition = new DayDefinition (1' Months.May)  	}'  	new Luxembourg {  		DisplayName = Localized.NationalDayTitle'  		EnglishName = "National Day"'  		IsHolliday = true'  		NativeName = "Fête nationale"'  		Definition = new DayDefinition (23' Months.June)  	}'  	new Luxembourg {  		DisplayName = "St Etienne"'  		EnglishName = "St Etienne"'  		IsHolliday = true'  		NativeName = "St Etienne"'  		Definition = new DayDefinition (26' Months.December)  	}  };  
Magic Number,DayInfo.Extensions,DateTimeExtensions,C:\repos\sambeauvois_DayInfo\DayInfo\Extensions\DateTimeExtensions.cs,Next,The following statement contains a magic number: return date.AddDays ((dayOfWeek < date.DayOfWeek ? 7 : 0) + dayOfWeek - date.DayOfWeek);  
Magic Number,DayInfo.Internals,DayDefinition,C:\repos\sambeauvois_DayInfo\DayInfo\Internals\DayDefinition.cs,GetForYear,The following statement contains a magic number: if (this.CalculationType == CalculationTypes.fixedDay) {  	return new DateTime (year' (int)this.FixedMonth' this.FixedDay);  }  else {  	DateTime referenceDay = new DateTime (year' 1' 1);  	switch (this.ReferenceDay) {  	case SpecialDays.ChristianEaster:  		{  			referenceDay = ChristianDayInfo.GetEasterSunday (year);  		}  		break;  	default: {  		return referenceDay;  	}  	}  	switch (this.TimeRelationUnit) {  	case TimeRelationUnits.Months: {  		return referenceDay.AddMonths ((int)this.TimeRelation * this.RelativeValue);  	}  	case TimeRelationUnits.Days: {  		return referenceDay.AddDays ((int)this.TimeRelation * this.RelativeValue);  	}  	case TimeRelationUnits.Weeks: {  		return referenceDay.AddDays ((int)this.TimeRelation * this.RelativeValue * 7);  	}  	default: {  		return referenceDay;  	}  	}  }  
Magic Number,DayInfo.Internals,DayDefinition,C:\repos\sambeauvois_DayInfo\DayInfo\Internals\DayDefinition.cs,GetForYear,The following statement contains a magic number: switch (this.TimeRelationUnit) {  case TimeRelationUnits.Months: {  	return referenceDay.AddMonths ((int)this.TimeRelation * this.RelativeValue);  }  case TimeRelationUnits.Days: {  	return referenceDay.AddDays ((int)this.TimeRelation * this.RelativeValue);  }  case TimeRelationUnits.Weeks: {  	return referenceDay.AddDays ((int)this.TimeRelation * this.RelativeValue * 7);  }  default: {  	return referenceDay;  }  }  
Magic Number,DayInfo.Internals,DayDefinition,C:\repos\sambeauvois_DayInfo\DayInfo\Internals\DayDefinition.cs,GetForYear,The following statement contains a magic number: return referenceDay.AddDays ((int)this.TimeRelation * this.RelativeValue * 7);  
