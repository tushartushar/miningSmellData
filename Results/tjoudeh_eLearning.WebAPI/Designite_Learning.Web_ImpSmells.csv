Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Learning.Web.Controllers,StudentsV2Controller,C:\repos\tjoudeh_eLearning.WebAPI\Learning.Web\Controllers\StudentsV2Controller.cs,Delete,The length of the statement  "                    return Request.CreateResponse(HttpStatusCode.BadRequest' "Can not delete student' student has enrollments in courses."); " is 120.
Long Statement,Learning.Web.Controllers,CoursesController,C:\repos\tjoudeh_eLearning.WebAPI\Learning.Web\Controllers\CoursesController.cs,Put,The length of the statement  "                if (updatedCourse == null) Request.CreateErrorResponse(HttpStatusCode.BadRequest' "Could not read subject/tutor from body"); " is 124.
Long Statement,Learning.Web.Controllers,EnrollmentsController,C:\repos\tjoudeh_eLearning.WebAPI\Learning.Web\Controllers\EnrollmentsController.cs,Post,The length of the statement  "                if (!TheRepository.CourseExists(courseId)) return Request.CreateErrorResponse(HttpStatusCode.BadRequest' "Could not find Course"); " is 130.
Long Statement,Learning.Web.Controllers,StudentsController,C:\repos\tjoudeh_eLearning.WebAPI\Learning.Web\Controllers\StudentsController.cs,Delete,The length of the statement  "                    return Request.CreateResponse(HttpStatusCode.BadRequest' "Can not delete student' student has enrollments in courses."); " is 120.
Long Statement,Learning.Web.Services,LearningControllerSelector,C:\repos\tjoudeh_eLearning.WebAPI\Learning.Web\Services\LearningControllerSelector.cs,SelectController,The length of the statement  "            var controllers = GetControllerMapping(); //Will ignore any controls in same name even if they are in different namepsace " is 121.
Long Statement,Learning.Web.Services,NinjectWebApiFilterProvider,C:\repos\tjoudeh_eLearning.WebAPI\Learning.Web\Services\NinjectWebApiFilterProvider.cs,GetFilters,The length of the statement  "            var controllerFilters = actionDescriptor.ControllerDescriptor.GetFilters().Select(instance => new FilterInfo(instance' FilterScope.Controller)); " is 144.
Magic Number,Learning.Web.Controllers,EnrollmentsController,C:\repos\tjoudeh_eLearning.WebAPI\Learning.Web\Controllers\EnrollmentsController.cs,Post,The following statement contains a magic number: try              {                    if (!TheRepository.CourseExists(courseId)) return Request.CreateErrorResponse(HttpStatusCode.BadRequest' "Could not find Course");                    var student = TheRepository.GetStudent(userName);                  if (student == null) return Request.CreateErrorResponse(HttpStatusCode.BadRequest' "Could not find Student");                    var result = TheRepository.EnrollStudentInCourse(student.Id' courseId' enrollment);                    if (result == 1)                  {                      return Request.CreateResponse(HttpStatusCode.Created);                  }                  else if (result == 2)                  {                      return Request.CreateResponse(HttpStatusCode.NotModified' "Student already enrolled in this course");                  }                    return Request.CreateResponse(HttpStatusCode.BadRequest);                }              catch (Exception ex)              {                  return Request.CreateErrorResponse(HttpStatusCode.BadRequest' ex);              }
Magic Number,Learning.Web.Filters,ForceHttpsAttribute,C:\repos\tjoudeh_eLearning.WebAPI\Learning.Web\Filters\ForceHttpsAttribute.cs,OnAuthorization,The following statement contains a magic number: if (request.RequestUri.Scheme != Uri.UriSchemeHttps)              {                  var html = "<p>Https is required</p>";                    if (request.Method.Method == "GET")                  {                      actionContext.Response = request.CreateResponse(HttpStatusCode.Found);                      actionContext.Response.Content = new StringContent(html' Encoding.UTF8' "text/html");                        UriBuilder httpsNewUri = new UriBuilder(request.RequestUri);                      httpsNewUri.Scheme = Uri.UriSchemeHttps;                      httpsNewUri.Port = 443;                        actionContext.Response.Headers.Location = httpsNewUri.Uri;                  }                  else                  {                      actionContext.Response = request.CreateResponse(HttpStatusCode.NotFound);                      actionContext.Response.Content = new StringContent(html' Encoding.UTF8' "text/html");                  }                }
