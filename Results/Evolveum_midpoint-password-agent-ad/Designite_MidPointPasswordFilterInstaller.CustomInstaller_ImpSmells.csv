Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MidPointPasswordFilterInstaller.CustomInstaller,MidPointPasswordFilterInstaller,C:\repos\Evolveum_midpoint-password-agent-ad\MidPointPasswordFilterInstaller.CustomInstaller\MidPointPasswordFilterInstaller.cs,Commit,Cyclomatic complexity of the method is 20
Long Statement,MidPointPasswordFilterInstaller.CustomInstaller,MidPointPasswordFilterInstaller,C:\repos\Evolveum_midpoint-password-agent-ad\MidPointPasswordFilterInstaller.CustomInstaller\MidPointPasswordFilterInstaller.cs,Commit,The length of the statement  "						childNode.Attributes.GetNamedItem ("value").Value = string.IsNullOrEmpty (UserName.Trim ()) ? "null" : Encryptor.Encrypt (UserName); " is 132.
Long Statement,MidPointPasswordFilterInstaller.CustomInstaller,MidPointPasswordFilterInstaller,C:\repos\Evolveum_midpoint-password-agent-ad\MidPointPasswordFilterInstaller.CustomInstaller\MidPointPasswordFilterInstaller.cs,Commit,The length of the statement  "						childNode.Attributes.GetNamedItem ("value").Value = string.IsNullOrEmpty (Password.Trim ()) ? "null" : Encryptor.Encrypt (Password); " is 132.
Magic Number,MidPointPasswordFilterInstaller.CustomInstaller,Encryptor,C:\repos\Evolveum_midpoint-password-agent-ad\MidPointPasswordFilterInstaller.CustomInstaller\Encryptor.cs,RunEncryptorFile,The following statement contains a magic number: if (process.WaitForExit ((int)TimeSpan.FromSeconds (10).TotalMilliseconds)) {  	var result = process.StandardOutput.ReadToEnd ();  	// Strip the start and end tags from decrypted password string  	string[] stringLines = result.Split (new char[] {  		'\n'  	});  	bool start = false;  	foreach (string line in stringLines) {  		string trimmedLine = line.TrimEnd (new char[] {  			'\r''  			'\n'  		});  		if (start) {  			if (trimmedLine == endTag) {  				// Found end tag - stop parsing decrypted string  				// Don't want to add end tag to decrypted string  				Console.WriteLine ("endtag");  				break;  			}  			else {  				// If the line is between start and end tags then append it to decrypted string  				newPassword += trimmedLine;  				Console.WriteLine ("running encrypt: '" + newPassword + "'");  			}  		}  		else if (trimmedLine == startTag) {  			// Found start tag - must check this AFTER attempting to add to decrypted string   			// Otherwise the start tag would be added to the decrypted string  			start = true;  			Console.WriteLine ("start tag");  		}  	}  }  
