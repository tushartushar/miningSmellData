Implementation smell,Namespace,Class,File,Method,Description
Long Method,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The method has 121 lines of code.
Long Method,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHuffman,The method has 103 lines of code.
Long Method,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,Decode,The method has 108 lines of code.
Long Method,ICSharpCode.SharpZipLib.Zip.Compression,InflaterDynHeader,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterDynHeader.cs,Decode,The method has 116 lines of code.
Long Method,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestArchive,The method has 105 lines of code.
Long Method,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The method has 221 lines of code.
Long Method,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,RunUpdates,The method has 111 lines of code.
Long Method,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,ReadEntries,The method has 147 lines of code.
Long Method,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,GetNextEntry,The method has 105 lines of code.
Long Method,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,PutNextEntry,The method has 193 lines of code.
Long Method,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,Finish,The method has 118 lines of code.
Complex Method,ICSharpCode.SharpZipLib.Checksums,Adler32,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Checksums\Adler32.cs,Update,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpZipLib.Core,FileSystemScanner,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Core\FileSystemScanner.cs,ScanDir,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.SharpZipLib.Core,NameFilter,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Core\NameFilter.cs,SplitQuoted,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpZipLib.Core,StreamUtils,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Core\StreamUtils.cs,Copy,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.SharpZipLib.Core,WindowsPathUtils,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Core\WindowsPathUtils.cs,DropPathRoot,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpZipLib.Encryption,ZipAESStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\ZipAESStream.cs,Read,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,Deflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Deflater.cs,Deflate,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,SetLevel,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,DeflateFast,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,DeflateSlow,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,FlushBlock,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,CalcBLFreq,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,WriteTree,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildLength,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHuffman,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,Decode,Cyclomatic complexity of the method is 23
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpZipLib.Zip,FastZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\FastZip.cs,ExtractZip,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpZipLib.Zip,FastZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\FastZip.cs,ExtractFileEntry,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.SharpZipLib.Zip,FastZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\FastZip.cs,ExtractEntry,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpZipLib.Zip,WindowsNameTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\WindowsNameTransform.cs,MakeValidName,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipEntry,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipEntry.cs,ProcessExtraData,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipEntryFactory,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipEntryFactory.cs,MakeFileEntry,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipEntryFactory,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipEntryFactory.cs,MakeDirectoryEntry,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestArchive,Cyclomatic complexity of the method is 19
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,Cyclomatic complexity of the method is 42
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,BeginUpdate,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,WriteLocalEntryHeader,Cyclomatic complexity of the method is 19
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,WriteCentralDirectoryHeader,Cyclomatic complexity of the method is 17
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,RunUpdates,Cyclomatic complexity of the method is 20
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,ReadEntries,Cyclomatic complexity of the method is 14
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,WriteLocalHeader,Cyclomatic complexity of the method is 14
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,GetNextEntry,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,CloseEntry,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,InitialRead,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,BodyRead,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,PutNextEntry,Cyclomatic complexity of the method is 33
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,CloseEntry,Cyclomatic complexity of the method is 18
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,Finish,Cyclomatic complexity of the method is 19
Long Parameter List,ICSharpCode.SharpZipLib.Core,ExtendedPathFilter,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Core\PathFilter.cs,ExtendedPathFilter,The method has 5 parameters. Parameters: filter' minSize' maxSize' minDate' maxDate
Long Parameter List,ICSharpCode.SharpZipLib.Core,StreamUtils,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Core\StreamUtils.cs,Copy,The method has 7 parameters. Parameters: source' destination' buffer' progressHandler' updateInterval' sender' name
Long Parameter List,ICSharpCode.SharpZipLib.Core,StreamUtils,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Core\StreamUtils.cs,Copy,The method has 8 parameters. Parameters: source' destination' buffer' progressHandler' updateInterval' sender' name' fixedTarget
Long Parameter List,ICSharpCode.SharpZipLib.Encryption,PkzipClassicEncryptCryptoTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,TransformBlock,The method has 5 parameters. Parameters: inputBuffer' inputOffset' inputCount' outputBuffer' outputOffset
Long Parameter List,ICSharpCode.SharpZipLib.Encryption,PkzipClassicDecryptCryptoTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,TransformBlock,The method has 5 parameters. Parameters: inputBuffer' inputOffset' inputCount' outputBuffer' outputOffset
Long Parameter List,ICSharpCode.SharpZipLib.Encryption,ZipAESTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\ZipAESTransform.cs,TransformBlock,The method has 5 parameters. Parameters: inputBuffer' inputOffset' inputCount' outputBuffer' outputOffset
Long Parameter List,ICSharpCode.SharpZipLib.Zip.Compression.Streams,DeflaterOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\DeflaterOutputStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,ICSharpCode.SharpZipLib.Zip.Compression.Streams,DeflaterOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\DeflaterOutputStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InflaterInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\InflaterInputStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,ICSharpCode.SharpZipLib.Zip,FastZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\FastZip.cs,CreateZip,The method has 5 parameters. Parameters: zipFileName' sourceDirectory' recurse' fileFilter' directoryFilter
Long Parameter List,ICSharpCode.SharpZipLib.Zip,FastZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\FastZip.cs,CreateZip,The method has 5 parameters. Parameters: outputStream' sourceDirectory' recurse' fileFilter' directoryFilter
Long Parameter List,ICSharpCode.SharpZipLib.Zip,FastZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\FastZip.cs,ExtractZip,The method has 7 parameters. Parameters: zipFileName' targetDirectory' overwrite' confirmDelegate' fileFilter' directoryFilter' restoreDateTime
Long Parameter List,ICSharpCode.SharpZipLib.Zip,FastZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\FastZip.cs,ExtractZip,The method has 8 parameters. Parameters: inputStream' targetDirectory' overwrite' confirmDelegate' fileFilter' directoryFilter' restoreDateTime' isStreamOwner
Long Parameter List,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,CopyBytes,The method has 5 parameters. Parameters: update' destination' source' bytesToCopy' updateCrc
Long Parameter List,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,CopyEntryDataDirect,The method has 5 parameters. Parameters: update' stream' updateCrc' destinationPosition' sourcePosition
Long Identifier,ICSharpCode.SharpZipLib.Zip,ZipConstants,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipConstants.cs,,The length of the parameter Zip64CentralFileHeaderSignature is 31.
Long Identifier,ICSharpCode.SharpZipLib.Zip,ZipConstants,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipConstants.cs,,The length of the parameter Zip64CentralDirLocatorSignature is 31.
Long Identifier,ICSharpCode.SharpZipLib.Zip,ZipConstants,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipConstants.cs,,The length of the parameter EndOfCentralDirectorySignature is 30.
Long Identifier,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,UpdateCommentOnly,The length of the parameter CentralHeaderCommentSizeOffset is 30.
Long Statement,d2mp,UnZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\D2MPClient\UnZip.cs,unzipFromStream,The length of the statement  "            ZipConstants.DefaultCodePage = 850;//force the use of this codepage to unzip. Multilingual (Latin-1) (Western European languages) " is 129.
Long Statement,ICSharpCode.SharpZipLib.Encryption,ZipAESStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\ZipAESStream.cs,Read,The length of the statement  "							throw new Exception("AES Authentication Code does not match. This is a super-CRC check on the data in the file after compression and encryption. \r\n" " is 150.
Long Statement,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,DeflateSlow,The length of the statement  "						if (matchLen <= 5 && (strategy == DeflateStrategy.Filtered || (matchLen == MIN_MATCH && strstart - matchStart > TooFar))) { " is 123.
Long Statement,ICSharpCode.SharpZipLib.Zip,FastZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\FastZip.cs,ExtractZip,The length of the statement  "			ExtractZip(inputStream' targetDirectory' overwrite' confirmDelegate' fileFilter' directoryFilter' restoreDateTime' true); " is 121.
Long Statement,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The length of the statement  "						if ( (localFlags & ( int )(GeneralBitFlags.Patched | GeneralBitFlags.StrongEncryption | GeneralBitFlags.EnhancedCompress | GeneralBitFlags.HeaderMasked)) != 0 ) { " is 162.
Long Statement,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The length of the statement  "                    if ((localFlags & (int)(GeneralBitFlags.ReservedPKware4 | GeneralBitFlags.ReservedPkware14 | GeneralBitFlags.ReservedPkware15)) != 0) " is 133.
Long Statement,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The length of the statement  "                        throw new ZipException(string.Format("Version required to extract this entry is too low for encryption ({0})"' extractVersion)); " is 128.
Long Statement,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The length of the statement  "                            throw new ZipException(string.Format("Version required to extract this entry is too low for encryption ({0})"' extractVersion)); " is 128.
Long Statement,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,ReadEntries,The length of the statement  "				long offset = LocateBlockWithSignature(ZipConstants.Zip64CentralDirLocatorSignature' locatedEndOfCentralDir' 0' 0x1000); " is 120.
Long Statement,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,GetNextEntry,The length of the statement  "			if (method == (int)CompressionMethod.Stored && (!isCrypted && csize != size || (isCrypted && csize - ZipConstants.CryptoHeaderSize != size))) { " is 143.
Complex Conditional,ICSharpCode.SharpZipLib.Core,WindowsPathUtils,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Core\WindowsPathUtils.cs,DropPathRoot,The conditional expression  "(index <= path.Length) &&  							(((path[index] != '\\') && (path[index] != '/')) || (--elements > 0))"  is complex.
Complex Conditional,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,FindLongestMatch,The conditional expression  "window[curMatch + best_len] != scan_end      ||   					window[curMatch + best_len - 1] != scan_end1 ||   					window[curMatch] != window[scan]             ||   					window[curMatch + 1] != window[scan + 1]"  is complex.
Complex Conditional,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,FindLongestMatch,The conditional expression  "window[++scan] == window[++match] &&   					window[++scan] == window[++match] &&   					window[++scan] == window[++match] &&   					window[++scan] == window[++match] &&   					window[++scan] == window[++match] &&   					window[++scan] == window[++match] &&   					window[++scan] == window[++match] &&   					window[++scan] == window[++match] &&  					(scan < strend)"  is complex.
Complex Conditional,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,DeflateStored,The conditional expression  "(storedLength >= DeflaterConstants.MAX_BLOCK_SIZE) || // Block is full  				(blockStart < WSIZE && storedLength >= MAX_DIST) ||   // Block may move out of window  				flush"  is complex.
Complex Conditional,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,DeflateFast,The conditional expression  "lookahead >= MIN_MATCH &&   					(hashHead = InsertString()) != 0 &&   					strategy != DeflateStrategy.HuffmanOnly &&  					strstart - hashHead <= MAX_DIST &&   					FindLongestMatch(hashHead)"  is complex.
Complex Conditional,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,DeflateSlow,The conditional expression  "strategy != DeflateStrategy.HuffmanOnly &&  						hashHead != 0 &&  						strstart - hashHead <= MAX_DIST &&  						FindLongestMatch(hashHead)"  is complex.
Complex Conditional,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,DeflateSlow,The conditional expression  "matchLen <= 5 && (strategy == DeflateStrategy.Filtered || (matchLen == MIN_MATCH && strstart - matchStart > TooFar))"  is complex.
Complex Conditional,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The conditional expression  "(extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)"  is complex.
Complex Conditional,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,ReadEntries,The conditional expression  "(thisDiskNumber == 0xffff) ||  				(startCentralDirDisk == 0xffff) ||  				(entriesForThisDisk == 0xffff) ||  				(entriesForWholeCentralDir == 0xffff) ||  				(centralDirSize == 0xffffffff) ||  				(offsetOfCentralDir == 0xffffffff)"  is complex.
Complex Conditional,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,GetNextEntry,The conditional expression  "header == ZipConstants.CentralHeaderSignature ||  				header == ZipConstants.EndOfCentralDirectorySignature ||  				header == ZipConstants.CentralHeaderDigitalSignature ||  				header == ZipConstants.ArchiveExtraDataSignature ||  				header == ZipConstants.Zip64CentralFileHeaderSignature"  is complex.
Complex Conditional,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,GetNextEntry,The conditional expression  "method == (int)CompressionMethod.Stored && (!isCrypted && csize != size || (isCrypted && csize - ZipConstants.CryptoHeaderSize != size))"  is complex.
Complex Conditional,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,BodyRead,The conditional expression  "(flags & 8) == 0 &&  							(inf.TotalIn != csize && csize != 0xFFFFFFFF && csize != -1 || inf.TotalOut != size)"  is complex.
Empty Catch Block,d2mp,UnZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\D2MPClient\UnZip.cs,unzipFromStream,The method has an empty catch block.
Magic Number,d2mp,UnZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\D2MPClient\UnZip.cs,unzipFromStream,The following statement contains a magic number: ZipConstants.DefaultCodePage = 850;
Magic Number,d2mp,UnZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\D2MPClient\UnZip.cs,unzipFromStream,The following statement contains a magic number: byte[] buffer = new byte[4096];
Magic Number,ICSharpCode.SharpZipLib.Checksums,Adler32,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Checksums\Adler32.cs,Update,The following statement contains a magic number: uint s2 = checksum >> 16;
Magic Number,ICSharpCode.SharpZipLib.Checksums,Adler32,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Checksums\Adler32.cs,Update,The following statement contains a magic number: checksum = (s2 << 16) + s1;
Magic Number,ICSharpCode.SharpZipLib.Checksums,Adler32,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Checksums\Adler32.cs,Update,The following statement contains a magic number: uint s2 = checksum >> 16;
Magic Number,ICSharpCode.SharpZipLib.Checksums,Adler32,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Checksums\Adler32.cs,Update,The following statement contains a magic number: int n = 3800;
Magic Number,ICSharpCode.SharpZipLib.Checksums,Adler32,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Checksums\Adler32.cs,Update,The following statement contains a magic number: checksum = (s2 << 16) | s1;
Magic Number,ICSharpCode.SharpZipLib.Checksums,Crc32,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Checksums\CRC32.cs,ComputeCrc32,The following statement contains a magic number: return (uint)(Crc32.CrcTable[(oldCrc ^ value) & 0xFF] ^ (oldCrc >> 8));
Magic Number,ICSharpCode.SharpZipLib.Checksums,Crc32,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Checksums\CRC32.cs,Update,The following statement contains a magic number: crc  = CrcTable[(crc ^ value) & 0xFF] ^ (crc >> 8);
Magic Number,ICSharpCode.SharpZipLib.Checksums,Crc32,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Checksums\CRC32.cs,Update,The following statement contains a magic number: crc = CrcTable[(crc ^ buffer[offset++]) & 0xFF] ^ (crc >> 8);
Magic Number,ICSharpCode.SharpZipLib.Checksums,StrangeCRC,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Checksums\StrangeCRC.cs,Update,The following statement contains a magic number: int temp = (globalCrc >> 24) ^ value;
Magic Number,ICSharpCode.SharpZipLib.Checksums,StrangeCRC,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Checksums\StrangeCRC.cs,Update,The following statement contains a magic number: temp = 256 + temp;
Magic Number,ICSharpCode.SharpZipLib.Checksums,StrangeCRC,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Checksums\StrangeCRC.cs,Update,The following statement contains a magic number: globalCrc = unchecked((int)((globalCrc << 8) ^ crc32Table[temp]));
Magic Number,ICSharpCode.SharpZipLib.Core,StreamUtils,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Core\StreamUtils.cs,Copy,The following statement contains a magic number: buffer.Length < 128
Magic Number,ICSharpCode.SharpZipLib.Core,StreamUtils,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Core\StreamUtils.cs,Copy,The following statement contains a magic number: buffer.Length < 128
Magic Number,ICSharpCode.SharpZipLib.Core,WindowsPathUtils,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Core\WindowsPathUtils.cs,DropPathRoot,The following statement contains a magic number: int index = 2;
Magic Number,ICSharpCode.SharpZipLib.Core,WindowsPathUtils,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Core\WindowsPathUtils.cs,DropPathRoot,The following statement contains a magic number: int elements = 2;
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: newKeys[1] = newKeys[1] * 134775813 + 1;
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: newKeys[2] = Crc32.ComputeCrc32(newKeys[2]' (byte)(newKeys[1] >> 24));
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: newKeys[2] = Crc32.ComputeCrc32(newKeys[2]' (byte)(newKeys[1] >> 24));
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: newKeys[2] = Crc32.ComputeCrc32(newKeys[2]' (byte)(newKeys[1] >> 24));
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: byte[] result = new byte[12];
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[1] = (byte)((newKeys[0] >> 8) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[2] = (byte)((newKeys[0] >> 16) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[2] = (byte)((newKeys[0] >> 16) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[3] = (byte)((newKeys[0] >> 24) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[3] = (byte)((newKeys[0] >> 24) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[4] = (byte)(newKeys[1] & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[5] = (byte)((newKeys[1] >> 8) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[5] = (byte)((newKeys[1] >> 8) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[6] = (byte)((newKeys[1] >> 16) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[6] = (byte)((newKeys[1] >> 16) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[7] = (byte)((newKeys[1] >> 24) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[7] = (byte)((newKeys[1] >> 24) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[8] = (byte)(newKeys[2] & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[8] = (byte)(newKeys[2] & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[9] = (byte)((newKeys[2] >> 8) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[9] = (byte)((newKeys[2] >> 8) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[9] = (byte)((newKeys[2] >> 8) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[10] = (byte)((newKeys[2] >> 16) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[10] = (byte)((newKeys[2] >> 16) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[10] = (byte)((newKeys[2] >> 16) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[11] = (byte)((newKeys[2] >> 24) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[11] = (byte)((newKeys[2] >> 24) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassic,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKeys,The following statement contains a magic number: result[11] = (byte)((newKeys[2] >> 24) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,TransformByte,The following statement contains a magic number: uint temp = ((keys[2] & 0xFFFF) | 2);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,TransformByte,The following statement contains a magic number: uint temp = ((keys[2] & 0xFFFF) | 2);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,TransformByte,The following statement contains a magic number: return (byte)((temp * (temp ^ 1)) >> 8);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keyData.Length != 12
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys = new uint[3];
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[0] = (uint)((keyData[3] << 24) | (keyData[2] << 16) | (keyData[1] << 8) | keyData[0]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[0] = (uint)((keyData[3] << 24) | (keyData[2] << 16) | (keyData[1] << 8) | keyData[0]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[0] = (uint)((keyData[3] << 24) | (keyData[2] << 16) | (keyData[1] << 8) | keyData[0]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[0] = (uint)((keyData[3] << 24) | (keyData[2] << 16) | (keyData[1] << 8) | keyData[0]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[0] = (uint)((keyData[3] << 24) | (keyData[2] << 16) | (keyData[1] << 8) | keyData[0]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[1] = (uint)((keyData[7] << 24) | (keyData[6] << 16) | (keyData[5] << 8) | keyData[4]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[1] = (uint)((keyData[7] << 24) | (keyData[6] << 16) | (keyData[5] << 8) | keyData[4]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[1] = (uint)((keyData[7] << 24) | (keyData[6] << 16) | (keyData[5] << 8) | keyData[4]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[1] = (uint)((keyData[7] << 24) | (keyData[6] << 16) | (keyData[5] << 8) | keyData[4]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[1] = (uint)((keyData[7] << 24) | (keyData[6] << 16) | (keyData[5] << 8) | keyData[4]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[1] = (uint)((keyData[7] << 24) | (keyData[6] << 16) | (keyData[5] << 8) | keyData[4]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[1] = (uint)((keyData[7] << 24) | (keyData[6] << 16) | (keyData[5] << 8) | keyData[4]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[2] = (uint)((keyData[11] << 24) | (keyData[10] << 16) | (keyData[9] << 8) | keyData[8]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[2] = (uint)((keyData[11] << 24) | (keyData[10] << 16) | (keyData[9] << 8) | keyData[8]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[2] = (uint)((keyData[11] << 24) | (keyData[10] << 16) | (keyData[9] << 8) | keyData[8]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[2] = (uint)((keyData[11] << 24) | (keyData[10] << 16) | (keyData[9] << 8) | keyData[8]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[2] = (uint)((keyData[11] << 24) | (keyData[10] << 16) | (keyData[9] << 8) | keyData[8]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[2] = (uint)((keyData[11] << 24) | (keyData[10] << 16) | (keyData[9] << 8) | keyData[8]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[2] = (uint)((keyData[11] << 24) | (keyData[10] << 16) | (keyData[9] << 8) | keyData[8]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,SetKeys,The following statement contains a magic number: keys[2] = (uint)((keyData[11] << 24) | (keyData[10] << 16) | (keyData[9] << 8) | keyData[8]);
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,UpdateKeys,The following statement contains a magic number: keys[1] = keys[1] * 134775813 + 1;
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,UpdateKeys,The following statement contains a magic number: keys[2] = Crc32.ComputeCrc32(keys[2]' (byte)(keys[1] >> 24));
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,UpdateKeys,The following statement contains a magic number: keys[2] = Crc32.ComputeCrc32(keys[2]' (byte)(keys[1] >> 24));
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,UpdateKeys,The following statement contains a magic number: keys[2] = Crc32.ComputeCrc32(keys[2]' (byte)(keys[1] >> 24));
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicCryptoBase,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,Reset,The following statement contains a magic number: keys[2] = 0;
Magic Number,ICSharpCode.SharpZipLib.Encryption,PkzipClassicManaged,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\PkzipClassic.cs,GenerateKey,The following statement contains a magic number: key_ = new byte[12];
Magic Number,ICSharpCode.SharpZipLib.Encryption,ZipAESStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\ZipAESStream.cs,ZipAESStream,The following statement contains a magic number: _slideBuffer = new byte[1024];
Magic Number,ICSharpCode.SharpZipLib.Encryption,ZipAESTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\ZipAESTransform.cs,ZipAESTransform,The following statement contains a magic number: blockSize != 16 && blockSize != 32
Magic Number,ICSharpCode.SharpZipLib.Encryption,ZipAESTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\ZipAESTransform.cs,ZipAESTransform,The following statement contains a magic number: blockSize != 16 && blockSize != 32
Magic Number,ICSharpCode.SharpZipLib.Encryption,ZipAESTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\ZipAESTransform.cs,ZipAESTransform,The following statement contains a magic number: throw new Exception("Invalid salt len. Must be " + blockSize / 2 + " for blocksize " + blockSize);
Magic Number,ICSharpCode.SharpZipLib.Encryption,ZipAESTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Encryption\ZipAESTransform.cs,ZipAESTransform,The following statement contains a magic number: saltBytes.Length != blockSize / 2
Magic Number,D2MPClientInstaller,Program,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Program.cs,ShutdownD2MP,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,D2MPClientInstaller,Program,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Program.cs,ShutdownD2MP,The following statement contains a magic number: wait < 30 && Process.GetProcessesByName("d2mp").Length != 0
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Deflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Deflater.cs,Deflater,The following statement contains a magic number: level = 6;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Deflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Deflater.cs,SetLevel,The following statement contains a magic number: level = 6;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Deflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Deflater.cs,Deflate,The following statement contains a magic number: int header = (DEFLATED +  					((DeflaterConstants.MAX_WBITS - 8) << 4)) << 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Deflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Deflater.cs,Deflate,The following statement contains a magic number: int header = (DEFLATED +  					((DeflaterConstants.MAX_WBITS - 8) << 4)) << 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Deflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Deflater.cs,Deflate,The following statement contains a magic number: int header = (DEFLATED +  					((DeflaterConstants.MAX_WBITS - 8) << 4)) << 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Deflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Deflater.cs,Deflate,The following statement contains a magic number: level_flags = 3;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Deflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Deflater.cs,Deflate,The following statement contains a magic number: level_flags < 0 || level_flags > 3
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Deflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Deflater.cs,Deflate,The following statement contains a magic number: header |= level_flags << 6;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Deflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Deflater.cs,Deflate,The following statement contains a magic number: header += 31 - (header % 31);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Deflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Deflater.cs,Deflate,The following statement contains a magic number: header += 31 - (header % 31);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Deflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Deflater.cs,Deflate,The following statement contains a magic number: pending.WriteShortMSB(chksum >> 16);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,DeflaterEngine,The following statement contains a magic number: window = new byte[2 * WSIZE];
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,SetDictionary,The following statement contains a magic number: strstart += 2;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,SetLevel,The following statement contains a magic number: (level < 0) || (level > 9)
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,FillWindow,The following statement contains a magic number: int more = 2 * WSIZE - lookahead - strstart;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,FindLongestMatch,The following statement contains a magic number: chainLength >>= 2;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,FindLongestMatch,The following statement contains a magic number: match = curMatch + 2;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,FindLongestMatch,The following statement contains a magic number: scan += 2;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,DeflateFast,The following statement contains a magic number: strstart > 2 * WSIZE - MIN_LOOKAHEAD
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,DeflateSlow,The following statement contains a magic number: strstart >= 2 * WSIZE - MIN_LOOKAHEAD
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,DeflateSlow,The following statement contains a magic number: matchLen <= 5 && (strategy == DeflateStrategy.Filtered || (matchLen == MIN_MATCH && strstart - matchStart > TooFar))
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,DeflateSlow,The following statement contains a magic number: prevLen -= 2;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticLCodes[i] = BitReverse((0x030 + i) << 8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticLLength[i++] = 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: i < 144
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticLCodes[i] = BitReverse((0x190 - 144 + i) << 7);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticLCodes[i] = BitReverse((0x190 - 144 + i) << 7);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticLLength[i++] = 9;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: i < 256
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticLCodes[i] = BitReverse((0x000 - 256 + i) << 9);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticLCodes[i] = BitReverse((0x000 - 256 + i) << 9);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticLLength[i++] = 7;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: i < 280
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticLCodes[i] = BitReverse((0x0c0 - 280 + i)  << 8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticLCodes[i] = BitReverse((0x0c0 - 280 + i)  << 8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticLLength[i++] = 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticDCodes[i] = BitReverse(i << 11);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: staticDLength[i] = 5;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: literalTree = new Tree(this' LITERAL_NUM' 257' 15);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: literalTree = new Tree(this' LITERAL_NUM' 257' 15);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: distTree    = new Tree(this' DIST_NUM' 1' 15);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: blTree      = new Tree(this' BITLEN_NUM' 4' 7);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,DeflaterHuffman,The following statement contains a magic number: blTree      = new Tree(this' BITLEN_NUM' 4' 7);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,SendAllTrees,The following statement contains a magic number: pending.WriteBits(literalTree.numCodes - 257' 5);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,SendAllTrees,The following statement contains a magic number: pending.WriteBits(literalTree.numCodes - 257' 5);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,SendAllTrees,The following statement contains a magic number: pending.WriteBits(distTree.numCodes - 1' 5);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,SendAllTrees,The following statement contains a magic number: pending.WriteBits(blTreeCodes - 4' 4);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,SendAllTrees,The following statement contains a magic number: pending.WriteBits(blTreeCodes - 4' 4);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,SendAllTrees,The following statement contains a magic number: pending.WriteBits(blTree.length[BL_ORDER[rank]]' 3);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,CompressBlock,The following statement contains a magic number: int bits = (lc - 261) / 4;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,CompressBlock,The following statement contains a magic number: int bits = (lc - 261) / 4;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,CompressBlock,The following statement contains a magic number: bits > 0 && bits <= 5
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,CompressBlock,The following statement contains a magic number: bits = dc / 2 - 1;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,FlushStoredBlock,The following statement contains a magic number: pending.WriteBits((DeflaterConstants.STORED_BLOCK << 1) + (lastBlock ? 1 : 0)' 3);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,FlushBlock,The following statement contains a magic number: int blTreeCodes = 4;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,FlushBlock,The following statement contains a magic number: int opt_len = 14 + blTreeCodes * 3 + blTree.GetEncodedLength() +   				literalTree.GetEncodedLength() + distTree.GetEncodedLength() +   				extra_bits;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,FlushBlock,The following statement contains a magic number: int opt_len = 14 + blTreeCodes * 3 + blTree.GetEncodedLength() +   				literalTree.GetEncodedLength() + distTree.GetEncodedLength() +   				extra_bits;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,FlushBlock,The following statement contains a magic number: storedOffset >= 0 && storedLength + 4 < opt_len >> 3
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,FlushBlock,The following statement contains a magic number: storedOffset >= 0 && storedLength + 4 < opt_len >> 3
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,TallyDist,The following statement contains a magic number: l_buf[last_lit++] = (byte)(length - 3);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,TallyDist,The following statement contains a magic number: int lc = Lcode(length - 3);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,TallyDist,The following statement contains a magic number: extra_bits += (lc - 261) / 4;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,TallyDist,The following statement contains a magic number: extra_bits += (lc - 261) / 4;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,TallyDist,The following statement contains a magic number: lc >= 265 && lc < 285
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,TallyDist,The following statement contains a magic number: lc >= 265 && lc < 285
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,TallyDist,The following statement contains a magic number: extra_bits += dc / 2 - 1;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,TallyDist,The following statement contains a magic number: dc >= 4
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BitReverse,The following statement contains a magic number: return (short) (bit4Reverse[toReverse & 0xF] << 12 |   			                bit4Reverse[(toReverse >> 4) & 0xF] << 8 |   			                bit4Reverse[(toReverse >> 8) & 0xF] << 4 |  			                bit4Reverse[toReverse >> 12]);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BitReverse,The following statement contains a magic number: return (short) (bit4Reverse[toReverse & 0xF] << 12 |   			                bit4Reverse[(toReverse >> 4) & 0xF] << 8 |   			                bit4Reverse[(toReverse >> 8) & 0xF] << 4 |  			                bit4Reverse[toReverse >> 12]);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BitReverse,The following statement contains a magic number: return (short) (bit4Reverse[toReverse & 0xF] << 12 |   			                bit4Reverse[(toReverse >> 4) & 0xF] << 8 |   			                bit4Reverse[(toReverse >> 8) & 0xF] << 4 |  			                bit4Reverse[toReverse >> 12]);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BitReverse,The following statement contains a magic number: return (short) (bit4Reverse[toReverse & 0xF] << 12 |   			                bit4Reverse[(toReverse >> 4) & 0xF] << 8 |   			                bit4Reverse[(toReverse >> 8) & 0xF] << 4 |  			                bit4Reverse[toReverse >> 12]);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BitReverse,The following statement contains a magic number: return (short) (bit4Reverse[toReverse & 0xF] << 12 |   			                bit4Reverse[(toReverse >> 4) & 0xF] << 8 |   			                bit4Reverse[(toReverse >> 8) & 0xF] << 4 |  			                bit4Reverse[toReverse >> 12]);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BitReverse,The following statement contains a magic number: return (short) (bit4Reverse[toReverse & 0xF] << 12 |   			                bit4Reverse[(toReverse >> 4) & 0xF] << 8 |   			                bit4Reverse[(toReverse >> 8) & 0xF] << 4 |  			                bit4Reverse[toReverse >> 12]);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,Lcode,The following statement contains a magic number: return 285;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,Lcode,The following statement contains a magic number: length == 255
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,Lcode,The following statement contains a magic number: int code = 257;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,Lcode,The following statement contains a magic number: code += 4;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,Lcode,The following statement contains a magic number: length >= 8
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,Dcode,The following statement contains a magic number: code += 2;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterHuffman,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,Dcode,The following statement contains a magic number: distance >= 4
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildCodes,The following statement contains a magic number: code += bl_counts[bits] << (15 - bits);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildCodes,The following statement contains a magic number: nextCode[bits-1] += 1 << (16 - bits);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: pos > 0 && freqs[heap[ppos = (pos - 1) / 2]] > freq
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: int node = maxCode < 2 ? ++maxCode : 0;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: heapLen < 2
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: int[] childs = new int[4 * heapLen - 2];
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: int[] childs = new int[4 * heapLen - 2];
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: int[] values = new int[2 * heapLen - 1];
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: childs[2 * i]   = node;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: childs[2 * i + 1] = -1;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: values[i] = freqs[node] << 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: path = path * 2 + 1;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: (path = ppos) > 0 && values[heap[ppos = (path - 1)/2]] > lastVal
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: childs[2 * last] = first;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: childs[2 * last + 1] = second;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: path = ppos * 2 + 1;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: (path = ppos) > 0 && values[heap[ppos = (path - 1)/2]] > lastVal
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildTree,The following statement contains a magic number: heap[0] != childs.Length / 2 - 1
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,CalcBLFreq,The following statement contains a magic number: max_count = 138;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,CalcBLFreq,The following statement contains a magic number: min_count = 3;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,WriteTree,The following statement contains a magic number: max_count = 138;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,WriteTree,The following statement contains a magic number: min_count = 3;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildLength,The following statement contains a magic number: int numNodes = childs.Length / 2;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildLength,The following statement contains a magic number: int numLeafs = (numNodes + 1) / 2;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildLength,The following statement contains a magic number: lengths[childs[2 * i]] = lengths[childs[2 * i + 1]] = bitLength;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildLength,The following statement contains a magic number: lengths[childs[2 * i]] = lengths[childs[2 * i + 1]] = bitLength;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildLength,The following statement contains a magic number: childs[2 * i + 1] != -1
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildLength,The following statement contains a magic number: bl_counts[maxLength-2] -= overflow;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildLength,The following statement contains a magic number: int nodePtr = 2 * numLeafs;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Tree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterHuffman.cs,BuildLength,The following statement contains a magic number: int childPtr = 2*childs[nodePtr++];
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHeader,The following statement contains a magic number: int header = input.PeekBits(16);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHeader,The following statement contains a magic number: input.DropBits(16);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHeader,The following statement contains a magic number: header = ((header << 8) | (header >> 8)) & 0xffff;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHeader,The following statement contains a magic number: header = ((header << 8) | (header >> 8)) & 0xffff;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHeader,The following statement contains a magic number: header % 31 != 0
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHeader,The following statement contains a magic number: (header & 0x0f00) != (Deflater.DEFLATED << 8)
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeDict,The following statement contains a magic number: int dictByte = input.PeekBits(8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeDict,The following statement contains a magic number: input.DropBits(8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeDict,The following statement contains a magic number: readAdler = (readAdler << 8) | dictByte;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeDict,The following statement contains a magic number: neededBits -= 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHuffman,The following statement contains a magic number: switch (mode)   				{  					case DECODE_HUFFMAN:  						// This is the inner loop so it is optimized a bit  						while (((symbol = litlenTree.GetSymbol(input)) & ~0xff) == 0)   						{  							outputWindow.Write(symbol);  							if (--free < 258)   							{  								return true;  							}  						}  						  						if (symbol < 257)   						{  							if (symbol < 0)   							{  								return false;  							}   							else   							{  								// symbol == 256: end of block  								distTree = null;  								litlenTree = null;  								mode = DECODE_BLOCKS;  								return true;  							}  						}  						  						try   						{  							repLength = CPLENS[symbol - 257];  							neededBits = CPLEXT[symbol - 257];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep length code");  						}  						goto case DECODE_HUFFMAN_LENBITS; // fall through  						  					case DECODE_HUFFMAN_LENBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_LENBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repLength += i;  						}  						mode = DECODE_HUFFMAN_DIST;  						goto case DECODE_HUFFMAN_DIST; // fall through  						  					case DECODE_HUFFMAN_DIST:  						symbol = distTree.GetSymbol(input);  						if (symbol < 0)   						{  							return false;  						}  						  						try   						{  							repDist = CPDIST[symbol];  							neededBits = CPDEXT[symbol];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep dist code");  						}  						  						goto case DECODE_HUFFMAN_DISTBITS; // fall through  						  					case DECODE_HUFFMAN_DISTBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_DISTBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repDist += i;  						}  						  						outputWindow.Repeat(repLength' repDist);  						free -= repLength;  						mode = DECODE_HUFFMAN;  						break;  					  					default:  						throw new SharpZipBaseException("Inflater unknown mode");  				}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHuffman,The following statement contains a magic number: switch (mode)   				{  					case DECODE_HUFFMAN:  						// This is the inner loop so it is optimized a bit  						while (((symbol = litlenTree.GetSymbol(input)) & ~0xff) == 0)   						{  							outputWindow.Write(symbol);  							if (--free < 258)   							{  								return true;  							}  						}  						  						if (symbol < 257)   						{  							if (symbol < 0)   							{  								return false;  							}   							else   							{  								// symbol == 256: end of block  								distTree = null;  								litlenTree = null;  								mode = DECODE_BLOCKS;  								return true;  							}  						}  						  						try   						{  							repLength = CPLENS[symbol - 257];  							neededBits = CPLEXT[symbol - 257];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep length code");  						}  						goto case DECODE_HUFFMAN_LENBITS; // fall through  						  					case DECODE_HUFFMAN_LENBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_LENBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repLength += i;  						}  						mode = DECODE_HUFFMAN_DIST;  						goto case DECODE_HUFFMAN_DIST; // fall through  						  					case DECODE_HUFFMAN_DIST:  						symbol = distTree.GetSymbol(input);  						if (symbol < 0)   						{  							return false;  						}  						  						try   						{  							repDist = CPDIST[symbol];  							neededBits = CPDEXT[symbol];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep dist code");  						}  						  						goto case DECODE_HUFFMAN_DISTBITS; // fall through  						  					case DECODE_HUFFMAN_DISTBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_DISTBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repDist += i;  						}  						  						outputWindow.Repeat(repLength' repDist);  						free -= repLength;  						mode = DECODE_HUFFMAN;  						break;  					  					default:  						throw new SharpZipBaseException("Inflater unknown mode");  				}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHuffman,The following statement contains a magic number: switch (mode)   				{  					case DECODE_HUFFMAN:  						// This is the inner loop so it is optimized a bit  						while (((symbol = litlenTree.GetSymbol(input)) & ~0xff) == 0)   						{  							outputWindow.Write(symbol);  							if (--free < 258)   							{  								return true;  							}  						}  						  						if (symbol < 257)   						{  							if (symbol < 0)   							{  								return false;  							}   							else   							{  								// symbol == 256: end of block  								distTree = null;  								litlenTree = null;  								mode = DECODE_BLOCKS;  								return true;  							}  						}  						  						try   						{  							repLength = CPLENS[symbol - 257];  							neededBits = CPLEXT[symbol - 257];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep length code");  						}  						goto case DECODE_HUFFMAN_LENBITS; // fall through  						  					case DECODE_HUFFMAN_LENBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_LENBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repLength += i;  						}  						mode = DECODE_HUFFMAN_DIST;  						goto case DECODE_HUFFMAN_DIST; // fall through  						  					case DECODE_HUFFMAN_DIST:  						symbol = distTree.GetSymbol(input);  						if (symbol < 0)   						{  							return false;  						}  						  						try   						{  							repDist = CPDIST[symbol];  							neededBits = CPDEXT[symbol];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep dist code");  						}  						  						goto case DECODE_HUFFMAN_DISTBITS; // fall through  						  					case DECODE_HUFFMAN_DISTBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_DISTBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repDist += i;  						}  						  						outputWindow.Repeat(repLength' repDist);  						free -= repLength;  						mode = DECODE_HUFFMAN;  						break;  					  					default:  						throw new SharpZipBaseException("Inflater unknown mode");  				}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHuffman,The following statement contains a magic number: switch (mode)   				{  					case DECODE_HUFFMAN:  						// This is the inner loop so it is optimized a bit  						while (((symbol = litlenTree.GetSymbol(input)) & ~0xff) == 0)   						{  							outputWindow.Write(symbol);  							if (--free < 258)   							{  								return true;  							}  						}  						  						if (symbol < 257)   						{  							if (symbol < 0)   							{  								return false;  							}   							else   							{  								// symbol == 256: end of block  								distTree = null;  								litlenTree = null;  								mode = DECODE_BLOCKS;  								return true;  							}  						}  						  						try   						{  							repLength = CPLENS[symbol - 257];  							neededBits = CPLEXT[symbol - 257];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep length code");  						}  						goto case DECODE_HUFFMAN_LENBITS; // fall through  						  					case DECODE_HUFFMAN_LENBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_LENBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repLength += i;  						}  						mode = DECODE_HUFFMAN_DIST;  						goto case DECODE_HUFFMAN_DIST; // fall through  						  					case DECODE_HUFFMAN_DIST:  						symbol = distTree.GetSymbol(input);  						if (symbol < 0)   						{  							return false;  						}  						  						try   						{  							repDist = CPDIST[symbol];  							neededBits = CPDEXT[symbol];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep dist code");  						}  						  						goto case DECODE_HUFFMAN_DISTBITS; // fall through  						  					case DECODE_HUFFMAN_DISTBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_DISTBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repDist += i;  						}  						  						outputWindow.Repeat(repLength' repDist);  						free -= repLength;  						mode = DECODE_HUFFMAN;  						break;  					  					default:  						throw new SharpZipBaseException("Inflater unknown mode");  				}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeHuffman,The following statement contains a magic number: free >= 258
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeChksum,The following statement contains a magic number: int chkByte = input.PeekBits(8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeChksum,The following statement contains a magic number: input.DropBits(8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeChksum,The following statement contains a magic number: readAdler = (readAdler << 8) | chkByte;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,DecodeChksum,The following statement contains a magic number: neededBits -= 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,Decode,The following statement contains a magic number: switch (mode) {  				case DECODE_HEADER:  					return DecodeHeader();    				case DECODE_DICT:  					return DecodeDict();    				case DECODE_CHKSUM:  					return DecodeChksum();  				  				case DECODE_BLOCKS:  					if (isLastBlock) {  						if (noHeader) {  							mode = FINISHED;  							return false;  						} else {  							input.SkipToByteBoundary();  							neededBits = 32;  							mode = DECODE_CHKSUM;  							return true;  						}  					}  					  					int type = input.PeekBits(3);  					if (type < 0) {  						return false;  					}  					input.DropBits(3);  					  					if ((type & 1) != 0) {  						isLastBlock = true;  					}  					switch (type >> 1){  						case DeflaterConstants.STORED_BLOCK:  							input.SkipToByteBoundary();  							mode = DECODE_STORED_LEN1;  							break;  						case DeflaterConstants.STATIC_TREES:  							litlenTree = InflaterHuffmanTree.defLitLenTree;  							distTree = InflaterHuffmanTree.defDistTree;  							mode = DECODE_HUFFMAN;  							break;  						case DeflaterConstants.DYN_TREES:  							dynHeader = new InflaterDynHeader();  							mode = DECODE_DYN_HEADER;  							break;  						default:  							throw new SharpZipBaseException("Unknown block type " + type);  					}  					return true;  				  				case DECODE_STORED_LEN1:   				{  					if ((uncomprLen = input.PeekBits(16)) < 0) {  						return false;  					}  					input.DropBits(16);  					mode = DECODE_STORED_LEN2;  				}  					goto case DECODE_STORED_LEN2; // fall through  					  				case DECODE_STORED_LEN2:   				{  					int nlen = input.PeekBits(16);  					if (nlen < 0) {  						return false;  					}  					input.DropBits(16);  					if (nlen != (uncomprLen ^ 0xffff)) {  						throw new SharpZipBaseException("broken uncompressed block");  					}  					mode = DECODE_STORED;  				}  					goto case DECODE_STORED; // fall through  					  				case DECODE_STORED:   				{  					int more = outputWindow.CopyStored(input' uncomprLen);  					uncomprLen -= more;  					if (uncomprLen == 0) {  						mode = DECODE_BLOCKS;  						return true;  					}  					return !input.IsNeedingInput;  				}  				  				case DECODE_DYN_HEADER:  					if (!dynHeader.Decode(input)) {  						return false;  					}  					  					litlenTree = dynHeader.BuildLitLenTree();  					distTree = dynHeader.BuildDistTree();  					mode = DECODE_HUFFMAN;  					goto case DECODE_HUFFMAN; // fall through  					  				case DECODE_HUFFMAN:  				case DECODE_HUFFMAN_LENBITS:  				case DECODE_HUFFMAN_DIST:  				case DECODE_HUFFMAN_DISTBITS:  					return DecodeHuffman();  				  				case FINISHED:  					return false;  				  				default:  					throw new SharpZipBaseException("Inflater.Decode unknown mode");  			}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,Decode,The following statement contains a magic number: switch (mode) {  				case DECODE_HEADER:  					return DecodeHeader();    				case DECODE_DICT:  					return DecodeDict();    				case DECODE_CHKSUM:  					return DecodeChksum();  				  				case DECODE_BLOCKS:  					if (isLastBlock) {  						if (noHeader) {  							mode = FINISHED;  							return false;  						} else {  							input.SkipToByteBoundary();  							neededBits = 32;  							mode = DECODE_CHKSUM;  							return true;  						}  					}  					  					int type = input.PeekBits(3);  					if (type < 0) {  						return false;  					}  					input.DropBits(3);  					  					if ((type & 1) != 0) {  						isLastBlock = true;  					}  					switch (type >> 1){  						case DeflaterConstants.STORED_BLOCK:  							input.SkipToByteBoundary();  							mode = DECODE_STORED_LEN1;  							break;  						case DeflaterConstants.STATIC_TREES:  							litlenTree = InflaterHuffmanTree.defLitLenTree;  							distTree = InflaterHuffmanTree.defDistTree;  							mode = DECODE_HUFFMAN;  							break;  						case DeflaterConstants.DYN_TREES:  							dynHeader = new InflaterDynHeader();  							mode = DECODE_DYN_HEADER;  							break;  						default:  							throw new SharpZipBaseException("Unknown block type " + type);  					}  					return true;  				  				case DECODE_STORED_LEN1:   				{  					if ((uncomprLen = input.PeekBits(16)) < 0) {  						return false;  					}  					input.DropBits(16);  					mode = DECODE_STORED_LEN2;  				}  					goto case DECODE_STORED_LEN2; // fall through  					  				case DECODE_STORED_LEN2:   				{  					int nlen = input.PeekBits(16);  					if (nlen < 0) {  						return false;  					}  					input.DropBits(16);  					if (nlen != (uncomprLen ^ 0xffff)) {  						throw new SharpZipBaseException("broken uncompressed block");  					}  					mode = DECODE_STORED;  				}  					goto case DECODE_STORED; // fall through  					  				case DECODE_STORED:   				{  					int more = outputWindow.CopyStored(input' uncomprLen);  					uncomprLen -= more;  					if (uncomprLen == 0) {  						mode = DECODE_BLOCKS;  						return true;  					}  					return !input.IsNeedingInput;  				}  				  				case DECODE_DYN_HEADER:  					if (!dynHeader.Decode(input)) {  						return false;  					}  					  					litlenTree = dynHeader.BuildLitLenTree();  					distTree = dynHeader.BuildDistTree();  					mode = DECODE_HUFFMAN;  					goto case DECODE_HUFFMAN; // fall through  					  				case DECODE_HUFFMAN:  				case DECODE_HUFFMAN_LENBITS:  				case DECODE_HUFFMAN_DIST:  				case DECODE_HUFFMAN_DISTBITS:  					return DecodeHuffman();  				  				case FINISHED:  					return false;  				  				default:  					throw new SharpZipBaseException("Inflater.Decode unknown mode");  			}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,Decode,The following statement contains a magic number: switch (mode) {  				case DECODE_HEADER:  					return DecodeHeader();    				case DECODE_DICT:  					return DecodeDict();    				case DECODE_CHKSUM:  					return DecodeChksum();  				  				case DECODE_BLOCKS:  					if (isLastBlock) {  						if (noHeader) {  							mode = FINISHED;  							return false;  						} else {  							input.SkipToByteBoundary();  							neededBits = 32;  							mode = DECODE_CHKSUM;  							return true;  						}  					}  					  					int type = input.PeekBits(3);  					if (type < 0) {  						return false;  					}  					input.DropBits(3);  					  					if ((type & 1) != 0) {  						isLastBlock = true;  					}  					switch (type >> 1){  						case DeflaterConstants.STORED_BLOCK:  							input.SkipToByteBoundary();  							mode = DECODE_STORED_LEN1;  							break;  						case DeflaterConstants.STATIC_TREES:  							litlenTree = InflaterHuffmanTree.defLitLenTree;  							distTree = InflaterHuffmanTree.defDistTree;  							mode = DECODE_HUFFMAN;  							break;  						case DeflaterConstants.DYN_TREES:  							dynHeader = new InflaterDynHeader();  							mode = DECODE_DYN_HEADER;  							break;  						default:  							throw new SharpZipBaseException("Unknown block type " + type);  					}  					return true;  				  				case DECODE_STORED_LEN1:   				{  					if ((uncomprLen = input.PeekBits(16)) < 0) {  						return false;  					}  					input.DropBits(16);  					mode = DECODE_STORED_LEN2;  				}  					goto case DECODE_STORED_LEN2; // fall through  					  				case DECODE_STORED_LEN2:   				{  					int nlen = input.PeekBits(16);  					if (nlen < 0) {  						return false;  					}  					input.DropBits(16);  					if (nlen != (uncomprLen ^ 0xffff)) {  						throw new SharpZipBaseException("broken uncompressed block");  					}  					mode = DECODE_STORED;  				}  					goto case DECODE_STORED; // fall through  					  				case DECODE_STORED:   				{  					int more = outputWindow.CopyStored(input' uncomprLen);  					uncomprLen -= more;  					if (uncomprLen == 0) {  						mode = DECODE_BLOCKS;  						return true;  					}  					return !input.IsNeedingInput;  				}  				  				case DECODE_DYN_HEADER:  					if (!dynHeader.Decode(input)) {  						return false;  					}  					  					litlenTree = dynHeader.BuildLitLenTree();  					distTree = dynHeader.BuildDistTree();  					mode = DECODE_HUFFMAN;  					goto case DECODE_HUFFMAN; // fall through  					  				case DECODE_HUFFMAN:  				case DECODE_HUFFMAN_LENBITS:  				case DECODE_HUFFMAN_DIST:  				case DECODE_HUFFMAN_DISTBITS:  					return DecodeHuffman();  				  				case FINISHED:  					return false;  				  				default:  					throw new SharpZipBaseException("Inflater.Decode unknown mode");  			}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,Decode,The following statement contains a magic number: switch (mode) {  				case DECODE_HEADER:  					return DecodeHeader();    				case DECODE_DICT:  					return DecodeDict();    				case DECODE_CHKSUM:  					return DecodeChksum();  				  				case DECODE_BLOCKS:  					if (isLastBlock) {  						if (noHeader) {  							mode = FINISHED;  							return false;  						} else {  							input.SkipToByteBoundary();  							neededBits = 32;  							mode = DECODE_CHKSUM;  							return true;  						}  					}  					  					int type = input.PeekBits(3);  					if (type < 0) {  						return false;  					}  					input.DropBits(3);  					  					if ((type & 1) != 0) {  						isLastBlock = true;  					}  					switch (type >> 1){  						case DeflaterConstants.STORED_BLOCK:  							input.SkipToByteBoundary();  							mode = DECODE_STORED_LEN1;  							break;  						case DeflaterConstants.STATIC_TREES:  							litlenTree = InflaterHuffmanTree.defLitLenTree;  							distTree = InflaterHuffmanTree.defDistTree;  							mode = DECODE_HUFFMAN;  							break;  						case DeflaterConstants.DYN_TREES:  							dynHeader = new InflaterDynHeader();  							mode = DECODE_DYN_HEADER;  							break;  						default:  							throw new SharpZipBaseException("Unknown block type " + type);  					}  					return true;  				  				case DECODE_STORED_LEN1:   				{  					if ((uncomprLen = input.PeekBits(16)) < 0) {  						return false;  					}  					input.DropBits(16);  					mode = DECODE_STORED_LEN2;  				}  					goto case DECODE_STORED_LEN2; // fall through  					  				case DECODE_STORED_LEN2:   				{  					int nlen = input.PeekBits(16);  					if (nlen < 0) {  						return false;  					}  					input.DropBits(16);  					if (nlen != (uncomprLen ^ 0xffff)) {  						throw new SharpZipBaseException("broken uncompressed block");  					}  					mode = DECODE_STORED;  				}  					goto case DECODE_STORED; // fall through  					  				case DECODE_STORED:   				{  					int more = outputWindow.CopyStored(input' uncomprLen);  					uncomprLen -= more;  					if (uncomprLen == 0) {  						mode = DECODE_BLOCKS;  						return true;  					}  					return !input.IsNeedingInput;  				}  				  				case DECODE_DYN_HEADER:  					if (!dynHeader.Decode(input)) {  						return false;  					}  					  					litlenTree = dynHeader.BuildLitLenTree();  					distTree = dynHeader.BuildDistTree();  					mode = DECODE_HUFFMAN;  					goto case DECODE_HUFFMAN; // fall through  					  				case DECODE_HUFFMAN:  				case DECODE_HUFFMAN_LENBITS:  				case DECODE_HUFFMAN_DIST:  				case DECODE_HUFFMAN_DISTBITS:  					return DecodeHuffman();  				  				case FINISHED:  					return false;  				  				default:  					throw new SharpZipBaseException("Inflater.Decode unknown mode");  			}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,Decode,The following statement contains a magic number: switch (mode) {  				case DECODE_HEADER:  					return DecodeHeader();    				case DECODE_DICT:  					return DecodeDict();    				case DECODE_CHKSUM:  					return DecodeChksum();  				  				case DECODE_BLOCKS:  					if (isLastBlock) {  						if (noHeader) {  							mode = FINISHED;  							return false;  						} else {  							input.SkipToByteBoundary();  							neededBits = 32;  							mode = DECODE_CHKSUM;  							return true;  						}  					}  					  					int type = input.PeekBits(3);  					if (type < 0) {  						return false;  					}  					input.DropBits(3);  					  					if ((type & 1) != 0) {  						isLastBlock = true;  					}  					switch (type >> 1){  						case DeflaterConstants.STORED_BLOCK:  							input.SkipToByteBoundary();  							mode = DECODE_STORED_LEN1;  							break;  						case DeflaterConstants.STATIC_TREES:  							litlenTree = InflaterHuffmanTree.defLitLenTree;  							distTree = InflaterHuffmanTree.defDistTree;  							mode = DECODE_HUFFMAN;  							break;  						case DeflaterConstants.DYN_TREES:  							dynHeader = new InflaterDynHeader();  							mode = DECODE_DYN_HEADER;  							break;  						default:  							throw new SharpZipBaseException("Unknown block type " + type);  					}  					return true;  				  				case DECODE_STORED_LEN1:   				{  					if ((uncomprLen = input.PeekBits(16)) < 0) {  						return false;  					}  					input.DropBits(16);  					mode = DECODE_STORED_LEN2;  				}  					goto case DECODE_STORED_LEN2; // fall through  					  				case DECODE_STORED_LEN2:   				{  					int nlen = input.PeekBits(16);  					if (nlen < 0) {  						return false;  					}  					input.DropBits(16);  					if (nlen != (uncomprLen ^ 0xffff)) {  						throw new SharpZipBaseException("broken uncompressed block");  					}  					mode = DECODE_STORED;  				}  					goto case DECODE_STORED; // fall through  					  				case DECODE_STORED:   				{  					int more = outputWindow.CopyStored(input' uncomprLen);  					uncomprLen -= more;  					if (uncomprLen == 0) {  						mode = DECODE_BLOCKS;  						return true;  					}  					return !input.IsNeedingInput;  				}  				  				case DECODE_DYN_HEADER:  					if (!dynHeader.Decode(input)) {  						return false;  					}  					  					litlenTree = dynHeader.BuildLitLenTree();  					distTree = dynHeader.BuildDistTree();  					mode = DECODE_HUFFMAN;  					goto case DECODE_HUFFMAN; // fall through  					  				case DECODE_HUFFMAN:  				case DECODE_HUFFMAN_LENBITS:  				case DECODE_HUFFMAN_DIST:  				case DECODE_HUFFMAN_DISTBITS:  					return DecodeHuffman();  				  				case FINISHED:  					return false;  				  				default:  					throw new SharpZipBaseException("Inflater.Decode unknown mode");  			}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,Decode,The following statement contains a magic number: switch (mode) {  				case DECODE_HEADER:  					return DecodeHeader();    				case DECODE_DICT:  					return DecodeDict();    				case DECODE_CHKSUM:  					return DecodeChksum();  				  				case DECODE_BLOCKS:  					if (isLastBlock) {  						if (noHeader) {  							mode = FINISHED;  							return false;  						} else {  							input.SkipToByteBoundary();  							neededBits = 32;  							mode = DECODE_CHKSUM;  							return true;  						}  					}  					  					int type = input.PeekBits(3);  					if (type < 0) {  						return false;  					}  					input.DropBits(3);  					  					if ((type & 1) != 0) {  						isLastBlock = true;  					}  					switch (type >> 1){  						case DeflaterConstants.STORED_BLOCK:  							input.SkipToByteBoundary();  							mode = DECODE_STORED_LEN1;  							break;  						case DeflaterConstants.STATIC_TREES:  							litlenTree = InflaterHuffmanTree.defLitLenTree;  							distTree = InflaterHuffmanTree.defDistTree;  							mode = DECODE_HUFFMAN;  							break;  						case DeflaterConstants.DYN_TREES:  							dynHeader = new InflaterDynHeader();  							mode = DECODE_DYN_HEADER;  							break;  						default:  							throw new SharpZipBaseException("Unknown block type " + type);  					}  					return true;  				  				case DECODE_STORED_LEN1:   				{  					if ((uncomprLen = input.PeekBits(16)) < 0) {  						return false;  					}  					input.DropBits(16);  					mode = DECODE_STORED_LEN2;  				}  					goto case DECODE_STORED_LEN2; // fall through  					  				case DECODE_STORED_LEN2:   				{  					int nlen = input.PeekBits(16);  					if (nlen < 0) {  						return false;  					}  					input.DropBits(16);  					if (nlen != (uncomprLen ^ 0xffff)) {  						throw new SharpZipBaseException("broken uncompressed block");  					}  					mode = DECODE_STORED;  				}  					goto case DECODE_STORED; // fall through  					  				case DECODE_STORED:   				{  					int more = outputWindow.CopyStored(input' uncomprLen);  					uncomprLen -= more;  					if (uncomprLen == 0) {  						mode = DECODE_BLOCKS;  						return true;  					}  					return !input.IsNeedingInput;  				}  				  				case DECODE_DYN_HEADER:  					if (!dynHeader.Decode(input)) {  						return false;  					}  					  					litlenTree = dynHeader.BuildLitLenTree();  					distTree = dynHeader.BuildDistTree();  					mode = DECODE_HUFFMAN;  					goto case DECODE_HUFFMAN; // fall through  					  				case DECODE_HUFFMAN:  				case DECODE_HUFFMAN_LENBITS:  				case DECODE_HUFFMAN_DIST:  				case DECODE_HUFFMAN_DISTBITS:  					return DecodeHuffman();  				  				case FINISHED:  					return false;  				  				default:  					throw new SharpZipBaseException("Inflater.Decode unknown mode");  			}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Inflater.cs,Decode,The following statement contains a magic number: switch (mode) {  				case DECODE_HEADER:  					return DecodeHeader();    				case DECODE_DICT:  					return DecodeDict();    				case DECODE_CHKSUM:  					return DecodeChksum();  				  				case DECODE_BLOCKS:  					if (isLastBlock) {  						if (noHeader) {  							mode = FINISHED;  							return false;  						} else {  							input.SkipToByteBoundary();  							neededBits = 32;  							mode = DECODE_CHKSUM;  							return true;  						}  					}  					  					int type = input.PeekBits(3);  					if (type < 0) {  						return false;  					}  					input.DropBits(3);  					  					if ((type & 1) != 0) {  						isLastBlock = true;  					}  					switch (type >> 1){  						case DeflaterConstants.STORED_BLOCK:  							input.SkipToByteBoundary();  							mode = DECODE_STORED_LEN1;  							break;  						case DeflaterConstants.STATIC_TREES:  							litlenTree = InflaterHuffmanTree.defLitLenTree;  							distTree = InflaterHuffmanTree.defDistTree;  							mode = DECODE_HUFFMAN;  							break;  						case DeflaterConstants.DYN_TREES:  							dynHeader = new InflaterDynHeader();  							mode = DECODE_DYN_HEADER;  							break;  						default:  							throw new SharpZipBaseException("Unknown block type " + type);  					}  					return true;  				  				case DECODE_STORED_LEN1:   				{  					if ((uncomprLen = input.PeekBits(16)) < 0) {  						return false;  					}  					input.DropBits(16);  					mode = DECODE_STORED_LEN2;  				}  					goto case DECODE_STORED_LEN2; // fall through  					  				case DECODE_STORED_LEN2:   				{  					int nlen = input.PeekBits(16);  					if (nlen < 0) {  						return false;  					}  					input.DropBits(16);  					if (nlen != (uncomprLen ^ 0xffff)) {  						throw new SharpZipBaseException("broken uncompressed block");  					}  					mode = DECODE_STORED;  				}  					goto case DECODE_STORED; // fall through  					  				case DECODE_STORED:   				{  					int more = outputWindow.CopyStored(input' uncomprLen);  					uncomprLen -= more;  					if (uncomprLen == 0) {  						mode = DECODE_BLOCKS;  						return true;  					}  					return !input.IsNeedingInput;  				}  				  				case DECODE_DYN_HEADER:  					if (!dynHeader.Decode(input)) {  						return false;  					}  					  					litlenTree = dynHeader.BuildLitLenTree();  					distTree = dynHeader.BuildDistTree();  					mode = DECODE_HUFFMAN;  					goto case DECODE_HUFFMAN; // fall through  					  				case DECODE_HUFFMAN:  				case DECODE_HUFFMAN_LENBITS:  				case DECODE_HUFFMAN_DIST:  				case DECODE_HUFFMAN_DISTBITS:  					return DecodeHuffman();  				  				case FINISHED:  					return false;  				  				default:  					throw new SharpZipBaseException("Inflater.Decode unknown mode");  			}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: byte[] codeLengths = new byte[288];
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: codeLengths[i++] = 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: i < 144
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: codeLengths[i++] = 9;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: i < 256
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: codeLengths[i++] = 7;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: i < 280
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: codeLengths[i++] = 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: i < 288
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: codeLengths = new byte[32];
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: codeLengths[i++] = 5;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: i < 32
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: int treeSize = 512;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: code += blCount[bits] << (16 - bits);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: treeSize += (end - start) >> (16 - bits);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: bits >= 10
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: int treePtr = 512;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: code -= blCount[bits] << (16 - bits);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: tree[DeflaterHuffman.BitReverse(i)] = (short) ((-treePtr << 4) | bits);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: treePtr += 1 << (bits-9);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: bits >= 10
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: tree[revcode] = (short) ((i << 4) | bits);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: bits <= 9
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: nextCode[bits] = code + (1 << (16 - bits));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: input.DropBits(symbol & 15);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: return symbol >> 4;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: int subtree = -(symbol >> 4);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: int bitlen = symbol & 15;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: symbol = tree[subtree | (lookahead >> 9)];
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: input.DropBits(symbol & 15);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: return symbol >> 4;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: (lookahead = input.PeekBits(9)) >= 0
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,WriteShort,The following statement contains a magic number: buffer_[end++] = unchecked((byte) (value >> 8));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,WriteInt,The following statement contains a magic number: buffer_[end++] = unchecked((byte) (value >> 8));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,WriteInt,The following statement contains a magic number: buffer_[end++] = unchecked((byte) (value >> 16));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,WriteInt,The following statement contains a magic number: buffer_[end++] = unchecked((byte) (value >> 24));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,AlignToByte,The following statement contains a magic number: buffer_[end++] = unchecked((byte) (bits >> 8));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,AlignToByte,The following statement contains a magic number: bitCount > 8
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,WriteBits,The following statement contains a magic number: buffer_[end++] = unchecked((byte) (bits >> 8));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,WriteBits,The following statement contains a magic number: bits >>= 16;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,WriteBits,The following statement contains a magic number: bitCount -= 16;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,WriteBits,The following statement contains a magic number: bitCount >= 16
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,WriteShortMSB,The following statement contains a magic number: buffer_[end++] = unchecked((byte) (s >> 8));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,Flush,The following statement contains a magic number: bits >>= 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,Flush,The following statement contains a magic number: bitCount -= 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,PendingBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\PendingBuffer.cs,Flush,The following statement contains a magic number: bitCount >= 8
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,DeflaterOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\DeflaterOutputStream.cs,DeflaterOutputStream,The following statement contains a magic number: bufferSize < 512
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,DeflaterOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\DeflaterOutputStream.cs,InitializeAESPassword,The following statement contains a magic number: int blockSize = entry.AESKeySize / 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InflaterInputBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\InflaterInputStream.cs,InflaterInputBuffer,The following statement contains a magic number: bufferSize = 1024;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InflaterInputBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\InflaterInputStream.cs,InflaterInputBuffer,The following statement contains a magic number: bufferSize < 1024
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InflaterInputBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\InflaterInputStream.cs,ReadLeShort,The following statement contains a magic number: return ReadLeByte() | (ReadLeByte() << 8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InflaterInputBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\InflaterInputStream.cs,ReadLeInt,The following statement contains a magic number: return ReadLeShort() | (ReadLeShort() << 16);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InflaterInputBuffer,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\InflaterInputStream.cs,ReadLeLong,The following statement contains a magic number: return (uint)ReadLeInt() | ((long)ReadLeInt() << 32);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\StreamManipulator.cs,PeekBits,The following statement contains a magic number: buffer_ |= (uint)((window_[windowStart_++] & 0xff |  								 (window_[windowStart_++] & 0xff) << 8) << bitsInBuffer_);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\StreamManipulator.cs,PeekBits,The following statement contains a magic number: bitsInBuffer_ += 16;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\StreamManipulator.cs,SkipToByteBoundary,The following statement contains a magic number: buffer_ >>= (bitsInBuffer_ & 7);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\StreamManipulator.cs,SkipToByteBoundary,The following statement contains a magic number: bitsInBuffer_ &= ~7;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\StreamManipulator.cs,CopyBytes,The following statement contains a magic number: (bitsInBuffer_ & 7) != 0
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\StreamManipulator.cs,CopyBytes,The following statement contains a magic number: buffer_ >>= 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\StreamManipulator.cs,CopyBytes,The following statement contains a magic number: bitsInBuffer_ -= 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\StreamManipulator.cs,CopyBytes,The following statement contains a magic number: bitsInBuffer_ = 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\Streams\StreamManipulator.cs,SetInput,The following statement contains a magic number: bitsInBuffer_ += 8;
Magic Number,ICSharpCode.SharpZipLib.Zip,FastZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\FastZip.cs,AddFileContents,The following statement contains a magic number: buffer_=new byte[4096];
Magic Number,ICSharpCode.SharpZipLib.Zip,FastZip,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\FastZip.cs,ExtractFileEntry,The following statement contains a magic number: buffer_ = new byte[4096];
Magic Number,ICSharpCode.SharpZipLib.Zip,WindowsNameTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\WindowsNameTransform.cs,WindowsNameTransform,The following statement contains a magic number: int howMany = invalidPathChars.Length + 3;
Magic Number,ICSharpCode.SharpZipLib.Zip,WindowsNameTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\WindowsNameTransform.cs,WindowsNameTransform,The following statement contains a magic number: InvalidEntryChars[howMany - 2] = '?';
Magic Number,ICSharpCode.SharpZipLib.Zip,WindowsNameTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\WindowsNameTransform.cs,WindowsNameTransform,The following statement contains a magic number: InvalidEntryChars[howMany - 3] = ':';
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipEntry,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipEntry.cs,ZipEntry,The following statement contains a magic number: (versionRequiredToExtract != 0) && (versionRequiredToExtract < 10)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipEntry,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipEntry.cs,ProcessExtraData,The following statement contains a magic number: extraData.ValueLength < 4
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipEntry,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipEntry.cs,ProcessExtraData,The following statement contains a magic number: extraData.ValueLength < 4
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipEntry,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipEntry.cs,ProcessExtraData,The following statement contains a magic number: ntfsLength >= 24
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipEntry,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipEntry.cs,ProcessExtraData,The following statement contains a magic number: extraData.UnreadCount >= 4
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipEntry,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipEntry.cs,ProcessExtraData,The following statement contains a magic number: extraData.Find(10)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipEntry,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipEntry.cs,ProcessAESExtraData,The following statement contains a magic number: length < 7
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipEntryFactory,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipEntryFactory.cs,MakeDirectoryEntry,The following statement contains a magic number: externalAttributes |= (setAttributes_ | 16);
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,SetData,The following statement contains a magic number: _modificationTime = (new DateTime(1970' 1' 1' 0' 0' 0).ToUniversalTime() +  						new TimeSpan(0' 0' 0' iTime' 0)).ToLocalTime();
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,SetData,The following statement contains a magic number: _lastAccessTime = (new DateTime(1970' 1' 1' 0' 0' 0).ToUniversalTime() +  						new TimeSpan(0' 0' 0' iTime' 0)).ToLocalTime();
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,SetData,The following statement contains a magic number: _createTime = (new DateTime(1970' 1' 1' 0' 0' 0).ToUniversalTime() +  						new TimeSpan(0' 0' 0' iTime' 0)).ToLocalTime();
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,GetData,The following statement contains a magic number: TimeSpan span = _modificationTime.ToUniversalTime() - new DateTime(1970' 1' 1' 0' 0' 0).ToUniversalTime();
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,GetData,The following statement contains a magic number: TimeSpan span = _lastAccessTime.ToUniversalTime() - new DateTime(1970' 1' 1' 0' 0' 0).ToUniversalTime();
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,GetData,The following statement contains a magic number: TimeSpan span = _createTime.ToUniversalTime() - new DateTime(1970' 1' 1' 0' 0' 0).ToUniversalTime();
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,IsValidValue,The following statement contains a magic number: return (( value >= new DateTime(1901' 12' 13' 20' 45' 52)) ||   					( value <= new DateTime(2038' 1' 19' 03' 14' 07) ));
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,IsValidValue,The following statement contains a magic number: return (( value >= new DateTime(1901' 12' 13' 20' 45' 52)) ||   					( value <= new DateTime(2038' 1' 19' 03' 14' 07) ));
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,IsValidValue,The following statement contains a magic number: return (( value >= new DateTime(1901' 12' 13' 20' 45' 52)) ||   					( value <= new DateTime(2038' 1' 19' 03' 14' 07) ));
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,IsValidValue,The following statement contains a magic number: return (( value >= new DateTime(1901' 12' 13' 20' 45' 52)) ||   					( value <= new DateTime(2038' 1' 19' 03' 14' 07) ));
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,IsValidValue,The following statement contains a magic number: return (( value >= new DateTime(1901' 12' 13' 20' 45' 52)) ||   					( value <= new DateTime(2038' 1' 19' 03' 14' 07) ));
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,IsValidValue,The following statement contains a magic number: return (( value >= new DateTime(1901' 12' 13' 20' 45' 52)) ||   					( value <= new DateTime(2038' 1' 19' 03' 14' 07) ));
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,IsValidValue,The following statement contains a magic number: return (( value >= new DateTime(1901' 12' 13' 20' 45' 52)) ||   					( value <= new DateTime(2038' 1' 19' 03' 14' 07) ));
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,IsValidValue,The following statement contains a magic number: return (( value >= new DateTime(1901' 12' 13' 20' 45' 52)) ||   					( value <= new DateTime(2038' 1' 19' 03' 14' 07) ));
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,IsValidValue,The following statement contains a magic number: return (( value >= new DateTime(1901' 12' 13' 20' 45' 52)) ||   					( value <= new DateTime(2038' 1' 19' 03' 14' 07) ));
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,IsValidValue,The following statement contains a magic number: return (( value >= new DateTime(1901' 12' 13' 20' 45' 52)) ||   					( value <= new DateTime(2038' 1' 19' 03' 14' 07) ));
Magic Number,ICSharpCode.SharpZipLib.Zip,ExtendedUnixData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,IsValidValue,The following statement contains a magic number: return (( value >= new DateTime(1901' 12' 13' 20' 45' 52)) ||   					( value <= new DateTime(2038' 1' 19' 03' 14' 07) ));
Magic Number,ICSharpCode.SharpZipLib.Zip,NTTaggedData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,GetData,The following statement contains a magic number: helperStream.WriteLEShort(24);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,Find,The following statement contains a magic number: (localTag != headerID) && (_index < _data.Length - 3)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,AddEntry,The following statement contains a magic number: int newLength = _data.Length + addLength + 4;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,AddEntry,The following statement contains a magic number: newLength -= (ValueLength + 4);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,AddLeShort,The following statement contains a magic number: _newEntry.WriteByte(( byte )(toAdd >> 8));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,AddLeInt,The following statement contains a magic number: AddLeShort(( short )(toAdd >> 16));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,AddLeLong,The following statement contains a magic number: AddLeInt(( int )(toAdd >> 32));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,Delete,The following statement contains a magic number: int trueStart = _readValueStart - 4;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,Delete,The following statement contains a magic number: byte[] newData = new byte[_data.Length - (ValueLength + 4)];
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,Delete,The following statement contains a magic number: int trueEnd = trueStart + ValueLength + 4;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadLong,The following statement contains a magic number: ReadCheck(8);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadLong,The following statement contains a magic number: return (ReadInt() & 0xffffffff) | ((( long )ReadInt()) << 32);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadInt,The following statement contains a magic number: ReadCheck(4);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadInt,The following statement contains a magic number: int result = _data[_index] + (_data[_index + 1] << 8) +   				(_data[_index + 2] << 16) + (_data[_index + 3] << 24);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadInt,The following statement contains a magic number: int result = _data[_index] + (_data[_index + 1] << 8) +   				(_data[_index + 2] << 16) + (_data[_index + 3] << 24);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadInt,The following statement contains a magic number: int result = _data[_index] + (_data[_index + 1] << 8) +   				(_data[_index + 2] << 16) + (_data[_index + 3] << 24);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadInt,The following statement contains a magic number: int result = _data[_index] + (_data[_index + 1] << 8) +   				(_data[_index + 2] << 16) + (_data[_index + 3] << 24);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadInt,The following statement contains a magic number: int result = _data[_index] + (_data[_index + 1] << 8) +   				(_data[_index + 2] << 16) + (_data[_index + 3] << 24);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadInt,The following statement contains a magic number: _index += 4;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadShort,The following statement contains a magic number: ReadCheck(2);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadShort,The following statement contains a magic number: int result = _data[_index] + (_data[_index + 1] << 8);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadShort,The following statement contains a magic number: _index += 2;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadCheck,The following statement contains a magic number: (_readValueStart > _data.Length) ||  				(_readValueStart < 4)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadCheck,The following statement contains a magic number: _index + length < 4
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadShortInternal,The following statement contains a magic number: _index > _data.Length - 2
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadShortInternal,The following statement contains a magic number: int result = _data[_index] + (_data[_index + 1] << 8);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,ReadShortInternal,The following statement contains a magic number: _index += 2;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,SetShort,The following statement contains a magic number: _data[index + 1] = (byte)(source >> 8);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipExtraData,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipExtraData.cs,SetShort,The following statement contains a magic number: index += 2;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestArchive,The following statement contains a magic number: byte[] buffer = new byte[4096];
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion > ZipConstants.VersionMadeBy)  							|| ((extractVersion > 20) && (extractVersion < ZipConstants.VersionZip64))
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: (extractVersion <= 63) &&	// Ignore later versions as we dont know about them..                          (extractVersion != 10) &&                          (extractVersion != 11) &&                          (extractVersion != 20) &&                          (extractVersion != 21) &&                          (extractVersion != 25) &&                          (extractVersion != 27) &&                          (extractVersion != 45) &&                          (extractVersion != 46) &&                          (extractVersion != 50) &&                          (extractVersion != 51) &&                          (extractVersion != 52) &&                          (extractVersion != 61) &&                          (extractVersion != 62) &&                          (extractVersion != 63)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: ((localFlags & (int)GeneralBitFlags.Encrypted) != 0) && (extractVersion < 20)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: extractVersion < 50
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: ((localFlags & (int)GeneralBitFlags.Patched) != 0) && (extractVersion < 27)
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: extractVersion < 62
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,TestLocalHeader,The following statement contains a magic number: compressedSize > ZipConstants.CryptoHeaderSize + 2
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,WriteLEShort,The following statement contains a magic number: baseStream_.WriteByte(( byte )((value >> 8) & 0xff));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,WriteLEUshort,The following statement contains a magic number: baseStream_.WriteByte(( byte )(value >> 8));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,WriteLEInt,The following statement contains a magic number: WriteLEShort(value >> 16);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,WriteLEUint,The following statement contains a magic number: WriteLEUshort((ushort)(value >> 16));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,WriteLeLong,The following statement contains a magic number: WriteLEInt(( int )(value >> 32));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,WriteLEUlong,The following statement contains a magic number: WriteLEUint(( uint )(value >> 32));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,GetDescriptorSize,The following statement contains a magic number: result = ZipConstants.DataDescriptorSize - 4;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,GetDescriptorSize,The following statement contains a magic number: result = ZipConstants.Zip64DataDescriptorSize - 4;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,GetOutputStream,The following statement contains a magic number: switch ( entry.CompressionMethod ) {  				case CompressionMethod.Stored:  					result = new UncompressedStream(result);  					break;    				case CompressionMethod.Deflated:  					DeflaterOutputStream dos = new DeflaterOutputStream(result' new Deflater(9' true));  					dos.IsStreamOwner = false;  					result = dos;  					break;    				default:  					throw new ZipException("Unknown compression method " + entry.CompressionMethod);  			}
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,CopyEntryDirect,The following statement contains a magic number: const int NameLengthOffset = 26;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,CopyEntry,The following statement contains a magic number: const int NameLengthOffset = 26;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,UpdateCommentOnly,The following statement contains a magic number: const int CentralHeaderCommentSizeOffset = 16;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,ReadLEUshort,The following statement contains a magic number: return unchecked((ushort)((ushort)data1 | (ushort)(data2 << 8)));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,ReadLEUint,The following statement contains a magic number: return (uint)(ReadLEUshort() | (ReadLEUshort() << 16));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,ReadLEUlong,The following statement contains a magic number: return ReadLEUint() | ((ulong)ReadLEUint() << 32);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,ReadEntries,The following statement contains a magic number: offsetOfFirstEntry = locatedEndOfCentralDir - (4 + (long)centralDirSize + offsetOfCentralDir);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,ReadEntries,The following statement contains a magic number: !isZip64 && (offsetOfCentralDir < locatedEndOfCentralDir - (4 + (long)centralDirSize))
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,ReadEntries,The following statement contains a magic number: entry.CryptoCheckValue = (byte)(crc >> 24);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,ReadEntries,The following statement contains a magic number: (bitFlags & 8) == 0
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,CreateAndInitEncryptionStream,The following statement contains a magic number: WriteEncryptionHeader(result' entry.DosTime << 16);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,CreateAndInitEncryptionStream,The following statement contains a magic number: (entry.Crc < 0) || (entry.Flags & 8) != 0
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,WriteEncryptionHeader,The following statement contains a magic number: cryptBuffer[11] = (byte)(crcValue >> 24);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,WriteEncryptionHeader,The following statement contains a magic number: cryptBuffer[11] = (byte)(crcValue >> 24);
Magic Number,ICSharpCode.SharpZipLib.Zip,MemoryArchiveStorage,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,MakeTemporaryCopy,The following statement contains a magic number: StreamUtils.Copy(stream' temporaryStream_' new byte[4096]);
Magic Number,ICSharpCode.SharpZipLib.Zip,MemoryArchiveStorage,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,OpenForDirectUpdate,The following statement contains a magic number: StreamUtils.Copy(stream' result' new byte[4096]);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,WriteZip64EndOfCentralDirectory,The following statement contains a magic number: WriteLELong(44);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,ReadLEShort,The following statement contains a magic number: return byteValue1 | (byteValue2 << 8);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,ReadLEInt,The following statement contains a magic number: return ReadLEShort() | (ReadLEShort() << 16);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,ReadLELong,The following statement contains a magic number: return (uint)ReadLEInt() | ((long)ReadLEInt() << 32);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,WriteLEShort,The following statement contains a magic number: stream_.WriteByte(( byte )((value >> 8) & 0xff));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,WriteLEUshort,The following statement contains a magic number: stream_.WriteByte(( byte )(value >> 8));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,WriteLEInt,The following statement contains a magic number: WriteLEShort(value >> 16);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,WriteLEUint,The following statement contains a magic number: WriteLEUshort(( ushort )(value >> 16));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,WriteLELong,The following statement contains a magic number: WriteLEInt(( int )(value >> 32));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,WriteLEUlong,The following statement contains a magic number: WriteLEUint(( uint )(value >> 32));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,WriteDataDescriptor,The following statement contains a magic number: result+=8;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipHelperStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipHelperStream.cs,WriteDataDescriptor,The following statement contains a magic number: result+=16;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,GetNextEntry,The following statement contains a magic number: entry.CryptoCheckValue = (byte)((crc2 >> 24) & 0xff);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,GetNextEntry,The following statement contains a magic number: (flags & 8) == 0
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,CompleteCloseEntry,The following statement contains a magic number: (flags & 8) != 0
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,CloseEntry,The following statement contains a magic number: byte[] tmp = new byte[4096];
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,CloseEntry,The following statement contains a magic number: (flags & 8) != 0
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,BodyRead,The following statement contains a magic number: switch (method) {  				case (int)CompressionMethod.Deflated:  					count = base.Read(buffer' offset' count);  					if (count <= 0) {  						if (!inf.IsFinished) {  							throw new ZipException("Inflater not finished!");  						}  						inputBuffer.Available = inf.RemainingInput;    						// A csize of -1 is from an unpatched local header  						if ((flags & 8) == 0 &&  							(inf.TotalIn != csize && csize != 0xFFFFFFFF && csize != -1 || inf.TotalOut != size)) {  							throw new ZipException("Size mismatch: " + csize + ";" + size + " <-> " + inf.TotalIn + ";" + inf.TotalOut);  						}  						inf.Reset();  						finished = true;  					}  					break;  					  				case (int)CompressionMethod.Stored:  					if ( (count > csize) && (csize >= 0) ) {  						count = (int)csize;  					}  					  					if ( count > 0 ) {  						count = inputBuffer.ReadClearTextBuffer(buffer' offset' count);  						if (count > 0) {  							csize -= count;  							size -= count;  						}  					}  					  					if (csize == 0) {  						finished = true;  					} else {  						if (count < 0) {  							throw new ZipException("EOF in stored block");  						}  					}  					break;  			}
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipNameTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipNameTransform.cs,ZipNameTransform,The following statement contains a magic number: int howMany = invalidPathChars.Length + 2;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipNameTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipNameTransform.cs,ZipNameTransform,The following statement contains a magic number: InvalidEntryCharsRelaxed[howMany - 2] = '?';
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipNameTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipNameTransform.cs,ZipNameTransform,The following statement contains a magic number: howMany = invalidPathChars.Length + 4;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipNameTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipNameTransform.cs,ZipNameTransform,The following statement contains a magic number: InvalidEntryChars[howMany - 2] = '\\';
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipNameTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipNameTransform.cs,ZipNameTransform,The following statement contains a magic number: InvalidEntryChars[howMany - 3] = '*';
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipNameTransform,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipNameTransform.cs,ZipNameTransform,The following statement contains a magic number: InvalidEntryChars[howMany - 4] = '?';
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,WriteLeShort,The following statement contains a magic number: baseOutputStream_.WriteByte((byte)((value >> 8) & 0xff));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,WriteLeInt,The following statement contains a magic number: WriteLeShort(value >> 16);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,WriteLeLong,The following statement contains a magic number: WriteLeInt((int)(value >> 32));
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,PutNextEntry,The following statement contains a magic number: entry.Flags |= 8;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,PutNextEntry,The following statement contains a magic number: entry.Flags |= 8;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,CloseEntry,The following statement contains a magic number: baseOutputStream_.Write(AESAuthCode' 0' 10);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,CloseEntry,The following statement contains a magic number: (curEntry.Flags & 8) != 0
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,WriteEncryptionHeader,The following statement contains a magic number: cryptBuffer[11] = (byte)(crcValue >> 24);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,WriteEncryptionHeader,The following statement contains a magic number: cryptBuffer[11] = (byte)(crcValue >> 24);
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,AddExtraDataAES,The following statement contains a magic number: const int VENDOR_VERSION = 2;
Magic Number,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,CopyAndEncrypt,The following statement contains a magic number: const int CopyBufferSize = 4096;
Missing Default,ICSharpCode.SharpZipLib.Zip.Compression,DeflaterEngine,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\DeflaterEngine.cs,SetLevel,The following switch statement is missing a default case: switch (compressionFunction) {  					case DEFLATE_STORED:  						if (strstart > blockStart) {  							huffman.FlushStoredBlock(window' blockStart'  								strstart - blockStart' false);  							blockStart = strstart;  						}  						UpdateHash();  						break;    					case DEFLATE_FAST:  						if (strstart > blockStart) {  							huffman.FlushBlock(window' blockStart' strstart - blockStart'  								false);  							blockStart = strstart;  						}  						break;    					case DEFLATE_SLOW:  						if (prevAvailable) {  							huffman.TallyLit(window[strstart-1] & 0xff);  						}  						if (strstart > blockStart) {  							huffman.FlushBlock(window' blockStart' strstart - blockStart' false);  							blockStart = strstart;  						}  						prevAvailable = false;  						matchLen = MIN_MATCH - 1;  						break;  				}
Missing Default,ICSharpCode.SharpZipLib.Zip.Compression,InflaterDynHeader,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\Compression\InflaterDynHeader.cs,Decode,The following switch statement is missing a default case: switch (mode) {  						case LNUM:  							lnum = input.PeekBits(5);  							if (lnum < 0) {  								return false;  							}  							lnum += 257;  							input.DropBits(5);  							//  	    System.err.println("LNUM: "+lnum);  							mode = DNUM;  							goto case DNUM; // fall through  						case DNUM:  							dnum = input.PeekBits(5);  							if (dnum < 0) {  								return false;  							}  							dnum++;  							input.DropBits(5);  							//  	    System.err.println("DNUM: "+dnum);  							num = lnum+dnum;  							litdistLens = new byte[num];  							mode = BLNUM;  							goto case BLNUM; // fall through  						case BLNUM:  							blnum = input.PeekBits(4);  							if (blnum < 0) {  								return false;  							}  							blnum += 4;  							input.DropBits(4);  							blLens = new byte[19];  							ptr = 0;  							//  	    System.err.println("BLNUM: "+blnum);  							mode = BLLENS;  							goto case BLLENS; // fall through  						case BLLENS:  							while (ptr < blnum) {  								int len = input.PeekBits(3);  								if (len < 0) {  									return false;  								}  								input.DropBits(3);  								//  		System.err.println("blLens["+BL_ORDER[ptr]+"]: "+len);  								blLens[BL_ORDER[ptr]] = (byte) len;  								ptr++;  							}  							blTree = new InflaterHuffmanTree(blLens);  							blLens = null;  							ptr = 0;  							mode = LENS;  							goto case LENS; // fall through  						case LENS:   						{  							int symbol;  							while (((symbol = blTree.GetSymbol(input)) & ~15) == 0) {  								/* Normal case: symbol in [0..15] */  							  								//  		  System.err.println("litdistLens["+ptr+"]: "+symbol);  								litdistLens[ptr++] = lastLen = (byte)symbol;  							  								if (ptr == num) {  									/* Finished */  									return true;  								}  							}  						  							/* need more input ? */  							if (symbol < 0) {  								return false;  							}  						  							/* otherwise repeat code */  							if (symbol >= 17) {  								/* repeat zero */  								//  		  System.err.println("repeating zero");  								lastLen = 0;  							} else {  								if (ptr == 0) {  									throw new SharpZipBaseException();  								}  							}  							repSymbol = symbol-16;  						}  							mode = REPS;  							goto case REPS; // fall through  						case REPS:  						{  							int bits = repBits[repSymbol];  							int count = input.PeekBits(bits);  							if (count < 0) {  								return false;  							}  							input.DropBits(bits);  							count += repMin[repSymbol];  							//  	      System.err.println("litdistLens repeated: "+count);  							  							if (ptr + count > num) {  								throw new SharpZipBaseException();  							}  							while (count-- > 0) {  								litdistLens[ptr++] = lastLen;  							}  							  							if (ptr == num) {  								/* Finished */  								return true;  							}  						}  						mode = LENS;  						goto decode_loop;  					}
Missing Default,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,WriteLocalEntryHeader,The following switch statement is missing a default case: switch (useZip64_) {  					case UseZip64.Dynamic:  						if (entry.Size < 0) {  							entry.ForceZip64();  						}  						break;    					case UseZip64.On:  						entry.ForceZip64();  						break;    					case UseZip64.Off:  						// Do nothing.  The entry itself may be using Zip64 independantly.  						break;  				}
Missing Default,ICSharpCode.SharpZipLib.Zip,ZipFile,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,RunUpdates,The following switch statement is missing a default case: switch (update.Command) {  							case UpdateCommand.Copy:  								if (directUpdate) {  									CopyEntryDirect(workFile' update' ref destinationPosition);  								}  								else {  									CopyEntry(workFile' update);  								}  								break;    							case UpdateCommand.Modify:  								// TODO: Direct modifying of an entry will take some legwork.  								ModifyEntry(workFile' update);  								break;    							case UpdateCommand.Add:  								if (!IsNewArchive && directUpdate) {  									workFile.baseStream_.Position = destinationPosition;  								}    								AddEntry(workFile' update);    								if (directUpdate) {  									destinationPosition = workFile.baseStream_.Position;  								}  								break;  						}
Missing Default,ICSharpCode.SharpZipLib.Zip,PartialInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipFile.cs,Seek,The following switch statement is missing a default case: switch ( origin )  				{  					case SeekOrigin.Begin:  						newPos = start_ + offset;  						break;  						  					case SeekOrigin.Current:  						newPos = readPos_ + offset;  						break;  						  					case SeekOrigin.End:  						newPos = end_ + offset;  						break;  				}
Missing Default,ICSharpCode.SharpZipLib.Zip,ZipInputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipInputStream.cs,BodyRead,The following switch statement is missing a default case: switch (method) {  				case (int)CompressionMethod.Deflated:  					count = base.Read(buffer' offset' count);  					if (count <= 0) {  						if (!inf.IsFinished) {  							throw new ZipException("Inflater not finished!");  						}  						inputBuffer.Available = inf.RemainingInput;    						// A csize of -1 is from an unpatched local header  						if ((flags & 8) == 0 &&  							(inf.TotalIn != csize && csize != 0xFFFFFFFF && csize != -1 || inf.TotalOut != size)) {  							throw new ZipException("Size mismatch: " + csize + ";" + size + " <-> " + inf.TotalIn + ";" + inf.TotalOut);  						}  						inf.Reset();  						finished = true;  					}  					break;  					  				case (int)CompressionMethod.Stored:  					if ( (count > csize) && (csize >= 0) ) {  						count = (int)csize;  					}  					  					if ( count > 0 ) {  						count = inputBuffer.ReadClearTextBuffer(buffer' offset' count);  						if (count > 0) {  							csize -= count;  							size -= count;  						}  					}  					  					if (csize == 0) {  						finished = true;  					} else {  						if (count < 0) {  							throw new ZipException("EOF in stored block");  						}  					}  					break;  			}
Missing Default,ICSharpCode.SharpZipLib.Zip,ZipOutputStream,D:\research\architectureSmells\repos\kidovate_D2ModdinClient\d2mpclientinstaller\Zip\ZipOutputStream.cs,Write,The following switch statement is missing a default case: switch (curMethod) {  				case CompressionMethod.Deflated:  					base.Write(buffer' offset' count);  					break;  				  				case CompressionMethod.Stored:  					if (Password != null) {  						CopyAndEncrypt(buffer' offset' count);  					} else {  						baseOutputStream_.Write(buffer' offset' count);  					}  					break;  			}
