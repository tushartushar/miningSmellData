Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ExampleWorker,Program,C:\repos\twingly_GearmanSharp\ExampleWorker\Program.cs,Main,The length of the statement  "                worker.RegisterFunction<string' string>("reverse"' DoReverse' Serializers.UTF8StringDeserialize' Serializers.UTF8StringSerialize); " is 130.
Long Statement,ExampleWorker,Program,C:\repos\twingly_GearmanSharp\ExampleWorker\Program.cs,Main,The length of the statement  "                worker.RegisterFunction<string' string>("reverse_with_status"' DoReverseWithStatus' Serializers.UTF8StringDeserialize' Serializers.UTF8StringSerialize); " is 152.
Magic Number,ExampleWorker,Program,C:\repos\twingly_GearmanSharp\ExampleWorker\Program.cs,Main,The following statement contains a magic number: try              {                  var worker = new GearmanThreadedWorker();                  var host = "smeagol";                  worker.AddServer(host' 4731);                  worker.AddServer(host' 4730);                  worker.SetClientId("my-threaded-worker");                  worker.RegisterFunction<string' string>("reverse"' DoReverse' Serializers.UTF8StringDeserialize' Serializers.UTF8StringSerialize);                  worker.RegisterFunction<string' string>("reverse_with_status"' DoReverseWithStatus' Serializers.UTF8StringDeserialize' Serializers.UTF8StringSerialize);                    Console.WriteLine("Press enter to start work loop' and press enter again to stop");                  Console.ReadLine();                    worker.StartWorkLoop();                                    Console.ReadLine();                    worker.StopWorkLoop();                    Console.WriteLine("Press enter to quit");                  Console.ReadLine();              }              catch (Exception ex)              {                  Console.WriteLine("Got exception: {0}"' ex);                  return;              }
Magic Number,ExampleWorker,Program,C:\repos\twingly_GearmanSharp\ExampleWorker\Program.cs,Main,The following statement contains a magic number: try              {                  var worker = new GearmanThreadedWorker();                  var host = "smeagol";                  worker.AddServer(host' 4731);                  worker.AddServer(host' 4730);                  worker.SetClientId("my-threaded-worker");                  worker.RegisterFunction<string' string>("reverse"' DoReverse' Serializers.UTF8StringDeserialize' Serializers.UTF8StringSerialize);                  worker.RegisterFunction<string' string>("reverse_with_status"' DoReverseWithStatus' Serializers.UTF8StringDeserialize' Serializers.UTF8StringSerialize);                    Console.WriteLine("Press enter to start work loop' and press enter again to stop");                  Console.ReadLine();                    worker.StartWorkLoop();                                    Console.ReadLine();                    worker.StopWorkLoop();                    Console.WriteLine("Press enter to quit");                  Console.ReadLine();              }              catch (Exception ex)              {                  Console.WriteLine("Got exception: {0}"' ex);                  return;              }
