Implementation smell,Namespace,Class,File,Method,Description
Long Method,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The method has 90 lines of code.
Long Method,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,BorrowCore,The method has 60 lines of code.
Complex Method,MsgPack.Rpc,ArraySegmentExtensions,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\ArraySegmentExtensions.cs,CopyTo,Cyclomatic complexity of the method is 7
Complex Method,MsgPack.Rpc,ByteArraySegmentStream,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\ByteArraySegmentStream.cs,Seek,Cyclomatic complexity of the method is 9
Complex Method,MsgPack.Rpc,ByteArraySegmentStream,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\ByteArraySegmentStream.cs,GetBuffer,Cyclomatic complexity of the method is 7
Complex Method,MsgPack.Rpc,ObjectPoolConfiguration,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\ObjectPoolConfiguration.cs,ToString,Cyclomatic complexity of the method is 18
Complex Method,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,Cyclomatic complexity of the method is 10
Complex Method,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,BuildExceptionStackTrace,Cyclomatic complexity of the method is 8
Complex Method,MsgPack.Rpc,RpcIdentifierUtility,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcIdentifierUtility.cs,Escape,Cyclomatic complexity of the method is 7
Complex Method,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,StandardObjectPool,Cyclomatic complexity of the method is 9
Complex Method,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,CollectLeases,Cyclomatic complexity of the method is 7
Complex Method,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,BorrowCore,Cyclomatic complexity of the method is 12
Complex Method,MsgPack.Rpc.Diagnostics,FileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\FileMessagePackStreamLogger.cs,Write,Cyclomatic complexity of the method is 10
Complex Method,MsgPack.Rpc.Diagnostics,IsolatedStorageFileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\IsolatedStorageFileMessagePackStreamLogger.cs,Write,Cyclomatic complexity of the method is 10
Complex Method,MsgPack.Rpc.Protocols,ShutdownCompletedEventArgs,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\ShutdownCompletedEventArgs.cs,ShutdownCompletedEventArgs,Cyclomatic complexity of the method is 7
Complex Method,MsgPack.Rpc.Protocols,SocketErrorCodeExtension,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\SocketErrorCodeExtension.cs,IsError,Cyclomatic complexity of the method is 14
Complex Method,MsgPack.Rpc.Protocols,SocketErrorCodeExtension,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\SocketErrorCodeExtension.cs,ToRpcError,Cyclomatic complexity of the method is 13
Long Parameter List,MsgPack.Rpc,ArraySegmentExtensions,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\ArraySegmentExtensions.cs,CopyTo,The method has 5 parameters.
Long Parameter List,MsgPack.Rpc,ByteArraySegmentStream,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\ByteArraySegmentStream.cs,BeginWrite,The method has 5 parameters.
Long Parameter List,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,RpcException,The method has 4 parameters.
Long Parameter List,MsgPack.Rpc,RpcArgumentException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcArgumentException.cs,RpcArgumentException,The method has 4 parameters.
Long Parameter List,MsgPack.Rpc,RpcArgumentException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcArgumentException.cs,RpcArgumentException,The method has 5 parameters.
Long Parameter List,MsgPack.Rpc,RpcError,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcError.cs,RpcError,The method has 4 parameters.
Long Parameter List,MsgPack.Rpc,RpcFaultException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcFaultException.cs,RpcFaultException,The method has 4 parameters.
Long Parameter List,MsgPack.Rpc,RpcMissingMethodException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcMissingMethodException.cs,RpcMissingMethodException,The method has 4 parameters.
Long Parameter List,MsgPack.Rpc,RpcServerUnavailableException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcServerUnavailableException.cs,RpcServerUnavailableException,The method has 4 parameters.
Long Parameter List,MsgPack.Rpc,RpcTimeoutException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcTimeoutException.cs,RpcTimeoutException,The method has 4 parameters.
Long Parameter List,MsgPack.Rpc.Protocols,RpcMethodInvocationException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\RpcMethodInvocationException.cs,RpcMethodInvocationException,The method has 4 parameters.
Long Parameter List,MsgPack.Rpc.Protocols,RpcMethodInvocationException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\RpcMethodInvocationException.cs,RpcMethodInvocationException,The method has 5 parameters.
Long Parameter List,MsgPack.Rpc.Protocols,RpcProtocolException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\RpcProtocolException.cs,RpcProtocolException,The method has 4 parameters.
Long Parameter List,MsgPack.Rpc.Protocols,RpcTransportException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\RpcTransportException.cs,RpcTransportException,The method has 4 parameters.
Long Parameter List,MsgPack.Rpc.StandardObjectPoolTracing,StandardObjectPoolTrace,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPoolTrace.cs,TraceEvent,The method has 4 parameters.
Long Identifier,MsgPack.Rpc,RpcApplicationContext,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcApplicationContext.cs,StopTimeoutWatch,The length of the parameter exceptionInCancellationCallback is 31.
Long Identifier,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,WriteStackFrame,The length of the parameter stackFrameTemplateWithFileInfo is 30.
Long Identifier,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,WriteStackFrame,The length of the parameter stackFrameTemplateWithoutFileInfo is 33.
Long Statement,MsgPack.Rpc,ByteArraySegmentStream,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\ByteArraySegmentStream.cs,Read,The length of the statement  "		int copied = this._segments [this._segmentIndex].CopyTo (this._offsetInCurrentSegment' buffer' offset + result' remains); " is 121.
Long Statement,MsgPack.Rpc,ByteArraySegmentStream,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\ByteArraySegmentStream.cs,Seek,The length of the statement  "	Contract.Assert (offsetFromCurrent + this._position <= this.Length' this.Length + " <= " + offsetFromCurrent + this._position); " is 127.
Long Statement,MsgPack.Rpc,MessagePackRpcServiceContractAttribute,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\MessagePackRpcServiceContractAttribute.cs,ToServiceId,The length of the statement  "	return ServiceIdentifier.CreateServiceId (String.IsNullOrWhiteSpace (this._name) ? ServiceIdentifier.TruncateGenericsSuffix (serviceType.Name) : this._name' this.Version); " is 171.
Long Statement,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,ToStackFrameMethodSignature,The length of the statement  "	return String.Concat (methodBase.DeclaringType.FullName' "."' methodBase.Name' "("' String.Join ("' "' methodBase.GetParameters ().Select (p => p.ParameterType.FullName))' ")"); " is 177.
Long Statement,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,ToString,The length of the statement  "	if ((!includesDebugInformation || this._remoteExceptions == null) && (this._preservedStackTrace == null || this._preservedStackTrace.Count == 0)) { " is 147.
Long Statement,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,BuildExceptionStackTrace,The length of the statement  "			if (i > 0 && this._remoteExceptions [i].Hop != this._remoteExceptions [i - 1].Hop && this._remoteExceptions [i].TypeName == this._remoteExceptions [i - 1].TypeName) { " is 166.
Long Statement,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,BuildExceptionStackTrace,The length of the statement  "				stringBuilder.AppendFormat (CultureInfo.CurrentCulture' "Exception transferred at [{0}]:"' this._remoteExceptions [i - 1].Hop).AppendLine (); " is 141.
Long Statement,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,BuildExceptionStackTrace,The length of the statement  "		stringBuilder.AppendFormat (CultureInfo.CurrentCulture' "Exception transferred at [{0}]:"' this._remoteExceptions [this._remoteExceptions.Length - 1].Hop).AppendLine (); " is 169.
Long Statement,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,WriteStackFrame,The length of the statement  "		stringBuilder.AppendFormat (CultureInfo.CurrentCulture' stackFrameTemplateWithFileInfo' frame.MethodSignature' frame.FileName' frame.FileLineNumber); " is 149.
Long Statement,MsgPack.Rpc,RpcIdentifierUtility,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcIdentifierUtility.cs,EnsureValidIdentifier,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.CurrentCulture' "'{0}' is not valid identifier."' Escape (identifier))' parameterName); " is 143.
Long Statement,MsgPack.Rpc,RpcError,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcError.cs,ToString,The length of the statement  "	return String.Format (CultureInfo.CurrentCulture' "{0}({1}): {2}"' this._identifier' this._errorCode' this.DefaultMessage); " is 123.
Long Statement,MsgPack.Rpc,RpcError,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcError.cs,CustomError,The length of the statement  "		throw new ArgumentOutOfRangeException ("errorCode"' errorCode' "Application error code must be grator than or equal to 0."); " is 124.
Long Statement,MsgPack.Rpc,RpcError,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcError.cs,CustomError,The length of the statement  "	return new RpcError (identifier' errorCode' "Application throws exception."' (error' data) => new RpcFaultException (error' data)); " is 131.
Long Statement,MsgPack.Rpc,RpcError,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcError.cs,FromIdentifier,The length of the statement  "	return CustomError (String.IsNullOrWhiteSpace (identifier) ? _unexpectedErrorIdentifier : identifier' errorCode ?? _unexpectedErrorCode); " is 137.
Long Statement,MsgPack.Rpc,RpcErrorMessage,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcErrorMessage.cs,ToString,The length of the statement  "		return String.Format (CultureInfo.CurrentCulture' "{{ \"ID\" : \"{0}\"' \"Code\" : {1}' \"Detail\" : {2} }}"' this._error.Identifier' this._error.ErrorCode' this._detail); " is 171.
Long Statement,MsgPack.Rpc,RpcTimeoutException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcTimeoutException.cs,GetExceptionMessage,The length of the statement  "	store.Add (ClientTimeoutKeyUtf8' this._clientTimeout == null ? MessagePackObject.Nil : this._clientTimeout.Value.Ticks); " is 120.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,Dispose,The length of the statement  "			this._source.TraceEvent (StandardObjectPoolTrace.Disposed' "Object pool is disposed. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X} }}"' this._name' this.GetType ()' this.GetHashCode ()); " is 206.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,Dispose,The length of the statement  "			this._source.TraceEvent (StandardObjectPoolTrace.Finalized' "Object pool is finalized. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X} }}"' this._name' this.GetType ()' this.GetHashCode ()); " is 208.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,OnEvictionTimerElapsed,The length of the statement  "		this._source.TraceEvent (StandardObjectPoolTrace.FailedToRefreshEvictionTImer' "Failed to refresh evition timer. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X} }}"' this._name' this.GetType ()' this.GetHashCode ()); " is 234.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,EvictExtraItemsCore,The length of the statement  "			this._source.TraceEvent (StandardObjectPoolTrace.EvictingExtraItemsInduced' "Start induced eviction. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"Evicting\" : {3} }}"' this._name' this.GetType ()' this.GetHashCode ()' evicting); " is 252.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,EvictExtraItemsCore,The length of the statement  "			this._source.TraceEvent (StandardObjectPoolTrace.EvictingExtraItemsPreiodic' "Start periodic eviction. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"Evicting\" : {3} }}"' this._name' this.GetType ()' this.GetHashCode ()' evicting); " is 254.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,EvictExtraItemsCore,The length of the statement  "			this._source.TraceEvent (StandardObjectPoolTrace.EvictedExtraItemsInduced' "Finish induced eviction. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"Evicted\" : {3} }}"' this._name' this.GetType ()' this.GetHashCode ()' disposed.Count); " is 257.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,EvictExtraItemsCore,The length of the statement  "			this._source.TraceEvent (StandardObjectPoolTrace.EvictedExtraItemsPreiodic' "Finish periodic eviction. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"Evicted\" : {3} }}"' this._name' this.GetType ()' this.GetHashCode ()' disposed.Count); " is 259.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,CollectLeases,The length of the statement  "				this._source.TraceEvent (StandardObjectPoolTrace.GarbageCollectedWithLost' "Garbage items are collected' but there may be lost items. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"Collected\" : {3}' \"MayBeLost\" : {4} }}"' this._name' this.GetType ()' this.GetHashCode ()' freed' freed - disposed.Count); " is 328.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,CollectLeases,The length of the statement  "				this._source.TraceEvent (StandardObjectPoolTrace.GarbageCollectedWithoutLost' "Garbage items are collected. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"Collected\" : {3} }}"' this._name' this.GetType ()' this.GetHashCode ()' freed); " is 257.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,BorrowCore,The length of the statement  "						this._source.TraceEvent (StandardObjectPoolTrace.ExpandPool' "Expand the pool. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"NewCount\" : {3} }}"' this._name' this.GetType ()' this.GetHashCode ()' this._pool.Count); " is 238.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,BorrowCore,The length of the statement  "						this._source.TraceEvent (StandardObjectPoolTrace.FailedToExpandPool' "Failed to expand the pool. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"NewCount\" : {3} }}"' this._name' this.GetType ()' this.GetHashCode ()' this._pool.Count); " is 256.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,BorrowCore,The length of the statement  "		this._source.TraceEvent (StandardObjectPoolTrace.PoolIsEmpty' "Pool is empty. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X} }}"' this._name' this.GetType ()' this.GetHashCode ()); " is 199.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,BorrowCore,The length of the statement  "			throw new TimeoutException (String.Format (CultureInfo.CurrentCulture' "The object borrowing is not completed in the time out {0}."' this._borrowTimeout)); " is 155.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,TraceBorrow,The length of the statement  "	this._source.TraceEvent (StandardObjectPoolTrace.BorrowFromPool' "Borrow the value from the pool. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"Evicted\" : 0x{2:X}' \"Resource\" : \"{3}\"' \"HashCodeOfResource\" : 0x{4:X} }}"' this._name' this.GetType ()' this.GetHashCode ()' result' result.GetHashCode ()); " is 331.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,ReturnCore,The length of the statement  "		this._source.TraceEvent (StandardObjectPoolTrace.FailedToReturnToPool' "Failed to return the value to the pool. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"Value\" : 0x{2:X}' \"Resource\" : \"{3}\"' \"HashCodeOfResource\" : 0x{4:X} }}"' this._name' this.GetType ()' this.GetHashCode ()' value' value.GetHashCode ()); " is 317.
Long Statement,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,ReturnCore,The length of the statement  "			this._source.TraceEvent (StandardObjectPoolTrace.ReturnToPool' "Return the value to the pool. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"Value\" : 0x{2:X}' \"Resource\" : \"{3}\"' \"HashCodeOfResource\" : 0x{4:X} }}"' this._name' this.GetType ()' this.GetHashCode ()' value' value.GetHashCode ()); " is 299.
Long Statement,MsgPack.Rpc.Diagnostics,FileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\FileMessagePackStreamLogger.cs,Write,The length of the statement  "	string filePath = Path.Combine (this._directoryPath' String.Format (CultureInfo.InvariantCulture' "{0:yyyyMMdd_HHmmss_fff}-{1}-{2}.mpac"' sessionStartTime.UtcDateTime' remoteEndPointString' ThreadId)); " is 201.
Long Statement,MsgPack.Rpc.Diagnostics,FileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\FileMessagePackStreamLogger.cs,Write,The length of the statement  "			using (var fileStream = new FileStream (filePath' FileMode.Append' FileAccess.Write' FileShare.Read' 64 * 1024' FileOptions.None)) { " is 132.
Long Statement,MsgPack.Rpc.Diagnostics,IsolatedStorageFileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\IsolatedStorageFileMessagePackStreamLogger.cs,Write,The length of the statement  "	string fileName = String.Format (CultureInfo.InvariantCulture' "{0:yyyyMMdd_HHmmss_fff}-{1}-{2}.mpac"' sessionStartTime.UtcDateTime' remoteEndPointString' ThreadId); " is 165.
Long Statement,MsgPack.Rpc.Protocols.Filters,StreamLoggingMessageFilter,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\Filters\StreamLoggingMessageFilter`1.cs,ProcessMessageCore,The length of the statement  "	this._logger.Write (context.SessionStartedAt' context.RemoteEndPoint' context.ReceivedData.SelectMany (s => s.AsEnumerable ())); " is 128.
Long Statement,MsgPack.Rpc.Protocols,MessageContext,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\MessageContext.cs,SetTransport,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' "This context is already bounded to '{0}'(Socket: 0x{1:X})."' transport.GetType ()' transport.BoundSocket == null ? IntPtr.Zero : transport.BoundSocket.Handle)); " is 241.
Long Statement,MsgPack.Rpc.Protocols,MessageContext,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\MessageContext.cs,SetTransport,The length of the statement  "						throw new InvalidOperationException( String.Format( CultureInfo.CurrentCulture' "This context is already bounded to '{0}'(Socket: 0x{1:X})."' transport.GetType()' transport.BoundSocket == null ? 0 : transport.BoundSocket.GetHashCode() ) );" is 239.
Long Statement,MsgPack.Rpc.Protocols,InboundMessageContext,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\InboundMessageContext.cs,ShiftCurrentReceivingBuffer,The length of the statement  "	this.SocketContext.SetBuffer (this._currentReceivingBuffer' this._currentReceivingBufferOffset' this._currentReceivingBuffer.Length - this._currentReceivingBufferOffset); " is 170.
Complex Conditional,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,ToString,The conditional expression  "(!includesDebugInformation || this._remoteExceptions == null) && (this._preservedStackTrace == null || this._preservedStackTrace.Count == 0)"  is complex.
Empty Catch Block,MsgPack.Rpc,RpcApplicationContext,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcApplicationContext.cs,OnHardTimeout,The method has an empty catch block.
Empty Catch Block,MsgPack.Rpc,RpcApplicationContext,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcApplicationContext.cs,OnHardTimeout,The method has an empty catch block.
Empty Catch Block,MsgPack.Rpc,RpcApplicationContext,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcApplicationContext.cs,DoHardTimeout,The method has an empty catch block.
Empty Catch Block,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,SafeGetHRFromException,The method has an empty catch block.
Empty Catch Block,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,SafeGetHRFromException,The method has an empty catch block.
Empty Catch Block,MsgPack.Rpc.Diagnostics,FileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\FileMessagePackStreamLogger.cs,Write,The method has an empty catch block.
Empty Catch Block,MsgPack.Rpc.Diagnostics,IsolatedStorageFileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\IsolatedStorageFileMessagePackStreamLogger.cs,Write,The method has an empty catch block.
Empty Catch Block,MsgPack.Rpc.Protocols,InboundMessageContext,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\InboundMessageContext.cs,ClearBuffers,The method has an empty catch block.
Empty Catch Block,MsgPack.Rpc.Protocols,InboundMessageContext,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\InboundMessageContext.cs,ClearBuffers,The method has an empty catch block.
Magic Number,MsgPack.Rpc,ObjectPoolConfiguration,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\ObjectPoolConfiguration.cs,ResetEvitionInterval,The following statement contains a magic number: this._evitionInterval = TimeSpan.FromMinutes (3);  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this.InnerException != null || this._remoteExceptions != null) {  	var innerList = new List<MessagePackObject> ();  	if (this._remoteExceptions != null) {  		foreach (var remoteException in this._remoteExceptions) {  			MessagePackObject[] properties = new MessagePackObject[6];  			properties [0] = remoteException.Hop + 1;  			properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  			// HResult is significant for some exception (e.g. IOException).  			properties [2] = remoteException.HResult;  			properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  			properties [4] =   			#if !SILVERLIGHT  			Array.ConvertAll (  			#else  										ArrayExtensions.ConvertAll( #endif  			remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset  			}) : new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset'  				frame.FileName'  				frame.FileLineNumber'  				frame.FileColumnNumber  			}));  			properties [5] = new MessagePackObject (remoteException.Data);  			innerList.Add (properties);  		}  	}  	for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = 0;  		properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = SafeGetHRFromException (inner);  		properties [3] = MessagePackConvert.EncodeString (inner.Message);  		// stack trace  		var innerStackTrace =   		#if !SILVERLIGHT  		new StackTrace (inner' true);  		#else  								new StackTrace( inner ); #endif  		var frames = new MessagePackObject[innerStackTrace.FrameCount];  		for (int i = 0; i < frames.Length; i++) {  			var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  			#if !SILVERLIGHT  			if (frame.GetFileName () == null) {  				#endif  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()  				};  				#if !SILVERLIGHT  			} else {  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()'  					frame.GetFileName ()'  					frame.GetFileLineNumber ()'  					frame.GetFileColumnNumber ()  				};  			}  			#endif  		}  		properties [4] = new MessagePackObject (frames);  		// data  		if (inner.Data != null && inner.Data.Count > 0) {  			var data = new MessagePackObjectDictionary (inner.Data.Count);  			foreach (System.Collections.DictionaryEntry entry in inner.Data) {  				data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  			}  			properties [5] = new MessagePackObject (data);  		}  		innerList.Add (properties);  	}  	store.Add (_remoteExceptionsUtf8' new MessagePackObject (innerList));  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this.InnerException != null || this._remoteExceptions != null) {  	var innerList = new List<MessagePackObject> ();  	if (this._remoteExceptions != null) {  		foreach (var remoteException in this._remoteExceptions) {  			MessagePackObject[] properties = new MessagePackObject[6];  			properties [0] = remoteException.Hop + 1;  			properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  			// HResult is significant for some exception (e.g. IOException).  			properties [2] = remoteException.HResult;  			properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  			properties [4] =   			#if !SILVERLIGHT  			Array.ConvertAll (  			#else  										ArrayExtensions.ConvertAll( #endif  			remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset  			}) : new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset'  				frame.FileName'  				frame.FileLineNumber'  				frame.FileColumnNumber  			}));  			properties [5] = new MessagePackObject (remoteException.Data);  			innerList.Add (properties);  		}  	}  	for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = 0;  		properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = SafeGetHRFromException (inner);  		properties [3] = MessagePackConvert.EncodeString (inner.Message);  		// stack trace  		var innerStackTrace =   		#if !SILVERLIGHT  		new StackTrace (inner' true);  		#else  								new StackTrace( inner ); #endif  		var frames = new MessagePackObject[innerStackTrace.FrameCount];  		for (int i = 0; i < frames.Length; i++) {  			var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  			#if !SILVERLIGHT  			if (frame.GetFileName () == null) {  				#endif  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()  				};  				#if !SILVERLIGHT  			} else {  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()'  					frame.GetFileName ()'  					frame.GetFileLineNumber ()'  					frame.GetFileColumnNumber ()  				};  			}  			#endif  		}  		properties [4] = new MessagePackObject (frames);  		// data  		if (inner.Data != null && inner.Data.Count > 0) {  			var data = new MessagePackObjectDictionary (inner.Data.Count);  			foreach (System.Collections.DictionaryEntry entry in inner.Data) {  				data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  			}  			properties [5] = new MessagePackObject (data);  		}  		innerList.Add (properties);  	}  	store.Add (_remoteExceptionsUtf8' new MessagePackObject (innerList));  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this.InnerException != null || this._remoteExceptions != null) {  	var innerList = new List<MessagePackObject> ();  	if (this._remoteExceptions != null) {  		foreach (var remoteException in this._remoteExceptions) {  			MessagePackObject[] properties = new MessagePackObject[6];  			properties [0] = remoteException.Hop + 1;  			properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  			// HResult is significant for some exception (e.g. IOException).  			properties [2] = remoteException.HResult;  			properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  			properties [4] =   			#if !SILVERLIGHT  			Array.ConvertAll (  			#else  										ArrayExtensions.ConvertAll( #endif  			remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset  			}) : new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset'  				frame.FileName'  				frame.FileLineNumber'  				frame.FileColumnNumber  			}));  			properties [5] = new MessagePackObject (remoteException.Data);  			innerList.Add (properties);  		}  	}  	for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = 0;  		properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = SafeGetHRFromException (inner);  		properties [3] = MessagePackConvert.EncodeString (inner.Message);  		// stack trace  		var innerStackTrace =   		#if !SILVERLIGHT  		new StackTrace (inner' true);  		#else  								new StackTrace( inner ); #endif  		var frames = new MessagePackObject[innerStackTrace.FrameCount];  		for (int i = 0; i < frames.Length; i++) {  			var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  			#if !SILVERLIGHT  			if (frame.GetFileName () == null) {  				#endif  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()  				};  				#if !SILVERLIGHT  			} else {  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()'  					frame.GetFileName ()'  					frame.GetFileLineNumber ()'  					frame.GetFileColumnNumber ()  				};  			}  			#endif  		}  		properties [4] = new MessagePackObject (frames);  		// data  		if (inner.Data != null && inner.Data.Count > 0) {  			var data = new MessagePackObjectDictionary (inner.Data.Count);  			foreach (System.Collections.DictionaryEntry entry in inner.Data) {  				data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  			}  			properties [5] = new MessagePackObject (data);  		}  		innerList.Add (properties);  	}  	store.Add (_remoteExceptionsUtf8' new MessagePackObject (innerList));  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this.InnerException != null || this._remoteExceptions != null) {  	var innerList = new List<MessagePackObject> ();  	if (this._remoteExceptions != null) {  		foreach (var remoteException in this._remoteExceptions) {  			MessagePackObject[] properties = new MessagePackObject[6];  			properties [0] = remoteException.Hop + 1;  			properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  			// HResult is significant for some exception (e.g. IOException).  			properties [2] = remoteException.HResult;  			properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  			properties [4] =   			#if !SILVERLIGHT  			Array.ConvertAll (  			#else  										ArrayExtensions.ConvertAll( #endif  			remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset  			}) : new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset'  				frame.FileName'  				frame.FileLineNumber'  				frame.FileColumnNumber  			}));  			properties [5] = new MessagePackObject (remoteException.Data);  			innerList.Add (properties);  		}  	}  	for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = 0;  		properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = SafeGetHRFromException (inner);  		properties [3] = MessagePackConvert.EncodeString (inner.Message);  		// stack trace  		var innerStackTrace =   		#if !SILVERLIGHT  		new StackTrace (inner' true);  		#else  								new StackTrace( inner ); #endif  		var frames = new MessagePackObject[innerStackTrace.FrameCount];  		for (int i = 0; i < frames.Length; i++) {  			var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  			#if !SILVERLIGHT  			if (frame.GetFileName () == null) {  				#endif  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()  				};  				#if !SILVERLIGHT  			} else {  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()'  					frame.GetFileName ()'  					frame.GetFileLineNumber ()'  					frame.GetFileColumnNumber ()  				};  			}  			#endif  		}  		properties [4] = new MessagePackObject (frames);  		// data  		if (inner.Data != null && inner.Data.Count > 0) {  			var data = new MessagePackObjectDictionary (inner.Data.Count);  			foreach (System.Collections.DictionaryEntry entry in inner.Data) {  				data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  			}  			properties [5] = new MessagePackObject (data);  		}  		innerList.Add (properties);  	}  	store.Add (_remoteExceptionsUtf8' new MessagePackObject (innerList));  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this.InnerException != null || this._remoteExceptions != null) {  	var innerList = new List<MessagePackObject> ();  	if (this._remoteExceptions != null) {  		foreach (var remoteException in this._remoteExceptions) {  			MessagePackObject[] properties = new MessagePackObject[6];  			properties [0] = remoteException.Hop + 1;  			properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  			// HResult is significant for some exception (e.g. IOException).  			properties [2] = remoteException.HResult;  			properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  			properties [4] =   			#if !SILVERLIGHT  			Array.ConvertAll (  			#else  										ArrayExtensions.ConvertAll( #endif  			remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset  			}) : new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset'  				frame.FileName'  				frame.FileLineNumber'  				frame.FileColumnNumber  			}));  			properties [5] = new MessagePackObject (remoteException.Data);  			innerList.Add (properties);  		}  	}  	for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = 0;  		properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = SafeGetHRFromException (inner);  		properties [3] = MessagePackConvert.EncodeString (inner.Message);  		// stack trace  		var innerStackTrace =   		#if !SILVERLIGHT  		new StackTrace (inner' true);  		#else  								new StackTrace( inner ); #endif  		var frames = new MessagePackObject[innerStackTrace.FrameCount];  		for (int i = 0; i < frames.Length; i++) {  			var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  			#if !SILVERLIGHT  			if (frame.GetFileName () == null) {  				#endif  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()  				};  				#if !SILVERLIGHT  			} else {  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()'  					frame.GetFileName ()'  					frame.GetFileLineNumber ()'  					frame.GetFileColumnNumber ()  				};  			}  			#endif  		}  		properties [4] = new MessagePackObject (frames);  		// data  		if (inner.Data != null && inner.Data.Count > 0) {  			var data = new MessagePackObjectDictionary (inner.Data.Count);  			foreach (System.Collections.DictionaryEntry entry in inner.Data) {  				data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  			}  			properties [5] = new MessagePackObject (data);  		}  		innerList.Add (properties);  	}  	store.Add (_remoteExceptionsUtf8' new MessagePackObject (innerList));  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this.InnerException != null || this._remoteExceptions != null) {  	var innerList = new List<MessagePackObject> ();  	if (this._remoteExceptions != null) {  		foreach (var remoteException in this._remoteExceptions) {  			MessagePackObject[] properties = new MessagePackObject[6];  			properties [0] = remoteException.Hop + 1;  			properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  			// HResult is significant for some exception (e.g. IOException).  			properties [2] = remoteException.HResult;  			properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  			properties [4] =   			#if !SILVERLIGHT  			Array.ConvertAll (  			#else  										ArrayExtensions.ConvertAll( #endif  			remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset  			}) : new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset'  				frame.FileName'  				frame.FileLineNumber'  				frame.FileColumnNumber  			}));  			properties [5] = new MessagePackObject (remoteException.Data);  			innerList.Add (properties);  		}  	}  	for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = 0;  		properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = SafeGetHRFromException (inner);  		properties [3] = MessagePackConvert.EncodeString (inner.Message);  		// stack trace  		var innerStackTrace =   		#if !SILVERLIGHT  		new StackTrace (inner' true);  		#else  								new StackTrace( inner ); #endif  		var frames = new MessagePackObject[innerStackTrace.FrameCount];  		for (int i = 0; i < frames.Length; i++) {  			var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  			#if !SILVERLIGHT  			if (frame.GetFileName () == null) {  				#endif  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()  				};  				#if !SILVERLIGHT  			} else {  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()'  					frame.GetFileName ()'  					frame.GetFileLineNumber ()'  					frame.GetFileColumnNumber ()  				};  			}  			#endif  		}  		properties [4] = new MessagePackObject (frames);  		// data  		if (inner.Data != null && inner.Data.Count > 0) {  			var data = new MessagePackObjectDictionary (inner.Data.Count);  			foreach (System.Collections.DictionaryEntry entry in inner.Data) {  				data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  			}  			properties [5] = new MessagePackObject (data);  		}  		innerList.Add (properties);  	}  	store.Add (_remoteExceptionsUtf8' new MessagePackObject (innerList));  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this.InnerException != null || this._remoteExceptions != null) {  	var innerList = new List<MessagePackObject> ();  	if (this._remoteExceptions != null) {  		foreach (var remoteException in this._remoteExceptions) {  			MessagePackObject[] properties = new MessagePackObject[6];  			properties [0] = remoteException.Hop + 1;  			properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  			// HResult is significant for some exception (e.g. IOException).  			properties [2] = remoteException.HResult;  			properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  			properties [4] =   			#if !SILVERLIGHT  			Array.ConvertAll (  			#else  										ArrayExtensions.ConvertAll( #endif  			remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset  			}) : new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset'  				frame.FileName'  				frame.FileLineNumber'  				frame.FileColumnNumber  			}));  			properties [5] = new MessagePackObject (remoteException.Data);  			innerList.Add (properties);  		}  	}  	for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = 0;  		properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = SafeGetHRFromException (inner);  		properties [3] = MessagePackConvert.EncodeString (inner.Message);  		// stack trace  		var innerStackTrace =   		#if !SILVERLIGHT  		new StackTrace (inner' true);  		#else  								new StackTrace( inner ); #endif  		var frames = new MessagePackObject[innerStackTrace.FrameCount];  		for (int i = 0; i < frames.Length; i++) {  			var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  			#if !SILVERLIGHT  			if (frame.GetFileName () == null) {  				#endif  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()  				};  				#if !SILVERLIGHT  			} else {  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()'  					frame.GetFileName ()'  					frame.GetFileLineNumber ()'  					frame.GetFileColumnNumber ()  				};  			}  			#endif  		}  		properties [4] = new MessagePackObject (frames);  		// data  		if (inner.Data != null && inner.Data.Count > 0) {  			var data = new MessagePackObjectDictionary (inner.Data.Count);  			foreach (System.Collections.DictionaryEntry entry in inner.Data) {  				data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  			}  			properties [5] = new MessagePackObject (data);  		}  		innerList.Add (properties);  	}  	store.Add (_remoteExceptionsUtf8' new MessagePackObject (innerList));  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this.InnerException != null || this._remoteExceptions != null) {  	var innerList = new List<MessagePackObject> ();  	if (this._remoteExceptions != null) {  		foreach (var remoteException in this._remoteExceptions) {  			MessagePackObject[] properties = new MessagePackObject[6];  			properties [0] = remoteException.Hop + 1;  			properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  			// HResult is significant for some exception (e.g. IOException).  			properties [2] = remoteException.HResult;  			properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  			properties [4] =   			#if !SILVERLIGHT  			Array.ConvertAll (  			#else  										ArrayExtensions.ConvertAll( #endif  			remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset  			}) : new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset'  				frame.FileName'  				frame.FileLineNumber'  				frame.FileColumnNumber  			}));  			properties [5] = new MessagePackObject (remoteException.Data);  			innerList.Add (properties);  		}  	}  	for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = 0;  		properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = SafeGetHRFromException (inner);  		properties [3] = MessagePackConvert.EncodeString (inner.Message);  		// stack trace  		var innerStackTrace =   		#if !SILVERLIGHT  		new StackTrace (inner' true);  		#else  								new StackTrace( inner ); #endif  		var frames = new MessagePackObject[innerStackTrace.FrameCount];  		for (int i = 0; i < frames.Length; i++) {  			var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  			#if !SILVERLIGHT  			if (frame.GetFileName () == null) {  				#endif  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()  				};  				#if !SILVERLIGHT  			} else {  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()'  					frame.GetFileName ()'  					frame.GetFileLineNumber ()'  					frame.GetFileColumnNumber ()  				};  			}  			#endif  		}  		properties [4] = new MessagePackObject (frames);  		// data  		if (inner.Data != null && inner.Data.Count > 0) {  			var data = new MessagePackObjectDictionary (inner.Data.Count);  			foreach (System.Collections.DictionaryEntry entry in inner.Data) {  				data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  			}  			properties [5] = new MessagePackObject (data);  		}  		innerList.Add (properties);  	}  	store.Add (_remoteExceptionsUtf8' new MessagePackObject (innerList));  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this.InnerException != null || this._remoteExceptions != null) {  	var innerList = new List<MessagePackObject> ();  	if (this._remoteExceptions != null) {  		foreach (var remoteException in this._remoteExceptions) {  			MessagePackObject[] properties = new MessagePackObject[6];  			properties [0] = remoteException.Hop + 1;  			properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  			// HResult is significant for some exception (e.g. IOException).  			properties [2] = remoteException.HResult;  			properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  			properties [4] =   			#if !SILVERLIGHT  			Array.ConvertAll (  			#else  										ArrayExtensions.ConvertAll( #endif  			remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset  			}) : new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset'  				frame.FileName'  				frame.FileLineNumber'  				frame.FileColumnNumber  			}));  			properties [5] = new MessagePackObject (remoteException.Data);  			innerList.Add (properties);  		}  	}  	for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = 0;  		properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = SafeGetHRFromException (inner);  		properties [3] = MessagePackConvert.EncodeString (inner.Message);  		// stack trace  		var innerStackTrace =   		#if !SILVERLIGHT  		new StackTrace (inner' true);  		#else  								new StackTrace( inner ); #endif  		var frames = new MessagePackObject[innerStackTrace.FrameCount];  		for (int i = 0; i < frames.Length; i++) {  			var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  			#if !SILVERLIGHT  			if (frame.GetFileName () == null) {  				#endif  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()  				};  				#if !SILVERLIGHT  			} else {  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()'  					frame.GetFileName ()'  					frame.GetFileLineNumber ()'  					frame.GetFileColumnNumber ()  				};  			}  			#endif  		}  		properties [4] = new MessagePackObject (frames);  		// data  		if (inner.Data != null && inner.Data.Count > 0) {  			var data = new MessagePackObjectDictionary (inner.Data.Count);  			foreach (System.Collections.DictionaryEntry entry in inner.Data) {  				data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  			}  			properties [5] = new MessagePackObject (data);  		}  		innerList.Add (properties);  	}  	store.Add (_remoteExceptionsUtf8' new MessagePackObject (innerList));  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this.InnerException != null || this._remoteExceptions != null) {  	var innerList = new List<MessagePackObject> ();  	if (this._remoteExceptions != null) {  		foreach (var remoteException in this._remoteExceptions) {  			MessagePackObject[] properties = new MessagePackObject[6];  			properties [0] = remoteException.Hop + 1;  			properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  			// HResult is significant for some exception (e.g. IOException).  			properties [2] = remoteException.HResult;  			properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  			properties [4] =   			#if !SILVERLIGHT  			Array.ConvertAll (  			#else  										ArrayExtensions.ConvertAll( #endif  			remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset  			}) : new MessagePackObject (new MessagePackObject[] {  				frame.MethodSignature'  				frame.ILOffset'  				frame.NativeOffset'  				frame.FileName'  				frame.FileLineNumber'  				frame.FileColumnNumber  			}));  			properties [5] = new MessagePackObject (remoteException.Data);  			innerList.Add (properties);  		}  	}  	for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = 0;  		properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = SafeGetHRFromException (inner);  		properties [3] = MessagePackConvert.EncodeString (inner.Message);  		// stack trace  		var innerStackTrace =   		#if !SILVERLIGHT  		new StackTrace (inner' true);  		#else  								new StackTrace( inner ); #endif  		var frames = new MessagePackObject[innerStackTrace.FrameCount];  		for (int i = 0; i < frames.Length; i++) {  			var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  			#if !SILVERLIGHT  			if (frame.GetFileName () == null) {  				#endif  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()  				};  				#if !SILVERLIGHT  			} else {  				frames [i] = new MessagePackObject[] {  					ToStackFrameMethodSignature (frame.GetMethod ())'  					frame.GetILOffset ()'  					frame.GetNativeOffset ()'  					frame.GetFileName ()'  					frame.GetFileLineNumber ()'  					frame.GetFileColumnNumber ()  				};  			}  			#endif  		}  		properties [4] = new MessagePackObject (frames);  		// data  		if (inner.Data != null && inner.Data.Count > 0) {  			var data = new MessagePackObjectDictionary (inner.Data.Count);  			foreach (System.Collections.DictionaryEntry entry in inner.Data) {  				data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  			}  			properties [5] = new MessagePackObject (data);  		}  		innerList.Add (properties);  	}  	store.Add (_remoteExceptionsUtf8' new MessagePackObject (innerList));  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this._remoteExceptions != null) {  	foreach (var remoteException in this._remoteExceptions) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = remoteException.Hop + 1;  		properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = remoteException.HResult;  		properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  		properties [4] =   		#if !SILVERLIGHT  		Array.ConvertAll (  		#else  									ArrayExtensions.ConvertAll( #endif  		remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  			frame.MethodSignature'  			frame.ILOffset'  			frame.NativeOffset  		}) : new MessagePackObject (new MessagePackObject[] {  			frame.MethodSignature'  			frame.ILOffset'  			frame.NativeOffset'  			frame.FileName'  			frame.FileLineNumber'  			frame.FileColumnNumber  		}));  		properties [5] = new MessagePackObject (remoteException.Data);  		innerList.Add (properties);  	}  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this._remoteExceptions != null) {  	foreach (var remoteException in this._remoteExceptions) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = remoteException.Hop + 1;  		properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = remoteException.HResult;  		properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  		properties [4] =   		#if !SILVERLIGHT  		Array.ConvertAll (  		#else  									ArrayExtensions.ConvertAll( #endif  		remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  			frame.MethodSignature'  			frame.ILOffset'  			frame.NativeOffset  		}) : new MessagePackObject (new MessagePackObject[] {  			frame.MethodSignature'  			frame.ILOffset'  			frame.NativeOffset'  			frame.FileName'  			frame.FileLineNumber'  			frame.FileColumnNumber  		}));  		properties [5] = new MessagePackObject (remoteException.Data);  		innerList.Add (properties);  	}  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this._remoteExceptions != null) {  	foreach (var remoteException in this._remoteExceptions) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = remoteException.Hop + 1;  		properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = remoteException.HResult;  		properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  		properties [4] =   		#if !SILVERLIGHT  		Array.ConvertAll (  		#else  									ArrayExtensions.ConvertAll( #endif  		remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  			frame.MethodSignature'  			frame.ILOffset'  			frame.NativeOffset  		}) : new MessagePackObject (new MessagePackObject[] {  			frame.MethodSignature'  			frame.ILOffset'  			frame.NativeOffset'  			frame.FileName'  			frame.FileLineNumber'  			frame.FileColumnNumber  		}));  		properties [5] = new MessagePackObject (remoteException.Data);  		innerList.Add (properties);  	}  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this._remoteExceptions != null) {  	foreach (var remoteException in this._remoteExceptions) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = remoteException.Hop + 1;  		properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = remoteException.HResult;  		properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  		properties [4] =   		#if !SILVERLIGHT  		Array.ConvertAll (  		#else  									ArrayExtensions.ConvertAll( #endif  		remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  			frame.MethodSignature'  			frame.ILOffset'  			frame.NativeOffset  		}) : new MessagePackObject (new MessagePackObject[] {  			frame.MethodSignature'  			frame.ILOffset'  			frame.NativeOffset'  			frame.FileName'  			frame.FileLineNumber'  			frame.FileColumnNumber  		}));  		properties [5] = new MessagePackObject (remoteException.Data);  		innerList.Add (properties);  	}  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (this._remoteExceptions != null) {  	foreach (var remoteException in this._remoteExceptions) {  		MessagePackObject[] properties = new MessagePackObject[6];  		properties [0] = remoteException.Hop + 1;  		properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  		// HResult is significant for some exception (e.g. IOException).  		properties [2] = remoteException.HResult;  		properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  		properties [4] =   		#if !SILVERLIGHT  		Array.ConvertAll (  		#else  									ArrayExtensions.ConvertAll( #endif  		remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  			frame.MethodSignature'  			frame.ILOffset'  			frame.NativeOffset  		}) : new MessagePackObject (new MessagePackObject[] {  			frame.MethodSignature'  			frame.ILOffset'  			frame.NativeOffset'  			frame.FileName'  			frame.FileLineNumber'  			frame.FileColumnNumber  		}));  		properties [5] = new MessagePackObject (remoteException.Data);  		innerList.Add (properties);  	}  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: foreach (var remoteException in this._remoteExceptions) {  	MessagePackObject[] properties = new MessagePackObject[6];  	properties [0] = remoteException.Hop + 1;  	properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  	// HResult is significant for some exception (e.g. IOException).  	properties [2] = remoteException.HResult;  	properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  	properties [4] =   	#if !SILVERLIGHT  	Array.ConvertAll (  	#else  								ArrayExtensions.ConvertAll( #endif  	remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  		frame.MethodSignature'  		frame.ILOffset'  		frame.NativeOffset  	}) : new MessagePackObject (new MessagePackObject[] {  		frame.MethodSignature'  		frame.ILOffset'  		frame.NativeOffset'  		frame.FileName'  		frame.FileLineNumber'  		frame.FileColumnNumber  	}));  	properties [5] = new MessagePackObject (remoteException.Data);  	innerList.Add (properties);  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: foreach (var remoteException in this._remoteExceptions) {  	MessagePackObject[] properties = new MessagePackObject[6];  	properties [0] = remoteException.Hop + 1;  	properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  	// HResult is significant for some exception (e.g. IOException).  	properties [2] = remoteException.HResult;  	properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  	properties [4] =   	#if !SILVERLIGHT  	Array.ConvertAll (  	#else  								ArrayExtensions.ConvertAll( #endif  	remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  		frame.MethodSignature'  		frame.ILOffset'  		frame.NativeOffset  	}) : new MessagePackObject (new MessagePackObject[] {  		frame.MethodSignature'  		frame.ILOffset'  		frame.NativeOffset'  		frame.FileName'  		frame.FileLineNumber'  		frame.FileColumnNumber  	}));  	properties [5] = new MessagePackObject (remoteException.Data);  	innerList.Add (properties);  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: foreach (var remoteException in this._remoteExceptions) {  	MessagePackObject[] properties = new MessagePackObject[6];  	properties [0] = remoteException.Hop + 1;  	properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  	// HResult is significant for some exception (e.g. IOException).  	properties [2] = remoteException.HResult;  	properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  	properties [4] =   	#if !SILVERLIGHT  	Array.ConvertAll (  	#else  								ArrayExtensions.ConvertAll( #endif  	remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  		frame.MethodSignature'  		frame.ILOffset'  		frame.NativeOffset  	}) : new MessagePackObject (new MessagePackObject[] {  		frame.MethodSignature'  		frame.ILOffset'  		frame.NativeOffset'  		frame.FileName'  		frame.FileLineNumber'  		frame.FileColumnNumber  	}));  	properties [5] = new MessagePackObject (remoteException.Data);  	innerList.Add (properties);  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: foreach (var remoteException in this._remoteExceptions) {  	MessagePackObject[] properties = new MessagePackObject[6];  	properties [0] = remoteException.Hop + 1;  	properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  	// HResult is significant for some exception (e.g. IOException).  	properties [2] = remoteException.HResult;  	properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  	properties [4] =   	#if !SILVERLIGHT  	Array.ConvertAll (  	#else  								ArrayExtensions.ConvertAll( #endif  	remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  		frame.MethodSignature'  		frame.ILOffset'  		frame.NativeOffset  	}) : new MessagePackObject (new MessagePackObject[] {  		frame.MethodSignature'  		frame.ILOffset'  		frame.NativeOffset'  		frame.FileName'  		frame.FileLineNumber'  		frame.FileColumnNumber  	}));  	properties [5] = new MessagePackObject (remoteException.Data);  	innerList.Add (properties);  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: foreach (var remoteException in this._remoteExceptions) {  	MessagePackObject[] properties = new MessagePackObject[6];  	properties [0] = remoteException.Hop + 1;  	properties [1] = MessagePackConvert.EncodeString (remoteException.TypeName);  	// HResult is significant for some exception (e.g. IOException).  	properties [2] = remoteException.HResult;  	properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  	properties [4] =   	#if !SILVERLIGHT  	Array.ConvertAll (  	#else  								ArrayExtensions.ConvertAll( #endif  	remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  		frame.MethodSignature'  		frame.ILOffset'  		frame.NativeOffset  	}) : new MessagePackObject (new MessagePackObject[] {  		frame.MethodSignature'  		frame.ILOffset'  		frame.NativeOffset'  		frame.FileName'  		frame.FileLineNumber'  		frame.FileColumnNumber  	}));  	properties [5] = new MessagePackObject (remoteException.Data);  	innerList.Add (properties);  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: properties [2] = remoteException.HResult;  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: properties [3] = MessagePackConvert.EncodeString (remoteException.Message);  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: properties [4] =   #if !SILVERLIGHT  Array.ConvertAll (  #else  							ArrayExtensions.ConvertAll( #endif  remoteException.StackTrace' frame => frame.FileName == null ? new MessagePackObject (new MessagePackObject[] {  	frame.MethodSignature'  	frame.ILOffset'  	frame.NativeOffset  }) : new MessagePackObject (new MessagePackObject[] {  	frame.MethodSignature'  	frame.ILOffset'  	frame.NativeOffset'  	frame.FileName'  	frame.FileLineNumber'  	frame.FileColumnNumber  }));  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: properties [5] = new MessagePackObject (remoteException.Data);  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  	MessagePackObject[] properties = new MessagePackObject[6];  	properties [0] = 0;  	properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  	// HResult is significant for some exception (e.g. IOException).  	properties [2] = SafeGetHRFromException (inner);  	properties [3] = MessagePackConvert.EncodeString (inner.Message);  	// stack trace  	var innerStackTrace =   	#if !SILVERLIGHT  	new StackTrace (inner' true);  	#else  							new StackTrace( inner ); #endif  	var frames = new MessagePackObject[innerStackTrace.FrameCount];  	for (int i = 0; i < frames.Length; i++) {  		var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  		#if !SILVERLIGHT  		if (frame.GetFileName () == null) {  			#endif  			frames [i] = new MessagePackObject[] {  				ToStackFrameMethodSignature (frame.GetMethod ())'  				frame.GetILOffset ()'  				frame.GetNativeOffset ()  			};  			#if !SILVERLIGHT  		} else {  			frames [i] = new MessagePackObject[] {  				ToStackFrameMethodSignature (frame.GetMethod ())'  				frame.GetILOffset ()'  				frame.GetNativeOffset ()'  				frame.GetFileName ()'  				frame.GetFileLineNumber ()'  				frame.GetFileColumnNumber ()  			};  		}  		#endif  	}  	properties [4] = new MessagePackObject (frames);  	// data  	if (inner.Data != null && inner.Data.Count > 0) {  		var data = new MessagePackObjectDictionary (inner.Data.Count);  		foreach (System.Collections.DictionaryEntry entry in inner.Data) {  			data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  		}  		properties [5] = new MessagePackObject (data);  	}  	innerList.Add (properties);  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  	MessagePackObject[] properties = new MessagePackObject[6];  	properties [0] = 0;  	properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  	// HResult is significant for some exception (e.g. IOException).  	properties [2] = SafeGetHRFromException (inner);  	properties [3] = MessagePackConvert.EncodeString (inner.Message);  	// stack trace  	var innerStackTrace =   	#if !SILVERLIGHT  	new StackTrace (inner' true);  	#else  							new StackTrace( inner ); #endif  	var frames = new MessagePackObject[innerStackTrace.FrameCount];  	for (int i = 0; i < frames.Length; i++) {  		var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  		#if !SILVERLIGHT  		if (frame.GetFileName () == null) {  			#endif  			frames [i] = new MessagePackObject[] {  				ToStackFrameMethodSignature (frame.GetMethod ())'  				frame.GetILOffset ()'  				frame.GetNativeOffset ()  			};  			#if !SILVERLIGHT  		} else {  			frames [i] = new MessagePackObject[] {  				ToStackFrameMethodSignature (frame.GetMethod ())'  				frame.GetILOffset ()'  				frame.GetNativeOffset ()'  				frame.GetFileName ()'  				frame.GetFileLineNumber ()'  				frame.GetFileColumnNumber ()  			};  		}  		#endif  	}  	properties [4] = new MessagePackObject (frames);  	// data  	if (inner.Data != null && inner.Data.Count > 0) {  		var data = new MessagePackObjectDictionary (inner.Data.Count);  		foreach (System.Collections.DictionaryEntry entry in inner.Data) {  			data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  		}  		properties [5] = new MessagePackObject (data);  	}  	innerList.Add (properties);  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  	MessagePackObject[] properties = new MessagePackObject[6];  	properties [0] = 0;  	properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  	// HResult is significant for some exception (e.g. IOException).  	properties [2] = SafeGetHRFromException (inner);  	properties [3] = MessagePackConvert.EncodeString (inner.Message);  	// stack trace  	var innerStackTrace =   	#if !SILVERLIGHT  	new StackTrace (inner' true);  	#else  							new StackTrace( inner ); #endif  	var frames = new MessagePackObject[innerStackTrace.FrameCount];  	for (int i = 0; i < frames.Length; i++) {  		var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  		#if !SILVERLIGHT  		if (frame.GetFileName () == null) {  			#endif  			frames [i] = new MessagePackObject[] {  				ToStackFrameMethodSignature (frame.GetMethod ())'  				frame.GetILOffset ()'  				frame.GetNativeOffset ()  			};  			#if !SILVERLIGHT  		} else {  			frames [i] = new MessagePackObject[] {  				ToStackFrameMethodSignature (frame.GetMethod ())'  				frame.GetILOffset ()'  				frame.GetNativeOffset ()'  				frame.GetFileName ()'  				frame.GetFileLineNumber ()'  				frame.GetFileColumnNumber ()  			};  		}  		#endif  	}  	properties [4] = new MessagePackObject (frames);  	// data  	if (inner.Data != null && inner.Data.Count > 0) {  		var data = new MessagePackObjectDictionary (inner.Data.Count);  		foreach (System.Collections.DictionaryEntry entry in inner.Data) {  			data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  		}  		properties [5] = new MessagePackObject (data);  	}  	innerList.Add (properties);  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  	MessagePackObject[] properties = new MessagePackObject[6];  	properties [0] = 0;  	properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  	// HResult is significant for some exception (e.g. IOException).  	properties [2] = SafeGetHRFromException (inner);  	properties [3] = MessagePackConvert.EncodeString (inner.Message);  	// stack trace  	var innerStackTrace =   	#if !SILVERLIGHT  	new StackTrace (inner' true);  	#else  							new StackTrace( inner ); #endif  	var frames = new MessagePackObject[innerStackTrace.FrameCount];  	for (int i = 0; i < frames.Length; i++) {  		var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  		#if !SILVERLIGHT  		if (frame.GetFileName () == null) {  			#endif  			frames [i] = new MessagePackObject[] {  				ToStackFrameMethodSignature (frame.GetMethod ())'  				frame.GetILOffset ()'  				frame.GetNativeOffset ()  			};  			#if !SILVERLIGHT  		} else {  			frames [i] = new MessagePackObject[] {  				ToStackFrameMethodSignature (frame.GetMethod ())'  				frame.GetILOffset ()'  				frame.GetNativeOffset ()'  				frame.GetFileName ()'  				frame.GetFileLineNumber ()'  				frame.GetFileColumnNumber ()  			};  		}  		#endif  	}  	properties [4] = new MessagePackObject (frames);  	// data  	if (inner.Data != null && inner.Data.Count > 0) {  		var data = new MessagePackObjectDictionary (inner.Data.Count);  		foreach (System.Collections.DictionaryEntry entry in inner.Data) {  			data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  		}  		properties [5] = new MessagePackObject (data);  	}  	innerList.Add (properties);  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: for (var inner = this.InnerException; inner != null; inner = inner.InnerException) {  	MessagePackObject[] properties = new MessagePackObject[6];  	properties [0] = 0;  	properties [1] = MessagePackConvert.EncodeString (inner.GetType ().FullName);  	// HResult is significant for some exception (e.g. IOException).  	properties [2] = SafeGetHRFromException (inner);  	properties [3] = MessagePackConvert.EncodeString (inner.Message);  	// stack trace  	var innerStackTrace =   	#if !SILVERLIGHT  	new StackTrace (inner' true);  	#else  							new StackTrace( inner ); #endif  	var frames = new MessagePackObject[innerStackTrace.FrameCount];  	for (int i = 0; i < frames.Length; i++) {  		var frame = innerStackTrace.GetFrame (innerStackTrace.FrameCount - (i + 1));  		#if !SILVERLIGHT  		if (frame.GetFileName () == null) {  			#endif  			frames [i] = new MessagePackObject[] {  				ToStackFrameMethodSignature (frame.GetMethod ())'  				frame.GetILOffset ()'  				frame.GetNativeOffset ()  			};  			#if !SILVERLIGHT  		} else {  			frames [i] = new MessagePackObject[] {  				ToStackFrameMethodSignature (frame.GetMethod ())'  				frame.GetILOffset ()'  				frame.GetNativeOffset ()'  				frame.GetFileName ()'  				frame.GetFileLineNumber ()'  				frame.GetFileColumnNumber ()  			};  		}  		#endif  	}  	properties [4] = new MessagePackObject (frames);  	// data  	if (inner.Data != null && inner.Data.Count > 0) {  		var data = new MessagePackObjectDictionary (inner.Data.Count);  		foreach (System.Collections.DictionaryEntry entry in inner.Data) {  			data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  		}  		properties [5] = new MessagePackObject (data);  	}  	innerList.Add (properties);  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: properties [2] = SafeGetHRFromException (inner);  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: properties [3] = MessagePackConvert.EncodeString (inner.Message);  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: properties [4] = new MessagePackObject (frames);  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: if (inner.Data != null && inner.Data.Count > 0) {  	var data = new MessagePackObjectDictionary (inner.Data.Count);  	foreach (System.Collections.DictionaryEntry entry in inner.Data) {  		data.Add (MessagePackObject.FromObject (entry.Key)' MessagePackObject.FromObject (entry.Value));  	}  	properties [5] = new MessagePackObject (data);  }  
Magic Number,MsgPack.Rpc,RpcException,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\RpcException.PreserveStackTrace.cs,GetExceptionMessage,The following statement contains a magic number: properties [5] = new MessagePackObject (data);  
Magic Number,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,CollectLeases,The following statement contains a magic number: try {  	this._leasesLock.EnterWriteLock ();  	try {  		var buffer = new List<WeakReference> (this._leases.Count + Environment.ProcessorCount * 2);  		WeakReference dequeud;  		while (this._leases.TryTake (out dequeud)) {  			buffer.Add (dequeud);  		}  		bool isFlushed = false;  		int freed = 0;  		foreach (var item in buffer) {  			if (!isFlushed && item.IsAlive && !disposed.Exists (x => Object.ReferenceEquals (x' SafeGetTarget (item)))) {  				if (!this._leases.TryAdd (item)) {  					// Just evict  					isFlushed = true;  					freed++;  				}  			} else {  				freed++;  			}  		}  		#if !API_SIGNATURE_TEST  		if (freed - disposed.Count > 0 && this._source.ShouldTrace (StandardObjectPoolTrace.GarbageCollectedWithLost)) {  			this._source.TraceEvent (StandardObjectPoolTrace.GarbageCollectedWithLost' "Garbage items are collected' but there may be lost items. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"Collected\" : {3}' \"MayBeLost\" : {4} }}"' this._name' this.GetType ()' this.GetHashCode ()' freed' freed - disposed.Count);  		} else if (freed > 0 && this._source.ShouldTrace (StandardObjectPoolTrace.GarbageCollectedWithoutLost)) {  			this._source.TraceEvent (StandardObjectPoolTrace.GarbageCollectedWithoutLost' "Garbage items are collected. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"Collected\" : {3} }}"' this._name' this.GetType ()' this.GetHashCode ()' freed);  		}  		#endif  	} finally {  		this._leasesLock.ExitWriteLock ();  	}  	isSuccess = true;  } finally {  	if (!isSuccess) {  		this.SetIsCorrupted ();  	}  }  
Magic Number,MsgPack.Rpc,StandardObjectPool,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\StandardObjectPool`1.cs,CollectLeases,The following statement contains a magic number: try {  	var buffer = new List<WeakReference> (this._leases.Count + Environment.ProcessorCount * 2);  	WeakReference dequeud;  	while (this._leases.TryTake (out dequeud)) {  		buffer.Add (dequeud);  	}  	bool isFlushed = false;  	int freed = 0;  	foreach (var item in buffer) {  		if (!isFlushed && item.IsAlive && !disposed.Exists (x => Object.ReferenceEquals (x' SafeGetTarget (item)))) {  			if (!this._leases.TryAdd (item)) {  				// Just evict  				isFlushed = true;  				freed++;  			}  		} else {  			freed++;  		}  	}  	#if !API_SIGNATURE_TEST  	if (freed - disposed.Count > 0 && this._source.ShouldTrace (StandardObjectPoolTrace.GarbageCollectedWithLost)) {  		this._source.TraceEvent (StandardObjectPoolTrace.GarbageCollectedWithLost' "Garbage items are collected' but there may be lost items. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"Collected\" : {3}' \"MayBeLost\" : {4} }}"' this._name' this.GetType ()' this.GetHashCode ()' freed' freed - disposed.Count);  	} else if (freed > 0 && this._source.ShouldTrace (StandardObjectPoolTrace.GarbageCollectedWithoutLost)) {  		this._source.TraceEvent (StandardObjectPoolTrace.GarbageCollectedWithoutLost' "Garbage items are collected. {{ \"Name\" : \"{0}\"' \"Type\" : \"{1}\"' \"HashCode\" : 0x{2:X}' \"Collected\" : {3} }}"' this._name' this.GetType ()' this.GetHashCode ()' freed);  	}  	#endif  } finally {  	this._leasesLock.ExitWriteLock ();  }  
Magic Number,MsgPack.Rpc.Diagnostics,FileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\FileMessagePackStreamLogger.cs,Write,The following statement contains a magic number: while (true) {  	if (!Directory.Exists (this._directoryPath)) {  		Directory.CreateDirectory (this._directoryPath);  	}  	try {  		using (var fileStream = new FileStream (filePath' FileMode.Append' FileAccess.Write' FileShare.Read' 64 * 1024' FileOptions.None)) {  			if (stream != null) {  				long written = fileStream.Length;  				foreach (var b in Skip (stream' written)) {  					fileStream.WriteByte (b);  				}  			}  		}  		break;  	} catch (DirectoryNotFoundException) {  	}  }  
Magic Number,MsgPack.Rpc.Diagnostics,FileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\FileMessagePackStreamLogger.cs,Write,The following statement contains a magic number: while (true) {  	if (!Directory.Exists (this._directoryPath)) {  		Directory.CreateDirectory (this._directoryPath);  	}  	try {  		using (var fileStream = new FileStream (filePath' FileMode.Append' FileAccess.Write' FileShare.Read' 64 * 1024' FileOptions.None)) {  			if (stream != null) {  				long written = fileStream.Length;  				foreach (var b in Skip (stream' written)) {  					fileStream.WriteByte (b);  				}  			}  		}  		break;  	} catch (DirectoryNotFoundException) {  	}  }  
Magic Number,MsgPack.Rpc.Diagnostics,FileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\FileMessagePackStreamLogger.cs,Write,The following statement contains a magic number: try {  	using (var fileStream = new FileStream (filePath' FileMode.Append' FileAccess.Write' FileShare.Read' 64 * 1024' FileOptions.None)) {  		if (stream != null) {  			long written = fileStream.Length;  			foreach (var b in Skip (stream' written)) {  				fileStream.WriteByte (b);  			}  		}  	}  	break;  } catch (DirectoryNotFoundException) {  }  
Magic Number,MsgPack.Rpc.Diagnostics,FileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\FileMessagePackStreamLogger.cs,Write,The following statement contains a magic number: try {  	using (var fileStream = new FileStream (filePath' FileMode.Append' FileAccess.Write' FileShare.Read' 64 * 1024' FileOptions.None)) {  		if (stream != null) {  			long written = fileStream.Length;  			foreach (var b in Skip (stream' written)) {  				fileStream.WriteByte (b);  			}  		}  	}  	break;  } catch (DirectoryNotFoundException) {  }  
Magic Number,MsgPack.Rpc.Diagnostics,FileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\FileMessagePackStreamLogger.cs,Write,The following statement contains a magic number: using (var fileStream = new FileStream (filePath' FileMode.Append' FileAccess.Write' FileShare.Read' 64 * 1024' FileOptions.None)) {  	if (stream != null) {  		long written = fileStream.Length;  		foreach (var b in Skip (stream' written)) {  			fileStream.WriteByte (b);  		}  	}  }  
Magic Number,MsgPack.Rpc.Diagnostics,FileMessagePackStreamLogger,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Diagnostics\FileMessagePackStreamLogger.cs,Write,The following statement contains a magic number: using (var fileStream = new FileStream (filePath' FileMode.Append' FileAccess.Write' FileShare.Read' 64 * 1024' FileOptions.None)) {  	if (stream != null) {  		long written = fileStream.Length;  		foreach (var b in Skip (stream' written)) {  			fileStream.WriteByte (b);  		}  	}  }  
Magic Number,MsgPack.Rpc.Protocols.Filters,QuotaMessageFilter,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\Filters\QuotaMessageFilter`1.cs,ProcessMessageCore,The following statement contains a magic number: if (length > this._quota) {  	throw RpcError.MessageTooLargeError.ToException (new MessagePackObject (new MessagePackObjectDictionary (2) {  		{  			"ActualLength"'  			length  		}'  		{  			"Quota"'  			this._quota  		}  	}' true));  }  
Magic Number,MsgPack.Rpc.Protocols.Filters,QuotaMessageFilter,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\Filters\QuotaMessageFilter`1.cs,ProcessMessageCore,The following statement contains a magic number: throw RpcError.MessageTooLargeError.ToException (new MessagePackObject (new MessagePackObjectDictionary (2) {  	{  		"ActualLength"'  		length  	}'  	{  		"Quota"'  		this._quota  	}  }' true));  
Magic Number,MsgPack.Rpc.Protocols,OutboundMessageContext,D:\newReposJune17\yfakariya_msgpack-rpc-cli\src\MsgPack.Rpc\Rpc\Protocols\OutboundMessageContext.cs,OutboundMessageContext,The following statement contains a magic number: this._idBuffer = new MemoryStream (5);  
