Implementation smell,Namespace,Class,File,Method,Description
Long Method,Platform.VirtualFileSystem.Network.Text.Protocol,TextNetworkProtocol,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\Protocol\TextNetworkProtocol.cs,ReadEntries,The method has 115 lines of code.
Long Parameter List,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,ComputeHash,The method has 8 parameters. Parameters: uri' nodeType' algorithm' recursive' offset' length' fileAttributes' dirAttributes
Long Parameter List,Platform.VirtualFileSystem.Network.Text,TextRandomAccessNetworkFileSystemStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,TextRandomAccessNetworkFileSystemStream,The method has 5 parameters. Parameters: client' fileAccess' fileShare' canSeek' length
Long Parameter List,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InteractiveDeflaterOutputStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveDeflatorOutputStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InteractiveDeflaterOutputStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveDeflatorOutputStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,ICSharpCode.SharpZipLib.Zip.Compression.Streams.Interactive,InteractiveInflaterInputStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveInflaterInputStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Statement,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,NegotiateEncryption,The length of the statement  "				this.WriteStream = new InteractiveDeflaterOutputStream(base.WriteStream' new Deflater(Deflater.BEST_COMPRESSION' true)' 512); " is 125.
Long Statement,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,Delete,The length of the statement  "					SendCommand(DefaultTryCount' "delete -t={0} {1} \"{2}\""' TextNetworkProtocol.GetNodeTypeName(nodeType)' recursive ? "-r" : ""' uri).ProcessError(); " is 148.
Long Statement,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,Create,The length of the statement  "					SendCommand(DefaultTryCount' "create -t={0} {1} \"{2}\""' TextNetworkProtocol.GetNodeTypeName(nodeType)' createParent && nodeType.IsLikeDirectory ? "-p" : ""' uri).ProcessError(); " is 179.
Long Statement,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,Move,The length of the statement  "					SendCommand(DefaultTryCount' "move -t={0} -o={1} \"{2}\" \"{3}\""' TextNetworkProtocol.GetNodeTypeName(nodeType)' overwrite' srcUri' desUri).ProcessError(); " is 156.
Long Statement,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,Copy,The length of the statement  "					SendCommand(DefaultTryCount' "copy -t={0} -o={1} \"{2}\" \"{3}\""' TextNetworkProtocol.GetNodeTypeName(nodeType)' overwrite' srcUri' desUri).ProcessError(); " is 156.
Long Statement,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,List,The length of the statement  "							SendCommand(DefaultTryCount' @"list -regex=""{0}"" ""{1}"""' TextConversion.ToEscapedHexString(regex)' uri).ProcessError(); " is 123.
Long Statement,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,ListAttributes,The length of the statement  "								SendCommand(DefaultTryCount' @"list -a -regex=""{0}"" ""{1}"""' TextConversion.ToEscapedHexString(regex)' uri).ProcessError(); " is 126.
Long Statement,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,CreateHardLink,The length of the statement  "					this.SendCommand(DefaultTryCount' "createhardlink -o={0} \"{1}\" \"{2}\""' overwrite.ToString()' srcUri' desUri).ProcessError(); " is 128.
Long Statement,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,GetAttributes,The length of the statement  "					this.SendCommand(DefaultTryCount' @"getattributes -t={0} ""{1}"""' TextNetworkProtocol.GetNodeTypeName(nodeType)' uri).ProcessError(); " is 134.
Long Statement,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,SetAttributes,The length of the statement  "				var attributesList = attributes.Where(x => !x.Left.EqualsIgnoreCase("length") && !x.Left.EqualsIgnoreCase("exists")).ToList(); " is 126.
Long Statement,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,SetAttributes,The length of the statement  "						WriteTextBlock(@"{0}=""{1}:{2}"""' attribute.Name' ProtocolTypes.GetTypeName(attribute.Value.GetType())' ProtocolTypes.ToEscapedString(attribute.Value)); " is 153.
Long Statement,Platform.VirtualFileSystem.Network.Text,TextRandomAccessNetworkFileSystemStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,StabilizeClientState,The length of the statement  "							this.readBytesLeft -= this.client.ReadStream.Read(this.tempBuffer' 0' Math.Min(this.readBytesLeft' this.tempBuffer.Length)); " is 124.
Long Statement,Platform.VirtualFileSystem.Network.Text,TextRandomAccessNetworkFileSystemStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,ComputeHash,The length of the statement  "				var response = this.client.SendCommand(DefaultTryCount' @"computehash -o=""{0}"" -l=""{1}"" -a=""{2}"""' offset' length' algorithm).ProcessError(); " is 147.
Long Statement,Platform.VirtualFileSystem.Network.Text.Protocol,ProtocolTypes,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\Protocol\ProtocolTypes.cs,ToString,The length of the statement  "                return (((DateTime)value).ToUniversalTime().ToString(DateTimeFormats.SortableUtcDateTimeFormatWithFractionSecondsString)); " is 122.
Virtual Method Call from Constructor,Platform.VirtualFileSystem.Network.Text,CommandContext,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextNetworkFileSystemClient.cs,CommandContext,The constructor "CommandContext" calls a virtual method "Aquire".
Virtual Method Call from Constructor,Platform.VirtualFileSystem.Network.Text,BufferedFileSystemNetworkStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextNetworkFileSystemClient.cs,BufferedFileSystemNetworkStream,The constructor "BufferedFileSystemNetworkStream" calls a virtual method "OnAfterClose".
Virtual Method Call from Constructor,Platform.VirtualFileSystem.Network.Text,BufferedFileSystemNetworkStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextNetworkFileSystemClient.cs,BufferedFileSystemNetworkStream,The constructor "BufferedFileSystemNetworkStream" calls a virtual method "OnBeforeClose".
Empty Catch Block,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,SendCommand,The method has an empty catch block.
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,Connect,The following statement contains a magic number: this.TcpClient.ReceiveBufferSize = 256 * 1024;
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,Connect,The following statement contains a magic number: this.TcpClient.ReceiveBufferSize = 256 * 1024;
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,Connect,The following statement contains a magic number: this.TcpClient.ReceiveTimeout = (int)TimeSpan.FromSeconds(60).TotalMilliseconds;
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,Connect,The following statement contains a magic number: this.TcpClient.SendTimeout = (int)TimeSpan.FromSeconds(60).TotalMilliseconds;
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,ReadWelcomeText,The following statement contains a magic number: var builder = new StringBuilder(64);
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,SendCommand,The following statement contains a magic number: lock (this.SyncLock)  			{  				var tries = trycount;  				var delay = TimeSpan.Zero;    				for (var i = 0; i < tries; i++)  				{  					try  					{  						SendCommandWithoutResponse(format' args);    						return ReadResponse();  					}  					catch (IOException)  					{  						if (i != tries - 1)  						{  							System.Threading.Thread.Sleep(delay);    							if (delay == TimeSpan.Zero)  							{  								delay = TimeSpan.FromMilliseconds(50);  							}  							else  							{  								delay = TimeSpan.FromMilliseconds(delay.TotalMilliseconds * 2);  							}    							if (delay > TimeSpan.FromSeconds(5))  							{  								delay = TimeSpan.FromSeconds(5);  							}    							Reconnect();    							continue;  						}  						else  						{  							throw;  						}  					}  					catch  					{  					}  				}    				throw new ApplicationException("Unreachable state");  			}
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,SendCommand,The following statement contains a magic number: lock (this.SyncLock)  			{  				var tries = trycount;  				var delay = TimeSpan.Zero;    				for (var i = 0; i < tries; i++)  				{  					try  					{  						SendCommandWithoutResponse(format' args);    						return ReadResponse();  					}  					catch (IOException)  					{  						if (i != tries - 1)  						{  							System.Threading.Thread.Sleep(delay);    							if (delay == TimeSpan.Zero)  							{  								delay = TimeSpan.FromMilliseconds(50);  							}  							else  							{  								delay = TimeSpan.FromMilliseconds(delay.TotalMilliseconds * 2);  							}    							if (delay > TimeSpan.FromSeconds(5))  							{  								delay = TimeSpan.FromSeconds(5);  							}    							Reconnect();    							continue;  						}  						else  						{  							throw;  						}  					}  					catch  					{  					}  				}    				throw new ApplicationException("Unreachable state");  			}
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,SendCommand,The following statement contains a magic number: lock (this.SyncLock)  			{  				var tries = trycount;  				var delay = TimeSpan.Zero;    				for (var i = 0; i < tries; i++)  				{  					try  					{  						SendCommandWithoutResponse(format' args);    						return ReadResponse();  					}  					catch (IOException)  					{  						if (i != tries - 1)  						{  							System.Threading.Thread.Sleep(delay);    							if (delay == TimeSpan.Zero)  							{  								delay = TimeSpan.FromMilliseconds(50);  							}  							else  							{  								delay = TimeSpan.FromMilliseconds(delay.TotalMilliseconds * 2);  							}    							if (delay > TimeSpan.FromSeconds(5))  							{  								delay = TimeSpan.FromSeconds(5);  							}    							Reconnect();    							continue;  						}  						else  						{  							throw;  						}  					}  					catch  					{  					}  				}    				throw new ApplicationException("Unreachable state");  			}
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,SendCommand,The following statement contains a magic number: lock (this.SyncLock)  			{  				var tries = trycount;  				var delay = TimeSpan.Zero;    				for (var i = 0; i < tries; i++)  				{  					try  					{  						SendCommandWithoutResponse(format' args);    						return ReadResponse();  					}  					catch (IOException)  					{  						if (i != tries - 1)  						{  							System.Threading.Thread.Sleep(delay);    							if (delay == TimeSpan.Zero)  							{  								delay = TimeSpan.FromMilliseconds(50);  							}  							else  							{  								delay = TimeSpan.FromMilliseconds(delay.TotalMilliseconds * 2);  							}    							if (delay > TimeSpan.FromSeconds(5))  							{  								delay = TimeSpan.FromSeconds(5);  							}    							Reconnect();    							continue;  						}  						else  						{  							throw;  						}  					}  					catch  					{  					}  				}    				throw new ApplicationException("Unreachable state");  			}
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,NegotiateEncryption,The following statement contains a magic number: using (this.AcquireCommandContext())  			{  				var response = this.SendCommand(DefaultTryCount' "ADHOCENCRYPTION -w -compress");    				response.ProcessError();    				this.ReadStream = new InteractiveInflaterInputStream(base.ReadStream' new Inflater(true)' 1024 * 256);  				this.WriteStream = new InteractiveDeflaterOutputStream(base.WriteStream' new Deflater(Deflater.BEST_COMPRESSION' true)' 512);    				WriteTextBlock(ResponseCodes.READY);				  			}
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,NegotiateEncryption,The following statement contains a magic number: using (this.AcquireCommandContext())  			{  				var response = this.SendCommand(DefaultTryCount' "ADHOCENCRYPTION -w -compress");    				response.ProcessError();    				this.ReadStream = new InteractiveInflaterInputStream(base.ReadStream' new Inflater(true)' 1024 * 256);  				this.WriteStream = new InteractiveDeflaterOutputStream(base.WriteStream' new Deflater(Deflater.BEST_COMPRESSION' true)' 512);    				WriteTextBlock(ResponseCodes.READY);				  			}
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,NegotiateEncryption,The following statement contains a magic number: using (this.AcquireCommandContext())  			{  				var response = this.SendCommand(DefaultTryCount' "ADHOCENCRYPTION -w -compress");    				response.ProcessError();    				this.ReadStream = new InteractiveInflaterInputStream(base.ReadStream' new Inflater(true)' 1024 * 256);  				this.WriteStream = new InteractiveDeflaterOutputStream(base.WriteStream' new Deflater(Deflater.BEST_COMPRESSION' true)' 512);    				WriteTextBlock(ResponseCodes.READY);				  			}
Magic Number,Platform.VirtualFileSystem.Network.Text,TextNetworkFileSystemClient,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,ComputeHash,The following statement contains a magic number: using (this.AcquireCommandContext())  			{  				try  				{  					if (dirAttributes != null)  					{  						dirAttributesString = new StringBuilder();    						foreach (string s in dirAttributes)  						{  							dirAttributesString.Append(s);  							dirAttributesString.Append(''');  						}    						if (dirAttributesString.Length > 0)  						{  							dirAttributesString.Length--;  						}  						else  						{  							dirAttributesString = null;  						}  					}    					if (fileAttributes != null)  					{  						fileAttributesString = new StringBuilder();    						foreach (string s in fileAttributes)  						{  							fileAttributesString.Append(s);  							fileAttributesString.Append(''');  						}    						if (fileAttributesString.Length > 0)  						{  							fileAttributesString.Length--;  						}  						else  						{  							fileAttributesString = null;  						}  					}    					StringBuilder commandText = new StringBuilder(128);    					commandText.Append("computehash -hex");  					commandText.Append(" -t=\"").Append(TextNetworkProtocol.GetNodeTypeName(nodeType)).Append('\"');    					if (offset != 0)  					{  						commandText.Append(" -o=\"").Append(offset).Append('\"');  					}    					if (recursive)  					{  						commandText.Append(" -r");  					}    					if (length != -1)  					{  						commandText.Append(" -l=\"").Append(length).Append('\"');  					}    					if (algorithm != "md5")  					{  						commandText.Append(" -a=\"").Append(algorithm).Append('\"');  					}    					if (fileAttributesString != null)  					{  						commandText.Append(" -fileattribs=\"").Append(fileAttributesString).Append('\"');  					}    					if (dirAttributesString != null)  					{  						commandText.Append(" -dirattribs=\"").Append(dirAttributesString).Append('\"');  					}    					commandText.Append(" \"").Append(uri).Append('\"');    					var response = SendCommand(DefaultTryCount' commandText.ToString()).ProcessError();    					return new HashValue  					(  						TextConversion.FromHexString(response.ResponseTuples["hash"])'  						algorithm'  						0'  						length  					);  				}  				catch (TextNetworkProtocolException)  				{  					this.connected = false;    					throw;  				}  				catch (IOException)  				{  					this.connected = false;    					throw;  				}  			}
Magic Number,Platform.VirtualFileSystem.Network.Text,TextRandomAccessNetworkFileSystemStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,StabilizeClientState,The following statement contains a magic number: lock (this.client.SyncLock)  				{  					if (this.readBytesLeft > 0)  					{  						this.client.WriteStream.Flush();    						if (this.tempBuffer == null)  						{  							this.tempBuffer = new byte[64 * 1024];  						}    						while (this.readBytesLeft > 0)  						{  							this.readBytesLeft -= this.client.ReadStream.Read(this.tempBuffer' 0' Math.Min(this.readBytesLeft' this.tempBuffer.Length));  						}    						this.client.ReadReady();  					}  				}
Magic Number,Platform.VirtualFileSystem.Network.Text,TextRandomAccessNetworkFileSystemStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,StabilizeClientState,The following statement contains a magic number: lock (this.client.SyncLock)  				{  					if (this.readBytesLeft > 0)  					{  						this.client.WriteStream.Flush();    						if (this.tempBuffer == null)  						{  							this.tempBuffer = new byte[64 * 1024];  						}    						while (this.readBytesLeft > 0)  						{  							this.readBytesLeft -= this.client.ReadStream.Read(this.tempBuffer' 0' Math.Min(this.readBytesLeft' this.tempBuffer.Length));  						}    						this.client.ReadReady();  					}  				}
Magic Number,Platform.VirtualFileSystem.Network.Text,TextRandomAccessNetworkFileSystemStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,Write,The following statement contains a magic number: this.writeResponsesQueue.Enqueue(delegate  				{  					//lock (writeResponsesQueue.SyncLock)  					{  						var response = this.client.ReadResponse();    						this.client.ReadReady();    						if (response.ResponseType != ResponseCodes.OK)  						{  							if (this.errorResponse != null)  							{  								this.errorResponse = response;  							}  						}  						else if (this.writeResponsesQueue.Count == 0)  						{  							var now = DateTime.Now;    							if (now < dateTime || (now - dateTime > TimeSpan.FromSeconds(60)))  							{  								this.writeResponsesQueue.Stop();  							}  						}  					}  				});
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InteractiveDeflaterOutputStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveDeflatorOutputStream.cs,EncryptByte,The following statement contains a magic number: uint temp = ((keys[2] & 0xFFFF) | 2);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InteractiveDeflaterOutputStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveDeflatorOutputStream.cs,EncryptByte,The following statement contains a magic number: uint temp = ((keys[2] & 0xFFFF) | 2);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InteractiveDeflaterOutputStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveDeflatorOutputStream.cs,EncryptByte,The following statement contains a magic number: return (byte)((temp * (temp ^ 1)) >> 8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InteractiveDeflaterOutputStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveDeflatorOutputStream.cs,UpdateKeys,The following statement contains a magic number: keys[1] = keys[1] * 134775813 + 1;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InteractiveDeflaterOutputStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveDeflatorOutputStream.cs,UpdateKeys,The following statement contains a magic number: keys[2] = Crc32.ComputeCrc32(keys[2]' (byte)(keys[1] >> 24));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InteractiveDeflaterOutputStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveDeflatorOutputStream.cs,UpdateKeys,The following statement contains a magic number: keys[2] = Crc32.ComputeCrc32(keys[2]' (byte)(keys[1] >> 24));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,InteractiveDeflaterOutputStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveDeflatorOutputStream.cs,UpdateKeys,The following statement contains a magic number: keys[2] = Crc32.ComputeCrc32(keys[2]' (byte)(keys[1] >> 24));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,Crc32,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveDeflatorOutputStream.cs,ComputeCrc32,The following statement contains a magic number: return (uint)(Crc32.CrcTable[(oldCrc ^ bval) & 0xFF] ^ (oldCrc >> 8));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,Crc32,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveDeflatorOutputStream.cs,Update,The following statement contains a magic number: crc = CrcTable[(crc ^ bval) & 0xFF] ^ (crc >> 8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,Crc32,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveDeflatorOutputStream.cs,Update,The following statement contains a magic number: while (--len >= 0)                  {                      crc = CrcTable[(crc ^ buf[off++]) & 0xFF] ^ (crc >> 8);                  }
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams.Interactive,InteractiveInflaterInputBuffer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveInflaterInputStream.cs,ReadLeShort,The following statement contains a magic number: return ReadLeByte() | (ReadLeByte() << 8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams.Interactive,InteractiveInflaterInputBuffer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveInflaterInputStream.cs,ReadLeInt,The following statement contains a magic number: return ReadLeShort() | (ReadLeShort() << 16);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams.Interactive,InteractiveInflaterInputBuffer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveInflaterInputStream.cs,ReadLeLong,The following statement contains a magic number: return ReadLeInt() | (ReadLeInt() << 32);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams.Interactive,InteractiveInflaterInputStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\InteractiveInflaterInputStream.cs,Skip,The following statement contains a magic number: if (baseInputStream.CanSeek)  			{  				baseInputStream.Seek(n' SeekOrigin.Current);  				return n;  			}  			else  			{  				int len = 2048;  				if (n < len)  				{  					len = (int)n;  				}  				byte[] tmp = new byte[len];  				return (long)baseInputStream.Read(tmp' 0' tmp.Length);  			}
Magic Number,Platform.VirtualFileSystem.Network.Text.Protocol,ProtocolTypes,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\Protocol\ProtocolTypes.cs,GetTypeName,The following statement contains a magic number: for (int i = 0; i < m_TypeNames.Length; i += 2)  			{  				if ((Type)m_TypeNames[i] == type)  				{  					return (string)m_TypeNames[i + 1];  				}  			}
Magic Number,Platform.VirtualFileSystem.Network.Text.Protocol,ProtocolTypes,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\Protocol\ProtocolTypes.cs,GetType,The following statement contains a magic number: for (int i = 1; i < m_TypeNames.Length; i += 2)  			{  				if (m_TypeNames[i].Equals(name))  				{  					return (Type)m_TypeNames[i - 1];  				}  			}
Missing Default,Platform.VirtualFileSystem.Network.Text,TextRandomAccessNetworkFileSystemStream,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.VirtualFileSystem.Network.Text\TextRandomAccessNetworkFileSystemStream.cs,Seek,The following switch statement is missing a default case: switch (origin)  					{  						case SeekOrigin.Begin:  							if (this.position == offset)  							{  								return this.position;  							}  							break;  						case SeekOrigin.Current:  							if (offset == 0)  							{  								return this.position;  							}  							break;  					}
