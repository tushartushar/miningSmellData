Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Platform.Network.ExtensibleServer.CommandServer,CommandNetworkServer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\CommandNetworkServer.cs,CommandNetworkServer,The method has 5 parameters. Parameters: connectionFactory' commandBuilderFactory' commandProcessorProviderFactory' address' port
Long Parameter List,Platform.Network.ExtensibleServer.CommandServer,CommandNetworkServer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\CommandNetworkServer.cs,CommandNetworkServer,The method has 5 parameters. Parameters: connectionFactory' commandBuilderFactory' commandProcessorProviderFactory' address' port
Long Identifier,Platform.Network.ExtensibleServer.CommandServer,CommandNetworkServer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\CommandNetworkServer.cs,CommandNetworkServer,The length of the parameter commandProcessorProviderFactory is 31.
Long Identifier,Platform.Network.ExtensibleServer.CommandServer,CommandNetworkServer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\CommandNetworkServer.cs,CommandNetworkServer,The length of the parameter commandProcessorProviderFactory is 31.
Long Identifier,Platform.Network.ExtensibleServer.CommandServer,CommandNetworkServer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\CommandNetworkServer.cs,CommandNetworkServer,The length of the parameter commandProcessorProviderFactory is 31.
Long Identifier,Platform.Network.ExtensibleServer.CommandServer,CommandNetworkServer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\CommandNetworkServer.cs,CommandNetworkServer,The length of the parameter commandProcessorProviderFactory is 31.
Virtual Method Call from Constructor,Platform.Network.ExtensibleServer.CommandServer,CommandConnection,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\CommandConnection.cs,CommandConnection,The constructor "CommandConnection" calls a virtual method "NewCommandBuilder".
Virtual Method Call from Constructor,Platform.Network.ExtensibleServer.CommandServer,CommandConnection,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\CommandConnection.cs,CommandConnection,The constructor "CommandConnection" calls a virtual method "NewCommandProcessorProvider".
Virtual Method Call from Constructor,Platform.Network.ExtensibleServer.CommandServer,TextCommandProcessorProvider,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\TextCommandProcessorProvider.cs,TextCommandProcessorProvider,The constructor "TextCommandProcessorProvider" calls a virtual method "AddCommandProcessors".
Virtual Method Call from Constructor,Platform.Network.ExtensibleServer.CommandServer,TextCommandProcessorProvider,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\TextCommandProcessorProvider.cs,TextCommandProcessorProvider,The constructor "TextCommandProcessorProvider" calls a virtual method "AddCommandProcessors".
Empty Catch Block,Platform.Network.ExtensibleServer,ConnectionFactory,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\ConnectionFactory.cs,NewConnection,The method has an empty catch block.
Empty Catch Block,Platform.Network.ExtensibleServer,NetworkServer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\NetworkServer.cs,RequestTaskState,The method has an empty catch block.
Empty Catch Block,Platform.Network.ExtensibleServer,NetworkServer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\NetworkServer.cs,DoRun,The method has an empty catch block.
Empty Catch Block,Platform.Network.ExtensibleServer,NetworkServer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\NetworkServer.cs,DoRun,The method has an empty catch block.
Empty Catch Block,Platform.Network.ExtensibleServer.CommandServer,CommandBuilderFactory,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\CommandBuilderFactory.cs,NewCommandBuilder,The method has an empty catch block.
Empty Catch Block,Platform.Network.ExtensibleServer.CommandServer,CommandProcessorProviderFactory,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\CommandProcessorProviderFactory.cs,NewCommandProcessorProvider,The method has an empty catch block.
Magic Number,Platform.Network.ExtensibleServer,NetworkServer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\NetworkServer.cs,RequestTaskState,The following statement contains a magic number: if (taskState == TaskState.Stopped || taskState == TaskState.Finished || taskState == TaskState.Paused)  			{  				while (true)  				{  					try  					{  						tcpListener.Stop();  						tcpListener.Server.Close();  					}  					catch  					{  					}    					if (base.RequestTaskState(taskState' TimeSpan.FromSeconds(0.5)))  					{  						return;  					}    					if (taskState == TaskState.Stopped || taskState == TaskState.Finished)  					{  						return;  					}  				}  			}
Magic Number,Platform.Network.ExtensibleServer,NetworkServer,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\NetworkServer.cs,DoRun,The following statement contains a magic number: while (true)  			{  				try  				{  					Socket socket;    					try  					{  						ProcessTaskStateRequest();    						socket = tcpListener.AcceptSocket();  					}  					catch (SocketException)  					{  						if (this.RequestedTaskState == TaskState.Stopped || this.RequestedTaskState == TaskState.Finished)  						{  							break;  						}    						try  						{  							this.Sleep(100);    							tcpListener.Start();  						}  						catch  						{  						}    						ProcessTaskStateRequest();    						continue;  					}    					this.ProcessTaskStateRequest();    					var connection = ConnectionFactory.NewConnection(this' socket);    					Interlocked.Increment(ref connectionCount);    					connection.Closed += ((sender' args) => Interlocked.Decrement(ref connectionCount));    					connection.RequestTaskState(TaskState.Running' TimeSpan.Zero);  				}  				catch (ThreadAbortException)  				{  					throw;  				}  				catch (StopRequestedException)  				{  					throw;  				}  				catch  				{  				}  			}
Magic Number,Platform.Network.ExtensibleServer.CommandServer,TextCommandProcessorProvider,C:\repos\platformdotnet_Platform.VirtualFileSystem\src\Platform.Network.ExtensibleServer\CommandServer\TextCommandProcessorProvider.cs,AddCommandProcessor,The following statement contains a magic number: foreach (string s in commandProcessor.GetNames())  			{  				list = (IList)commandProcessors[s];    				if (list == null)  				{  					list = new ArrayList(4);    					commandProcessors[s] = list;  				}    				list.Add(commandProcessor);  			}
