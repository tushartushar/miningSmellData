Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestAddresses,The method has 6 parameters. Parameters: reader' file' singleAddresses' pairs' nullAddresses' prefixes
Long Parameter List,MaxMind.Db.Test.Helper,NoNetworkTypeHolder,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\Helper\NoNetworkTypeHolder.cs,NoNetworkTypeHolder,The method has 13 parameters. Parameters: utf8_string' bytes' uint16' uint32' uint64' uint128' int32' boolean' array' mmDouble' mmFloat' map' nonexistant
Long Parameter List,MaxMind.Db.Test.Helper,TypeHolder,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\Helper\TypeHolder.cs,TypeHolder,The method has 13 parameters. Parameters: utf8_string' bytes' uint16' uint32' uint64' uint128' int32' boolean' array' mmDouble' mmFloat' map' nonexistant
Long Statement,MaxMind.Db.Test.Helper,NoNetworkTypeHolder,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\Helper\NoNetworkTypeHolder.cs,ToString,The length of the statement  "                $"Boolean: {Boolean}' Bytes: {Bytes}' Int32: {Int32}' Uint16: {Uint16}' Uint32: {Uint32}' Uint64: {Uint64}' Uint128: {Uint128}' Utf8String: {Utf8String}"; " is 154.
Long Statement,MaxMind.Db.Test.Helper,TypeHolder,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\Helper\TypeHolder.cs,ToString,The length of the statement  "                $"Boolean: {Boolean}' Bytes: {Bytes}' Int32: {Int32}' Uint16: {Uint16}' Uint32: {Uint32}' Uint64: {Uint64}' Uint128: {Uint128}' Utf8String: {Utf8String}"; " is 154.
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestUInt16,The following statement contains a magic number: var uint16s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0xa0}}'                  {(1 << 8) - 1' new[] {(byte) 0xa1' (byte) 0xff}}'                  {500' new byte[] {0xa2' 0x1' 0xf4}}'                  {10872' new byte[] {0xa2' 0x2a' 0x78}}'                  {ushort.MaxValue' new[] {(byte) 0xa2' (byte) 0xff' (byte) 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestUInt16,The following statement contains a magic number: var uint16s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0xa0}}'                  {(1 << 8) - 1' new[] {(byte) 0xa1' (byte) 0xff}}'                  {500' new byte[] {0xa2' 0x1' 0xf4}}'                  {10872' new byte[] {0xa2' 0x2a' 0x78}}'                  {ushort.MaxValue' new[] {(byte) 0xa2' (byte) 0xff' (byte) 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestUInt16,The following statement contains a magic number: var uint16s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0xa0}}'                  {(1 << 8) - 1' new[] {(byte) 0xa1' (byte) 0xff}}'                  {500' new byte[] {0xa2' 0x1' 0xf4}}'                  {10872' new byte[] {0xa2' 0x2a' 0x78}}'                  {ushort.MaxValue' new[] {(byte) 0xa2' (byte) 0xff' (byte) 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestUInt32,The following statement contains a magic number: var uint32s = new Dictionary<object' byte[]>              {                  {0' new[] {(byte) 0xc0}}'                  {(1 << 8) - 1' new[] {(byte) 0xc1' (byte) 0xff}}'                  {500' new byte[] {0xc2' 0x1' 0xf4}}'                  {10872' new byte[] {0xc2' 0x2a' 0x78}}'                  {(1 << 16) - 1' new[] {(byte) 0xc2' (byte) 0xff' (byte) 0xff}}'                  {(1 << 24) - 1' new[] {(byte) 0xc3' (byte) 0xff' (byte) 0xff' (byte) 0xff}}'                  {uint.MaxValue' new[] {(byte) 0xc4' (byte) 0xff' (byte) 0xff' (byte) 0xff' (byte) 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestUInt32,The following statement contains a magic number: var uint32s = new Dictionary<object' byte[]>              {                  {0' new[] {(byte) 0xc0}}'                  {(1 << 8) - 1' new[] {(byte) 0xc1' (byte) 0xff}}'                  {500' new byte[] {0xc2' 0x1' 0xf4}}'                  {10872' new byte[] {0xc2' 0x2a' 0x78}}'                  {(1 << 16) - 1' new[] {(byte) 0xc2' (byte) 0xff' (byte) 0xff}}'                  {(1 << 24) - 1' new[] {(byte) 0xc3' (byte) 0xff' (byte) 0xff' (byte) 0xff}}'                  {uint.MaxValue' new[] {(byte) 0xc4' (byte) 0xff' (byte) 0xff' (byte) 0xff' (byte) 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestUInt32,The following statement contains a magic number: var uint32s = new Dictionary<object' byte[]>              {                  {0' new[] {(byte) 0xc0}}'                  {(1 << 8) - 1' new[] {(byte) 0xc1' (byte) 0xff}}'                  {500' new byte[] {0xc2' 0x1' 0xf4}}'                  {10872' new byte[] {0xc2' 0x2a' 0x78}}'                  {(1 << 16) - 1' new[] {(byte) 0xc2' (byte) 0xff' (byte) 0xff}}'                  {(1 << 24) - 1' new[] {(byte) 0xc3' (byte) 0xff' (byte) 0xff' (byte) 0xff}}'                  {uint.MaxValue' new[] {(byte) 0xc4' (byte) 0xff' (byte) 0xff' (byte) 0xff' (byte) 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestUInt32,The following statement contains a magic number: var uint32s = new Dictionary<object' byte[]>              {                  {0' new[] {(byte) 0xc0}}'                  {(1 << 8) - 1' new[] {(byte) 0xc1' (byte) 0xff}}'                  {500' new byte[] {0xc2' 0x1' 0xf4}}'                  {10872' new byte[] {0xc2' 0x2a' 0x78}}'                  {(1 << 16) - 1' new[] {(byte) 0xc2' (byte) 0xff' (byte) 0xff}}'                  {(1 << 24) - 1' new[] {(byte) 0xc3' (byte) 0xff' (byte) 0xff' (byte) 0xff}}'                  {uint.MaxValue' new[] {(byte) 0xc4' (byte) 0xff' (byte) 0xff' (byte) 0xff' (byte) 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestUInt32,The following statement contains a magic number: var uint32s = new Dictionary<object' byte[]>              {                  {0' new[] {(byte) 0xc0}}'                  {(1 << 8) - 1' new[] {(byte) 0xc1' (byte) 0xff}}'                  {500' new byte[] {0xc2' 0x1' 0xf4}}'                  {10872' new byte[] {0xc2' 0x2a' 0x78}}'                  {(1 << 16) - 1' new[] {(byte) 0xc2' (byte) 0xff' (byte) 0xff}}'                  {(1 << 24) - 1' new[] {(byte) 0xc3' (byte) 0xff' (byte) 0xff' (byte) 0xff}}'                  {uint.MaxValue' new[] {(byte) 0xc4' (byte) 0xff' (byte) 0xff' (byte) 0xff' (byte) 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt32s,The following statement contains a magic number: var int32s = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x0' 0x1}}'                  {-1' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0xff}}'                  {(2 << 7) - 1' new byte[] {0x1' 0x1' 0xff}}'                  {1 - (2 << 7)' new byte[] {0x4' 0x1' 0xff' 0xff' 0xff' 0x1}}'                  {500' new byte[] {0x2' 0x1' 0x1' 0xf4}}'                  {-500' new byte[] {0x4' 0x1' 0xff' 0xff' 0xfe' 0xc}}'                  {(2 << 15) - 1' new byte[] {0x2' 0x1' 0xff' 0xff}}'                  {1 - (2 << 15)' new byte[] {0x4' 0x1' 0xff' 0xff' 0x0' 0x1}}'                  {(2 << 23) - 1' new byte[] {0x3' 0x1' 0xff' 0xff' 0xff}}'                  {1 - (2 << 23)' new byte[] {0x4' 0x1' 0xff' 0x0' 0x0' 0x1}}'                  {int.MaxValue' new byte[] {0x4' 0x1' 0x7f' 0xff' 0xff' 0xff}}'                  {-int.MaxValue' new byte[] {0x4' 0x1' 0x80' 0x0' 0x0' 0x1}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt64s,The following statement contains a magic number: var int64s = new Dictionary<object' byte[]>              {                  {0L' new byte[] {0x0' 0x2}}'                  {500L' new byte[] {0x2' 0x2' 0x1' 0xf4}}'                  {10872' new byte[] {0x2' 0x2' 0x2a' 0x78}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt64s,The following statement contains a magic number: var int64s = new Dictionary<object' byte[]>              {                  {0L' new byte[] {0x0' 0x2}}'                  {500L' new byte[] {0x2' 0x2' 0x1' 0xf4}}'                  {10872' new byte[] {0x2' 0x2' 0x2a' 0x78}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt64s,The following statement contains a magic number: var key = Int64Pow(2' 8 * power) - 1;
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt64s,The following statement contains a magic number: var key = Int64Pow(2' 8 * power) - 1;
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt64s,The following statement contains a magic number: var value = new byte[2 + power];
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestInt64s,The following statement contains a magic number: power < 8
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestBigIntegers,The following statement contains a magic number: var bigInts = new Dictionary<object' byte[]>              {                  {new BigInteger(0)' new byte[] {0x0' 0x3}}'                  {new BigInteger(500)' new byte[] {0x2' 0x3' 0x1' 0xf4}}'                  {new BigInteger(10872)' new byte[] {0x2' 0x3' 0x2a' 0x78}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestBigIntegers,The following statement contains a magic number: var bigInts = new Dictionary<object' byte[]>              {                  {new BigInteger(0)' new byte[] {0x0' 0x3}}'                  {new BigInteger(500)' new byte[] {0x2' 0x3' 0x1' 0xf4}}'                  {new BigInteger(10872)' new byte[] {0x2' 0x3' 0x2a' 0x78}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestBigIntegers,The following statement contains a magic number: var key = BigInteger.Pow(new BigInteger(2)' 8 * power) - 1;
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestBigIntegers,The following statement contains a magic number: var key = BigInteger.Pow(new BigInteger(2)' 8 * power) - 1;
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestBigIntegers,The following statement contains a magic number: var value = new byte[2 + power];
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestBigIntegers,The following statement contains a magic number: power <= 16
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestDoubles,The following statement contains a magic number: var doubles = new Dictionary<object' byte[]>              {                  {0.0' new byte[] {0x68' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {0.5' new byte[] {0x68' 0x3F' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {3.14159265359' new byte[] {0x68' 0x40' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {123.0' new byte[] {0x68' 0x40' 0x5E' 0xC0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {1073741824.12457' new byte[] {0x68' 0x41' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}'                  {-0.5' new byte[] {0x68' 0xBF' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {-3.14159265359' new byte[] {0x68' 0xC0' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {-1073741824.12457' new byte[] {0x68' 0xC1' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestDoubles,The following statement contains a magic number: var doubles = new Dictionary<object' byte[]>              {                  {0.0' new byte[] {0x68' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {0.5' new byte[] {0x68' 0x3F' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {3.14159265359' new byte[] {0x68' 0x40' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {123.0' new byte[] {0x68' 0x40' 0x5E' 0xC0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {1073741824.12457' new byte[] {0x68' 0x41' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}'                  {-0.5' new byte[] {0x68' 0xBF' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {-3.14159265359' new byte[] {0x68' 0xC0' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {-1073741824.12457' new byte[] {0x68' 0xC1' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestDoubles,The following statement contains a magic number: var doubles = new Dictionary<object' byte[]>              {                  {0.0' new byte[] {0x68' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {0.5' new byte[] {0x68' 0x3F' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {3.14159265359' new byte[] {0x68' 0x40' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {123.0' new byte[] {0x68' 0x40' 0x5E' 0xC0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {1073741824.12457' new byte[] {0x68' 0x41' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}'                  {-0.5' new byte[] {0x68' 0xBF' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {-3.14159265359' new byte[] {0x68' 0xC0' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {-1073741824.12457' new byte[] {0x68' 0xC1' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestDoubles,The following statement contains a magic number: var doubles = new Dictionary<object' byte[]>              {                  {0.0' new byte[] {0x68' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {0.5' new byte[] {0x68' 0x3F' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {3.14159265359' new byte[] {0x68' 0x40' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {123.0' new byte[] {0x68' 0x40' 0x5E' 0xC0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {1073741824.12457' new byte[] {0x68' 0x41' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}'                  {-0.5' new byte[] {0x68' 0xBF' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {-3.14159265359' new byte[] {0x68' 0xC0' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {-1073741824.12457' new byte[] {0x68' 0xC1' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestDoubles,The following statement contains a magic number: var doubles = new Dictionary<object' byte[]>              {                  {0.0' new byte[] {0x68' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {0.5' new byte[] {0x68' 0x3F' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {3.14159265359' new byte[] {0x68' 0x40' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {123.0' new byte[] {0x68' 0x40' 0x5E' 0xC0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {1073741824.12457' new byte[] {0x68' 0x41' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}'                  {-0.5' new byte[] {0x68' 0xBF' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {-3.14159265359' new byte[] {0x68' 0xC0' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {-1073741824.12457' new byte[] {0x68' 0xC1' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestDoubles,The following statement contains a magic number: var doubles = new Dictionary<object' byte[]>              {                  {0.0' new byte[] {0x68' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {0.5' new byte[] {0x68' 0x3F' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {3.14159265359' new byte[] {0x68' 0x40' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {123.0' new byte[] {0x68' 0x40' 0x5E' 0xC0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {1073741824.12457' new byte[] {0x68' 0x41' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}'                  {-0.5' new byte[] {0x68' 0xBF' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {-3.14159265359' new byte[] {0x68' 0xC0' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {-1073741824.12457' new byte[] {0x68' 0xC1' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestDoubles,The following statement contains a magic number: var doubles = new Dictionary<object' byte[]>              {                  {0.0' new byte[] {0x68' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {0.5' new byte[] {0x68' 0x3F' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {3.14159265359' new byte[] {0x68' 0x40' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {123.0' new byte[] {0x68' 0x40' 0x5E' 0xC0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {1073741824.12457' new byte[] {0x68' 0x41' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}'                  {-0.5' new byte[] {0x68' 0xBF' 0xE0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0}}'                  {-3.14159265359' new byte[] {0x68' 0xC0' 0x9' 0x21' 0xFB' 0x54' 0x44' 0x2E' 0xEA}}'                  {-1073741824.12457' new byte[] {0x68' 0xC1' 0xD0' 0x0' 0x0' 0x0' 0x7' 0xF8' 0xF4}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestFloats,The following statement contains a magic number: var floats = new Dictionary<object' byte[]>              {                  {(float) 0.0' new byte[] {0x4' 0x8' 0x0' 0x0' 0x0' 0x0}}'                  {(float) 1.0' new byte[] {0x4' 0x8' 0x3F' 0x80' 0x0' 0x0}}'                  {(float) 1.1' new byte[] {0x4' 0x8' 0x3F' 0x8C' 0xCC' 0xCD}}'                  {(float) 3.14' new byte[] {0x4' 0x8' 0x40' 0x48' 0xF5' 0xC3}}'                  {(float) 9999.99' new byte[] {0x4' 0x8' 0x46' 0x1C' 0x3F' 0xF6}}'                  {(float) -1.0' new byte[] {0x4' 0x8' 0xBF' 0x80' 0x0' 0x0}}'                  {(float) -1.1' new byte[] {0x4' 0x8' 0xBF' 0x8C' 0xCC' 0xCD}}'                  {(float) -3.14' new byte[] {0x4' 0x8' 0xC0' 0x48' 0xF5' 0xC3}}'                  {(float) -9999.99' new byte[] {0x4' 0x8' 0xC6' 0x1C' 0x3F' 0xF6}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestFloats,The following statement contains a magic number: var floats = new Dictionary<object' byte[]>              {                  {(float) 0.0' new byte[] {0x4' 0x8' 0x0' 0x0' 0x0' 0x0}}'                  {(float) 1.0' new byte[] {0x4' 0x8' 0x3F' 0x80' 0x0' 0x0}}'                  {(float) 1.1' new byte[] {0x4' 0x8' 0x3F' 0x8C' 0xCC' 0xCD}}'                  {(float) 3.14' new byte[] {0x4' 0x8' 0x40' 0x48' 0xF5' 0xC3}}'                  {(float) 9999.99' new byte[] {0x4' 0x8' 0x46' 0x1C' 0x3F' 0xF6}}'                  {(float) -1.0' new byte[] {0x4' 0x8' 0xBF' 0x80' 0x0' 0x0}}'                  {(float) -1.1' new byte[] {0x4' 0x8' 0xBF' 0x8C' 0xCC' 0xCD}}'                  {(float) -3.14' new byte[] {0x4' 0x8' 0xC0' 0x48' 0xF5' 0xC3}}'                  {(float) -9999.99' new byte[] {0x4' 0x8' 0xC6' 0x1C' 0x3F' 0xF6}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestFloats,The following statement contains a magic number: var floats = new Dictionary<object' byte[]>              {                  {(float) 0.0' new byte[] {0x4' 0x8' 0x0' 0x0' 0x0' 0x0}}'                  {(float) 1.0' new byte[] {0x4' 0x8' 0x3F' 0x80' 0x0' 0x0}}'                  {(float) 1.1' new byte[] {0x4' 0x8' 0x3F' 0x8C' 0xCC' 0xCD}}'                  {(float) 3.14' new byte[] {0x4' 0x8' 0x40' 0x48' 0xF5' 0xC3}}'                  {(float) 9999.99' new byte[] {0x4' 0x8' 0x46' 0x1C' 0x3F' 0xF6}}'                  {(float) -1.0' new byte[] {0x4' 0x8' 0xBF' 0x80' 0x0' 0x0}}'                  {(float) -1.1' new byte[] {0x4' 0x8' 0xBF' 0x8C' 0xCC' 0xCD}}'                  {(float) -3.14' new byte[] {0x4' 0x8' 0xC0' 0x48' 0xF5' 0xC3}}'                  {(float) -9999.99' new byte[] {0x4' 0x8' 0xC6' 0x1C' 0x3F' 0xF6}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestFloats,The following statement contains a magic number: var floats = new Dictionary<object' byte[]>              {                  {(float) 0.0' new byte[] {0x4' 0x8' 0x0' 0x0' 0x0' 0x0}}'                  {(float) 1.0' new byte[] {0x4' 0x8' 0x3F' 0x80' 0x0' 0x0}}'                  {(float) 1.1' new byte[] {0x4' 0x8' 0x3F' 0x8C' 0xCC' 0xCD}}'                  {(float) 3.14' new byte[] {0x4' 0x8' 0x40' 0x48' 0xF5' 0xC3}}'                  {(float) 9999.99' new byte[] {0x4' 0x8' 0x46' 0x1C' 0x3F' 0xF6}}'                  {(float) -1.0' new byte[] {0x4' 0x8' 0xBF' 0x80' 0x0' 0x0}}'                  {(float) -1.1' new byte[] {0x4' 0x8' 0xBF' 0x8C' 0xCC' 0xCD}}'                  {(float) -3.14' new byte[] {0x4' 0x8' 0xC0' 0x48' 0xF5' 0xC3}}'                  {(float) -9999.99' new byte[] {0x4' 0x8' 0xC6' 0x1C' 0x3F' 0xF6}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestFloats,The following statement contains a magic number: var floats = new Dictionary<object' byte[]>              {                  {(float) 0.0' new byte[] {0x4' 0x8' 0x0' 0x0' 0x0' 0x0}}'                  {(float) 1.0' new byte[] {0x4' 0x8' 0x3F' 0x80' 0x0' 0x0}}'                  {(float) 1.1' new byte[] {0x4' 0x8' 0x3F' 0x8C' 0xCC' 0xCD}}'                  {(float) 3.14' new byte[] {0x4' 0x8' 0x40' 0x48' 0xF5' 0xC3}}'                  {(float) 9999.99' new byte[] {0x4' 0x8' 0x46' 0x1C' 0x3F' 0xF6}}'                  {(float) -1.0' new byte[] {0x4' 0x8' 0xBF' 0x80' 0x0' 0x0}}'                  {(float) -1.1' new byte[] {0x4' 0x8' 0xBF' 0x8C' 0xCC' 0xCD}}'                  {(float) -3.14' new byte[] {0x4' 0x8' 0xC0' 0x48' 0xF5' 0xC3}}'                  {(float) -9999.99' new byte[] {0x4' 0x8' 0xC6' 0x1C' 0x3F' 0xF6}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestFloats,The following statement contains a magic number: var floats = new Dictionary<object' byte[]>              {                  {(float) 0.0' new byte[] {0x4' 0x8' 0x0' 0x0' 0x0' 0x0}}'                  {(float) 1.0' new byte[] {0x4' 0x8' 0x3F' 0x80' 0x0' 0x0}}'                  {(float) 1.1' new byte[] {0x4' 0x8' 0x3F' 0x8C' 0xCC' 0xCD}}'                  {(float) 3.14' new byte[] {0x4' 0x8' 0x40' 0x48' 0xF5' 0xC3}}'                  {(float) 9999.99' new byte[] {0x4' 0x8' 0x46' 0x1C' 0x3F' 0xF6}}'                  {(float) -1.0' new byte[] {0x4' 0x8' 0xBF' 0x80' 0x0' 0x0}}'                  {(float) -1.1' new byte[] {0x4' 0x8' 0xBF' 0x8C' 0xCC' 0xCD}}'                  {(float) -3.14' new byte[] {0x4' 0x8' 0xC0' 0x48' 0xF5' 0xC3}}'                  {(float) -9999.99' new byte[] {0x4' 0x8' 0xC6' 0x1C' 0x3F' 0xF6}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,TestPointers,The following statement contains a magic number: var pointers = new Dictionary<object' byte[]>              {                  {0' new byte[] {0x20' 0x0}}'                  {5' new byte[] {0x20' 0x5}}'                  {10' new byte[] {0x20' 0xa}}'                  {(1 << 10) - 1' new byte[] {0x23' 0xff}}'                  {3017' new byte[] {0x28' 0x3' 0xc9}}'                  {(1 << 19) - 5' new byte[] {0x2f' 0xf7' 0xfb}}'                  {(1 << 19) + (1 << 11) - 1' new byte[] {0x2f' 0xff' 0xff}}'                  {(1 << 27) - 2' new byte[] {0x37' 0xf7' 0xf7' 0xfe}}'                  {((long) 1 << 27) + (1 << 19) + (1 << 11) - 1' new byte[] {0x37' 0xff' 0xff' 0xff}}'                  {((long) 1 << 31) - 1' new byte[] {0x38' 0x7f' 0xff' 0xff' 0xff}}              };
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,Strings,The following statement contains a magic number: AddTestString(strings' new byte[] { 0x5e' 0x0' 0xd7 }' new string('x'' 500));
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,Strings,The following statement contains a magic number: AddTestString(strings' new byte[] { 0x5e' 0x6' 0xb3 }' new string('x'' 2000));
Magic Number,MaxMind.Db.Test,DecoderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\DecoderTest.cs,Strings,The following statement contains a magic number: AddTestString(strings' new byte[] { 0x5f' 0x0' 0x10' 0x53 }' new string('x'' 70000));
Magic Number,MaxMind.Db.Test,NetworkTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\NetworkTest.cs,TestIPv6,The following statement contains a magic number: var network = new Network(                  IPAddress.Parse("2001:0db8:85a3:0000:0000:8a2e:0370:7334")'                  28                  );
Magic Number,MaxMind.Db.Test,NetworkTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\NetworkTest.cs,TestIPv6,The following statement contains a magic number: Assert.Equal(28' network.PrefixLength);
Magic Number,MaxMind.Db.Test,NetworkTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\NetworkTest.cs,TestIPv4,The following statement contains a magic number: var network = new Network(                  IPAddress.Parse("192.168.213.111")'                  31                  );
Magic Number,MaxMind.Db.Test,NetworkTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\NetworkTest.cs,TestIPv4,The following statement contains a magic number: Assert.Equal(31' network.PrefixLength);
Magic Number,MaxMind.Db.Test,PointerTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\PointerTest.cs,TestWithPointers,The following statement contains a magic number: node = decoder.Decode<Dictionary<string' object>>(22' out _);
Magic Number,MaxMind.Db.Test,PointerTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\PointerTest.cs,TestWithPointers,The following statement contains a magic number: node = decoder.Decode<Dictionary<string' object>>(37' out _);
Magic Number,MaxMind.Db.Test,PointerTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\PointerTest.cs,TestWithPointers,The following statement contains a magic number: node = decoder.Decode<Dictionary<string' object>>(50' out _);
Magic Number,MaxMind.Db.Test,PointerTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\PointerTest.cs,TestWithPointers,The following statement contains a magic number: node = decoder.Decode<Dictionary<string' object>>(55' out _);
Magic Number,MaxMind.Db.Test,PointerTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\PointerTest.cs,TestWithPointers,The following statement contains a magic number: node = decoder.Decode<Dictionary<string' object>>(57' out _);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,Test,The following statement contains a magic number: ipVersion == 4
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,Test,The following statement contains a magic number: new[] { 4' 6 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,Test,The following statement contains a magic number: new[] { 4' 6 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,Test,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,Test,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,Test,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestAsync,The following statement contains a magic number: ipVersion == 4
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestAsync,The following statement contains a magic number: new[] { 4' 6 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestAsync,The following statement contains a magic number: new[] { 4' 6 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestAsync,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestAsync,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestAsync,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestStream,The following statement contains a magic number: ipVersion == 4
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestStream,The following statement contains a magic number: new[] { 4' 6 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestStream,The following statement contains a magic number: new[] { 4' 6 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestStream,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestStream,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestStream,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestStreamAsync,The following statement contains a magic number: ipVersion == 4
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestStreamAsync,The following statement contains a magic number: new[] { 4' 6 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestStreamAsync,The following statement contains a magic number: new[] { 4' 6 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestStreamAsync,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestStreamAsync,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestStreamAsync,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestNonSeekableStream,The following statement contains a magic number: ipVersion == 4
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestNonSeekableStream,The following statement contains a magic number: new[] { 4' 6 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestNonSeekableStream,The following statement contains a magic number: new[] { 4' 6 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestNonSeekableStream,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestNonSeekableStream,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestNonSeekableStream,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestNonSeekableStreamAsync,The following statement contains a magic number: ipVersion == 4
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestNonSeekableStreamAsync,The following statement contains a magic number: new[] { 4' 6 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestNonSeekableStreamAsync,The following statement contains a magic number: new[] { 4' 6 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestNonSeekableStreamAsync,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestNonSeekableStreamAsync,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestNonSeekableStreamAsync,The following statement contains a magic number: new long[] { 24' 28' 32 }
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestFindPrefixLength,The following statement contains a magic number: var tests = new[]              {                  new                  {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv6-32.mmdb"'                      expectedPrefixLength = 8'                      expectedOK = false'                  }'                  new {                      ip = "::1:ffff:ffff"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 128'                      expectedOK = true'                  }'                  new {                      ip = "::2:0:1"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 122'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 32'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 31'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 24'                      expectedOK = true'                  }'                  new {                      ip = "::ffff:1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "::1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 0'                      expectedOK = true'                  }'                  new {                      ip = "::200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "0:0:0:0:ffff:ffff:ffff:ffff"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "ef00::"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 1'                      expectedOK = false'                  }              };
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestFindPrefixLength,The following statement contains a magic number: var tests = new[]              {                  new                  {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv6-32.mmdb"'                      expectedPrefixLength = 8'                      expectedOK = false'                  }'                  new {                      ip = "::1:ffff:ffff"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 128'                      expectedOK = true'                  }'                  new {                      ip = "::2:0:1"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 122'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 32'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 31'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 24'                      expectedOK = true'                  }'                  new {                      ip = "::ffff:1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "::1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 0'                      expectedOK = true'                  }'                  new {                      ip = "::200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "0:0:0:0:ffff:ffff:ffff:ffff"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "ef00::"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 1'                      expectedOK = false'                  }              };
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestFindPrefixLength,The following statement contains a magic number: var tests = new[]              {                  new                  {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv6-32.mmdb"'                      expectedPrefixLength = 8'                      expectedOK = false'                  }'                  new {                      ip = "::1:ffff:ffff"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 128'                      expectedOK = true'                  }'                  new {                      ip = "::2:0:1"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 122'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 32'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 31'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 24'                      expectedOK = true'                  }'                  new {                      ip = "::ffff:1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "::1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 0'                      expectedOK = true'                  }'                  new {                      ip = "::200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "0:0:0:0:ffff:ffff:ffff:ffff"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "ef00::"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 1'                      expectedOK = false'                  }              };
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestFindPrefixLength,The following statement contains a magic number: var tests = new[]              {                  new                  {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv6-32.mmdb"'                      expectedPrefixLength = 8'                      expectedOK = false'                  }'                  new {                      ip = "::1:ffff:ffff"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 128'                      expectedOK = true'                  }'                  new {                      ip = "::2:0:1"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 122'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 32'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 31'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 24'                      expectedOK = true'                  }'                  new {                      ip = "::ffff:1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "::1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 0'                      expectedOK = true'                  }'                  new {                      ip = "::200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "0:0:0:0:ffff:ffff:ffff:ffff"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "ef00::"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 1'                      expectedOK = false'                  }              };
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestFindPrefixLength,The following statement contains a magic number: var tests = new[]              {                  new                  {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv6-32.mmdb"'                      expectedPrefixLength = 8'                      expectedOK = false'                  }'                  new {                      ip = "::1:ffff:ffff"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 128'                      expectedOK = true'                  }'                  new {                      ip = "::2:0:1"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 122'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 32'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 31'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 24'                      expectedOK = true'                  }'                  new {                      ip = "::ffff:1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "::1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 0'                      expectedOK = true'                  }'                  new {                      ip = "::200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "0:0:0:0:ffff:ffff:ffff:ffff"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "ef00::"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 1'                      expectedOK = false'                  }              };
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestFindPrefixLength,The following statement contains a magic number: var tests = new[]              {                  new                  {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv6-32.mmdb"'                      expectedPrefixLength = 8'                      expectedOK = false'                  }'                  new {                      ip = "::1:ffff:ffff"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 128'                      expectedOK = true'                  }'                  new {                      ip = "::2:0:1"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 122'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 32'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 31'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 24'                      expectedOK = true'                  }'                  new {                      ip = "::ffff:1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "::1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 0'                      expectedOK = true'                  }'                  new {                      ip = "::200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "0:0:0:0:ffff:ffff:ffff:ffff"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "ef00::"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 1'                      expectedOK = false'                  }              };
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestFindPrefixLength,The following statement contains a magic number: var tests = new[]              {                  new                  {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv6-32.mmdb"'                      expectedPrefixLength = 8'                      expectedOK = false'                  }'                  new {                      ip = "::1:ffff:ffff"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 128'                      expectedOK = true'                  }'                  new {                      ip = "::2:0:1"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 122'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 32'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 31'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 24'                      expectedOK = true'                  }'                  new {                      ip = "::ffff:1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "::1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 0'                      expectedOK = true'                  }'                  new {                      ip = "::200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "0:0:0:0:ffff:ffff:ffff:ffff"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "ef00::"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 1'                      expectedOK = false'                  }              };
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestFindPrefixLength,The following statement contains a magic number: var tests = new[]              {                  new                  {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv6-32.mmdb"'                      expectedPrefixLength = 8'                      expectedOK = false'                  }'                  new {                      ip = "::1:ffff:ffff"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 128'                      expectedOK = true'                  }'                  new {                      ip = "::2:0:1"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 122'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 32'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 31'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 24'                      expectedOK = true'                  }'                  new {                      ip = "::ffff:1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "::1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 0'                      expectedOK = true'                  }'                  new {                      ip = "::200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "0:0:0:0:ffff:ffff:ffff:ffff"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "ef00::"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 1'                      expectedOK = false'                  }              };
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestFindPrefixLength,The following statement contains a magic number: var tests = new[]              {                  new                  {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv6-32.mmdb"'                      expectedPrefixLength = 8'                      expectedOK = false'                  }'                  new {                      ip = "::1:ffff:ffff"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 128'                      expectedOK = true'                  }'                  new {                      ip = "::2:0:1"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 122'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 32'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 31'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 24'                      expectedOK = true'                  }'                  new {                      ip = "::ffff:1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "::1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 0'                      expectedOK = true'                  }'                  new {                      ip = "::200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "0:0:0:0:ffff:ffff:ffff:ffff"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "ef00::"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 1'                      expectedOK = false'                  }              };
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestFindPrefixLength,The following statement contains a magic number: var tests = new[]              {                  new                  {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv6-32.mmdb"'                      expectedPrefixLength = 8'                      expectedOK = false'                  }'                  new {                      ip = "::1:ffff:ffff"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 128'                      expectedOK = true'                  }'                  new {                      ip = "::2:0:1"'                      dbFile = "MaxMind-DB-test-ipv6-24.mmdb"'                      expectedPrefixLength = 122'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.1"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 32'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-ipv4-24.mmdb"'                      expectedPrefixLength = 31'                      expectedOK = true'                  }'                  new {                      ip = "1.1.1.3"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 24'                      expectedOK = true'                  }'                  new {                      ip = "::ffff:1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "::1.1.1.128"'                      dbFile = "MaxMind-DB-test-decoder.mmdb"'                      expectedPrefixLength = 120'                      expectedOK = true'                  }'                  new {                      ip = "200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 0'                      expectedOK = true'                  }'                  new {                      ip = "::200.0.2.1"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "0:0:0:0:ffff:ffff:ffff:ffff"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 64'                      expectedOK = true'                  }'                  new {                      ip = "ef00::"'                      dbFile = "MaxMind-DB-no-ipv4-search-tree.mmdb"'                      expectedPrefixLength = 1'                      expectedOK = false'                  }              };
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestEnumerateCountryDatabase,The following statement contains a magic number: count.Should().Be(297);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestEnumerateDecoderDatabase,The following statement contains a magic number: count.Should().Be(26);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: ((byte[])record["bytes"]).Should().Equal(0' 0' 0' 42);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: array.Should().HaveCount(3);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: array[1].Should().BeEquivalentTo(2);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: array[2].Should().BeEquivalentTo(3);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: array[2].Should().BeEquivalentTo(3);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: mapX.Should().HaveCount(2);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: arrayX.Should().HaveCount(3);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: arrayX[0].Should().BeEquivalentTo(7);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: arrayX[1].Should().BeEquivalentTo(8);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: arrayX[2].Should().BeEquivalentTo(9);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: arrayX[2].Should().BeEquivalentTo(9);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: ((double)record["double"]).Should().BeApproximately(42.123456' 0.000000001);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: ((double)record["double"]).Should().BeApproximately(42.123456' 0.000000001);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: ((float)record["float"]).Should().BeApproximately(1.1F' 0.000001F);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: ((float)record["float"]).Should().BeApproximately(1.1F' 0.000001F);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: record["int32"].Should().BeEquivalentTo(-268435456);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: record["uint16"].Should().BeEquivalentTo(100);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: record["uint32"].Should().BeEquivalentTo(268435456);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypes,The following statement contains a magic number: record["uint64"].Should().BeEquivalentTo(1152921504606846976);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: record.Bytes.Should().Equal(0' 0' 0' 42);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: record.Array.Should().Equal(new List<long> { 1' 2' 3 });
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: record.Array.Should().Equal(new List<long> { 1' 2' 3 });
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: mapX.ArrayX.Should().Equal(new List<long> { 7' 8' 9 });
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: mapX.ArrayX.Should().Equal(new List<long> { 7' 8' 9 });
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: mapX.ArrayX.Should().Equal(new List<long> { 7' 8' 9 });
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: record.Double.Should().BeApproximately(42.123456' 0.000000001);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: record.Double.Should().BeApproximately(42.123456' 0.000000001);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: record.Float.Should().BeApproximately(1.1F' 0.000001F);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: record.Float.Should().BeApproximately(1.1F' 0.000001F);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: record.Int32.Should().Be(-268435456);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: record.Uint16.Should().Be(100);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: record.Uint32.Should().Be(268435456);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestDecodingTypesToObject,The following statement contains a magic number: record.Uint64.Should().Be(1152921504606846976);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestZeros,The following statement contains a magic number: ((double)record["double"]).Should().BeApproximately(0' 0.000000001);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestZeros,The following statement contains a magic number: ((float)record["float"]).Should().BeApproximately(0' 0.000001F);
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestIPV6,The following statement contains a magic number: TestAddresses(reader'                  file'                  new[] { "::1:ffff:ffff"' "::2:0:0"' "::2:0:40"' "::2:0:50"' "::2:0:58" }'                  new Dictionary<string' string>                  {                      {"::2:0:1"' "::2:0:0"}'                      {"::2:0:33"' "::2:0:0"}'                      {"::2:0:39"' "::2:0:0"}'                      {"::2:0:41"' "::2:0:40"}'                      {"::2:0:49"' "::2:0:40"}'                      {"::2:0:52"' "::2:0:50"}'                      {"::2:0:57"' "::2:0:50"}'                      {"::2:0:59"' "::2:0:58"}                  }'                  new[] { "1.1.1.33"' "255.254.253.123"' "89fa::" }'                  new Dictionary<string' int>                  {                      {"::2:0:1"' 122}                  });
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestIPV4,The following statement contains a magic number: TestAddresses(reader'                  file'                  Enumerable.Range(0' 5).Select(i => "1.1.1." + (int)Math.Pow(2' 1))'                  new Dictionary<string' string>                  {                      {"1.1.1.3"' "1.1.1.2"}'                      {"1.1.1.5"' "1.1.1.4"}'                      {"1.1.1.7"' "1.1.1.4"}'                      {"1.1.1.9"' "1.1.1.8"}'                      {"1.1.1.15"' "1.1.1.8"}'                      {"1.1.1.17"' "1.1.1.16"}'                      {"1.1.1.31"' "1.1.1.16"}                  }'                  new[] { "1.1.1.33"' "255.254.253.123" }'                  new Dictionary<string' int>                  {                      {"1.1.1.3"' 31}'                      {"4.0.0.1"' 6}                  });
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestIPV4,The following statement contains a magic number: TestAddresses(reader'                  file'                  Enumerable.Range(0' 5).Select(i => "1.1.1." + (int)Math.Pow(2' 1))'                  new Dictionary<string' string>                  {                      {"1.1.1.3"' "1.1.1.2"}'                      {"1.1.1.5"' "1.1.1.4"}'                      {"1.1.1.7"' "1.1.1.4"}'                      {"1.1.1.9"' "1.1.1.8"}'                      {"1.1.1.15"' "1.1.1.8"}'                      {"1.1.1.17"' "1.1.1.16"}'                      {"1.1.1.31"' "1.1.1.16"}                  }'                  new[] { "1.1.1.33"' "255.254.253.123" }'                  new Dictionary<string' int>                  {                      {"1.1.1.3"' 31}'                      {"4.0.0.1"' 6}                  });
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestIPV4,The following statement contains a magic number: TestAddresses(reader'                  file'                  Enumerable.Range(0' 5).Select(i => "1.1.1." + (int)Math.Pow(2' 1))'                  new Dictionary<string' string>                  {                      {"1.1.1.3"' "1.1.1.2"}'                      {"1.1.1.5"' "1.1.1.4"}'                      {"1.1.1.7"' "1.1.1.4"}'                      {"1.1.1.9"' "1.1.1.8"}'                      {"1.1.1.15"' "1.1.1.8"}'                      {"1.1.1.17"' "1.1.1.16"}'                      {"1.1.1.31"' "1.1.1.16"}                  }'                  new[] { "1.1.1.33"' "255.254.253.123" }'                  new Dictionary<string' int>                  {                      {"1.1.1.3"' 31}'                      {"4.0.0.1"' 6}                  });
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestIPV4,The following statement contains a magic number: TestAddresses(reader'                  file'                  Enumerable.Range(0' 5).Select(i => "1.1.1." + (int)Math.Pow(2' 1))'                  new Dictionary<string' string>                  {                      {"1.1.1.3"' "1.1.1.2"}'                      {"1.1.1.5"' "1.1.1.4"}'                      {"1.1.1.7"' "1.1.1.4"}'                      {"1.1.1.9"' "1.1.1.8"}'                      {"1.1.1.15"' "1.1.1.8"}'                      {"1.1.1.17"' "1.1.1.16"}'                      {"1.1.1.31"' "1.1.1.16"}                  }'                  new[] { "1.1.1.33"' "255.254.253.123" }'                  new Dictionary<string' int>                  {                      {"1.1.1.3"' 31}'                      {"4.0.0.1"' 6}                  });
Magic Number,MaxMind.Db.Test,ReaderTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ReaderTest.cs,TestMetadata,The following statement contains a magic number: metadata.BinaryFormatMajorVersion.Should().Be(2);
Magic Number,MaxMind.Db.Test,ThreadingTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ThreadingTest.cs,TestParallelFor,The following statement contains a magic number: i < 10000
Magic Number,MaxMind.Db.Test,ThreadingTest,D:\research\architectureSmells\repos\maxmind_MaxMind-DB-Reader-dotnet\MaxMind.Db.Test\ThreadingTest.cs,TestManyOpens,The following statement contains a magic number: Parallel.For(0' 50' i =>              {                  using (var reader = new Reader(_testDatabase' mode))                  {                      reader.Find<object>(IPAddress.Parse("175.16.199.0"));                  }              });
