Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SoundFingerprinting.Audio.NAudio.Test,NAudioStreamUrlReaderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioStreamUrlReaderTest.cs,TestReadMonoSamplesFromFile,The length of the statement  "            sourceReader.Setup(r => r.ReadMonoFromSource("path-to-streaming-url"' 5512' secondsToRead * 2' 0' 25)).Returns(samples); " is 120.
Long Statement,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,TestRecodeFileToMonoWave,The length of the statement  "            Mock<MediaFoundationTransform> resampler = new Mock<MediaFoundationTransform>(MockBehavior.Strict' waveStream.Object' waveFormat); " is 130.
Magic Number,SoundFingerprinting.Audio.NAudio.Test,BlockingQueueSamplesProviderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\BlockingQueueSamplesProviderTest.cs,ShouldGetNextSamples,The following statement contains a magic number: const int numberOfItemsToAdd = 5;
Magic Number,SoundFingerprinting.Audio.NAudio.Test,BlockingQueueSamplesProviderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\BlockingQueueSamplesProviderTest.cs,ShouldGetNextSamples,The following statement contains a magic number: var added = samplesProvider.GetNextSamples(new float[1024]);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,BlockingQueueSamplesProviderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\BlockingQueueSamplesProviderTest.cs,ShouldGetNextSamples,The following statement contains a magic number: Assert.AreEqual(1024 * 4' added);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,BlockingQueueSamplesProviderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\BlockingQueueSamplesProviderTest.cs,ShouldGetNextSamples,The following statement contains a magic number: Assert.AreEqual(1024 * 4' added);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,BlockingQueueSamplesProviderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\BlockingQueueSamplesProviderTest.cs,AddValues,The following statement contains a magic number: Thread.Sleep(random.Next(1000' 3000));
Magic Number,SoundFingerprinting.Audio.NAudio.Test,BlockingQueueSamplesProviderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\BlockingQueueSamplesProviderTest.cs,AddValues,The following statement contains a magic number: Thread.Sleep(random.Next(1000' 3000));
Magic Number,SoundFingerprinting.Audio.NAudio.Test,BlockingQueueSamplesProviderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\BlockingQueueSamplesProviderTest.cs,AddValues,The following statement contains a magic number: producer.Add(new float[1024]);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioSamplesProviderAdapterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioSamplesProviderAdapterTest.cs,TestGetNextSamplesQueriesStreamCorrectly,The following statement contains a magic number: waveProvider.Setup(provider => provider.WaveFormat).Returns(WaveFormat.CreateIeeeFloatWaveFormat(5512' 1));
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioSamplesProviderAdapterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioSamplesProviderAdapterTest.cs,TestGetNextSamplesQueriesStreamCorrectly,The following statement contains a magic number: const int numberOfReadSamples = 1024;
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioSamplesProviderAdapterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioSamplesProviderAdapterTest.cs,TestGetNextSamplesQueriesStreamCorrectly,The following statement contains a magic number: Assert.AreEqual(numberOfReadSamples * 4' samplesRead);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioServiceTest.cs,SetUp,The following statement contains a magic number: nAudioService = new NAudioService(25' sourceReader.Object);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioServiceTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: const int secondsToRead = 10;
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioServiceTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: const int startAt = 10;
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioServiceTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: float[] samples = new float[1024];
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioServiceTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: sourceReader.Setup(r => r.ReadMonoFromSource("path-to-audio-file"' 5512' secondsToRead' startAt' 25)).Returns(samples);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioServiceTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: sourceReader.Setup(r => r.ReadMonoFromSource("path-to-audio-file"' 5512' secondsToRead' startAt' 25)).Returns(samples);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioServiceTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: var result = nAudioService.ReadMonoSamplesFromFile("path-to-audio-file"' 5512' secondsToRead' startAt);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioSoundCaptureServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioSoundCaptureServiceTest.cs,ShouldReadFromMicrophone,The following statement contains a magic number: naudioFactory.Setup(factory => factory.GetWaveInEvent(5512' 1)).Returns(waveInEvent.Object);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioSoundCaptureServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioSoundCaptureServiceTest.cs,ShouldReadFromMicrophone,The following statement contains a magic number: float[] samples = new float[1024];
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioSoundCaptureServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioSoundCaptureServiceTest.cs,ShouldReadFromMicrophone,The following statement contains a magic number: const int secondsToRecord = 10;
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioSoundCaptureServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioSoundCaptureServiceTest.cs,ShouldReadFromMicrophone,The following statement contains a magic number: samplesAggregator.Setup(agg => agg.ReadSamplesFromSource(It.IsAny<ISamplesProvider>()' secondsToRecord' 5512))                  .Returns(samples);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioSoundCaptureServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioSoundCaptureServiceTest.cs,ShouldReadFromMicrophone,The following statement contains a magic number: float[] resultSamples = soundCaptureService.ReadMonoSamples(5512' secondsToRecord);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioStreamUrlReaderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioStreamUrlReaderTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: const int secondsToRead = 10;
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioStreamUrlReaderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioStreamUrlReaderTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: float[] samples = new float[1024];
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioStreamUrlReaderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioStreamUrlReaderTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: sourceReader.Setup(r => r.ReadMonoFromSource("path-to-streaming-url"' 5512' secondsToRead * 2' 0' 25)).Returns(samples);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioStreamUrlReaderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioStreamUrlReaderTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: sourceReader.Setup(r => r.ReadMonoFromSource("path-to-streaming-url"' 5512' secondsToRead * 2' 0' 25)).Returns(samples);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioStreamUrlReaderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioStreamUrlReaderTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: sourceReader.Setup(r => r.ReadMonoFromSource("path-to-streaming-url"' 5512' secondsToRead * 2' 0' 25)).Returns(samples);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioStreamUrlReaderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioStreamUrlReaderTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: var result = reader.ReadMonoSamples("path-to-streaming-url"' 5512' secondsToRead);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioStreamUrlReaderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioStreamUrlReaderTest.cs,TestReadMonoSamplesFromFile,The following statement contains a magic number: Assert.AreEqual(samples.Length / 2' result.Length);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,TestWriteSamplesToWaveFile,The following statement contains a magic number: var writer = new Mock<WaveFileWriter>(MockBehavior.Loose' stream' WaveFormat.CreateIeeeFloatWaveFormat(5512' mono));
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,TestWriteSamplesToWaveFile,The following statement contains a magic number: naudioFactory.Setup(factory => factory.GetWriter("path-to-audio-file"' 5512' mono))                                                        .Returns(writer.Object);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,TestWriteSamplesToWaveFile,The following statement contains a magic number: const int songLengthInFloats = 16;
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,TestWriteSamplesToWaveFile,The following statement contains a magic number: waveFileUtility.WriteSamplesToFile(samples' 5512' "path-to-audio-file");
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,TestRecodeFileToMonoWave,The following statement contains a magic number: WaveFormat waveFormat = WaveFormat.CreateIeeeFloatWaveFormat(5512' mono);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,TestRecodeFileToMonoWave,The following statement contains a magic number: naudioFactory.Setup(factory => factory.GetResampler(waveStream.Object' 5512' mono' 25)).Returns(resampler.Object);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,TestRecodeFileToMonoWave,The following statement contains a magic number: naudioFactory.Setup(factory => factory.GetResampler(waveStream.Object' 5512' mono' 25)).Returns(resampler.Object);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,TestRecodeFileToMonoWave,The following statement contains a magic number: waveFileUtility.RecodeFileToMonoWave("path-to-audio-file"' "path-to-recoded-file"' 5512' 25);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,TestRecodeFileToMonoWave,The following statement contains a magic number: waveFileUtility.RecodeFileToMonoWave("path-to-audio-file"' "path-to-recoded-file"' 5512' 25);
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,GetWrittenSamplesInStream,The following statement contains a magic number: const int waveHeaderLength = 58;
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,GetWrittenSamplesInStream,The following statement contains a magic number: const int bytesInFloat = 4;
Magic Number,SoundFingerprinting.Audio.NAudio.Test,NAudioWaveFileUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio.Test\NAudioWaveFileUtilityTest.cs,GenerateRandomFloatArray,The following statement contains a magic number: result[i] = (float)rand.NextDouble() * 32767;
