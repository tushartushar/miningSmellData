Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,VerifyEndingsAreAttached,The method has 5 parameters. Parameters: prev' next' current' minSize' strideSize
Long Identifier,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,ReadByTrackGroupIdWorksAsExpectedTest,The length of the parameter hashedFingerprintsForFirstTrack is 31.
Long Identifier,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,ReadByTrackGroupIdWorksAsExpectedTest,The length of the parameter hashedFingerprintsForSecondTrack is 32.
Long Identifier,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,,The length of the parameter defaultFingerprintConfiguration is 31.
Long Identifier,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,,The length of the parameter localitySensitiveHashingAlgorithm is 33.
Long Identifier,SoundFingerprinting.Tests.Unit.Utils,FastFingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FastFingerprintDescriptorTest.cs,ShouldCreateExactlyTheSameFingerprints,The length of the parameter fcbWithOldFingerprintDescriptor is 31.
Long Identifier,SoundFingerprinting.Tests.Unit.Utils,FastFingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FastFingerprintDescriptorTest.cs,ShouldCreateExactlyTheSameFingerprints,The length of the parameter fcbWithFastFingerprintDescriptor is 32.
Long Statement,SoundFingerprinting.Tests,TestUtilities,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\TestUtilities.cs,GetMatchedWith,The length of the statement  "                yield return new MatchedWith((uint)sequenceNumber' queryAt[sequenceNumber]' (uint)sequenceNumber' resultAt[sequenceNumber]' score); " is 131.
Long Statement,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,CreateFingerprintsFromFileAndAssertNumberOfFingerprints,The length of the statement  "            var fingerprintConfiguration = new DefaultFingerprintConfiguration { Stride = new IncrementalStaticStride(staticStride) }; " is 122.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceSerializationTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceSerializationTest.cs,ShouldSerializeAndDeserialize,The length of the statement  "            var trackData = new TrackInfo("id"' "title"' "artist"' new Dictionary<string' string> {{"key"' "value"}}' MediaType.Audio); " is 123.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceSerializationTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceSerializationTest.cs,ShouldSerializeAndIncrementNextIdCorrectly,The length of the statement  "            modelService.Insert(firstTrack' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 1' 0f' Enumerable.Empty<string>()) }' 1.48)); " is 140.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceSerializationTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceSerializationTest.cs,ShouldSerializeAndIncrementNextIdCorrectly,The length of the statement  "            fromFileService.Insert(secondTrack' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 1' 0f' Enumerable.Empty<string>()) }' 1.48)); " is 144.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,InsertTrackTest,The length of the statement  "            modelService.Insert(track' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 0' 0f' Enumerable.Empty<string>()) }' 1.48)); " is 135.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadTrackByTrackIdTest,The length of the statement  "            modelService.Insert(track' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 0' 0f' Enumerable.Empty<string>()) }' 1.48)); " is 135.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadTrackByArtistAndTitleTest,The length of the statement  "            modelService.Insert(track' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 0' 0f' Enumerable.Empty<string>()) }' 1.48d)); " is 136.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadMultipleTracksTest,The length of the statement  "                modelService.Insert(track' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 0' 0f' Enumerable.Empty<string>()) }' 1.48d)); " is 136.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,DeleteTrackTest,The length of the statement  "            modelService.Insert(track' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 0' 0f' Enumerable.Empty<string>()) }' 1.48)); " is 135.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,InsertHashDataTest,The length of the statement  "            modelService.Insert(expectedTrack' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 0' 0f' Enumerable.Empty<string>()) }' 1.48)); " is 143.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,InsertHashDataTest,The length of the statement  "            var trackReference = modelService.ReadTracksByReferences(subFingerprints.Select(s => s.TrackReference)).First().TrackReference; " is 127.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The length of the statement  "            int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 }; " is 120.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The length of the statement  "            int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 }; " is 122.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The length of the statement  "            int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 }; " is 120.
Long Statement,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The length of the statement  "            int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 }; " is 121.
Long Statement,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,ReadByTrackGroupIdWorksAsExpectedTest,The length of the statement  "                subFingerprintData = subFingerprintDao.ReadSubFingerprints(new[] { hashedFingerprint.HashBins }' new DefaultQueryConfiguration { ThresholdVotes = thresholdVotes }) " is 163.
Long Statement,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldNotAllowSmallerThanMinSizeEntriesAtTheInput,The length of the statement  "            Assert.Throws<ArgumentException>(() => realtimeAggregator.Aggregate(new AudioSamples(TestUtilities.GenerateRandomFloatArray(10240 - 1)' "cnn"' 5512))); " is 151.
Long Statement,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldBufferCorrectly,The length of the statement  "            // the length of 1 fingerprint is 10240 as this is the minimal length that will allow generating full 128 * 32 log-image " is 120.
Long Statement,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestMoreDataIsReceivedThanRequested,The length of the statement  "            var samples = samplesAggregator.ReadSamplesFromSource(new QueueSamplesProvider(queueBytesRead)' secondsToRead' SampleRate); " is 123.
Long Statement,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBenchmark.cs,ShouldFingerprintAndQuerySuccessfully,The length of the statement  "                Console.WriteLine("{0'10}ms{1'15}ms{2'15}"' queryResult.Stats.FingerprintingDuration' queryResult.Stats.QueryDuration' queryResult.Stats.TotalFingerprintsAnalyzed); " is 164.
Long Statement,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBenchmark.cs,ShouldFingerprintAndQuerySuccessfully,The length of the statement  "            Console.WriteLine("Avg. Fingerprinting: {0'0:000}ms' Avg. Query: {1' 0:000}ms"' avgFingerprinting / totalRuns' avgQuery / totalRuns); " is 133.
Long Statement,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileCorrectly,The length of the statement  "            withAlgorithmConfiguration.Setup(config => config.WithFingerprintConfig(It.IsAny<DefaultFingerprintConfiguration>())).Returns(usingFingerprintServices.Object); " is 159.
Long Statement,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileCorrectly,The length of the statement  "            queryFingerprintService.Setup(service => service.Query(hashedFingerprints' It.IsAny<DefaultQueryConfiguration>()' It.IsAny<DateTime>()' modelService.Object)).Returns(dummyResult); " is 179.
Long Statement,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The length of the statement  "            fingerprintingSource.Setup(source => source.From(pathToFile' secondsToQuery' startAtSecond)).Returns(withAlgorithmConfiguration.Object); " is 136.
Long Statement,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The length of the statement  "            withAlgorithmConfiguration.Setup(config => config.WithFingerprintConfig(It.IsAny<DefaultFingerprintConfiguration>())).Returns(usingFingerprintServices.Object); " is 159.
Long Statement,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The length of the statement  "            fingerprintCommand.Setup(fingerprintingUnit => fingerprintingUnit.Hash()).Returns(Task.Factory.StartNew(() => hashDatas)); " is 122.
Long Statement,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The length of the statement  "            queryFingerprintService.Setup(service => service.Query(hashDatas' It.IsAny<DefaultQueryConfiguration>()' It.IsAny<DateTime>()' modelService.Object)).Returns(dummyResult); " is 170.
Long Statement,SoundFingerprinting.Tests.Unit.DAO.Data,SubFingerprintDataTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\DAO\Data\SubFingerprintDataTest.cs,ShouldIdentifyAsEqual,The length of the statement  "            var dto0 = new SubFingerprintData(new int[0]' 0' 0' Enumerable.Empty<string>()' new ModelReference<int>(1)' new ModelReference<int>(0)); " is 136.
Long Statement,SoundFingerprinting.Tests.Unit.DAO.Data,SubFingerprintDataTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\DAO\Data\SubFingerprintDataTest.cs,ShouldIdentifyAsEqual,The length of the statement  "            var dto1 = new SubFingerprintData(new int[0]' 0' 0' Enumerable.Empty<string>()' new ModelReference<int>(1)' new ModelReference<int>(0)); " is 136.
Long Statement,SoundFingerprinting.Tests.Unit.DAO.Data,SubFingerprintDataTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\DAO\Data\SubFingerprintDataTest.cs,ShouldNotBeEqualToNull,The length of the statement  "            var dto = new SubFingerprintData(new int[0]' 0' 0' Enumerable.Empty<string>()' new ModelReference<int>(1)' new ModelReference<int>(0)); " is 135.
Long Statement,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeCorrectly,The length of the statement  "            var b = new TimedHashes(new List<HashedFingerprint>(new[] {new HashedFingerprint(new[] {1}' 0' 0' new string[0])})' dateTime); " is 126.
Long Statement,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeCorrectly,The length of the statement  "            var c = new TimedHashes(new List<HashedFingerprint>(new[] {new HashedFingerprint(new[] {2}' 0' 0f' new string[0])})' dateTime.AddSeconds(acc)); " is 143.
Long Statement,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeCorrectly,The length of the statement  "            var d = new TimedHashes(new List<HashedFingerprint>(new[] {new HashedFingerprint(new[] {3}' 0' 0f' new string[0])})' dateTime.AddSeconds(2 * acc)); " is 147.
Long Statement,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The length of the statement  "                int index = logUtility.FrequencyToSpectrumIndex(logSpacedFrequency' defaultFingerprintConfiguration.SampleRate' defaultConfig.WdftSize); " is 136.
Long Statement,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CreateLogSpectrogramTest,The length of the statement  "            var samples = TestUtilities.GenerateRandomAudioSamples((configuration.Overlap * configuration.WdftSize) + configuration.WdftSize); // 64 * 2048 " is 143.
Long Statement,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CreateLogSpectrogramFromMinimalSamplesLengthTest,The length of the statement  "            var samples = TestUtilities.GenerateRandomAudioSamples(new DefaultFingerprintConfiguration().SamplesPerFingerprint + configuration.WdftSize); // 8192 + 2048 " is 156.
Long Statement,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CreateLogSpectrumFromTwoEntries,The length of the statement  "            var samples = TestUtilities.GenerateRandomAudioSamples(new DefaultFingerprintConfiguration().SamplesPerFingerprint + configuration.WdftSize + stride); " is 150.
Long Statement,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,CreateFingerprints,The length of the statement  "            spectrumService.Setup(service => service.CreateLogSpectrogram(samples' It.IsAny<DefaultSpectrogramConfig>())).Returns(dividedLogSpectrum); " is 138.
Long Statement,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,CreateFingerprints,The length of the statement  "            waveletDecomposition.Setup(service => service.DecomposeImageInPlace(It.IsAny<float[]>()' 128' 32' fingerprintConfig.HaarWaveletNorm)); " is 134.
Long Statement,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,CreateFingerprints,The length of the statement  "            fingerprintDescriptor.Setup(descriptor => descriptor.ExtractTopWavelets(It.IsAny<float[]>()' fingerprintConfig.TopWavelets' It.IsAny<ushort[]>())).Returns(new TinyFingerprintSchema(8192).SetTrueAt(0' 1)); " is 204.
Long Statement,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,CreateFingerprints,The length of the statement  "            localitySensitiveHashingAlgorithm.Setup(service => service.Hash(It.IsAny<Fingerprint>()' fingerprintConfig.HashingConfig' It.IsAny<IEnumerable<string>>())) " is 155.
Long Statement,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,SilenceIsNotFingerprinted,The length of the statement  "            spectrumService.Setup(service => service.CreateLogSpectrogram(samples' It.IsAny<DefaultSpectrogramConfig>())).Returns(dividedLogSpectrum); " is 138.
Long Statement,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,SilenceIsNotFingerprinted,The length of the statement  "            waveletDecomposition.Setup(decomposition => decomposition.DecomposeImageInPlace(It.IsAny<float[]>()' 128' 32' configuration.HaarWaveletNorm)); " is 142.
Long Statement,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,SilenceIsNotFingerprinted,The length of the statement  "            fingerprintDescriptor.Setup(descriptor => descriptor.ExtractTopWavelets(It.IsAny<float[]>()' configuration.TopWavelets' It.IsAny<ushort[]>())).Returns( " is 151.
Long Statement,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,ShouldReturnNonNullEntriesForSilence,The length of the statement  "            var result = FingerprintService.Instance.CreateFingerprintsFromAudioSamples(new AudioSamples(silence' string.Empty' 5512)' new DefaultFingerprintConfiguration()).ToList(); " is 171.
Long Statement,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,ShouldCreateOneFingerprint,The length of the statement  "            var fingerprints = FingerprintService.Instance.CreateFingerprintsFromAudioSamples(new AudioSamples(floats' string.Empty' 5512)' new DefaultFingerprintConfiguration()).ToList(); " is 176.
Long Statement,SoundFingerprinting.Tests.Unit,ModelServiceInfoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\ModelServiceInfoTest.cs,ShouldHaveAHumanReadableStringRepresentation,The length of the statement  "            Assert.AreEqual("ModelServiceInfo{Id: model-service' TracksCount: 1' SubFingerprintsCount: 2' HashCountsInTables: [3' 4' 5]}"' info.ToString()); " is 144.
Long Statement,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The length of the statement  "            var customQueryConfiguration = new DefaultQueryConfiguration { MaxTracksToReturn = 2' ThresholdVotes = DefaultThreshold }; " is 122.
Long Statement,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The length of the statement  "            var queryResult = queryFingerprintService.Query(new List<HashedFingerprint> { queryHash }' customQueryConfiguration' DateTime.Now' modelService.Object); " is 152.
Long Statement,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,NoResultsReturnedFromUnderlyingStorageTest,The length of the statement  "            var customQueryConfiguration = new DefaultQueryConfiguration { MaxTracksToReturn = 1' ThresholdVotes = 10' FingerprintConfiguration = new DefaultFingerprintConfiguration() }; " is 174.
Long Statement,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,NoResultsReturnedFromUnderlyingStorageTest,The length of the statement  "            var queryResult = queryFingerprintService.Query(new List<HashedFingerprint> { queryHash }' customQueryConfiguration' DateTime.Now' modelService.Object); " is 152.
Long Statement,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,HammingSimilarityIsSummedUpAccrossAllSubFingerprintsTest,The length of the statement  "            var firstResult = new SubFingerprintData(GenericHashBuckets()' 1' 0' Enumerable.Empty<string>()' new ModelReference<int>(FirstSubFingerprintId)' firstTrackReference); " is 166.
Long Statement,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,HammingSimilarityIsSummedUpAccrossAllSubFingerprintsTest,The length of the statement  "            var secondResult = new SubFingerprintData(GenericHashBuckets()' 2' 0.928f' Enumerable.Empty<string>()' new ModelReference<int>(SecondSubFingerprintId)' firstTrackReference); " is 173.
Long Statement,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,HammingSimilarityIsSummedUpAccrossAllSubFingerprintsTest,The length of the statement  "            var queryResult = queryFingerprintService.Query(new List<HashedFingerprint> { queryHash }' defaultQueryConfiguration' DateTime.Now' modelService.Object); " is 153.
Long Statement,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerialize,The length of the statement  "            var sub = new SubFingerprintData(new[] { 1' 2' 3 }' 1' 1f' new[] { "1"' "2" }' new ModelReference<int>(1)' new ModelReference<int>(2)); " is 135.
Long Statement,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerializeModelReferenceProviders,The length of the statement  "                    var deserialized = Serializer.DeserializeWithLengthPrefix<UIntModelReferenceProvider>(streamFinal' PrefixStyle.Fixed32); " is 120.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyLongestMatch,The length of the statement  "            var matches = TestUtilities.GetMatchedWith(new[] { 5f' 9' 11' 14 }' new[] { trackMatchStartsAt' 5' 9' trackMatchEndsAt }); " is 122.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyLongestMatch,The length of the statement  "            Assert.AreEqual(trackMatchEndsAt - trackMatchStartsAt + fingerprintLengthInSeconds' coverage.DiscreteCoverageLength' Delta); " is 124.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,BestPathShouldIdentifyBestShiftingMatchesByScore,The length of the statement  "                    var match = new MatchedWith((uint)querySequence' querySequence * 1.48f' (uint)trackSequence' trackSequence * 1.48f' trackSequence); " is 131.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyGapAtTheEnd,The length of the statement  "                .Select(index => new MatchedWith((uint)index' (float)(index * fingerprintLength)' (uint) index' (float)(index * fingerprintLength)' 15)) " is 136.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The length of the statement  "                var candidate = new SubFingerprintData(new int[0]' (uint)i' i * 0.07f' Enumerable.Empty<string>()' new ModelReference<uint>((uint)i)' references[i % references.Length]); " is 169.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,MatchesShouldBeOrderedByQueryAt,The length of the statement  "                var candidate = new SubFingerprintData(new int[0]' (uint)i' runs - i' Enumerable.Empty<string>()' new ModelReference<uint>((uint)i)' reference); " is 144.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,SameQueryHashGeneratesMultipleTrackMatches,The length of the statement  "                    var dbPoint = new SubFingerprintData(new int[25]' (uint)k' k * 0.01f' Enumerable.Empty<string>()' new ModelReference<uint>((uint)Interlocked.Increment(ref k))' trackRef); " is 170.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithOneElement,The length of the statement  "            var result = increasingTrackSequence.FindAllIncreasingTrackSequences(TestUtilities.GetMatchedWith(new float[] { 0 }' new float [] { 0 })' PermittedGap); " is 152.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The length of the statement  "            var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f }); " is 177.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The length of the statement  "            CollectionAssert.AreEqual(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.6f' 0.7f' 0.9f }' result[0].Select(with => with.TrackMatchAt)); " is 126.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The length of the statement  "            var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 }); " is 126.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The length of the statement  "            var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 }); " is 142.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The length of the statement  "            var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 }); " is 142.
Long Statement,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The length of the statement  "            var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 }); " is 156.
Long Statement,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateVideoCollisions,The length of the statement  "                var tinyFingerprint = TestUtilities.GenerateRandomFingerprint(random' (int) (width * height * topWaveletsPercentage)' width' height); " is 133.
Long Statement,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPosition,The length of the statement  "            Assert.IsTrue(counts.Average() <= 0.25' "On average we expect no more than 0.25 elements in the schema to contain hashes at last position"); " is 140.
Long Statement,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The length of the statement  "            Assert.AreEqual(0' counts.Average()' 0.0001' "On average we expect no more than 0.0 elements in the schema to contain hashes at last position"); " is 144.
Long Statement,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldBeAbleToGenerateMultipleTimesDifferentSignatures,The length of the statement  "            Assert.AreEqual(averageSimilarityOnTrueBits' howSimilarAreVectors * topWavelets' 1.0' $"Actual Average Similarity on True bits: {averageSimilarityOnTrueBits}"); " is 160.
Long Statement,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldBeAbleToGenerateMultipleTimesDifferentSignatures,The length of the statement  "            // values that match are counted one time' values that don't count twice (1 0 | 1 0) - don't match on 2 bits' even though they are generated from 1 wavelet " is 155.
Long Statement,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldBeAbleToGenerateMultipleTimesDifferentSignatures,The length of the statement  "            double jaccardSimilarity = (howSimilarAreVectors * topWavelets) / ((2 * topWavelets) - (howSimilarAreVectors * topWavelets)); " is 125.
Long Statement,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldBeAbleToGenerateMultipleTimesDifferentSignatures,The length of the statement  "            Assert.AreEqual(jaccardSimilarity' similarity / simulationRuns' 0.1' "Jaccard Similarity is not as requested: " + (similarity / simulationRuns)); " is 145.
Long Statement,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The length of the statement  "                Console.WriteLine("{0'5:0.0000}{1'20:0.0000}{2'18:0.0000}{3'20:0.0000}"' howSimilars[i]' probabilityOfAMatch[i]' atLeastOneCandidateFounds[i]' avgCandidatesFound[i]); " is 166.
Long Statement,SoundFingerprinting.Tests.Unit.Query,OfflineStorage,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\OfflineStorage.cs,Save,The length of the statement  "            using (var fileStream = new FileStream(Path.Combine(folder' timedHashes.StartsAt.ToString(dateFormat) + ".hash")' FileMode.CreateNew)) " is 134.
Long Statement,SoundFingerprinting.Tests.Unit.Query,OfflineStorage,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\OfflineStorage.cs,GetEnumerator,The length of the statement  "            foreach (var file in Directory.GetFiles(folder' "*.hash").OrderBy(filename => DateTime.ParseExact(Path.GetFileNameWithoutExtension(filename)' dateFormat' CultureInfo.InvariantCulture))) " is 185.
Long Statement,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The length of the statement  "            var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now)); " is 133.
Long Statement,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The length of the statement  "            var entry3 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 2*1.48d' -10 + 2*1.48' 0d' 100' 1.48d' DateTime.Now)); " is 137.
Long Statement,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The length of the statement  "            var entry2 = new PendingResultEntry(new ResultEntry(track2' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now)); " is 134.
Long Statement,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The length of the statement  "            var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 30d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now)); " is 125.
Long Statement,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The length of the statement  "            var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 2.5d' 2.5d' 10.5d' -10 + 2.5' 0d' 100' 2.5d' DateTime.Now)); " is 123.
Long Statement,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,AddJitter,The length of the statement  "            Buffer.BlockCopy(match' 0' total' sizeof(float) * (before.Length + match.Length + between.Length)'sizeof(float) * match.Length); " is 128.
Long Statement,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,AddJitter,The length of the statement  "            Buffer.BlockCopy(after' 0' total' sizeof(float) * (before.Length + 2 * match.Length + between.Length)'sizeof(float) * after.Length); " is 132.
Long Statement,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryStrideShouldBeUsed,The length of the statement  "                                                    config.QueryFingerprintsCallback = fingerprints => Interlocked.Add(ref fingerprintsCount' fingerprints.HashedFingerprints.Count); " is 129.
Long Statement,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The length of the statement  "                    Console.WriteLine($"Found Match Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.QueryLength:0.000} Track Starts At {entry.TrackStartsAt:0.000}"); " is 204.
Long Statement,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The length of the statement  "                    Console.WriteLine($"Entry didn't pass filter' Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.CoverageLength:0.000}"); " is 177.
Long Statement,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The length of the statement  "            int count = 10' found = 0' didNotPassThreshold = 0' thresholdVotes = 4' testWaitTime = 40000' fingerprintsCount = 0' errored = 0; " is 129.
Long Statement,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The length of the statement  "            double processed = await new RealtimeQueryCommand(FingerprintCommandBuilder.Instance' new FaultyQueryService(count' QueryFingerprintService.Instance)) " is 150.
Long Statement,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The length of the statement  "            Assert.AreEqual(0d' started.AddSeconds(jitterLength + resultEntry.TrackMatchStartsAt).Subtract(resultEntry.MatchedAt).TotalSeconds' 2d); " is 136.
Long Statement,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,HashesShouldMatchExactlyWhenAggregated,The length of the statement  "            foreach (var zipped in hashes.OrderBy(h => h.SequenceNumber).Zip(aggregated[0].HashedFingerprints' (a' b) => new { a' b })) " is 123.
Long Statement,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The length of the statement  "            var a = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(1))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now); " is 162.
Long Statement,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The length of the statement  "            var b = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(2))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now); " is 162.
Long Statement,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The length of the statement  "            var first = aggregator.Consume(new[] { new ResultEntry(GetTrack()' 0d' 2d' 2d' 10d' -10d' .95d' 120' 5d' DateTime.Now) }' 5d); " is 126.
Long Statement,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The length of the statement  "                var entry = new ResultEntry(GetTrack()' 0d' 1.48d' 1.48d' 10d + i*1.48d' -10d -i*1.48d' 0.01233' 0' 1.48d' DateTime.Now); " is 121.
Long Statement,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The length of the statement  "            bool[] encodedFingerprint = fingerprintDescriptor.ExtractTopWavelets(frames' 5' RangeUtils.GetRange(frames.Length)).ToBools(); " is 126.
Long Statement,SoundFingerprinting.Tests.Unit.Utils,TestRunnerScenarioValidatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\TestRunnerScenarioValidatorTest.cs,ShouldValidateFullRun,The length of the statement  "            var result = validator.ValidateScenarious(new List<string> { scenario1' scenario2' scenario3' scenario4' scenario5' scenario6 }.ToArray()); " is 139.
Long Statement,SoundFingerprinting.Tests.Unit.Utils,TestRunnerScenarioValidatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\TestRunnerScenarioValidatorTest.cs,ShouldNotValidateInsertSinceNoAudioFilesInInputFolder,The length of the statement  "            var directory = Directory.CreateDirectory(Path.Combine(TestContext.CurrentContext.TestDirectory' Guid.NewGuid().ToString())); " is 125.
Long Statement,SoundFingerprinting.Tests.Unit.Utils,TestRunnerScenarioValidatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\TestRunnerScenarioValidatorTest.cs,ShouldNotValidateRunSinceNoAudioFilesInInputFolder,The length of the statement  "            var directory = Directory.CreateDirectory(Path.Combine(TestContext.CurrentContext.TestDirectory' Guid.NewGuid().ToString())); " is 125.
Magic Number,SoundFingerprinting.Tests,TestUtilities,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\TestUtilities.cs,GenerateRandomAudioSamples,The following statement contains a magic number: return new AudioSamples(GenerateRandomFloatArray(length)' string.Empty' 5512);
Magic Number,SoundFingerprinting.Tests,TestUtilities,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\TestUtilities.cs,GenerateRandomFloatArray,The following statement contains a magic number: var random = new Random(seed == 0 ? (int)DateTime.Now.Ticks << 4 : seed);
Magic Number,SoundFingerprinting.Tests,TestUtilities,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\TestUtilities.cs,GenerateRandomFloatArray,The following statement contains a magic number: result[i] = (float)random.NextDouble() * 32767;
Magic Number,SoundFingerprinting.Tests,TestUtilities,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\TestUtilities.cs,GenerateRandomSingleArray,The following statement contains a magic number: var random = new Random(seed == 0 ? (int)DateTime.Now.Ticks << 4 : seed);
Magic Number,SoundFingerprinting.Tests,TestUtilities,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\TestUtilities.cs,GenerateRandomSingleArray,The following statement contains a magic number: d[i] = (float)(32767 - (random.NextDouble() * 65535));
Magic Number,SoundFingerprinting.Tests,TestUtilities,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\TestUtilities.cs,GenerateRandomSingleArray,The following statement contains a magic number: d[i] = (float)(32767 - (random.NextDouble() * 65535));
Magic Number,SoundFingerprinting.Tests,TestUtilities,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\TestUtilities.cs,GenerateSimilarFingerprints,The following statement contains a magic number: var indexesTopWavelets = Enumerable.Range(0' length / 2)                                                 .OrderBy(x => random.NextDouble())                                                 .Take(topWavelets);
Magic Number,SoundFingerprinting.Tests,TestUtilities,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\TestUtilities.cs,GenerateSimilarFingerprints,The following statement contains a magic number: float value = random.NextDouble() > 0.5 ? -1 : 1;
Magic Number,SoundFingerprinting.Tests,TestUtilities,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\TestUtilities.cs,GenerateRandomFingerprint,The following statement contains a magic number: int length = width * height * 2;
Magic Number,SoundFingerprinting.Tests,TestUtilities,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\TestUtilities.cs,EncodeWavelet,The following statement contains a magic number: array.SetTrueAt(index * 2);
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,CreateFingerprintsFromFileAndAssertNumberOfFingerprints,The following statement contains a magic number: const int staticStride = 5096;
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsInsertThenQueryAndGetTheRightResult,The following statement contains a magic number: const int secondsToProcess = 8;
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsInsertThenQueryAndGetTheRightResult,The following statement contains a magic number: const int startAtSecond = 2;
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsInsertThenQueryAndGetTheRightResult,The following statement contains a magic number: Assert.IsTrue(bestMatch.CoverageLength > secondsToProcess - 3' $"QueryCoverageSeconds:{bestMatch.QueryLength}");
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsInsertThenQueryAndGetTheRightResult,The following statement contains a magic number: Assert.AreEqual(startAtSecond' Math.Abs(bestMatch.TrackStartsAt)' 0.1d);
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsInsertThenQueryAndGetTheRightResult,The following statement contains a magic number: Assert.IsTrue(bestMatch.Confidence > 0.7' $"Confidence:{bestMatch.Confidence}");
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,CreateFingerprintsFromFileAndFromAudioSamplesAndGetTheSameResultTest,The following statement contains a magic number: const int secondsToProcess = 8;
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,CreateFingerprintsFromFileAndFromAudioSamplesAndGetTheSameResultTest,The following statement contains a magic number: var samples = audioService.ReadMonoSamplesFromFile(PathToWav' 5512' secondsToProcess' startAtSecond);
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,CheckFingerprintCreationAlgorithmTest,The following statement contains a magic number: int bytesPerSample = format.Channels * format.BitsPerSample / 8;
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,CreateFingerprintsWithTheSameFingerprintCommandTest,The following statement contains a magic number: const int secondsToProcess = 8;
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsFromAudioSamplesQueryAndGetTheRightResult,The following statement contains a magic number: const int secondsToProcess = 10;
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsFromAudioSamplesQueryAndGetTheRightResult,The following statement contains a magic number: const int startAtSecond = 30;
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsFromAudioSamplesQueryAndGetTheRightResult,The following statement contains a magic number: Assert.IsTrue(bestMatch.CoverageLength > secondsToProcess - 3' $"QueryCoverageSeconds:{bestMatch.QueryLength}");
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsFromAudioSamplesQueryAndGetTheRightResult,The following statement contains a magic number: Assert.AreEqual(startAtSecond' Math.Abs(bestMatch.TrackStartsAt)' 0.1d);
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsFromAudioSamplesQueryAndGetTheRightResult,The following statement contains a magic number: Assert.IsTrue(bestMatch.Confidence > 0.7' $"Confidence:{bestMatch.Confidence}");
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsFromAudioSamplesQueryWithPreviouslyCreatedFingerprintsAndGetTheRightResult,The following statement contains a magic number: Assert.AreEqual(0' Math.Abs(bestMatch.TrackStartsAt)' 0.0001d);
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsFromAudioSamplesQueryWithPreviouslyCreatedFingerprintsAndGetTheRightResult,The following statement contains a magic number: Assert.AreEqual(audioSamples.Duration' bestMatch.CoverageLength' 1.48d);
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,ShouldCreateFingerprintsFromAudioSamplesQueryWithPreviouslyCreatedFingerprintsAndGetTheRightResult,The following statement contains a magic number: Assert.AreEqual(1d' bestMatch.Coverage' 0.005d);
Magic Number,SoundFingerprinting.Tests.Integration,FingerprintCommandBuilderIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\FingerprintCommandBuilderIntTest.cs,GenerateRandomAudioSamples,The following statement contains a magic number: return new AudioSamples(TestUtilities.GenerateRandomFloatArray(length)' string.Empty' 5512);
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceSerializationTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceSerializationTest.cs,ShouldSerializeAndDeserialize,The following statement contains a magic number: Assert.IsTrue(queryResult.BestMatch.Confidence > 0.9);
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceSerializationTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceSerializationTest.cs,ShouldSerializeAndIncrementNextIdCorrectly,The following statement contains a magic number: modelService.Insert(firstTrack' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 1' 0f' Enumerable.Empty<string>()) }' 1.48));
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceSerializationTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceSerializationTest.cs,ShouldSerializeAndIncrementNextIdCorrectly,The following statement contains a magic number: fromFileService.Insert(secondTrack' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 1' 0f' Enumerable.Empty<string>()) }' 1.48));
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceSerializationTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceSerializationTest.cs,ShouldSerializeSpectralImages,The following statement contains a magic number: var trackReference = new ModelReference<int>(10);
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,InsertTrackTest,The following statement contains a magic number: modelService.Insert(track' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 0' 0f' Enumerable.Empty<string>()) }' 1.48));
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadTrackByTrackIdTest,The following statement contains a magic number: modelService.Insert(track' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 0' 0f' Enumerable.Empty<string>()) }' 1.48));
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadTrackByArtistAndTitleTest,The following statement contains a magic number: modelService.Insert(track' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 0' 0f' Enumerable.Empty<string>()) }' 1.48d));
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadMultipleTracksTest,The following statement contains a magic number: const int numberOfTracks = 100;
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadMultipleTracksTest,The following statement contains a magic number: modelService.Insert(track' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 0' 0f' Enumerable.Empty<string>()) }' 1.48d));
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,DeleteTrackTest,The following statement contains a magic number: modelService.Insert(track' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 0' 0f' Enumerable.Empty<string>()) }' 1.48));
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,InsertHashDataTest,The following statement contains a magic number: modelService.Insert(expectedTrack' new Hashes(new[] { new HashedFingerprint(GenericHashBuckets()' 0' 0f' Enumerable.Empty<string>()) }' 1.48));
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] secondTrackBuckets = { 2' 2' 4' 5' 6' 7' 7' 9' 10' 11' 12' 13' 14' 14' 16' 17' 18' 19' 20' 20' 22' 23' 24' 25' 26 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: var firstHashData = new HashedFingerprint(firstTrackBuckets' 1' 0.928f' Enumerable.Empty<string>());
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: var secondHashData = new HashedFingerprint(secondTrackBuckets' 1' 0.928f' Enumerable.Empty<string>());
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: modelService.Insert(t1' new Hashes(new[] { firstHashData }' 1.48d));
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: modelService.Insert(t2' new Hashes(new[] { secondHashData }' 1.48d));
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] firstTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] secondTrackBuckets = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18' 19' 20' 21' 22' 23' 24' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: var firstHashData = new HashedFingerprint(firstTrackBuckets' 1' 0.928f' new[] { "first-group-id" });
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: var secondHashData = new HashedFingerprint(secondTrackBuckets' 1' 0.928f' new[] { "second-group-id" });
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: modelService.Insert(firstTrack' new Hashes(new[] { firstHashData }' 1.48d));
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: modelService.Insert(secondTrack' new Hashes(new[] { secondHashData }' 1.48d));
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,InMemoryModelServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\InMemoryModelServiceTest.cs,ReadSubFingerprintsByHashBucketsHavingThresholdWithClustersTest,The following statement contains a magic number: int[] queryBuckets = { 3' 2' 5' 6' 7' 8' 7' 10' 11' 12' 13' 14' 15' 14' 17' 18' 19' 20' 21' 20' 23' 24' 25' 26' 25 };
Magic Number,SoundFingerprinting.Tests.Integration,IntegrationWithSampleFilesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\IntegrationWithSampleFilesTest.cs,AssertHashDatasAreTheSame,The following statement contains a magic number: Assert.AreEqual(firstHashDatas[i].StartsAt' secondHashDatas[i].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Integration,IntegrationWithSampleFilesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\IntegrationWithSampleFilesTest.cs,GetTagInfo,The following statement contains a magic number: return new TagInfo              {                  Album = "Album"'                  AlbumArtist = "AlbumArtist"'                  Artist = "Chopin"'                  Composer = "Composer"'                  Duration = 10.0d'                  Genre = "Genre"'                  IsEmpty = false'                  ISRC = "ISRC"'                  Title = "Nocture"'                  Year = 1857              };
Magic Number,SoundFingerprinting.Tests.Integration,IntegrationWithSampleFilesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\IntegrationWithSampleFilesTest.cs,GetTagInfo,The following statement contains a magic number: return new TagInfo              {                  Album = "Album"'                  AlbumArtist = "AlbumArtist"'                  Artist = "Chopin"'                  Composer = "Composer"'                  Duration = 10.0d'                  Genre = "Genre"'                  IsEmpty = false'                  ISRC = "ISRC"'                  Title = "Nocture"'                  Year = 1857              };
Magic Number,SoundFingerprinting.Tests.Integration,SoundFingerprintingAudioServiceIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SoundFingerprintingAudioServiceIntTest.cs,ShouldEstimateLengthCorrectly,The following statement contains a magic number: Assert.AreEqual(10.0f' duration' 0.1);
Magic Number,SoundFingerprinting.Tests.Integration,SoundFingerprintingAudioServiceIntTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SoundFingerprintingAudioServiceIntTest.cs,ShouldEstimateLengthCorrectly,The following statement contains a magic number: Assert.AreEqual(10.0f' duration' 0.1);
Magic Number,SoundFingerprinting.Tests.Integration,SpectralImageDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SpectralImageDaoTest.cs,SetUp,The following statement contains a magic number: var storage = new RAMStorage(25);
Magic Number,SoundFingerprinting.Tests.Integration,SpectralImageDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SpectralImageDaoTest.cs,ShouldInsertSpectralImages,The following statement contains a magic number: var trackReference = new ModelReference<int>(10);
Magic Number,SoundFingerprinting.Tests.Integration,SpectralImageDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SpectralImageDaoTest.cs,ShouldInsertSpectralImages,The following statement contains a magic number: Assert.AreEqual(3' spectralImageDao.GetSpectralImagesByTrackReference(trackReference).Count());
Magic Number,SoundFingerprinting.Tests.Integration,SpectralImageDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SpectralImageDaoTest.cs,ShouldInsertSpectralImages,The following statement contains a magic number: CollectionAssert.AreEqual(Enumerable.Range(1' 3)' ids);
Magic Number,SoundFingerprinting.Tests.Integration,SpectralImageDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SpectralImageDaoTest.cs,ShouldReturnEmptySinceNoSpectralImagesArePresentForTrack,The following statement contains a magic number: var trackReference = new ModelReference<int>(10);
Magic Number,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,SetUp,The following statement contains a magic number: var ramStorage = new RAMStorage(25);
Magic Number,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,ShouldInsertAndReadSubFingerprints,The following statement contains a magic number: const int numberOfHashBins = 100;
Magic Number,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,ShouldInsertAndReadSubFingerprints,The following statement contains a magic number: var trackReference = trackDao.InsertTrack(track' 200).TrackReference;
Magic Number,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,ShouldInsertAndReadSubFingerprints,The following statement contains a magic number: var hashedFingerprints = Enumerable.Range(0' numberOfHashBins).Select(                  sequenceNumber => new HashedFingerprint(                      genericHashBuckets'                      (uint)sequenceNumber'                      sequenceNumber * 0.928f'                      Enumerable.Empty<string>()));
Magic Number,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,SameNumberOfHashBinsIsInsertedInAllTablesWhenFingerprintingEntireSongTest,The following statement contains a magic number: var trackReference = trackDao.InsertTrack(track' 120).TrackReference;
Magic Number,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,SameNumberOfHashBinsIsInsertedInAllTablesWhenFingerprintingEntireSongTest,The following statement contains a magic number: Assert.AreEqual(25' data.HashBins.Length);
Magic Number,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,ReadByTrackGroupIdWorksAsExpectedTest,The following statement contains a magic number: var firstTrackReference = trackDao.InsertTrack(firstTrack' 120).TrackReference;
Magic Number,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,ReadByTrackGroupIdWorksAsExpectedTest,The following statement contains a magic number: var secondTrackReference = trackDao.InsertTrack(secondTrack' 120).TrackReference;
Magic Number,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,ReadByTrackGroupIdWorksAsExpectedTest,The following statement contains a magic number: const int thresholdVotes = 25;
Magic Number,SoundFingerprinting.Tests.Integration,SubFingerprintDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\SubFingerprintDaoTest.cs,ReadByTrackGroupIdWorksAsExpectedTest,The following statement contains a magic number: Assert.AreEqual(2' subFingerprintData.Count);
Magic Number,SoundFingerprinting.Tests.Integration,TestRunnerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TestRunnerTest.cs,SetUp,The following statement contains a magic number: tagService.Setup(service => service.GetTagInfo(It.IsAny<string>()))                        .Returns(new TagInfo                        {                          Artist = "Chopin"'                          Album = string.Empty'                          Title = "Nocturne C#"'                          ISRC = "USUR19980187"'                          Year = 1997'                          Duration = 193.07d                        });
Magic Number,SoundFingerprinting.Tests.Integration,TestRunnerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TestRunnerTest.cs,SetUp,The following statement contains a magic number: tagService.Setup(service => service.GetTagInfo(It.IsAny<string>()))                        .Returns(new TagInfo                        {                          Artist = "Chopin"'                          Album = string.Empty'                          Title = "Nocturne C#"'                          ISRC = "USUR19980187"'                          Year = 1997'                          Duration = 193.07d                        });
Magic Number,SoundFingerprinting.Tests.Integration,TestRunnerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TestRunnerTest.cs,ShouldSuccessfullyRunTest,The following statement contains a magic number: nfe.Setup(e => e(It.IsAny<TestRunner>()' It.IsAny<TestRunnerEventArgs>())).Callback(                  (object runner' EventArgs param) =>                      {                          var fScore = ((TestRunnerEventArgs)param).FScore;                          Assert.AreEqual(0.6666' fScore.F1' 0.001);                          Assert.AreEqual(0.5' fScore.Precision' 0.001);                          Assert.AreEqual(1' fScore.Recall);                          Assert.AreEqual(2' ((TestRunnerEventArgs)param).Verified);                      });
Magic Number,SoundFingerprinting.Tests.Integration,TestRunnerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TestRunnerTest.cs,ShouldSuccessfullyRunTest,The following statement contains a magic number: nfe.Setup(e => e(It.IsAny<TestRunner>()' It.IsAny<TestRunnerEventArgs>())).Callback(                  (object runner' EventArgs param) =>                      {                          var fScore = ((TestRunnerEventArgs)param).FScore;                          Assert.AreEqual(0.6666' fScore.F1' 0.001);                          Assert.AreEqual(0.5' fScore.Precision' 0.001);                          Assert.AreEqual(1' fScore.Recall);                          Assert.AreEqual(2' ((TestRunnerEventArgs)param).Verified);                      });
Magic Number,SoundFingerprinting.Tests.Integration,TestRunnerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TestRunnerTest.cs,ShouldSuccessfullyRunTest,The following statement contains a magic number: nfe.Setup(e => e(It.IsAny<TestRunner>()' It.IsAny<TestRunnerEventArgs>())).Callback(                  (object runner' EventArgs param) =>                      {                          var fScore = ((TestRunnerEventArgs)param).FScore;                          Assert.AreEqual(0.6666' fScore.F1' 0.001);                          Assert.AreEqual(0.5' fScore.Precision' 0.001);                          Assert.AreEqual(1' fScore.Recall);                          Assert.AreEqual(2' ((TestRunnerEventArgs)param).Verified);                      });
Magic Number,SoundFingerprinting.Tests.Integration,TestRunnerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TestRunnerTest.cs,ShouldSuccessfullyRunTest,The following statement contains a magic number: nfe.Setup(e => e(It.IsAny<TestRunner>()' It.IsAny<TestRunnerEventArgs>())).Callback(                  (object runner' EventArgs param) =>                      {                          var fScore = ((TestRunnerEventArgs)param).FScore;                          Assert.AreEqual(0.6666' fScore.F1' 0.001);                          Assert.AreEqual(0.5' fScore.Precision' 0.001);                          Assert.AreEqual(1' fScore.Recall);                          Assert.AreEqual(2' ((TestRunnerEventArgs)param).Verified);                      });
Magic Number,SoundFingerprinting.Tests.Integration,TestRunnerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TestRunnerTest.cs,ShouldSuccessfullyRunTest,The following statement contains a magic number: nfe.Setup(e => e(It.IsAny<TestRunner>()' It.IsAny<TestRunnerEventArgs>())).Callback(                  (object runner' EventArgs param) =>                      {                          var fScore = ((TestRunnerEventArgs)param).FScore;                          Assert.AreEqual(0.6666' fScore.F1' 0.001);                          Assert.AreEqual(0.5' fScore.Precision' 0.001);                          Assert.AreEqual(1' fScore.Recall);                          Assert.AreEqual(2' ((TestRunnerEventArgs)param).Verified);                      });
Magic Number,SoundFingerprinting.Tests.Integration,TestRunnerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TestRunnerTest.cs,ShouldSuccessfullyRunTest,The following statement contains a magic number: pfe.Verify(e => e(It.IsAny<TestRunner>()' It.IsAny<TestRunnerEventArgs>())' Times.Exactly(6));
Magic Number,SoundFingerprinting.Tests.Integration,TestRunnerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TestRunnerTest.cs,ShouldSuccessfullyRunTest,The following statement contains a magic number: pfe.Verify(e => e(It.IsAny<TestRunner>()' It.IsAny<TestRunnerEventArgs>())' Times.Exactly(6));
Magic Number,SoundFingerprinting.Tests.Integration,TestRunnerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TestRunnerTest.cs,ShouldSuccessfullyRunTest,The following statement contains a magic number: tife.Verify(e => e(It.IsAny<TestRunner>()' It.IsAny<TestRunnerEventArgs>())' Times.Exactly(6));
Magic Number,SoundFingerprinting.Tests.Integration,TestRunnerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TestRunnerTest.cs,ShouldSuccessfullyRunTest,The following statement contains a magic number: Assert.AreEqual(6' testRuns.Count);
Magic Number,SoundFingerprinting.Tests.Integration,TestRunnerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TestRunnerTest.cs,ShouldSuccessfullyRunTest,The following statement contains a magic number: Assert.AreEqual(2' testInsert.Count);
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,SetUp,The following statement contains a magic number: var ramStorage = new RAMStorage(25);
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,InsertTrackTest,The following statement contains a magic number: var trackReference = trackDao.InsertTrack(track' 10).TrackReference;
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,MultipleInsertTest,The following statement contains a magic number: var modelReference = trackDao.InsertTrack(new TrackInfo("id"' "title"' "artist")' 10).TrackReference;
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,MultipleInsertTest,The following statement contains a magic number: i < 1000
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,ReadAllTracksTest,The following statement contains a magic number: const int trackCount = 5;
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,InsertMultipleTrackAtOnceTest,The following statement contains a magic number: const int trackCount = 100;
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,ReadTrackByTitleTest,The following statement contains a magic number: trackDao.InsertTrack(track' 10);
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,ReadTrackByIdTest,The following statement contains a magic number: trackDao.InsertTrack(expectedTrack' 10);
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,DeleteCollectionOfTracksTest,The following statement contains a magic number: const int numberOfTracks = 10;
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,DeleteOneTrackTest,The following statement contains a magic number: var trackReference = trackDao.InsertTrack(track' 10).TrackReference;
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,DeleteHashBinsAndSubFingerprintsOnTrackDelete,The following statement contains a magic number: Assert.AreEqual(1 + hashData.Count + 25 * hashData.Count' modifiedRows);
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,InsertTrackShouldAcceptEmptyEntriesCodes,The following statement contains a magic number: var trackReference = trackDao.InsertTrack(track' 120d).TrackReference;
Magic Number,SoundFingerprinting.Tests.Integration,TrackDaoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\TrackDaoTest.cs,InsertTracks,The following statement contains a magic number: trackDao.InsertTrack(track' 10);
Magic Number,SoundFingerprinting.Tests.Integration,WaveFormatTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\WaveFormatTest.cs,ShouldReadWaveFormatCorrectly,The following statement contains a magic number: Assert.AreEqual(2' format.Channels);
Magic Number,SoundFingerprinting.Tests.Integration,WaveFormatTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\WaveFormatTest.cs,ShouldReadWaveFormatCorrectly,The following statement contains a magic number: Assert.AreEqual(44100' format.SampleRate);
Magic Number,SoundFingerprinting.Tests.Integration,WaveFormatTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\WaveFormatTest.cs,ShouldReadWaveFormatCorrectly,The following statement contains a magic number: Assert.AreEqual(16' format.BitsPerSample);
Magic Number,SoundFingerprinting.Tests.Integration,WaveFormatTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\WaveFormatTest.cs,ShouldReadWaveFormatCorrectly,The following statement contains a magic number: Assert.AreEqual(10' format.LengthInSeconds' 0.01);
Magic Number,SoundFingerprinting.Tests.Integration,WaveFormatTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Integration\WaveFormatTest.cs,ShouldReadWaveFormatCorrectly,The following statement contains a magic number: Assert.AreEqual(10' format.LengthInSeconds' 0.01);
Magic Number,SoundFingerprinting.Tests.Unit.Audio,QueueSamplesProvider,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\QueueSamplesProvider.cs,GetNextSamples,The following statement contains a magic number: return toCopy.Length * 4;
Magic Number,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldNotAllowSmallerThanMinSizeEntriesAtTheInput,The following statement contains a magic number: var realtimeAggregator = new RealtimeAudioSamplesAggregator(new IncrementalStaticStride(256)' 10240);
Magic Number,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldNotAllowSmallerThanMinSizeEntriesAtTheInput,The following statement contains a magic number: var realtimeAggregator = new RealtimeAudioSamplesAggregator(new IncrementalStaticStride(256)' 10240);
Magic Number,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldNotAllowSmallerThanMinSizeEntriesAtTheInput,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => realtimeAggregator.Aggregate(new AudioSamples(TestUtilities.GenerateRandomFloatArray(10240 - 1)' "cnn"' 5512)));
Magic Number,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldNotAllowSmallerThanMinSizeEntriesAtTheInput,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => realtimeAggregator.Aggregate(new AudioSamples(TestUtilities.GenerateRandomFloatArray(10240 - 1)' "cnn"' 5512)));
Magic Number,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldBufferFirstEntryCorrectly,The following statement contains a magic number: const int minSize = 10240;
Magic Number,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldBufferFirstEntryCorrectly,The following statement contains a magic number: const int incrementBy = 1024;
Magic Number,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldBufferFirstEntryCorrectly,The following statement contains a magic number: var a = realtimeAggregator.Aggregate(new AudioSamples(TestUtilities.GenerateRandomFloatArray(minSize)' "cnn"' 5512));
Magic Number,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldBufferFirstEntryCorrectly,The following statement contains a magic number: var b = realtimeAggregator.Aggregate(new AudioSamples(TestUtilities.GenerateRandomFloatArray(minSize)' "cnn"' 5512));
Magic Number,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldBufferCorrectly,The following statement contains a magic number: var stride = new IncrementalStaticStride(256);
Magic Number,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldBufferCorrectly,The following statement contains a magic number: var minSize = 10240;
Magic Number,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldBufferCorrectly,The following statement contains a magic number: var toProcess = realtimeAggregator.Aggregate(new AudioSamples(next' "cnn"' 5512));
Magic Number,SoundFingerprinting.Tests.Unit.Audio,RealtimeAudioSamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\RealtimeAudioSamplesAggregatorTest.cs,ShouldBufferCorrectly,The following statement contains a magic number: i < 100
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestLessDataThanRequestedIsReceivedFromSamplesProvider,The following statement contains a magic number: const int secondsToRead = 55;
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestLessDataThanRequestedIsReceivedFromSamplesProvider,The following statement contains a magic number: var queueBytesRead =                  new Queue<float[]>(                      new[]                          {                              TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                              TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                              TestUtilities.GenerateRandomFloatArray(10 * SampleRate)'                              new float[0]                          });
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestLessDataThanRequestedIsReceivedFromSamplesProvider,The following statement contains a magic number: var queueBytesRead =                  new Queue<float[]>(                      new[]                          {                              TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                              TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                              TestUtilities.GenerateRandomFloatArray(10 * SampleRate)'                              new float[0]                          });
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestLessDataThanRequestedIsReceivedFromSamplesProvider,The following statement contains a magic number: var queueBytesRead =                  new Queue<float[]>(                      new[]                          {                              TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                              TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                              TestUtilities.GenerateRandomFloatArray(10 * SampleRate)'                              new float[0]                          });
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestMoreDataIsReceivedThanRequested,The following statement contains a magic number: const int secondsToRead = 45;
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestMoreDataIsReceivedThanRequested,The following statement contains a magic number: var queueBytesRead = new Queue<float[]>(                      new[]                          {                              TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                              TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                              TestUtilities.GenerateRandomFloatArray(10 * SampleRate)'                              new float[0]                          });
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestMoreDataIsReceivedThanRequested,The following statement contains a magic number: var queueBytesRead = new Queue<float[]>(                      new[]                          {                              TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                              TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                              TestUtilities.GenerateRandomFloatArray(10 * SampleRate)'                              new float[0]                          });
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestMoreDataIsReceivedThanRequested,The following statement contains a magic number: var queueBytesRead = new Queue<float[]>(                      new[]                          {                              TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                              TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                              TestUtilities.GenerateRandomFloatArray(10 * SampleRate)'                              new float[0]                          });
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestExactAmountOfDataIsReceivedAsRequested,The following statement contains a magic number: const double secondsToRead = 65.8;
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestExactAmountOfDataIsReceivedAsRequested,The following statement contains a magic number: var floats = new[]                  {                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray((int)(5.8 * SampleRate) /  4 * 4)'                      new float[0]                  };
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestExactAmountOfDataIsReceivedAsRequested,The following statement contains a magic number: var floats = new[]                  {                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray((int)(5.8 * SampleRate) /  4 * 4)'                      new float[0]                  };
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestExactAmountOfDataIsReceivedAsRequested,The following statement contains a magic number: var floats = new[]                  {                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray((int)(5.8 * SampleRate) /  4 * 4)'                      new float[0]                  };
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestExactAmountOfDataIsReceivedAsRequested,The following statement contains a magic number: var floats = new[]                  {                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray((int)(5.8 * SampleRate) /  4 * 4)'                      new float[0]                  };
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestExactAmountOfDataIsReceivedAsRequested,The following statement contains a magic number: var floats = new[]                  {                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray((int)(5.8 * SampleRate) /  4 * 4)'                      new float[0]                  };
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestExactAmountOfDataIsReceivedAsRequested,The following statement contains a magic number: var floats = new[]                  {                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray(20 * SampleRate)'                      TestUtilities.GenerateRandomFloatArray((int)(5.8 * SampleRate) /  4 * 4)'                      new float[0]                  };
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestExactAmountOfDataIsReceivedAsRequested,The following statement contains a magic number: Assert.AreEqual((int)(secondsToRead * SampleRate) / 4 * 4' samples.Length);
Magic Number,SoundFingerprinting.Tests.Unit.Audio,SamplesAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\SamplesAggregatorTest.cs,TestExactAmountOfDataIsReceivedAsRequested,The following statement contains a magic number: Assert.AreEqual((int)(secondsToRead * SampleRate) / 4 * 4' samples.Length);
Magic Number,SoundFingerprinting.Tests.Unit.Audio,StrideClassesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\StrideTest.cs,StaticStrideClassTest,The following statement contains a magic number: const int value = 5115;
Magic Number,SoundFingerprinting.Tests.Unit.Audio,StrideClassesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\StrideTest.cs,StaticStrideClassTest,The following statement contains a magic number: Assert.AreEqual(8192 + value' stride.NextStride);
Magic Number,SoundFingerprinting.Tests.Unit.Audio,StrideClassesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\StrideTest.cs,IncrementalStaticStrideTest,The following statement contains a magic number: IncrementalStaticStride incrementalStatic = new IncrementalStaticStride(5115);
Magic Number,SoundFingerprinting.Tests.Unit.Audio,StrideClassesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\StrideTest.cs,IncrementalStaticStrideTest,The following statement contains a magic number: Assert.AreEqual(5115' incrementalStatic.NextStride);
Magic Number,SoundFingerprinting.Tests.Unit.Audio,StrideClassesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\StrideTest.cs,RandomStrideClassTest,The following statement contains a magic number: const int max = 253;
Magic Number,SoundFingerprinting.Tests.Unit.Audio,StrideClassesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\StrideTest.cs,RandomStrideClassTest,The following statement contains a magic number: const int count = 1024;
Magic Number,SoundFingerprinting.Tests.Unit.Audio,StrideClassesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\StrideTest.cs,RandomStrideClassTest,The following statement contains a magic number: Assert.IsTrue(skip <= 8192 + max);
Magic Number,SoundFingerprinting.Tests.Unit.Audio,StrideClassesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\StrideTest.cs,RandomStrideClassTest,The following statement contains a magic number: Assert.IsTrue(skip >= 8192 + min);
Magic Number,SoundFingerprinting.Tests.Unit.Audio,StrideClassesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Audio\StrideTest.cs,RandomStrideClassBadMinMaxTest,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new RandomStride(253' 0' 0));
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBenchmark.cs,ShouldFingerprintAndQuerySuccessfully,The following statement contains a magic number: var samples = new AudioSamples(TestUtilities.GenerateRandomFloatArray(120 * 5512)' "${i}"' 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBenchmark.cs,ShouldFingerprintAndQuerySuccessfully,The following statement contains a magic number: var samples = new AudioSamples(TestUtilities.GenerateRandomFloatArray(120 * 5512)' "${i}"' 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBenchmark.cs,ShouldFingerprintAndQuerySuccessfully,The following statement contains a magic number: var samples = new AudioSamples(TestUtilities.GenerateRandomFloatArray(120 * 5512)' "${i}"' 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBenchmark.cs,ShouldFingerprintAndQuerySuccessfully,The following statement contains a magic number: i < 30
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBenchmark.cs,ShouldFingerprintAndQuerySuccessfully,The following statement contains a magic number: int totalRuns = 10;
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBenchmark.cs,ShouldFingerprintAndQuerySuccessfully,The following statement contains a magic number: var samples = new AudioSamples(TestUtilities.GenerateRandomFloatArray(120 * 5512)' "${i}"' 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBenchmark.cs,ShouldFingerprintAndQuerySuccessfully,The following statement contains a magic number: var samples = new AudioSamples(TestUtilities.GenerateRandomFloatArray(120 * 5512)' "${i}"' 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBenchmark.cs,ShouldFingerprintAndQuerySuccessfully,The following statement contains a magic number: var samples = new AudioSamples(TestUtilities.GenerateRandomFloatArray(120 * 5512)' "${i}"' 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileCorrectly,The following statement contains a magic number: var hashedFingerprints =new Hashes(new List<HashedFingerprint>(                      new[]                          {                              new HashedFingerprint(GenericHashBuckets()' 0' 0' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 1' 0.928f' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 2' 0.928f * 2' Enumerable.Empty<string>())                          })' 0.928 * 3);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileCorrectly,The following statement contains a magic number: var hashedFingerprints =new Hashes(new List<HashedFingerprint>(                      new[]                          {                              new HashedFingerprint(GenericHashBuckets()' 0' 0' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 1' 0.928f' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 2' 0.928f * 2' Enumerable.Empty<string>())                          })' 0.928 * 3);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileCorrectly,The following statement contains a magic number: var hashedFingerprints =new Hashes(new List<HashedFingerprint>(                      new[]                          {                              new HashedFingerprint(GenericHashBuckets()' 0' 0' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 1' 0.928f' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 2' 0.928f * 2' Enumerable.Empty<string>())                          })' 0.928 * 3);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileCorrectly,The following statement contains a magic number: var hashedFingerprints =new Hashes(new List<HashedFingerprint>(                      new[]                          {                              new HashedFingerprint(GenericHashBuckets()' 0' 0' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 1' 0.928f' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 2' 0.928f * 2' Enumerable.Empty<string>())                          })' 0.928 * 3);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileCorrectly,The following statement contains a magic number: var hashedFingerprints =new Hashes(new List<HashedFingerprint>(                      new[]                          {                              new HashedFingerprint(GenericHashBuckets()' 0' 0' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 1' 0.928f' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 2' 0.928f * 2' Enumerable.Empty<string>())                          })' 0.928 * 3);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileCorrectly,The following statement contains a magic number: var hashedFingerprints =new Hashes(new List<HashedFingerprint>(                      new[]                          {                              new HashedFingerprint(GenericHashBuckets()' 0' 0' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 1' 0.928f' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 2' 0.928f * 2' Enumerable.Empty<string>())                          })' 0.928 * 3);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The following statement contains a magic number: const int startAtSecond = 120;
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The following statement contains a magic number: const int secondsToQuery = 20;
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The following statement contains a magic number: var hashDatas = new Hashes(new List<HashedFingerprint>(                      new[]                          {                              new HashedFingerprint(GenericHashBuckets()' 0' 0' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 1' 0.928f' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 2' 0.928f * 2' Enumerable.Empty<string>())                          })' 0.928 * 3);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The following statement contains a magic number: var hashDatas = new Hashes(new List<HashedFingerprint>(                      new[]                          {                              new HashedFingerprint(GenericHashBuckets()' 0' 0' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 1' 0.928f' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 2' 0.928f * 2' Enumerable.Empty<string>())                          })' 0.928 * 3);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The following statement contains a magic number: var hashDatas = new Hashes(new List<HashedFingerprint>(                      new[]                          {                              new HashedFingerprint(GenericHashBuckets()' 0' 0' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 1' 0.928f' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 2' 0.928f * 2' Enumerable.Empty<string>())                          })' 0.928 * 3);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The following statement contains a magic number: var hashDatas = new Hashes(new List<HashedFingerprint>(                      new[]                          {                              new HashedFingerprint(GenericHashBuckets()' 0' 0' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 1' 0.928f' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 2' 0.928f * 2' Enumerable.Empty<string>())                          })' 0.928 * 3);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The following statement contains a magic number: var hashDatas = new Hashes(new List<HashedFingerprint>(                      new[]                          {                              new HashedFingerprint(GenericHashBuckets()' 0' 0' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 1' 0.928f' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 2' 0.928f * 2' Enumerable.Empty<string>())                          })' 0.928 * 3);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The following statement contains a magic number: var hashDatas = new Hashes(new List<HashedFingerprint>(                      new[]                          {                              new HashedFingerprint(GenericHashBuckets()' 0' 0' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 1' 0.928f' Enumerable.Empty<string>())'                              new HashedFingerprint(GenericHashBuckets()' 2' 0.928f * 2' Enumerable.Empty<string>())                          })' 0.928 * 3);
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The following statement contains a magic number: _ = await queryCommandBuilder.BuildQueryCommand()                                     .From(pathToFile' secondsToQuery' startAtSecond)                                     .WithQueryConfig(                                      config =>                                         {                                             config.FingerprintConfiguration.SpectrogramConfig.LogBase = 64;                                             config.ThresholdVotes = 20;                                             return config;                                         })                                     .UsingServices(modelService.Object' audioService.Object)                                     .Query();
Magic Number,SoundFingerprinting.Tests.Unit.Builder,QueryCommandBuilderTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Builder\QueryCommandBuilderTest.cs,QueryIsBuiltFromFileStartingAtAtSpecificSecondCorrectly,The following statement contains a magic number: _ = await queryCommandBuilder.BuildQueryCommand()                                     .From(pathToFile' secondsToQuery' startAtSecond)                                     .WithQueryConfig(                                      config =>                                         {                                             config.FingerprintConfiguration.SpectrogramConfig.LogBase = 64;                                             config.ThresholdVotes = 20;                                             return config;                                         })                                     .UsingServices(modelService.Object' audioService.Object)                                     .Query();
Magic Number,SoundFingerprinting.Tests.Unit.DAO,CompoundModelReferenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\DAO\CompoundModelReferenceTest.cs,ThrowsForNullArgs,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => new CompoundModelReference<string>(null' new ModelReference<int>(42)));
Magic Number,SoundFingerprinting.Tests.Unit.DAO,CompoundModelReferenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\DAO\CompoundModelReferenceTest.cs,SavesProperties,The following statement contains a magic number: Assert.AreEqual(42' prefix421.Reference.Id);
Magic Number,SoundFingerprinting.Tests.Unit.DAO,CompoundModelReferenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\DAO\CompoundModelReferenceTest.cs,SavesProperties,The following statement contains a magic number: Assert.AreEqual(42' prefix421.Id);
Magic Number,SoundFingerprinting.Tests.Unit.DAO,CompoundModelReferenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\DAO\CompoundModelReferenceTest.cs,EqualsIsNullForOtherGenericTypes,The following statement contains a magic number: Assert.IsFalse(prefix421.Equals(new CompoundModelReference<uint>(1' new ModelReference<uint>(42))));
Magic Number,SoundFingerprinting.Tests.Unit.DAO.Data,TrackDataTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\DAO\Data\TrackDataTest.cs,ShouldIdentifyAsEqual,The following statement contains a magic number: var dto0 = new TrackData(string.Empty' string.Empty' string.Empty' string.Empty' 1990' 0d' new ModelReference<int>(0));
Magic Number,SoundFingerprinting.Tests.Unit.DAO.Data,TrackDataTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\DAO\Data\TrackDataTest.cs,ShouldIdentifyAsEqual,The following statement contains a magic number: var dto1 = new TrackData(string.Empty' string.Empty' string.Empty' string.Empty' 1990' 0d' new ModelReference<int>(0));
Magic Number,SoundFingerprinting.Tests.Unit.DAO.Data,TrackDataTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\DAO\Data\TrackDataTest.cs,ShouldNotBeEqualToNull,The following statement contains a magic number: var dto = new TrackData(string.Empty' string.Empty' string.Empty' string.Empty' 1990' 0d' new ModelReference<int>(0));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: float one = 8192f / 5512;
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: float one = 8192f / 5512;
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: var a = new TimedHashes(new List<HashedFingerprint>                  {                      new HashedFingerprint(new[] {1}' 1' one' new string[0])'                      new HashedFingerprint(new[] {1}' 2' 2 * one' new string[0])'                      new HashedFingerprint(new[] {1}' 0' 0' new string[0])'                  }'                  DateTime.Parse("01/15/2019 10:00:00"' dtfi));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: var a = new TimedHashes(new List<HashedFingerprint>                  {                      new HashedFingerprint(new[] {1}' 1' one' new string[0])'                      new HashedFingerprint(new[] {1}' 2' 2 * one' new string[0])'                      new HashedFingerprint(new[] {1}' 0' 0' new string[0])'                  }'                  DateTime.Parse("01/15/2019 10:00:00"' dtfi));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: var b = new TimedHashes(new List<HashedFingerprint>                  {                      new HashedFingerprint(new[] {2}' 1' one' new string[0])'                      new HashedFingerprint(new[] {2}' 2' 2 * one' new string[0])'                      new HashedFingerprint(new[] {2}' 0' 0' new string[0])'                  }'                  DateTime.Parse("01/15/2019 10:00:01"' dtfi));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: var b = new TimedHashes(new List<HashedFingerprint>                  {                      new HashedFingerprint(new[] {2}' 1' one' new string[0])'                      new HashedFingerprint(new[] {2}' 2' 2 * one' new string[0])'                      new HashedFingerprint(new[] {2}' 0' 0' new string[0])'                  }'                  DateTime.Parse("01/15/2019 10:00:01"' dtfi));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: var b = new TimedHashes(new List<HashedFingerprint>                  {                      new HashedFingerprint(new[] {2}' 1' one' new string[0])'                      new HashedFingerprint(new[] {2}' 2' 2 * one' new string[0])'                      new HashedFingerprint(new[] {2}' 0' 0' new string[0])'                  }'                  DateTime.Parse("01/15/2019 10:00:01"' dtfi));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: var b = new TimedHashes(new List<HashedFingerprint>                  {                      new HashedFingerprint(new[] {2}' 1' one' new string[0])'                      new HashedFingerprint(new[] {2}' 2' 2 * one' new string[0])'                      new HashedFingerprint(new[] {2}' 0' 0' new string[0])'                  }'                  DateTime.Parse("01/15/2019 10:00:01"' dtfi));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: var b = new TimedHashes(new List<HashedFingerprint>                  {                      new HashedFingerprint(new[] {2}' 1' one' new string[0])'                      new HashedFingerprint(new[] {2}' 2' 2 * one' new string[0])'                      new HashedFingerprint(new[] {2}' 0' 0' new string[0])'                  }'                  DateTime.Parse("01/15/2019 10:00:01"' dtfi));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: Assert.AreEqual(1f' result.HashedFingerprints[1].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: Assert.AreEqual(one' result.HashedFingerprints[2].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: Assert.AreEqual(one' result.HashedFingerprints[2].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: Assert.AreEqual(1 + one' result.HashedFingerprints[3].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: Assert.AreEqual(1 + one' result.HashedFingerprints[3].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: Assert.AreEqual(2 * one' result.HashedFingerprints[4].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: Assert.AreEqual(2 * one' result.HashedFingerprints[4].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: Assert.AreEqual(2 * one' result.HashedFingerprints[4].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: Assert.AreEqual(1 + 2 * one' result.HashedFingerprints[5].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: Assert.AreEqual(1 + 2 * one' result.HashedFingerprints[5].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMerge,The following statement contains a magic number: Assert.AreEqual(1 + 2 * one' result.HashedFingerprints[5].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeCorrectly,The following statement contains a magic number: float acc = 8192 / 5512f;
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeCorrectly,The following statement contains a magic number: float acc = 8192 / 5512f;
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeCorrectly,The following statement contains a magic number: var c = new TimedHashes(new List<HashedFingerprint>(new[] {new HashedFingerprint(new[] {2}' 0' 0f' new string[0])})' dateTime.AddSeconds(acc));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeCorrectly,The following statement contains a magic number: var d = new TimedHashes(new List<HashedFingerprint>(new[] {new HashedFingerprint(new[] {3}' 0' 0f' new string[0])})' dateTime.AddSeconds(2 * acc));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeCorrectly,The following statement contains a magic number: var d = new TimedHashes(new List<HashedFingerprint>(new[] {new HashedFingerprint(new[] {3}' 0' 0f' new string[0])})' dateTime.AddSeconds(2 * acc));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeCorrectly,The following statement contains a magic number: Assert.AreEqual(3' z.HashedFingerprints.Count);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeCorrectly,The following statement contains a magic number: Assert.AreEqual(3 * acc' z.TotalSeconds' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeCorrectly,The following statement contains a magic number: Assert.AreEqual(3 * acc' z.TotalSeconds' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeLongSequences,The following statement contains a magic number: float one = 8192f / 5512;
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeLongSequences,The following statement contains a magic number: float one = 8192f / 5512;
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeLongSequences,The following statement contains a magic number: second.Add(new HashedFingerprint(new[] {2}' (uint) i' i * one' new[] {"Canada"}));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeLongSequences,The following statement contains a magic number: i < 100
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeLongSequences,The following statement contains a magic number: Assert.AreEqual(one * (i / 2)' c.HashedFingerprints[i].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeLongSequences,The following statement contains a magic number: Assert.AreEqual(one * (i / 2)' c.HashedFingerprints[i].StartsAt' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeLongSequences,The following statement contains a magic number: i % 2 == 0
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,ShouldMergeLongSequences,The following statement contains a magic number: i < 200
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,CantMergeSinceTheGapIsTooBig,The following statement contains a magic number: var b = new TimedHashes(new List<HashedFingerprint>                  {                      new HashedFingerprint(new[] {2}' 0' 0' new string[0])'                  }'                  DateTime.Parse("01/15/2019 10:01:00"' dtfi));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,GetHashedFingerprints,The following statement contains a magic number: int[] hashes = new int[25];
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,GetHashedFingerprints,The following statement contains a magic number: j < 25
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,GetHashedFingerprints,The following statement contains a magic number: list.Add(new HashedFingerprint(hashes' (uint) (i + 1)' i * 1.48f' Enumerable.Empty<string>()));
Magic Number,SoundFingerprinting.Tests.Unit.Data,TimedHashesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Data\TimedHashesTest.cs,GetHashedFingerprints,The following statement contains a magic number: i < 100
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,FrequencyToIndexTest,The following statement contains a magic number: int result = logUtility.FrequencyToSpectrumIndex(318' 5512' 2048);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,FrequencyToIndexTest,The following statement contains a magic number: int result = logUtility.FrequencyToSpectrumIndex(318' 5512' 2048);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,FrequencyToIndexTest,The following statement contains a magic number: int result = logUtility.FrequencyToSpectrumIndex(318' 5512' 2048);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,FrequencyToIndexTest,The following statement contains a magic number: Assert.AreEqual((318 * 1024) / (5512 / 2)' result);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,FrequencyToIndexTest,The following statement contains a magic number: Assert.AreEqual((318 * 1024) / (5512 / 2)' result);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,FrequencyToIndexTest,The following statement contains a magic number: Assert.AreEqual((318 * 1024) / (5512 / 2)' result);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,FrequencyToIndexTest,The following statement contains a magic number: Assert.AreEqual((318 * 1024) / (5512 / 2)' result);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: var defaultConfig = new DefaultSpectrogramConfig { UseDynamicLogBase = false' LogBase = 10 };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LogUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LogUtilityTest.cs,GenerateLogFrequenciesRangesTest,The following statement contains a magic number: float[] logSpacedFrequencies = {                      318.00f' 336.81f' 356.73f' 377.83f' 400.18f' 423.85f' 448.92f' 475.47f' 503.59f' 533.38f' 564.92f'                      598.34f' 633.73f' 671.21f' 710.91f' 752.96f' 797.50f' 844.67f' 894.63f' 947.54f' 1003.58f' 1062.94f'                      1125.81f' 1192.40f' 1262.93f' 1337.63f' 1416.75f' 1500.54f' 1589.30f' 1683.30f' 1782.86f' 1888.31f'                      2000f                  };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest,The following statement contains a magic number: var sineWave = new[] { 0' 0.707f' 1' 0.707f' 0' -0.707f' -1' -0.707f };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest,The following statement contains a magic number: var sineWave = new[] { 0' 0.707f' 1' 0.707f' 0' -0.707f' -1' -0.707f };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest,The following statement contains a magic number: var sineWave = new[] { 0' 0.707f' 1' 0.707f' 0' -0.707f' -1' -0.707f };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest,The following statement contains a magic number: var sineWave = new[] { 0' 0.707f' 1' 0.707f' 0' -0.707f' -1' -0.707f };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0' 0.707f' 1' 0.707f' 0' -0.707f' -1' -0.707f }' sineWave' floatComparer);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0' 0.707f' 1' 0.707f' 0' -0.707f' -1' -0.707f }' sineWave' floatComparer);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0' 0.707f' 1' 0.707f' 0' -0.707f' -1' -0.707f }' sineWave' floatComparer);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0' 0.707f' 1' 0.707f' 0' -0.707f' -1' -0.707f }' sineWave' floatComparer);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest2,The following statement contains a magic number: var sineWave = new[] { 0' 0.707f' 1' 0.707f' 0' -0.707f' -1' -0.707f };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest2,The following statement contains a magic number: var sineWave = new[] { 0' 0.707f' 1' 0.707f' 0' -0.707f' -1' -0.707f };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest2,The following statement contains a magic number: var sineWave = new[] { 0' 0.707f' 1' 0.707f' 0' -0.707f' -1' -0.707f };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest2,The following statement contains a magic number: var sineWave = new[] { 0' 0.707f' 1' 0.707f' 0' -0.707f' -1' -0.707f };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,LomontFFTTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\LomontFFTTest.cs,SineWaveTest2,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0' 0' 0' 4f' 0' 0' 0' 0 }' sineWave' floatComparer);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumFromAudioSamples,The following statement contains a magic number: int Fs = 5512;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumFromAudioSamples,The following statement contains a magic number: int seconds = 10;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumFromAudioSamples,The following statement contains a magic number: float f1 = 410;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumFromAudioSamples,The following statement contains a magic number: float f2 = 1400;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumFromAudioSamples,The following statement contains a magic number: samples[t] = (float)System.Math.Sin(2 * System.Math.PI * f1 / Fs * t)                               + (float)System.Math.Sin(2 * System.Math.PI * f2 / Fs * t);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumFromAudioSamples,The following statement contains a magic number: samples[t] = (float)System.Math.Sin(2 * System.Math.PI * f1 / Fs * t)                               + (float)System.Math.Sin(2 * System.Math.PI * f2 / Fs * t);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumFromAudioSamples,The following statement contains a magic number: var audio = new AudioSamples(samples' "410Hz"' 5512);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumFromAudioSamples,The following statement contains a magic number: var config = new DefaultSpectrogramConfig                                             {                                                 Stride = new IncrementalStaticStride(5512)                                             };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumFromAudioSamples,The following statement contains a magic number: int tf1 = 4;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumFromAudioSamples,The following statement contains a magic number: int tf2 = 25;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumFromAudioSamples,The following statement contains a magic number: Assert.AreEqual(col == tf1 ? 1 : 0.78' spectrum[index]' 0.01);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumFromAudioSamples,The following statement contains a magic number: Assert.AreEqual(col == tf1 ? 1 : 0.78' spectrum[index]' 0.01);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumWithBiggerOverlap,The following statement contains a magic number: int Fs = 5512;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumWithBiggerOverlap,The following statement contains a magic number: int seconds = 10;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumWithBiggerOverlap,The following statement contains a magic number: float value = (float)(1.3 * System.Math.Sin(2 * System.Math.PI * 15 * i / Fs));
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumWithBiggerOverlap,The following statement contains a magic number: float value = (float)(1.3 * System.Math.Sin(2 * System.Math.PI * 15 * i / Fs));
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumWithBiggerOverlap,The following statement contains a magic number: float value = (float)(1.3 * System.Math.Sin(2 * System.Math.PI * 15 * i / Fs));
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumWithBiggerOverlap,The following statement contains a magic number: var config = new DefaultSpectrogramConfig              {                  Stride = new IncrementalStaticStride(Fs)'                  Overlap = 32'                  ImageLength = 128              };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumWithBiggerOverlap,The following statement contains a magic number: var config = new DefaultSpectrogramConfig              {                  Stride = new IncrementalStaticStride(Fs)'                  Overlap = 32'                  ImageLength = 128              };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceOctaveTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceOctaveTest.cs,ShouldGenerateLogSpectrumWithBiggerOverlap,The following statement contains a magic number: Assert.AreEqual((10 * Fs - config.WdftSize) / Fs' spectralImages.Count);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CreateLogSpectrogramTest,The following statement contains a magic number: var configuration = new DefaultSpectrogramConfig { ImageLength = 2048 };
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CreateLogSpectrumFromTwoEntries,The following statement contains a magic number: int stride = 256;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CreateLogSpectrumFromTwoEntries,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,ShouldCreateCorrectNumberOfSubFingerprints,The following statement contains a magic number: const int tenMinutes = 10 * 60;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,ShouldCreateCorrectNumberOfSubFingerprints,The following statement contains a magic number: const int tenMinutes = 10 * 60;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CutLogarithmizedSpectrumTest,The following statement contains a magic number: const int logSpectrumLength = 1024;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CutLogarithmizedSpectrumTest,The following statement contains a magic number: Assert.AreEqual(8' cutLogarithmizedSpectrum.Count);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CutLogarithmizedSpectrumWithAnIncrementalStaticStride,The following statement contains a magic number: var stride = new IncrementalStaticStride(new DefaultFingerprintConfiguration().SamplesPerFingerprint / 2);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CutLogarithmizedSpectrumWithAnIncrementalStaticStride,The following statement contains a magic number: int logSpectrumLength = (config.ImageLength * 24) + config.Overlap;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CutLogarithmizedSpectrumWithAnIncrementalStaticStride,The following statement contains a magic number: Assert.AreEqual(48' cutLogarithmizedSpectrum.Count);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CutLogarithmizedSpectrumWithAnIncrementalStaticStride,The following statement contains a magic number: Assert.IsTrue(System.Math.Abs(cutLogarithmizedSpectrum[i].StartsAt - (i * lengthOfOneFingerprint / 2)) < Epsilon);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CutLogarithmizedSpectrumWithDefaultStride,The following statement contains a magic number: int logSpectrumlength = config.ImageLength * 10;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CutLogarithmizedSpectrumWithDefaultStride,The following statement contains a magic number: const double timestampOfFingerprints = (double)512 / SampleRate;
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,CutLogarithmizedSpectrumWithDefaultStride,The following statement contains a magic number: Assert.AreEqual(145' cutLogarithmizedSpectrum.Count);
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,SetupFftService,The following statement contains a magic number: logUtility.Setup(utility => utility.GenerateLogFrequenciesRanges(SampleRate' configuration))                  .Returns(new ushort[]                          {                              118' 125' 133' 141' 149' 158' 167' 177' 187' 198' 210' 223' 236' 250' 264' 280' 297' 314'                              333' 352' 373' 395' 419' 443' 470' 497' 527' 558' 591' 626' 663' 702' 744'                          });
Magic Number,SoundFingerprinting.Tests.Unit.FFT,SpectrumServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FFT\SpectrumServiceTest.cs,GetLogSpectrum,The following statement contains a magic number: return new float[logSpectrumLength * 32];
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,CreateFingerprints,The following statement contains a magic number: const int tenSeconds = 5512 * 10;
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,CreateFingerprints,The following statement contains a magic number: const int tenSeconds = 5512 * 10;
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,CreateFingerprints,The following statement contains a magic number: waveletDecomposition.Setup(service => service.DecomposeImageInPlace(It.IsAny<float[]>()' 128' 32' fingerprintConfig.HaarWaveletNorm));
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,CreateFingerprints,The following statement contains a magic number: waveletDecomposition.Setup(service => service.DecomposeImageInPlace(It.IsAny<float[]>()' 128' 32' fingerprintConfig.HaarWaveletNorm));
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,CreateFingerprints,The following statement contains a magic number: fingerprintDescriptor.Setup(descriptor => descriptor.ExtractTopWavelets(It.IsAny<float[]>()' fingerprintConfig.TopWavelets' It.IsAny<ushort[]>())).Returns(new TinyFingerprintSchema(8192).SetTrueAt(0' 1));
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,SilenceIsNotFingerprinted,The following statement contains a magic number: var samples = TestUtilities.GenerateRandomAudioSamples(5512 * 10);
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,SilenceIsNotFingerprinted,The following statement contains a magic number: var samples = TestUtilities.GenerateRandomAudioSamples(5512 * 10);
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,SilenceIsNotFingerprinted,The following statement contains a magic number: waveletDecomposition.Setup(decomposition => decomposition.DecomposeImageInPlace(It.IsAny<float[]>()' 128' 32' configuration.HaarWaveletNorm));
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,SilenceIsNotFingerprinted,The following statement contains a magic number: waveletDecomposition.Setup(decomposition => decomposition.DecomposeImageInPlace(It.IsAny<float[]>()' 128' 32' configuration.HaarWaveletNorm));
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,SilenceIsNotFingerprinted,The following statement contains a magic number: fingerprintDescriptor.Setup(descriptor => descriptor.ExtractTopWavelets(It.IsAny<float[]>()' configuration.TopWavelets' It.IsAny<ushort[]>())).Returns(                      new TinyFingerprintSchema(1024));
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,ShouldReturnNonNullEntriesForSilence,The following statement contains a magic number: var silence = new float[8192 + 2048];
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,ShouldReturnNonNullEntriesForSilence,The following statement contains a magic number: var silence = new float[8192 + 2048];
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,ShouldReturnNonNullEntriesForSilence,The following statement contains a magic number: var result = FingerprintService.Instance.CreateFingerprintsFromAudioSamples(new AudioSamples(silence' string.Empty' 5512)' new DefaultFingerprintConfiguration()).ToList();
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,ShouldCreateOneFingerprint,The following statement contains a magic number: var floats = TestUtilities.GenerateRandomFloatArray(8192 + 2048 - 64);
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,ShouldCreateOneFingerprint,The following statement contains a magic number: var floats = TestUtilities.GenerateRandomFloatArray(8192 + 2048 - 64);
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,ShouldCreateOneFingerprint,The following statement contains a magic number: var floats = TestUtilities.GenerateRandomFloatArray(8192 + 2048 - 64);
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,ShouldCreateOneFingerprint,The following statement contains a magic number: var fingerprints = FingerprintService.Instance.CreateFingerprintsFromAudioSamples(new AudioSamples(floats' string.Empty' 5512)' new DefaultFingerprintConfiguration()).ToList();
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,GetDividedLogSpectrum,The following statement contains a magic number: dividedLogSpectrum.Add(new Frame(TestUtilities.GenerateRandomFloatArray(4096)' 128' 32' 0.928f * index' index));
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,GetDividedLogSpectrum,The following statement contains a magic number: dividedLogSpectrum.Add(new Frame(TestUtilities.GenerateRandomFloatArray(4096)' 128' 32' 0.928f * index' index));
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,GetDividedLogSpectrum,The following statement contains a magic number: dividedLogSpectrum.Add(new Frame(TestUtilities.GenerateRandomFloatArray(4096)' 128' 32' 0.928f * index' index));
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,GetDividedLogSpectrum,The following statement contains a magic number: dividedLogSpectrum.Add(new Frame(TestUtilities.GenerateRandomFloatArray(4096)' 128' 32' 0.928f * index' index));
Magic Number,SoundFingerprinting.Tests.Unit,FingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\FingerprintServiceTest.cs,GetDividedLogSpectrum,The following statement contains a magic number: index < 4
Magic Number,SoundFingerprinting.Tests.Unit,ModelServiceInfoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\ModelServiceInfoTest.cs,ShouldHaveAHumanReadableStringRepresentation,The following statement contains a magic number: var info = new ModelServiceInfo("model-service"' 1' 2' new[] { 3' 4' 5 });
Magic Number,SoundFingerprinting.Tests.Unit,ModelServiceInfoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\ModelServiceInfoTest.cs,ShouldHaveAHumanReadableStringRepresentation,The following statement contains a magic number: var info = new ModelServiceInfo("model-service"' 1' 2' new[] { 3' 4' 5 });
Magic Number,SoundFingerprinting.Tests.Unit,ModelServiceInfoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\ModelServiceInfoTest.cs,ShouldHaveAHumanReadableStringRepresentation,The following statement contains a magic number: var info = new ModelServiceInfo("model-service"' 1' 2' new[] { 3' 4' 5 });
Magic Number,SoundFingerprinting.Tests.Unit,ModelServiceInfoTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\ModelServiceInfoTest.cs,ShouldHaveAHumanReadableStringRepresentation,The following statement contains a magic number: var info = new ModelServiceInfo("model-service"' 1' 2' new[] { 3' 4' 5 });
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: const int DefaultThreshold = 5;
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: const int FirstTrackId = 20;
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: const int SecondTrackId = 21;
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: const int ThirdTrackId = 22;
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: const int FirstSubFingerprintId = 10;
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: const int SecondSubFingerprintId = 11;
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: var secondResult = new SubFingerprintData(GenericHashBuckets()' 2' 0.928f' Enumerable.Empty<string>()'                  new ModelReference<int>(SecondSubFingerprintId)'                  secondTrackReference);
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: var secondResult = new SubFingerprintData(GenericHashBuckets()' 2' 0.928f' Enumerable.Empty<string>()'                  new ModelReference<int>(SecondSubFingerprintId)'                  secondTrackReference);
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: var thirdResult = new SubFingerprintData(GenericHashBuckets()' 3' 0.928f * 2' Enumerable.Empty<string>()'                  new ModelReference<int>(SecondSubFingerprintId)'                  new ModelReference<int>(ThirdTrackId));
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: var thirdResult = new SubFingerprintData(GenericHashBuckets()' 3' 0.928f * 2' Enumerable.Empty<string>()'                  new ModelReference<int>(SecondSubFingerprintId)'                  new ModelReference<int>(ThirdTrackId));
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: var thirdResult = new SubFingerprintData(GenericHashBuckets()' 3' 0.928f * 2' Enumerable.Empty<string>()'                  new ModelReference<int>(SecondSubFingerprintId)'                  new ModelReference<int>(ThirdTrackId));
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: var customQueryConfiguration = new DefaultQueryConfiguration { MaxTracksToReturn = 2' ThresholdVotes = DefaultThreshold };
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: Assert.AreEqual(100' queryResult.BestMatch.Score);
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,MaximumNumberOfReturnedTracksIsLessThanAnalyzedCandidatesResultsTest,The following statement contains a magic number: Assert.AreEqual(2' queryResult.ResultEntries.Count());
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,NoResultsReturnedFromUnderlyingStorageTest,The following statement contains a magic number: var queryHash = new HashedFingerprint(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }' 0' 0' Enumerable.Empty<string>());
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,NoResultsReturnedFromUnderlyingStorageTest,The following statement contains a magic number: var queryHash = new HashedFingerprint(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }' 0' 0' Enumerable.Empty<string>());
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,NoResultsReturnedFromUnderlyingStorageTest,The following statement contains a magic number: var queryHash = new HashedFingerprint(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }' 0' 0' Enumerable.Empty<string>());
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,NoResultsReturnedFromUnderlyingStorageTest,The following statement contains a magic number: var queryHash = new HashedFingerprint(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }' 0' 0' Enumerable.Empty<string>());
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,NoResultsReturnedFromUnderlyingStorageTest,The following statement contains a magic number: var queryHash = new HashedFingerprint(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }' 0' 0' Enumerable.Empty<string>());
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,NoResultsReturnedFromUnderlyingStorageTest,The following statement contains a magic number: var queryHash = new HashedFingerprint(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }' 0' 0' Enumerable.Empty<string>());
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,NoResultsReturnedFromUnderlyingStorageTest,The following statement contains a magic number: var queryHash = new HashedFingerprint(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }' 0' 0' Enumerable.Empty<string>());
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,NoResultsReturnedFromUnderlyingStorageTest,The following statement contains a magic number: var queryHash = new HashedFingerprint(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }' 0' 0' Enumerable.Empty<string>());
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,NoResultsReturnedFromUnderlyingStorageTest,The following statement contains a magic number: var queryHash = new HashedFingerprint(new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 }' 0' 0' Enumerable.Empty<string>());
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,NoResultsReturnedFromUnderlyingStorageTest,The following statement contains a magic number: var customQueryConfiguration = new DefaultQueryConfiguration { MaxTracksToReturn = 1' ThresholdVotes = 10' FingerprintConfiguration = new DefaultFingerprintConfiguration() };
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,HammingSimilarityIsSummedUpAccrossAllSubFingerprintsTest,The following statement contains a magic number: const int FirstTrackId = 20;
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,HammingSimilarityIsSummedUpAccrossAllSubFingerprintsTest,The following statement contains a magic number: const int FirstSubFingerprintId = 10;
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,HammingSimilarityIsSummedUpAccrossAllSubFingerprintsTest,The following statement contains a magic number: const int SecondSubFingerprintId = 11;
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,HammingSimilarityIsSummedUpAccrossAllSubFingerprintsTest,The following statement contains a magic number: var secondResult = new SubFingerprintData(GenericHashBuckets()' 2' 0.928f' Enumerable.Empty<string>()' new ModelReference<int>(SecondSubFingerprintId)' firstTrackReference);
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,HammingSimilarityIsSummedUpAccrossAllSubFingerprintsTest,The following statement contains a magic number: var secondResult = new SubFingerprintData(GenericHashBuckets()' 2' 0.928f' Enumerable.Empty<string>()' new ModelReference<int>(SecondSubFingerprintId)' firstTrackReference);
Magic Number,SoundFingerprinting.Tests.Unit,QueryFingerprintServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\QueryFingerprintServiceTest.cs,HammingSimilarityIsSummedUpAccrossAllSubFingerprintsTest,The following statement contains a magic number: Assert.AreEqual(200' queryResult.BestMatch.Score);
Magic Number,SoundFingerprinting.Tests.Unit.Image,ImageServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Image\ImageServiceTest.cs,ShouldEncodedAndDecodeCorrectly,The following statement contains a magic number: float[] array = TestUtilities.GenerateRandomFloatArray(128 * 72);
Magic Number,SoundFingerprinting.Tests.Unit.Image,ImageServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Image\ImageServiceTest.cs,ShouldEncodedAndDecodeCorrectly,The following statement contains a magic number: float[] array = TestUtilities.GenerateRandomFloatArray(128 * 72);
Magic Number,SoundFingerprinting.Tests.Unit.Image,ImageServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Image\ImageServiceTest.cs,ShouldEncodedAndDecodeCorrectly,The following statement contains a magic number: float[][] image = imageService.RowCols2Image(array' 72' 128);
Magic Number,SoundFingerprinting.Tests.Unit.Image,ImageServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Image\ImageServiceTest.cs,ShouldEncodedAndDecodeCorrectly,The following statement contains a magic number: float[][] image = imageService.RowCols2Image(array' 72' 128);
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerializeModelReference,The following statement contains a magic number: var @ref = new ModelReference<int>(42);
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerialize,The following statement contains a magic number: var sub = new SubFingerprintData(new[] { 1' 2' 3 }' 1' 1f' new[] { "1"' "2" }' new ModelReference<int>(1)' new ModelReference<int>(2));
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerialize,The following statement contains a magic number: var sub = new SubFingerprintData(new[] { 1' 2' 3 }' 1' 1f' new[] { "1"' "2" }' new ModelReference<int>(1)' new ModelReference<int>(2));
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerialize,The following statement contains a magic number: var sub = new SubFingerprintData(new[] { 1' 2' 3 }' 1' 1f' new[] { "1"' "2" }' new ModelReference<int>(1)' new ModelReference<int>(2));
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerializeModelReferenceProviders,The following statement contains a magic number: var provider = new UIntModelReferenceProvider(10);
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerializeModelReferenceProviders,The following statement contains a magic number: Assert.AreEqual(11' (uint)deserialized.Next().Id);
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerializeHashes,The following statement contains a magic number: var hashes = new Hashes(new [] { new HashedFingerprint(new [] {1'2'3'4'5}' 0' 0' Enumerable.Empty<string>())} ' 1.48);
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerializeHashes,The following statement contains a magic number: var hashes = new Hashes(new [] { new HashedFingerprint(new [] {1'2'3'4'5}' 0' 0' Enumerable.Empty<string>())} ' 1.48);
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerializeHashes,The following statement contains a magic number: var hashes = new Hashes(new [] { new HashedFingerprint(new [] {1'2'3'4'5}' 0' 0' Enumerable.Empty<string>())} ' 1.48);
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerializeHashes,The following statement contains a magic number: var hashes = new Hashes(new [] { new HashedFingerprint(new [] {1'2'3'4'5}' 0' 0' Enumerable.Empty<string>())} ' 1.48);
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,ProtoSerializerTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\ProtoSerializerTest.cs,ShouldSerializeHashes,The following statement contains a magic number: var hashes = new Hashes(new [] { new HashedFingerprint(new [] {1'2'3'4'5}' 0' 0' Enumerable.Empty<string>())} ' 1.48);
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,RAMStorageTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\RAMStorageTest.cs,ShouldInsertEntriesInThreadSafeManner,The following statement contains a magic number: var storage = new RAMStorage(50);
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,RAMStorageTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\RAMStorageTest.cs,ShouldInsertEntriesInThreadSafeManner,The following statement contains a magic number: var hashes = Enumerable.Range(0' 100).Select(b => (byte)b).ToArray();
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,RAMStorageTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\RAMStorageTest.cs,ShouldInsertEntriesInThreadSafeManner,The following statement contains a magic number: var longs = hashConverter.ToInts(hashes' 25);
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,RAMStorageTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\RAMStorageTest.cs,ShouldInsertEntriesInThreadSafeManner,The following statement contains a magic number: int tracksCount = 520;
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,RAMStorageTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\RAMStorageTest.cs,ShouldInsertEntriesInThreadSafeManner,The following statement contains a magic number: int subFingerprintsPerTrack = 33;
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,RAMStorageTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\RAMStorageTest.cs,ShouldInsertEntriesInThreadSafeManner,The following statement contains a magic number: float one = 8192f / 5512;
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,RAMStorageTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\RAMStorageTest.cs,ShouldInsertEntriesInThreadSafeManner,The following statement contains a magic number: float one = 8192f / 5512;
Magic Number,SoundFingerprinting.Tests.Unit.InMemory,RAMStorageTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\InMemory\RAMStorageTest.cs,ShouldInsertEntriesInThreadSafeManner,The following statement contains a magic number: i < 25
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyLongestMatch,The following statement contains a magic number: const double queryLength = 9d;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyLongestMatch,The following statement contains a magic number: const double trackLength = 9d;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyLongestMatch,The following statement contains a magic number: const float trackMatchEndsAt = 10;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 5f' 9' 11' 14 }' new[] { trackMatchStartsAt' 5' 9' trackMatchEndsAt });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 5f' 9' 11' 14 }' new[] { trackMatchStartsAt' 5' 9' trackMatchEndsAt });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 5f' 9' 11' 14 }' new[] { trackMatchStartsAt' 5' 9' trackMatchEndsAt });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 5f' 9' 11' 14 }' new[] { trackMatchStartsAt' 5' 9' trackMatchEndsAt });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 5f' 9' 11' 14 }' new[] { trackMatchStartsAt' 5' 9' trackMatchEndsAt });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 5f' 9' 11' 14 }' new[] { trackMatchStartsAt' 5' 9' trackMatchEndsAt });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldSelectBestLongestMatch,The following statement contains a magic number: const double queryLength = 5d;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldSelectBestLongestMatch,The following statement contains a magic number: const double trackLength = 5d;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldSelectBestLongestMatch,The following statement contains a magic number: const float trackMatchStartsAt = 9f;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldSelectBestLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 2' 3' 4' 5 }' new[] { 1' 2' trackMatchStartsAt' 11' 12 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldSelectBestLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 2' 3' 4' 5 }' new[] { 1' 2' trackMatchStartsAt' 11' 12 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldSelectBestLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 2' 3' 4' 5 }' new[] { 1' 2' trackMatchStartsAt' 11' 12 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldSelectBestLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 2' 3' 4' 5 }' new[] { 1' 2' trackMatchStartsAt' 11' 12 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldSelectBestLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 2' 3' 4' 5 }' new[] { 1' 2' trackMatchStartsAt' 11' 12 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldSelectBestLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 2' 3' 4' 5 }' new[] { 1' 2' trackMatchStartsAt' 11' 12 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldSelectBestLongestMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 2' 3' 4' 5 }' new[] { 1' 2' trackMatchStartsAt' 11' 12 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldSelectBestLongestMatch,The following statement contains a magic number: Assert.AreEqual(4.486' coverage.DiscreteCoverageLength' Delta);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldSelectBestLongestMatch,The following statement contains a magic number: Assert.AreEqual(-6' coverage.TrackStartsAt);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldDisregardJingleSinceTheGapIsTooBig,The following statement contains a magic number: const double queryLength = 5d;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldDisregardJingleSinceTheGapIsTooBig,The following statement contains a magic number: const double trackLength = 5d;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldDisregardJingleSinceTheGapIsTooBig,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 4' 5' 1' 2 }' new[] { 1f' 3' 4' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldDisregardJingleSinceTheGapIsTooBig,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 4' 5' 1' 2 }' new[] { 1f' 3' 4' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldDisregardJingleSinceTheGapIsTooBig,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 4' 5' 1' 2 }' new[] { 1f' 3' 4' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldDisregardJingleSinceTheGapIsTooBig,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 4' 5' 1' 2 }' new[] { 1f' 3' 4' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldDisregardJingleSinceTheGapIsTooBig,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 4' 5' 1' 2 }' new[] { 1f' 3' 4' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldDisregardJingleSinceTheGapIsTooBig,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 4' 5' 1' 2 }' new[] { 1f' 3' 4' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldDisregardJingleSinceTheGapIsTooBig,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 1f' 4' 5' 1' 2 }' new[] { 1f' 3' 4' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldDisregardJingleSinceTheGapIsTooBig,The following statement contains a magic number: Assert.AreEqual(4.486' coverage.DiscreteCoverageLength' Delta);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldCalculateCoverageCorrectlyForImageSearch,The following statement contains a magic number: int fps = 30;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldCalculateCoverageCorrectlyForImageSearch,The following statement contains a magic number: int seconds = 10;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldCalculateCoverageCorrectlyForImageSearch,The following statement contains a magic number: float shift = 11.5f;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldCalculateCoverageCorrectlyForImageSearch,The following statement contains a magic number: Assert.AreEqual(seconds' coverage.DiscreteCoverageLength' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldCalculateCoverageCorrectlyForImageSearch,The following statement contains a magic number: Assert.AreEqual(seconds' coverage.CoverageLength' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,BestPathShouldIdentifyBestShiftingMatchesByScore,The following statement contains a magic number: var count = 100;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,BestPathShouldIdentifyBestShiftingMatchesByScore,The following statement contains a magic number: var match = new MatchedWith((uint)querySequence' querySequence * 1.48f' (uint)trackSequence' trackSequence * 1.48f' trackSequence);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,BestPathShouldIdentifyBestShiftingMatchesByScore,The following statement contains a magic number: var match = new MatchedWith((uint)querySequence' querySequence * 1.48f' (uint)trackSequence' trackSequence * 1.48f' trackSequence);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,BestPathShouldIdentifyBestShiftingMatchesByScore,The following statement contains a magic number: var coverage = all.EstimateCoverage(count * 1.48' count * 1.48' 1.48' 1.48);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,BestPathShouldIdentifyBestShiftingMatchesByScore,The following statement contains a magic number: var coverage = all.EstimateCoverage(count * 1.48' count * 1.48' 1.48' 1.48);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,BestPathShouldIdentifyBestShiftingMatchesByScore,The following statement contains a magic number: var coverage = all.EstimateCoverage(count * 1.48' count * 1.48' 1.48' 1.48);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,BestPathShouldIdentifyBestShiftingMatchesByScore,The following statement contains a magic number: var coverage = all.EstimateCoverage(count * 1.48' count * 1.48' 1.48' 1.48);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindTrackDiscontinuities,The following statement contains a magic number: var count = 3;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindTrackDiscontinuities,The following statement contains a magic number: var matches = Enumerable.Range(0' count)                  .Select(i => (uint)i)                  .Select(seqNum => new MatchedWith(                      querySequenceNumber: seqNum'                      queryMatchAt: seqNum * fingerprintLengthInSeconds'                      trackSequenceNumber: 2 * seqNum'                      trackMatchAt: 2 * seqNum * fingerprintLengthInSeconds'                      score: 100));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindTrackDiscontinuities,The following statement contains a magic number: var matches = Enumerable.Range(0' count)                  .Select(i => (uint)i)                  .Select(seqNum => new MatchedWith(                      querySequenceNumber: seqNum'                      queryMatchAt: seqNum * fingerprintLengthInSeconds'                      trackSequenceNumber: 2 * seqNum'                      trackMatchAt: 2 * seqNum * fingerprintLengthInSeconds'                      score: 100));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindTrackDiscontinuities,The following statement contains a magic number: var matches = Enumerable.Range(0' count)                  .Select(i => (uint)i)                  .Select(seqNum => new MatchedWith(                      querySequenceNumber: seqNum'                      queryMatchAt: seqNum * fingerprintLengthInSeconds'                      trackSequenceNumber: 2 * seqNum'                      trackMatchAt: 2 * seqNum * fingerprintLengthInSeconds'                      score: 100));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindTrackDiscontinuities,The following statement contains a magic number: Assert.AreEqual(3 * fingerprintLengthInSeconds' coverage.CoverageLength' Delta);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindTrackDiscontinuities,The following statement contains a magic number: Assert.AreEqual(5 * fingerprintLengthInSeconds' coverage.DiscreteCoverageLength' Delta);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindTrackDiscontinuities,The following statement contains a magic number: Assert.AreEqual(2' coverage.TrackGaps.Count());
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindTrackDiscontinuities,The following statement contains a magic number: Assert.AreEqual(2 * fingerprintLengthInSeconds' coverage.TrackGaps.First().End' Delta);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindTrackDiscontinuities,The following statement contains a magic number: Assert.AreEqual(3 * fingerprintLengthInSeconds' coverage.TrackGaps.Last().Start' Delta);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindTrackDiscontinuities,The following statement contains a magic number: Assert.AreEqual(4 * fingerprintLengthInSeconds' coverage.TrackGaps.Last().End' Delta);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindQueryDiscontinuities,The following statement contains a magic number: var count = 3;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindQueryDiscontinuities,The following statement contains a magic number: var matches = Enumerable.Range(0' count)                  .Select(i => (uint)i)                  .Select(seqNum => new MatchedWith(                      querySequenceNumber: 2 * seqNum'                      queryMatchAt: 2 * seqNum * fingerprintLengthInSeconds'                      trackSequenceNumber: seqNum'                      trackMatchAt: seqNum * fingerprintLengthInSeconds'                      score: 100));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindQueryDiscontinuities,The following statement contains a magic number: var matches = Enumerable.Range(0' count)                  .Select(i => (uint)i)                  .Select(seqNum => new MatchedWith(                      querySequenceNumber: 2 * seqNum'                      queryMatchAt: 2 * seqNum * fingerprintLengthInSeconds'                      trackSequenceNumber: seqNum'                      trackMatchAt: seqNum * fingerprintLengthInSeconds'                      score: 100));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindQueryDiscontinuities,The following statement contains a magic number: var matches = Enumerable.Range(0' count)                  .Select(i => (uint)i)                  .Select(seqNum => new MatchedWith(                      querySequenceNumber: 2 * seqNum'                      queryMatchAt: 2 * seqNum * fingerprintLengthInSeconds'                      trackSequenceNumber: seqNum'                      trackMatchAt: seqNum * fingerprintLengthInSeconds'                      score: 100));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindQueryDiscontinuities,The following statement contains a magic number: Assert.AreEqual(3 * fingerprintLengthInSeconds' coverage.CoverageLength' Delta);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindQueryDiscontinuities,The following statement contains a magic number: Assert.AreEqual(3 * fingerprintLengthInSeconds' coverage.DiscreteCoverageLength' Delta);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindQueryDiscontinuities,The following statement contains a magic number: Assert.AreEqual(2' coverage.QueryGaps.Count());
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindQueryDiscontinuities,The following statement contains a magic number: Assert.AreEqual(2 * fingerprintLengthInSeconds' coverage.QueryGaps.First().End' Delta);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindQueryDiscontinuities,The following statement contains a magic number: Assert.AreEqual(3 * fingerprintLengthInSeconds' coverage.QueryGaps.Last().Start' Delta);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldFindQueryDiscontinuities,The following statement contains a magic number: Assert.AreEqual(4 * fingerprintLengthInSeconds' coverage.QueryGaps.Last().End' Delta);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,FindGapsFloatingPointEdgeCase,The following statement contains a magic number: const double fingerprintLength = 8192 / 5512d;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,FindGapsFloatingPointEdgeCase,The following statement contains a magic number: const double fingerprintLength = 8192 / 5512d;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,FindGapsFloatingPointEdgeCase,The following statement contains a magic number: uint startsAtSeqNum = 20;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,FindGapsFloatingPointEdgeCase,The following statement contains a magic number: float startsAt = 3.71552968025207519531250000000f;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,FindGapsFloatingPointEdgeCase,The following statement contains a magic number: uint endsAtSeqNum = 28;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,FindGapsFloatingPointEdgeCase,The following statement contains a magic number: float endsAt = 5.20174169540405273437500000000f;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyGapAtTheEnd,The following statement contains a magic number: int count = 10;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyGapAtTheEnd,The following statement contains a magic number: double fingerprintLength = 0.5;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyGapAtTheEnd,The following statement contains a magic number: double prefix = 2;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyGapAtTheEnd,The following statement contains a magic number: var matchedWiths = Enumerable.Range(0' count)                  .Select(index => new MatchedWith((uint)index' (float)(index * fingerprintLength)' (uint) index' (float)(index * fingerprintLength)' 15))                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyGapAtTheBeginning,The following statement contains a magic number: int shift = 3;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyGapAtTheBeginning,The following statement contains a magic number: int count = 10;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyGapAtTheBeginning,The following statement contains a magic number: double fingerprintLength = 0.5' permittedGap = 1' trackLength= 5;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyGapAtTheBeginning,The following statement contains a magic number: double fingerprintLength = 0.5' permittedGap = 1' trackLength= 5;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,CoverageEstimatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\CoverageEstimatorTest.cs,ShouldIdentifyGapAtTheBeginning,The following statement contains a magic number: var matchedWiths = Enumerable.Range(0' count)                  .Select(index =>                  {                      uint trackSequenceNumber = (uint) (shift + index);                      float trackMatchAt = (float)(trackSequenceNumber * fingerprintLength);                      return new MatchedWith((uint) index' (float)(index * fingerprintLength)' trackSequenceNumber' trackMatchAt' 15);                  })                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: int runs = 1000;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: var groupedQueryResults = new GroupedQueryResults(5d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: var references = new[] { 1' 2' 3' 4' 5 }.Select(id => new ModelReference<int>(id)).ToArray();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: var references = new[] { 1' 2' 3' 4' 5 }.Select(id => new ModelReference<int>(id)).ToArray();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: var references = new[] { 1' 2' 3' 4' 5 }.Select(id => new ModelReference<int>(id)).ToArray();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: var references = new[] { 1' 2' 3' 4' 5 }.Select(id => new ModelReference<int>(id)).ToArray();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: Parallel.For(0' runs' i =>              {                  var hashed = new HashedFingerprint(new int[0]' (uint)i' i * 0.05f' new string[0]);                  var candidate = new SubFingerprintData(new int[0]' (uint)i' i * 0.07f' Enumerable.Empty<string>()' new ModelReference<uint>((uint)i)' references[i % references.Length]);                  groupedQueryResults.Add(hashed' candidate' i);              });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: Parallel.For(0' runs' i =>              {                  var hashed = new HashedFingerprint(new int[0]' (uint)i' i * 0.05f' new string[0]);                  var candidate = new SubFingerprintData(new int[0]' (uint)i' i * 0.07f' Enumerable.Empty<string>()' new ModelReference<uint>((uint)i)' references[i % references.Length]);                  groupedQueryResults.Add(hashed' candidate' i);              });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: int ham = (perTrack - 1) * runs / 2 + perTrack * i;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: var modelReferences = groupedQueryResults.GetTopTracksByScore(references.Length * 2).ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: Assert.AreEqual((runs - 1) * 0.05f' bestMatch.QueryMatchAt' 0.000001);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: Assert.AreEqual((runs - 1) * 0.05f' bestMatch.QueryMatchAt' 0.000001);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: Assert.AreEqual((runs - 1) * 0.07f' bestMatch.TrackMatchAt' 0.000001);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,ShouldAccumulateResults,The following statement contains a magic number: Assert.AreEqual((runs - 1) * 0.07f' bestMatch.TrackMatchAt' 0.000001);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,MatchesShouldBeOrderedByQueryAt,The following statement contains a magic number: int runs = 1000;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,MatchesShouldBeOrderedByQueryAt,The following statement contains a magic number: var groupedQueryResults = new GroupedQueryResults(5d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,SameQueryHashGeneratesMultipleTrackMatches,The following statement contains a magic number: var groupedQueryResults = new GroupedQueryResults(10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,SameQueryHashGeneratesMultipleTrackMatches,The following statement contains a magic number: int runs = 100;
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,SameQueryHashGeneratesMultipleTrackMatches,The following statement contains a magic number: Parallel.For(0' runs' i =>              {                  counts[i] = random.Next(5' 10);                  var queryPoint = new HashedFingerprint(new int[25]' (uint)i' i * 1.48f' Enumerable.Empty<string>());                  for (int j = 0; j < counts[i]; ++j)                  {                      var dbPoint = new SubFingerprintData(new int[25]' (uint)k' k * 0.01f' Enumerable.Empty<string>()' new ModelReference<uint>((uint)Interlocked.Increment(ref k))' trackRef);                      groupedQueryResults.Add(queryPoint' dbPoint' i);                  }              });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,SameQueryHashGeneratesMultipleTrackMatches,The following statement contains a magic number: Parallel.For(0' runs' i =>              {                  counts[i] = random.Next(5' 10);                  var queryPoint = new HashedFingerprint(new int[25]' (uint)i' i * 1.48f' Enumerable.Empty<string>());                  for (int j = 0; j < counts[i]; ++j)                  {                      var dbPoint = new SubFingerprintData(new int[25]' (uint)k' k * 0.01f' Enumerable.Empty<string>()' new ModelReference<uint>((uint)Interlocked.Increment(ref k))' trackRef);                      groupedQueryResults.Add(queryPoint' dbPoint' i);                  }              });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,SameQueryHashGeneratesMultipleTrackMatches,The following statement contains a magic number: Parallel.For(0' runs' i =>              {                  counts[i] = random.Next(5' 10);                  var queryPoint = new HashedFingerprint(new int[25]' (uint)i' i * 1.48f' Enumerable.Empty<string>());                  for (int j = 0; j < counts[i]; ++j)                  {                      var dbPoint = new SubFingerprintData(new int[25]' (uint)k' k * 0.01f' Enumerable.Empty<string>()' new ModelReference<uint>((uint)Interlocked.Increment(ref k))' trackRef);                      groupedQueryResults.Add(queryPoint' dbPoint' i);                  }              });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,SameQueryHashGeneratesMultipleTrackMatches,The following statement contains a magic number: Parallel.For(0' runs' i =>              {                  counts[i] = random.Next(5' 10);                  var queryPoint = new HashedFingerprint(new int[25]' (uint)i' i * 1.48f' Enumerable.Empty<string>());                  for (int j = 0; j < counts[i]; ++j)                  {                      var dbPoint = new SubFingerprintData(new int[25]' (uint)k' k * 0.01f' Enumerable.Empty<string>()' new ModelReference<uint>((uint)Interlocked.Increment(ref k))' trackRef);                      groupedQueryResults.Add(queryPoint' dbPoint' i);                  }              });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,SameQueryHashGeneratesMultipleTrackMatches,The following statement contains a magic number: Parallel.For(0' runs' i =>              {                  counts[i] = random.Next(5' 10);                  var queryPoint = new HashedFingerprint(new int[25]' (uint)i' i * 1.48f' Enumerable.Empty<string>());                  for (int j = 0; j < counts[i]; ++j)                  {                      var dbPoint = new SubFingerprintData(new int[25]' (uint)k' k * 0.01f' Enumerable.Empty<string>()' new ModelReference<uint>((uint)Interlocked.Increment(ref k))' trackRef);                      groupedQueryResults.Add(queryPoint' dbPoint' i);                  }              });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,GroupedQueryResultsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\GroupedQueryResultsTest.cs,SameQueryHashGeneratesMultipleTrackMatches,The following statement contains a magic number: Parallel.For(0' runs' i =>              {                  counts[i] = random.Next(5' 10);                  var queryPoint = new HashedFingerprint(new int[25]' (uint)i' i * 1.48f' Enumerable.Empty<string>());                  for (int j = 0; j < counts[i]; ++j)                  {                      var dbPoint = new SubFingerprintData(new int[25]' (uint)k' k * 0.01f' Enumerable.Empty<string>()' new ModelReference<uint>((uint)Interlocked.Increment(ref k))' trackRef);                      groupedQueryResults.Add(queryPoint' dbPoint' i);                  }              });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.5f' 0.6f' 0.7f' 0.8f' 0.9f }' new[] { 0' 0.1f' 0.2f' 0.3f' 0.5f' 0.4f' 0.6f' 0.7f' 0.9f' 0.8f });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.6f' 0.7f' 0.9f }' result[0].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.6f' 0.7f' 0.9f }' result[0].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.6f' 0.7f' 0.9f }' result[0].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.6f' 0.7f' 0.9f }' result[0].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.6f' 0.7f' 0.9f }' result[0].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.6f' 0.7f' 0.9f }' result[0].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0' 0.1f' 0.2f' 0.3f' 0.4f' 0.6f' 0.7f' 0.9f }' result[0].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0.5f' 0.8f }' result[1].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithReversedMatches,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 0.5f' 0.8f }' result[1].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 8' 9' 10' 11 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 8' 9' 10' 11 }' result[0].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 8' 9' 10' 11 }' result[0].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 8' 9' 10' 11 }' result[0].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 8' 9' 10' 11 }' result[0].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3 }' result[1].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceWithGapLongerThanAllowed,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3 }' result[1].Select(with => with.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 5' 6' 7 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3 }' result[1].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequence,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3 }' result[1].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 0' 1' 2' 10' 11' 12' 13' 14' 15' 16 }' new float[] { 1' 2' 3' 1' 2' 3' 4' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: Assert.AreEqual(3' result.Count);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3 }' result[1].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3 }' result[1].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3 }' result[2].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3 }' result[2].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3 }' result[2].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new float[] { 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18 }' new float[] { 1' 2' 3' 4' 1' 2' 3' 4' 5' 1' 2' 3 });
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: Assert.AreEqual(3' result.Count);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4' 5 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4' 5 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4' 5 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4' 5 }' result[0].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4 }' result[1].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4 }' result[1].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3' 4 }' result[1].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3 }' result[2].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3 }' result[2].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldFindLongestIncreasingSequenceComplex2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 1' 2' 3 }' result[2].Select(pair => pair.TrackMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldGrabTheFirstMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] {1' 2' 3' 1.1f' 2.1f' 3.1f' 4}' new[] {1' 2' 3' 1' 2' 3' 4f});
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldGrabTheFirstMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] {1' 2' 3' 1.1f' 2.1f' 3.1f' 4}' new[] {1' 2' 3' 1' 2' 3' 4f});
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldGrabTheFirstMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] {1' 2' 3' 1.1f' 2.1f' 3.1f' 4}' new[] {1' 2' 3' 1' 2' 3' 4f});
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldGrabTheFirstMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] {1' 2' 3' 1.1f' 2.1f' 3.1f' 4}' new[] {1' 2' 3' 1' 2' 3' 4f});
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldGrabTheFirstMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] {1' 2' 3' 1.1f' 2.1f' 3.1f' 4}' new[] {1' 2' 3' 1' 2' 3' 4f});
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldGrabTheFirstMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] {1' 2' 3' 1.1f' 2.1f' 3.1f' 4}' new[] {1' 2' 3' 1' 2' 3' 4f});
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldGrabTheFirstMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] {1' 2' 3' 1.1f' 2.1f' 3.1f' 4}' new[] {1' 2' 3' 1' 2' 3' 4f});
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldGrabTheFirstMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] {1' 2' 3' 1.1f' 2.1f' 3.1f' 4}' new[] {1' 2' 3' 1' 2' 3' 4f});
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldGrabTheFirstMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] {1' 2' 3' 1.1f' 2.1f' 3.1f' 4}' new[] {1' 2' 3' 1' 2' 3' 4f});
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldGrabTheFirstMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] {1' 2' 3' 1.1f' 2.1f' 3.1f' 4}' new[] {1' 2' 3' 1' 2' 3' 4f});
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldGrabTheFirstMatch,The following statement contains a magic number: var matches = TestUtilities.GetMatchedWith(new[] {1' 2' 3' 1.1f' 2.1f' 3.1f' 4}' new[] {1' 2' 3' 1' 2' 3' 4f});
Magic Number,SoundFingerprinting.Tests.Unit.LCS,LongestIncreasingTrackSequenceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\LongestIncreasingTrackSequenceTest.cs,ShouldGrabTheFirstMatch,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldMergeOverlappingRegionsWithLongestInFront,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                  new List<Matches>                  {                      new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 3' 4 }' new float[] { 0' 1' 2' 3 }).ToList())'                      new Matches(TestUtilities.GetMatchedWith(new float[] { 2 }' new float[] { 1 }).ToList())                  }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldMergeOverlappingRegionsWithLongestInFront,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                  new List<Matches>                  {                      new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 3' 4 }' new float[] { 0' 1' 2' 3 }).ToList())'                      new Matches(TestUtilities.GetMatchedWith(new float[] { 2 }' new float[] { 1 }).ToList())                  }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldMergeOverlappingRegionsWithLongestInFront,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                  new List<Matches>                  {                      new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 3' 4 }' new float[] { 0' 1' 2' 3 }).ToList())'                      new Matches(TestUtilities.GetMatchedWith(new float[] { 2 }' new float[] { 1 }).ToList())                  }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldMergeOverlappingRegionsWithLongestInFront,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                  new List<Matches>                  {                      new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 3' 4 }' new float[] { 0' 1' 2' 3 }).ToList())'                      new Matches(TestUtilities.GetMatchedWith(new float[] { 2 }' new float[] { 1 }).ToList())                  }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldMergeOverlappingRegionsWithLongestInFront,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                  new List<Matches>                  {                      new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 3' 4 }' new float[] { 0' 1' 2' 3 }).ToList())'                      new Matches(TestUtilities.GetMatchedWith(new float[] { 2 }' new float[] { 1 }).ToList())                  }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldMergeOverlappingRegionsWithLongestInFront,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 0' 1' 2' 3' 4 }' result[0].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldMergeOverlappingRegionsWithLongestInFront,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 0' 1' 2' 3' 4 }' result[0].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldMergeOverlappingRegionsWithLongestInFront,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 0' 1' 2' 3' 4 }' result[0].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInFront2,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 5 }' new float[] { 4' 5 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInFront2,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 5 }' new float[] { 4' 5 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInFront2,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 5 }' new float[] { 4' 5 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInFront2,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 5 }' new float[] { 4' 5 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInFront2,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 5 }' new float[] { 4' 5 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInFront2,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 5 }' new float[] { 4' 5 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInFront2,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInFront2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 0' 1' 2 }' result[0].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInFront2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 4' 5 }' result[1].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInFront2,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 4' 5 }' result[1].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: var result = OverlappingRegionFilter.MergeOverlappingSequences(                      new List<Matches>                      {                          new Matches(TestUtilities.GetMatchedWith(new float[] { 4' 6' 7' 9' 10 }' new float[] { 4' 5' 6' 7' 9 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 10' 11' 17}' new float[] { 10' 11' 12 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 0' 1' 2 }' new float[] { 0' 1' 2 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 5 }' new float[] { 5 }).ToList())'                          new Matches(TestUtilities.GetMatchedWith(new float[] { 6 }' new float[] { 6 }).ToList())                      }' PermittedGap)                  .ToList();
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 4' 5' 6' 7' 9' 10' 11' 17 }' result[0].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 4' 5' 6' 7' 9' 10' 11' 17 }' result[0].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 4' 5' 6' 7' 9' 10' 11' 17 }' result[0].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 4' 5' 6' 7' 9' 10' 11' 17 }' result[0].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 4' 5' 6' 7' 9' 10' 11' 17 }' result[0].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 4' 5' 6' 7' 9' 10' 11' 17 }' result[0].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 4' 5' 6' 7' 9' 10' 11' 17 }' result[0].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 4' 5' 6' 7' 9' 10' 11' 17 }' result[0].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,OverlappingRegionFilterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\OverlappingRegionFilterTest.cs,ShouldFilterOverlappingRegionsWithLongestInTheBack,The following statement contains a magic number: CollectionAssert.AreEqual(new float[] { 0' 1' 2 }' result[1].Select(with => with.QueryMatchAt));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,QueryCoverageCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\QueryCoverageCalculatorTest.cs,ShouldNotFailWithEmptyEntries,The following statement contains a magic number: var track = new TrackData("1234"' "artist"' "title"' "album"' 1986' 120d' new ModelReference<int>(1));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,QueryCoverageCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\QueryCoverageCalculatorTest.cs,ShouldNotFailWithEmptyEntries,The following statement contains a magic number: var track = new TrackData("1234"' "artist"' "title"' "album"' 1986' 120d' new ModelReference<int>(1));
Magic Number,SoundFingerprinting.Tests.Unit.LCS,QueryCoverageCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LCS\QueryCoverageCalculatorTest.cs,ShouldNotFailWithEmptyEntries,The following statement contains a magic number: var coverages = qrc.GetCoverages(track' new GroupedQueryResults(10d' DateTime.Now)' new DefaultQueryConfiguration());
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateAudioCollisions,The following statement contains a magic number: int width = 128' height = 32;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateAudioCollisions,The following statement contains a magic number: int width = 128' height = 32;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateAudioCollisions,The following statement contains a magic number: var tables = Enumerable.Range(0' 25).Select(index => new ConcurrentDictionary<int' int>()).ToArray();
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateAudioCollisions,The following statement contains a magic number: int runs = 10000;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateAudioCollisions,The following statement contains a magic number: var tinyFingerprint = TestUtilities.GenerateRandomFingerprint(random' (int) 200' width' height);
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateAudioCollisions,The following statement contains a magic number: i < 10000
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateAudioCollisions,The following statement contains a magic number: Assert.IsTrue(tables[i].Count > runs * 0.9);
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateVideoCollisions,The following statement contains a magic number: int width = 128' height = 72;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateVideoCollisions,The following statement contains a magic number: int width = 128' height = 72;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateVideoCollisions,The following statement contains a magic number: double topWaveletsPercentage = 0.04;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateVideoCollisions,The following statement contains a magic number: var tables = Enumerable.Range(0' 25).Select(index => new ConcurrentDictionary<int' int>()).ToArray();
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateVideoCollisions,The following statement contains a magic number: int runs = 10000;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateVideoCollisions,The following statement contains a magic number: i < 10000
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldNotGenerateVideoCollisions,The following statement contains a magic number: Assert.IsTrue(tables[i].Count > runs * 0.9);
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: var storage = new RAMStorage(25' new IntModelReferenceProvider());
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: float one = 8192f / 5512;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: float one = 8192f / 5512;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: var config = new DefaultHashingConfig { NumberOfLSHTables = 25' NumberOfMinHashesPerTable = 4' HashBuckets = 0 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: var config = new DefaultHashingConfig { NumberOfLSHTables = 25' NumberOfMinHashesPerTable = 4' HashBuckets = 0 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: i < 100
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: j < 25
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,FingerprintsCantMatchUniformlyAtRandom,The following statement contains a magic number: i < 10
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,DistributionOfHashesHasToBeUniform,The following statement contains a magic number: var storage = new RAMStorage(25' new IntModelReferenceProvider());
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,DistributionOfHashesHasToBeUniform,The following statement contains a magic number: float one = 8192f / 5512;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,DistributionOfHashesHasToBeUniform,The following statement contains a magic number: float one = 8192f / 5512;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,DistributionOfHashesHasToBeUniform,The following statement contains a magic number: var config = new DefaultHashingConfig { NumberOfLSHTables = 25' NumberOfMinHashesPerTable = 4' HashBuckets = 0 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,DistributionOfHashesHasToBeUniform,The following statement contains a magic number: var config = new DefaultHashingConfig { NumberOfLSHTables = 25' NumberOfMinHashesPerTable = 4' HashBuckets = 0 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,DistributionOfHashesHasToBeUniform,The following statement contains a magic number: int l = 100000;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,DistributionOfHashesHasToBeUniform,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,DistributionOfHashesHasToBeUniform,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,DistributionOfHashesHasToBeUniform,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,DistributionOfHashesHasToBeUniform,The following statement contains a magic number: Assert.IsTrue(collisions <= 0.01d' $"Less than 1% of collisions across 100K hashes: {collisions}");
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: int l = 25' k = 4' width = 128' height = 72;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: int l = 25' k = 4' width = 128' height = 72;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: int l = 25' k = 4' width = 128' height = 72;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: int l = 25' k = 4' width = 128' height = 72;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: double[] howSimilarly    = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: double[] howSimilarly    = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: double[] howSimilarly    = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: double[] howSimilarly    = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: double[] howSimilarly    = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: double[] howSimilarly    = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: double[] howSimilarly    = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: double[] howSimilarly    = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: int[] expectedThresholds = { 0' 0' 0' 2' 3' 5' 7' 11 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: int[] expectedThresholds = { 0' 0' 0' 2' 3' 5' 7' 11 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: int[] expectedThresholds = { 0' 0' 0' 2' 3' 5' 7' 11 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: int[] expectedThresholds = { 0' 0' 0' 2' 3' 5' 7' 11 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: int[] expectedThresholds = { 0' 0' 0' 2' 3' 5' 7' 11 };
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: const int simulations = 10000;
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: Parallel.For(0' howSimilarly.Length' r =>                  {                  var random = new Random((r + 1) * 100);                  double howSimilar = howSimilarly[r];                  int topWavelets = (int)(0.035 * width * height);                  var agreeOn = new List<int>();                  var hammingDistances = new List<int>();                  for (int i = 0; i < simulations; ++i)                  {                      var fingerprints = TestUtilities.GenerateSimilarFingerprints(random' howSimilar' topWavelets' width * height * 2);                      int hammingDistance = similarity.CalculateHammingDistance(fingerprints.Item1.ToBools()' fingerprints.Item2.ToBools());                      hammingDistances.Add(hammingDistance);                      var hashed1 = lsh.HashImage(new Fingerprint(fingerprints.Item1' 0' 0)' hashingConfig' Enumerable.Empty<string>());                      var hashed2 = lsh.HashImage(new Fingerprint(fingerprints.Item2' 0' 0)' hashingConfig' Enumerable.Empty<string>());                      int agreeCount = AgreeOn(hashed1.HashBins' hashed2.HashBins);                      agreeOn.Add(agreeCount);                  }                    int requested = (int)((1 - howSimilar) * topWavelets * 2);                  Assert.AreEqual(requested' hammingDistances.Average()' 1);                  Assert.AreEqual(expectedThresholds[r]' Math.Floor(agreeOn.Average()));                  Console.WriteLine($"Similarity: {howSimilar: 0.00}' Avg. Table Matches {agreeOn.Average(): 0.000}");              });
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: Parallel.For(0' howSimilarly.Length' r =>                  {                  var random = new Random((r + 1) * 100);                  double howSimilar = howSimilarly[r];                  int topWavelets = (int)(0.035 * width * height);                  var agreeOn = new List<int>();                  var hammingDistances = new List<int>();                  for (int i = 0; i < simulations; ++i)                  {                      var fingerprints = TestUtilities.GenerateSimilarFingerprints(random' howSimilar' topWavelets' width * height * 2);                      int hammingDistance = similarity.CalculateHammingDistance(fingerprints.Item1.ToBools()' fingerprints.Item2.ToBools());                      hammingDistances.Add(hammingDistance);                      var hashed1 = lsh.HashImage(new Fingerprint(fingerprints.Item1' 0' 0)' hashingConfig' Enumerable.Empty<string>());                      var hashed2 = lsh.HashImage(new Fingerprint(fingerprints.Item2' 0' 0)' hashingConfig' Enumerable.Empty<string>());                      int agreeCount = AgreeOn(hashed1.HashBins' hashed2.HashBins);                      agreeOn.Add(agreeCount);                  }                    int requested = (int)((1 - howSimilar) * topWavelets * 2);                  Assert.AreEqual(requested' hammingDistances.Average()' 1);                  Assert.AreEqual(expectedThresholds[r]' Math.Floor(agreeOn.Average()));                  Console.WriteLine($"Similarity: {howSimilar: 0.00}' Avg. Table Matches {agreeOn.Average(): 0.000}");              });
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: Parallel.For(0' howSimilarly.Length' r =>                  {                  var random = new Random((r + 1) * 100);                  double howSimilar = howSimilarly[r];                  int topWavelets = (int)(0.035 * width * height);                  var agreeOn = new List<int>();                  var hammingDistances = new List<int>();                  for (int i = 0; i < simulations; ++i)                  {                      var fingerprints = TestUtilities.GenerateSimilarFingerprints(random' howSimilar' topWavelets' width * height * 2);                      int hammingDistance = similarity.CalculateHammingDistance(fingerprints.Item1.ToBools()' fingerprints.Item2.ToBools());                      hammingDistances.Add(hammingDistance);                      var hashed1 = lsh.HashImage(new Fingerprint(fingerprints.Item1' 0' 0)' hashingConfig' Enumerable.Empty<string>());                      var hashed2 = lsh.HashImage(new Fingerprint(fingerprints.Item2' 0' 0)' hashingConfig' Enumerable.Empty<string>());                      int agreeCount = AgreeOn(hashed1.HashBins' hashed2.HashBins);                      agreeOn.Add(agreeCount);                  }                    int requested = (int)((1 - howSimilar) * topWavelets * 2);                  Assert.AreEqual(requested' hammingDistances.Average()' 1);                  Assert.AreEqual(expectedThresholds[r]' Math.Floor(agreeOn.Average()));                  Console.WriteLine($"Similarity: {howSimilar: 0.00}' Avg. Table Matches {agreeOn.Average(): 0.000}");              });
Magic Number,SoundFingerprinting.Tests.Unit.LSH,LocalitySensitiveHashingAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\LSH\LocalitySensitiveHashingAlgorithmTest.cs,ShouldBeAbleToControlReturnedCandidatesWithThresholdParameter,The following statement contains a magic number: Parallel.For(0' howSimilarly.Length' r =>                  {                  var random = new Random((r + 1) * 100);                  double howSimilar = howSimilarly[r];                  int topWavelets = (int)(0.035 * width * height);                  var agreeOn = new List<int>();                  var hammingDistances = new List<int>();                  for (int i = 0; i < simulations; ++i)                  {                      var fingerprints = TestUtilities.GenerateSimilarFingerprints(random' howSimilar' topWavelets' width * height * 2);                      int hammingDistance = similarity.CalculateHammingDistance(fingerprints.Item1.ToBools()' fingerprints.Item2.ToBools());                      hammingDistances.Add(hammingDistance);                      var hashed1 = lsh.HashImage(new Fingerprint(fingerprints.Item1' 0' 0)' hashingConfig' Enumerable.Empty<string>());                      var hashed2 = lsh.HashImage(new Fingerprint(fingerprints.Item2' 0' 0)' hashingConfig' Enumerable.Empty<string>());                      int agreeCount = AgreeOn(hashed1.HashBins' hashed2.HashBins);                      agreeOn.Add(agreeCount);                  }                    int requested = (int)((1 - howSimilar) * topWavelets * 2);                  Assert.AreEqual(requested' hammingDistances.Average()' 1);                  Assert.AreEqual(expectedThresholds[r]' Math.Floor(agreeOn.Average()));                  Console.WriteLine($"Similarity: {howSimilar: 0.00}' Avg. Table Matches {agreeOn.Average(): 0.000}");              });
Magic Number,SoundFingerprinting.Tests.Unit.Math,FScoreTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\FScoreTest.cs,ShouldCalculateFScore,The following statement contains a magic number: var score = new FScore(90' 90' 10' 10);
Magic Number,SoundFingerprinting.Tests.Unit.Math,FScoreTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\FScoreTest.cs,ShouldCalculateFScore,The following statement contains a magic number: var score = new FScore(90' 90' 10' 10);
Magic Number,SoundFingerprinting.Tests.Unit.Math,FScoreTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\FScoreTest.cs,ShouldCalculateFScore,The following statement contains a magic number: var score = new FScore(90' 90' 10' 10);
Magic Number,SoundFingerprinting.Tests.Unit.Math,FScoreTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\FScoreTest.cs,ShouldCalculateFScore,The following statement contains a magic number: var score = new FScore(90' 90' 10' 10);
Magic Number,SoundFingerprinting.Tests.Unit.Math,FScoreTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\FScoreTest.cs,ShouldCalculateFScore,The following statement contains a magic number: Assert.AreEqual(0.9d' score.Precision' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,FScoreTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\FScoreTest.cs,ShouldCalculateFScore,The following statement contains a magic number: Assert.AreEqual(0.9d' score.Precision' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,FScoreTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\FScoreTest.cs,ShouldCalculateFScore,The following statement contains a magic number: Assert.AreEqual(0.9d' score.Recall' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,FScoreTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\FScoreTest.cs,ShouldCalculateFScore,The following statement contains a magic number: Assert.AreEqual(0.9d' score.Recall' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,FScoreTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\FScoreTest.cs,ShouldCalculateFScore,The following statement contains a magic number: Assert.AreEqual(0.9d' score.F1' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,FScoreTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\FScoreTest.cs,ShouldCalculateFScore,The following statement contains a magic number: Assert.AreEqual(0.9d' score.F1' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: var stats = HammingDistanceResultStatistics.From(                  new ConcurrentBag<int> { 5' 4' 3' 2' 1 }'                  new ConcurrentBag<int>()'                  new ConcurrentBag<int>()'                  new[] { 0.9' 0.95' 0.98 });
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: var stats = HammingDistanceResultStatistics.From(                  new ConcurrentBag<int> { 5' 4' 3' 2' 1 }'                  new ConcurrentBag<int>()'                  new ConcurrentBag<int>()'                  new[] { 0.9' 0.95' 0.98 });
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: var stats = HammingDistanceResultStatistics.From(                  new ConcurrentBag<int> { 5' 4' 3' 2' 1 }'                  new ConcurrentBag<int>()'                  new ConcurrentBag<int>()'                  new[] { 0.9' 0.95' 0.98 });
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: var stats = HammingDistanceResultStatistics.From(                  new ConcurrentBag<int> { 5' 4' 3' 2' 1 }'                  new ConcurrentBag<int>()'                  new ConcurrentBag<int>()'                  new[] { 0.9' 0.95' 0.98 });
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: var stats = HammingDistanceResultStatistics.From(                  new ConcurrentBag<int> { 5' 4' 3' 2' 1 }'                  new ConcurrentBag<int>()'                  new ConcurrentBag<int>()'                  new[] { 0.9' 0.95' 0.98 });
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: var stats = HammingDistanceResultStatistics.From(                  new ConcurrentBag<int> { 5' 4' 3' 2' 1 }'                  new ConcurrentBag<int>()'                  new ConcurrentBag<int>()'                  new[] { 0.9' 0.95' 0.98 });
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: var stats = HammingDistanceResultStatistics.From(                  new ConcurrentBag<int> { 5' 4' 3' 2' 1 }'                  new ConcurrentBag<int>()'                  new ConcurrentBag<int>()'                  new[] { 0.9' 0.95' 0.98 });
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: Assert.AreEqual(4.6' percentiles[0]' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: Assert.AreEqual(4.6' percentiles[0]' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: Assert.AreEqual(4.8' percentiles[1]' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: Assert.AreEqual(4.8' percentiles[1]' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: Assert.AreEqual(4.92' percentiles[2]' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: Assert.AreEqual(4.92' percentiles[2]' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HammingDistanceResultStatisticsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HammingDistanceResultStatisticsTest.cs,ShouldCalculatePercentilesCorrectly,The following statement contains a magic number: Assert.AreEqual(4.92' percentiles[2]' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForInts,The following statement contains a magic number: ShouldConvertBackAndFourth(100' 25);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForInts,The following statement contains a magic number: ShouldConvertBackAndFourth(100' 25);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForSmallInts,The following statement contains a magic number: ShouldConvertBackAndFourth(100' 50);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForSmallInts,The following statement contains a magic number: ShouldConvertBackAndFourth(100' 50);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForLongs,The following statement contains a magic number: ShouldConvertBackAndFourth(160' 20);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForLongs,The following statement contains a magic number: ShouldConvertBackAndFourth(160' 20);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForNonStandard,The following statement contains a magic number: ShouldConvertBackAndFourth(20' 20);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForNonStandard,The following statement contains a magic number: ShouldConvertBackAndFourth(20' 20);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForNonStandard,The following statement contains a magic number: ShouldConvertBackAndFourth(60' 20);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForNonStandard,The following statement contains a magic number: ShouldConvertBackAndFourth(60' 20);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForNonStandard,The following statement contains a magic number: ShouldConvertBackAndFourth(100' 20);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForNonStandard,The following statement contains a magic number: ShouldConvertBackAndFourth(100' 20);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForNonStandard,The following statement contains a magic number: ShouldConvertBackAndFourth(120' 20);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForNonStandard,The following statement contains a magic number: ShouldConvertBackAndFourth(120' 20);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForNonStandard,The following statement contains a magic number: ShouldConvertBackAndFourth(140' 20);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,ShouldConvertBackAndFourthForNonStandard,The following statement contains a magic number: ShouldConvertBackAndFourth(140' 20);
Magic Number,SoundFingerprinting.Tests.Unit.Math,HashConverterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\HashConverterTest.cs,GetRandomArray,The following statement contains a magic number: array[i] = (byte)random.Next(256);
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,ShouldCorrectlyCalculateHammingDistanceBetweenLongs,The following statement contains a magic number: var length = 50000;
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,ShouldCorrectlyCalculateHammingDistanceBetweenLongs,The following statement contains a magic number: var a = hashConverter.ToInts(x' length / 4);
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,ShouldCorrectlyCalculateHammingDistanceBetweenLongs,The following statement contains a magic number: var b = hashConverter.ToInts(y' length / 4);
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,ShouldCorrectlyCalculateHammingDistanceBetweenLongs,The following statement contains a magic number: var longSimilarity = similarityUtility.CalculateHammingSimilarity(a' b' 4);
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,ShouldCorrectlyCalculateHammingDistanceBetweenLongs,The following statement contains a magic number: run < 1000
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingDistanceCorrect,The following statement contains a magic number: Assert.AreEqual(4' result);
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] first = { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: byte[] second = { 1' 2' 3' 8' 5' 9' 7' 8' 11' 13 };
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateHammingSimilarityCorrect,The following statement contains a magic number: Assert.AreEqual(6' result);
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateJaccardSimilarityCorrect,The following statement contains a magic number: Assert.AreEqual(5f / 6' result' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateJaccardSimilarityCorrect,The following statement contains a magic number: Assert.AreEqual(5f / 6' result' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Math,SimilarityUtilityTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Math\SimilarityUtilityTest.cs,CalculateJaccardSimilarityCorrect,The following statement contains a magic number: Assert.AreEqual(5f / 6' result' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPosition,The following statement contains a magic number: Assert.AreEqual(255' maxIndex);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPosition,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPosition,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPosition,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPosition,The following statement contains a magic number: byte[] hashes = minHash.Hash(schema' 25 * 4);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPosition,The following statement contains a magic number: byte[] hashes = minHash.Hash(schema' 25 * 4);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPosition,The following statement contains a magic number: i < 50000
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPosition,The following statement contains a magic number: Assert.IsTrue(counts.Average() <= 0.25' "On average we expect no more than 0.25 elements in the schema to contain hashes at last position");
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: var permutations = new AdaptivePermutations(100' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: var permutations = new AdaptivePermutations(100' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: var permutations = new AdaptivePermutations(100' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: Assert.AreEqual(128 * 32 * 2' maxIndex);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: Assert.AreEqual(128 * 32 * 2' maxIndex);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: Assert.AreEqual(128 * 32 * 2' maxIndex);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: var schema = TestUtilities.GenerateRandomFingerprint(random' 200' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: int[] hashes = minHash.Hash(schema' 25 * 4);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: int[] hashes = minHash.Hash(schema' 25 * 4);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: i < 50000
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldNotIdentifyTooManyHashesOnLastPositionForAdaptivePermutations,The following statement contains a magic number: Assert.AreEqual(0' counts.Average()' 0.0001' "On average we expect no more than 0.0 elements in the schema to contain hashes at last position");
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldBeAbleToGenerateMultipleTimesDifferentSignatures,The following statement contains a magic number: double howSimilarAreVectors = 0.4;
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldBeAbleToGenerateMultipleTimesDifferentSignatures,The following statement contains a magic number: int topWavelets = 200' vectorLength = 8192;
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldBeAbleToGenerateMultipleTimesDifferentSignatures,The following statement contains a magic number: int topWavelets = 200' vectorLength = 8192;
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldBeAbleToGenerateMultipleTimesDifferentSignatures,The following statement contains a magic number: int simulationRuns = 20000' agreeOn = 0;
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldBeAbleToGenerateMultipleTimesDifferentSignatures,The following statement contains a magic number: double jaccardSimilarity = (howSimilarAreVectors * topWavelets) / ((2 * topWavelets) - (howSimilarAreVectors * topWavelets));
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldBeAbleToGenerateMultipleTimesDifferentSignatures,The following statement contains a magic number: Assert.AreEqual(jaccardSimilarity' similarity / simulationRuns' 0.1' "Jaccard Similarity is not as requested: " + (similarity / simulationRuns));
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: int bands = 25;
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: int rows = 4;
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: int topWavelets = 200;
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: int vectorLength = 128 * 32 * 2;
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: int vectorLength = 128 * 32 * 2;
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: int vectorLength = 128 * 32 * 2;
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: double[] howSimilars = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: double[] howSimilars = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: double[] howSimilars = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: double[] howSimilars = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: double[] howSimilars = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: double[] howSimilars = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: double[] howSimilars = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: double[] howSimilars = { 0.3' 0.5' 0.6' 0.7' 0.75' 0.8' 0.85' 0.9 };
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: Parallel.For(0' howSimilars.Length' i =>              {                  var random = new Random(i);                  double howSimilar = howSimilars[i];                  double jaccardSimilarity = howSimilar * topWavelets / (2 * topWavelets - howSimilar * topWavelets);                  probabilityOfAMatch[i] = Math.Round(1 - Math.Pow(1 - Math.Pow(jaccardSimilarity' rows)' bands)' 4);                    int simulationRuns = 10000;                  int agreeOn = 0;                  int atLeastOneCandidateFound = 0;                  for (int j = 0; j < simulationRuns; ++j)                  {                      var arrays = TestUtilities.GenerateSimilarFingerprints(random' howSimilar' topWavelets' vectorLength);                      var hashed1 = lsh.Hash(new Fingerprint(arrays.Item1' 0' 0)' hashingConfig' new List<string>());                      var hashed2 = lsh.Hash(new Fingerprint(arrays.Item2' 0' 0)' hashingConfig' new List<string>());                      int agreeCount = AgreeOn(hashed1.HashBins' hashed2.HashBins);                      if (agreeCount > 0)                      {                          atLeastOneCandidateFound++;                      }                        agreeOn += agreeCount;                  }                    avgCandidatesFound[i] = Math.Round((double)agreeOn / simulationRuns' 4);                  atLeastOneCandidateFounds[i] = Math.Round((double)atLeastOneCandidateFound / simulationRuns' 4);              });
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: Parallel.For(0' howSimilars.Length' i =>              {                  var random = new Random(i);                  double howSimilar = howSimilars[i];                  double jaccardSimilarity = howSimilar * topWavelets / (2 * topWavelets - howSimilar * topWavelets);                  probabilityOfAMatch[i] = Math.Round(1 - Math.Pow(1 - Math.Pow(jaccardSimilarity' rows)' bands)' 4);                    int simulationRuns = 10000;                  int agreeOn = 0;                  int atLeastOneCandidateFound = 0;                  for (int j = 0; j < simulationRuns; ++j)                  {                      var arrays = TestUtilities.GenerateSimilarFingerprints(random' howSimilar' topWavelets' vectorLength);                      var hashed1 = lsh.Hash(new Fingerprint(arrays.Item1' 0' 0)' hashingConfig' new List<string>());                      var hashed2 = lsh.Hash(new Fingerprint(arrays.Item2' 0' 0)' hashingConfig' new List<string>());                      int agreeCount = AgreeOn(hashed1.HashBins' hashed2.HashBins);                      if (agreeCount > 0)                      {                          atLeastOneCandidateFound++;                      }                        agreeOn += agreeCount;                  }                    avgCandidatesFound[i] = Math.Round((double)agreeOn / simulationRuns' 4);                  atLeastOneCandidateFounds[i] = Math.Round((double)atLeastOneCandidateFound / simulationRuns' 4);              });
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: Parallel.For(0' howSimilars.Length' i =>              {                  var random = new Random(i);                  double howSimilar = howSimilars[i];                  double jaccardSimilarity = howSimilar * topWavelets / (2 * topWavelets - howSimilar * topWavelets);                  probabilityOfAMatch[i] = Math.Round(1 - Math.Pow(1 - Math.Pow(jaccardSimilarity' rows)' bands)' 4);                    int simulationRuns = 10000;                  int agreeOn = 0;                  int atLeastOneCandidateFound = 0;                  for (int j = 0; j < simulationRuns; ++j)                  {                      var arrays = TestUtilities.GenerateSimilarFingerprints(random' howSimilar' topWavelets' vectorLength);                      var hashed1 = lsh.Hash(new Fingerprint(arrays.Item1' 0' 0)' hashingConfig' new List<string>());                      var hashed2 = lsh.Hash(new Fingerprint(arrays.Item2' 0' 0)' hashingConfig' new List<string>());                      int agreeCount = AgreeOn(hashed1.HashBins' hashed2.HashBins);                      if (agreeCount > 0)                      {                          atLeastOneCandidateFound++;                      }                        agreeOn += agreeCount;                  }                    avgCandidatesFound[i] = Math.Round((double)agreeOn / simulationRuns' 4);                  atLeastOneCandidateFounds[i] = Math.Round((double)atLeastOneCandidateFound / simulationRuns' 4);              });
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: Parallel.For(0' howSimilars.Length' i =>              {                  var random = new Random(i);                  double howSimilar = howSimilars[i];                  double jaccardSimilarity = howSimilar * topWavelets / (2 * topWavelets - howSimilar * topWavelets);                  probabilityOfAMatch[i] = Math.Round(1 - Math.Pow(1 - Math.Pow(jaccardSimilarity' rows)' bands)' 4);                    int simulationRuns = 10000;                  int agreeOn = 0;                  int atLeastOneCandidateFound = 0;                  for (int j = 0; j < simulationRuns; ++j)                  {                      var arrays = TestUtilities.GenerateSimilarFingerprints(random' howSimilar' topWavelets' vectorLength);                      var hashed1 = lsh.Hash(new Fingerprint(arrays.Item1' 0' 0)' hashingConfig' new List<string>());                      var hashed2 = lsh.Hash(new Fingerprint(arrays.Item2' 0' 0)' hashingConfig' new List<string>());                      int agreeCount = AgreeOn(hashed1.HashBins' hashed2.HashBins);                      if (agreeCount > 0)                      {                          atLeastOneCandidateFound++;                      }                        agreeOn += agreeCount;                  }                    avgCandidatesFound[i] = Math.Round((double)agreeOn / simulationRuns' 4);                  atLeastOneCandidateFounds[i] = Math.Round((double)atLeastOneCandidateFound / simulationRuns' 4);              });
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: Parallel.For(0' howSimilars.Length' i =>              {                  var random = new Random(i);                  double howSimilar = howSimilars[i];                  double jaccardSimilarity = howSimilar * topWavelets / (2 * topWavelets - howSimilar * topWavelets);                  probabilityOfAMatch[i] = Math.Round(1 - Math.Pow(1 - Math.Pow(jaccardSimilarity' rows)' bands)' 4);                    int simulationRuns = 10000;                  int agreeOn = 0;                  int atLeastOneCandidateFound = 0;                  for (int j = 0; j < simulationRuns; ++j)                  {                      var arrays = TestUtilities.GenerateSimilarFingerprints(random' howSimilar' topWavelets' vectorLength);                      var hashed1 = lsh.Hash(new Fingerprint(arrays.Item1' 0' 0)' hashingConfig' new List<string>());                      var hashed2 = lsh.Hash(new Fingerprint(arrays.Item2' 0' 0)' hashingConfig' new List<string>());                      int agreeCount = AgreeOn(hashed1.HashBins' hashed2.HashBins);                      if (agreeCount > 0)                      {                          atLeastOneCandidateFound++;                      }                        agreeOn += agreeCount;                  }                    avgCandidatesFound[i] = Math.Round((double)agreeOn / simulationRuns' 4);                  atLeastOneCandidateFounds[i] = Math.Round((double)atLeastOneCandidateFound / simulationRuns' 4);              });
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: string header = $"{"Actual Similarity"'5}{"Th. At Least One"'19}{"Pr. At Least One"'18}{"Avg. Candidates Found"'25}";
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: string header = $"{"Actual Similarity"'5}{"Th. At Least One"'19}{"Pr. At Least One"'18}{"Avg. Candidates Found"'25}";
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: string header = $"{"Actual Similarity"'5}{"Th. At Least One"'19}{"Pr. At Least One"'18}{"Avg. Candidates Found"'25}";
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: string header = $"{"Actual Similarity"'5}{"Th. At Least One"'19}{"Pr. At Least One"'18}{"Avg. Candidates Found"'25}";
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashAlgorithmTest.cs,ShouldMatchAccordingToTheTheory,The following statement contains a magic number: Assert.AreEqual(probabilityOfAMatch[i]' atLeastOneCandidateFounds[i]' 0.05);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashServiceTest.cs,ComputeHashTest,The following statement contains a magic number: byte[] hashed = minHashService.Hash(new TinyFingerprintSchema(10).SetTrueAt(2' 4' 6)' perms.GetPermutations().Length);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashServiceTest.cs,ComputeHashTest,The following statement contains a magic number: byte[] hashed = minHashService.Hash(new TinyFingerprintSchema(10).SetTrueAt(2' 4' 6)' perms.GetPermutations().Length);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashServiceTest.cs,ComputeHashTest,The following statement contains a magic number: byte[] hashed = minHashService.Hash(new TinyFingerprintSchema(10).SetTrueAt(2' 4' 6)' perms.GetPermutations().Length);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashServiceTest.cs,ComputeHashTest,The following statement contains a magic number: byte[] hashed = minHashService.Hash(new TinyFingerprintSchema(10).SetTrueAt(2' 4' 6)' perms.GetPermutations().Length);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashServiceTest.cs,ComputeHashTest,The following statement contains a magic number: Assert.AreEqual(255' hashed[2]);
Magic Number,SoundFingerprinting.Tests.Unit.MinHash,MinHashServiceTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\MinHash\MinHashServiceTest.cs,ComputeHashTest,The following statement contains a magic number: Assert.AreEqual(255' hashed[2]);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence1,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(0d' 20d' 120d' 10d' 30d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence1,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(0d' 20d' 120d' 10d' 30d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence1,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(0d' 20d' 120d' 10d' 30d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence1,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(0d' 20d' 120d' 10d' 30d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence1,The following statement contains a magic number: Assert.AreEqual(1d' confidence' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence2,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(50d' 30d' 120d' 0d' 30d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence2,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(50d' 30d' 120d' 0d' 30d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence2,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(50d' 30d' 120d' 0d' 30d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence2,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(50d' 30d' 120d' 0d' 30d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence2,The following statement contains a magic number: Assert.AreEqual(1d' confidence' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence3,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(110d' 10d' 120d' 0' 30d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence3,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(110d' 10d' 120d' 0' 30d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence3,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(110d' 10d' 120d' 0' 30d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence3,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(110d' 10d' 120d' 0' 30d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence3,The following statement contains a magic number: Assert.AreEqual(1d' confidence' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence4,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(50d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence4,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(50d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence4,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(50d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence4,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(50d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence4,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(50d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence4,The following statement contains a magic number: Assert.AreEqual(1d' confidence' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence5,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(49d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence5,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(49d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence5,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(49d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence5,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(49d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence5,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(49d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence5,The following statement contains a magic number: Assert.AreEqual(1d' confidence' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence6,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(0d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence6,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(0d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence6,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(0d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence6,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(0d' 10d' 10d' 50d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence6,The following statement contains a magic number: Assert.AreEqual(1d' confidence' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence7,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(0d' 5d' 10d' 115d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence7,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(0d' 5d' 10d' 115d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence7,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(0d' 5d' 10d' 115d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence7,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(0d' 5d' 10d' 115d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence7,The following statement contains a magic number: Assert.AreEqual(1d' confidence' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(5d' 5d' 10d' 0d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(5d' 5d' 10d' 0d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(5d' 5d' 10d' 0d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence,The following statement contains a magic number: double confidence = confidenceCalculator.CalculateConfidence(5d' 5d' 10d' 0d' 120d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ConfidenceCalculatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ConfidenceCalculatorTest.cs,ShouldCalculateConfidence,The following statement contains a magic number: Assert.AreEqual(1d' confidence' 0.001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,GapTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\GapTest.cs,ConstructorThrowsOnInvalidArgs,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new Gap(4' 3' false));
Magic Number,SoundFingerprinting.Tests.Unit.Query,GapTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\GapTest.cs,ConstructorThrowsOnInvalidArgs,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new Gap(4' 3' false));
Magic Number,SoundFingerprinting.Tests.Unit.Query,GapTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\GapTest.cs,LengthMustBePositive,The following statement contains a magic number: Assert.AreEqual(42' new Gap(8' 50' false).LengthInSeconds);
Magic Number,SoundFingerprinting.Tests.Unit.Query,GapTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\GapTest.cs,LengthMustBePositive,The following statement contains a magic number: Assert.AreEqual(42' new Gap(8' 50' false).LengthInSeconds);
Magic Number,SoundFingerprinting.Tests.Unit.Query,GapTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\GapTest.cs,LengthMustBePositive,The following statement contains a magic number: Assert.AreEqual(42' new Gap(8' 50' false).LengthInSeconds);
Magic Number,SoundFingerprinting.Tests.Unit.Query,HashedFingerprintsExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\HashedFingerprintsExtensionsTest.cs,ShouldCalculateQueryLengthCorrectly,The following statement contains a magic number: float delta = 0.05f;
Magic Number,SoundFingerprinting.Tests.Unit.Query,HashedFingerprintsExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\HashedFingerprintsExtensionsTest.cs,ShouldCalculateQueryLengthCorrectly,The following statement contains a magic number: int runs = 1000;
Magic Number,SoundFingerprinting.Tests.Unit.Query,HashedFingerprintsExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\HashedFingerprintsExtensionsTest.cs,ShouldCalculateQueryLengthCorrectly,The following statement contains a magic number: Assert.AreEqual(length' delta * (runs - 1) + config.FingerprintLengthInSeconds' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: var a = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: var a = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: var a = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: var a = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: var b = GetMatches(8f' 18f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: var b = GetMatches(8f' 18f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: var b = GetMatches(8f' 18f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: var b = GetMatches(8f' 18f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: var b = GetMatches(8f' 18f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: Assert.IsTrue(a.TryCollapseWith(b' 1.48d' out var c));
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: Assert.AreEqual(19.5d' c.TotalLength' 0.1);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: Assert.AreEqual(19.5d' c.TotalLength' 0.1);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt1,The following statement contains a magic number: Assert.AreEqual(10f' c.TrackAtStartsAt);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt2,The following statement contains a magic number: var a = GetMatches(0f' 12f' 12d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt2,The following statement contains a magic number: var a = GetMatches(0f' 12f' 12d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt2,The following statement contains a magic number: var a = GetMatches(0f' 12f' 12d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt2,The following statement contains a magic number: var a = GetMatches(0f' 12f' 12d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt2,The following statement contains a magic number: var b = GetMatches(4f' 16f' 4d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt2,The following statement contains a magic number: var b = GetMatches(4f' 16f' 4d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt2,The following statement contains a magic number: var b = GetMatches(4f' 16f' 4d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt2,The following statement contains a magic number: var b = GetMatches(4f' 16f' 4d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt2,The following statement contains a magic number: var b = GetMatches(4f' 16f' 4d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt2,The following statement contains a magic number: Assert.IsTrue(a.TryCollapseWith(b' 1.48d' out var c));
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt2,The following statement contains a magic number: Assert.AreEqual(13.5d' c.TotalLength' 0.1);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldCollapseByQueryAt2,The following statement contains a magic number: Assert.AreEqual(13.5d' c.TotalLength' 0.1);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldIdentifyAsContainedWithinItself,The following statement contains a magic number: var a = GetMatches(0' 0' 120' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldIdentifyAsContainedWithinItself,The following statement contains a magic number: var a = GetMatches(0' 0' 120' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldIdentifyAsContainedWithinItself,The following statement contains a magic number: var a = GetMatches(0' 0' 120' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldIdentifyAsContainedWithinItself,The following statement contains a magic number: var b = GetMatches(10' 20' 10' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldIdentifyAsContainedWithinItself,The following statement contains a magic number: var b = GetMatches(10' 20' 10' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldIdentifyAsContainedWithinItself,The following statement contains a magic number: var b = GetMatches(10' 20' 10' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldIdentifyAsContainedWithinItself,The following statement contains a magic number: var b = GetMatches(10' 20' 10' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldIdentifyAsContainedWithinItself,The following statement contains a magic number: var b = GetMatches(10' 20' 10' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldIdentifyAsContainedWithinItself,The following statement contains a magic number: Assert.IsFalse(a.TryCollapseWith(b' 1.48d' out _));
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseByQueryAtAsGapIsTooBig,The following statement contains a magic number: var a = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseByQueryAtAsGapIsTooBig,The following statement contains a magic number: var a = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseByQueryAtAsGapIsTooBig,The following statement contains a magic number: var a = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseByQueryAtAsGapIsTooBig,The following statement contains a magic number: var a = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseByQueryAtAsGapIsTooBig,The following statement contains a magic number: var b = GetMatches(12f' 22f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseByQueryAtAsGapIsTooBig,The following statement contains a magic number: var b = GetMatches(12f' 22f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseByQueryAtAsGapIsTooBig,The following statement contains a magic number: var b = GetMatches(12f' 22f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseByQueryAtAsGapIsTooBig,The following statement contains a magic number: var b = GetMatches(12f' 22f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseByQueryAtAsGapIsTooBig,The following statement contains a magic number: var b = GetMatches(12f' 22f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseByQueryAtAsGapIsTooBig,The following statement contains a magic number: Assert.IsFalse(a.TryCollapseWith(b' 1.48d' out _));
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation2,The following statement contains a magic number: var a = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation2,The following statement contains a magic number: var a = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation2,The following statement contains a magic number: var a = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation2,The following statement contains a magic number: var a = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation2,The following statement contains a magic number: var b = GetMatches(0f' 25f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation2,The following statement contains a magic number: var b = GetMatches(0f' 25f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation2,The following statement contains a magic number: var b = GetMatches(0f' 25f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation2,The following statement contains a magic number: var b = GetMatches(0f' 25f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation2,The following statement contains a magic number: Assert.IsFalse(a.TryCollapseWith(b' 1.48f' out _));
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation,The following statement contains a magic number: var a = GetMatches(0f' 0f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation,The following statement contains a magic number: var a = GetMatches(0f' 0f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation,The following statement contains a magic number: var a = GetMatches(0f' 0f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation,The following statement contains a magic number: var b = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation,The following statement contains a magic number: var b = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation,The following statement contains a magic number: var b = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation,The following statement contains a magic number: var b = GetMatches(0f' 10f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchCorrespondsTo2DifferentTracksLocation,The following statement contains a magic number: Assert.IsFalse(a.TryCollapseWith(b' 1.48f' out _));
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchesSameTrackMultipleTimes,The following statement contains a magic number: var a = GetMatches(0f' 0f' 15d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchesSameTrackMultipleTimes,The following statement contains a magic number: var a = GetMatches(0f' 0f' 15d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchesSameTrackMultipleTimes,The following statement contains a magic number: var a = GetMatches(0f' 0f' 15d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchesSameTrackMultipleTimes,The following statement contains a magic number: var b = GetMatches(60f' 0f' 15d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchesSameTrackMultipleTimes,The following statement contains a magic number: var b = GetMatches(60f' 0f' 15d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchesSameTrackMultipleTimes,The following statement contains a magic number: var b = GetMatches(60f' 0f' 15d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchesSameTrackMultipleTimes,The following statement contains a magic number: var b = GetMatches(60f' 0f' 15d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotCollapseAsQueryMatchesSameTrackMultipleTimes,The following statement contains a magic number: Assert.IsFalse(a.TryCollapseWith(b' 1.48f' out _));
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotMergeWithTrackAtReversed,The following statement contains a magic number: var a = GetMatches(0f' 15f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotMergeWithTrackAtReversed,The following statement contains a magic number: var a = GetMatches(0f' 15f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotMergeWithTrackAtReversed,The following statement contains a magic number: var a = GetMatches(0f' 15f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotMergeWithTrackAtReversed,The following statement contains a magic number: var a = GetMatches(0f' 15f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotMergeWithTrackAtReversed,The following statement contains a magic number: var b = GetMatches(0f' 35f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotMergeWithTrackAtReversed,The following statement contains a magic number: var b = GetMatches(0f' 35f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotMergeWithTrackAtReversed,The following statement contains a magic number: var b = GetMatches(0f' 35f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotMergeWithTrackAtReversed,The following statement contains a magic number: var b = GetMatches(0f' 35f' 10d' 512f / 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,ShouldNotMergeWithTrackAtReversed,The following statement contains a magic number: Assert.IsFalse(b.TryCollapseWith(a' 1.48f' out _));
Magic Number,SoundFingerprinting.Tests.Unit.Query,MatchesTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\MatchesTest.cs,GetMatches,The following statement contains a magic number: const int hammingSimilarity = 100;
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var track = new TrackData("1"' "artist"' "title"' string.Empty' 0' 120' new ModelReference<uint>(1));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry3 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 2*1.48d' -10 + 2*1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry3 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 2*1.48d' -10 + 2*1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry3 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 2*1.48d' -10 + 2*1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry3 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 2*1.48d' -10 + 2*1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry3 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 2*1.48d' -10 + 2*1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry3 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 2*1.48d' -10 + 2*1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry3 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 2*1.48d' -10 + 2*1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry3 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 2*1.48d' -10 + 2*1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry3 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 2*1.48d' -10 + 2*1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: var entry3 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d + 2*1.48d' -10 + 2*1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: Assert.IsTrue(entry1.TryCollapse(entry2' 1.48' out var collapsed1));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: Assert.IsTrue(collapsed1.TryCollapse(entry3' 1.48' out var collapsed2));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: Assert.AreEqual(3 * 1.48' result.CoverageLength' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: Assert.AreEqual(3 * 1.48' result.CoverageLength' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: Assert.AreEqual(3 * 1.48' result.CoverageLength' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: Assert.AreEqual(3 * 1.48' result.QueryLength' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: Assert.AreEqual(3 * 1.48' result.QueryLength' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldCollapse,The following statement contains a magic number: Assert.AreEqual(3 * 1.48' result.QueryLength' 0.0001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var track1 = new TrackData("1"' "artist"' "title"' string.Empty' 0' 120' new ModelReference<uint>(1));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var track2 = new TrackData("1"' "artist"' "title"' string.Empty' 0' 120' new ModelReference<uint>(2));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var track2 = new TrackData("1"' "artist"' "title"' string.Empty' 0' 120' new ModelReference<uint>(2));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track1' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track1' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track1' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track1' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track1' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track1' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track2' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track2' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track2' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track2' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track2' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track2' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track2' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track2' 0d' 1.48d' 1.48d' 10d + 1.48d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTracksAreDifferent,The following statement contains a magic number: Assert.IsFalse(entry1.TryCollapse(entry2' 1.48' out _));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var track = new TrackData("1"' "artist"' "title"' string.Empty' 0' 120' new ModelReference<uint>(1));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 10d' -10' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 30d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 30d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 30d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 30d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 30d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 30d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 1.48d' 1.48d' 30d' -10 + 1.48' 0d' 100' 1.48d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldNotCollapseAsTheStretchBetweenMatchesIsTooLong,The following statement contains a magic number: Assert.IsFalse(entry1.TryCollapse(entry2' 1.48' out _));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var track = new TrackData("1"' "artist"' "title"' string.Empty' 0' 120' new ModelReference<uint>(1));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 12d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 12d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 12d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 12d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 12d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 12d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 12d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: entry1.TryCollapse(entry2' 1.48' out var collapsed);
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold,The following statement contains a magic number: Assert.AreEqual(5' collapsed.Entry.CoverageLength);
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var track = new TrackData("1"' "artist"' "title"' string.Empty' 0' 120' new ModelReference<uint>(1));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 14d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 14d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 14d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 14d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 14d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 14d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 14d' -10 + 2' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: entry1.TryCollapse(entry2' 1.48' out var collapsed);
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,IsCompletedAsTheMatchIsLongerThanTheThreshold2,The following statement contains a magic number: Assert.AreEqual(6' collapsed.Entry.CoverageLength);
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var track = new TrackData("1"' "artist"' "title"' string.Empty' 0' 120' new ModelReference<uint>(1));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry1 = new PendingResultEntry(new ResultEntry(track' 0d' 3d' 3d' 10d' -10' 0d' 100' 3d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 2.5d' 2.5d' 10.5d' -10 + 2.5' 0d' 100' 2.5d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 2.5d' 2.5d' 10.5d' -10 + 2.5' 0d' 100' 2.5d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 2.5d' 2.5d' 10.5d' -10 + 2.5' 0d' 100' 2.5d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 2.5d' 2.5d' 10.5d' -10 + 2.5' 0d' 100' 2.5d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 2.5d' 2.5d' 10.5d' -10 + 2.5' 0d' 100' 2.5d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 2.5d' 2.5d' 10.5d' -10 + 2.5' 0d' 100' 2.5d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: var entry2 = new PendingResultEntry(new ResultEntry(track' 0d' 2.5d' 2.5d' 10.5d' -10 + 2.5' 0d' 100' 2.5d' DateTime.Now));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: Assert.IsTrue(entry1.TryCollapse(entry2' 1.48' out var collapsed));
Magic Number,SoundFingerprinting.Tests.Unit.Query,PendingResultEntryTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\PendingResultEntryTest.cs,ShouldSwallowEntryWithinEntry,The following statement contains a magic number: Assert.AreEqual(3' collapsed.Entry.CoverageLength);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyOnlyOneMatch,The following statement contains a magic number: float[] match = TestUtilities.GenerateRandomFloatArray(10 * 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyOnlyOneMatch,The following statement contains a magic number: float[] match = TestUtilities.GenerateRandomFloatArray(10 * 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyOnlyOneMatch,The following statement contains a magic number: var hashes = await FingerprintCommandBuilder.Instance                                      .BuildFingerprintCommand()                                      .From(new AudioSamples(withJitter' "Queen"' 5512))                                      .UsingServices(audioService)                                      .Hash();
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyOnlyOneMatch,The following statement contains a magic number: modelService.Insert(new TrackInfo("123"' "Bohemian Rhapsody"' "Queen")' new Hashes(hashes' withJitter.Length / 5512f));
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyOnlyOneMatch,The following statement contains a magic number: var result = await QueryCommandBuilder.Instance                                      .BuildQueryCommand()                                      .From(new AudioSamples(withJitter' "cnn"' 5512))                                      .WithQueryConfig(config =>                                      {                                          config.AllowMultipleMatchesOfTheSameTrackInQuery = true;                                          return config;                                      })                                      .UsingServices(modelService' audioService)                                      .Query();
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleTracksInSameQuery,The following statement contains a magic number: float[] match = TestUtilities.GenerateRandomFloatArray(10 * 5512' 1);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleTracksInSameQuery,The following statement contains a magic number: float[] match = TestUtilities.GenerateRandomFloatArray(10 * 5512' 1);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleTracksInSameQuery,The following statement contains a magic number: var hashes = await FingerprintCommandBuilder.Instance                  .BuildFingerprintCommand()                  .From(new AudioSamples(match' "Queen"' 5512))                  .UsingServices(audioService)                  .Hash();
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleTracksInSameQuery,The following statement contains a magic number: modelService.Insert(new TrackInfo("123"' "Bohemian Rhapsody"' "Queen")' new Hashes(hashes' withJitter.Length / 5512f));
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleTracksInSameQuery,The following statement contains a magic number: var result = await QueryCommandBuilder.Instance                  .BuildQueryCommand()                  .From(new AudioSamples(withJitter' "cnn"' 5512))                  .WithQueryConfig(config =>                  {                      config.AllowMultipleMatchesOfTheSameTrackInQuery = true;                      return config;                  })                  .UsingServices(modelService' audioService)                  .Query();
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleTracksInSameQuery,The following statement contains a magic number: Assert.AreEqual(2' entries.Count);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleTracksInSameQuery,The following statement contains a magic number: Assert.AreEqual(15d' entries[0].QueryMatchStartsAt' 1f);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleTracksInSameQuery,The following statement contains a magic number: Assert.AreEqual(35d' entries[1].QueryMatchStartsAt' 1f);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleRegionsOfTheSameMatch,The following statement contains a magic number: float[] match = TestUtilities.GenerateRandomFloatArray(10 * 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleRegionsOfTheSameMatch,The following statement contains a magic number: float[] match = TestUtilities.GenerateRandomFloatArray(10 * 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleRegionsOfTheSameMatch,The following statement contains a magic number: var hashes = await FingerprintCommandBuilder.Instance                                      .BuildFingerprintCommand()                                      .From(new AudioSamples(withJitter' "Queen"' 5512))                                      .UsingServices(audioService)                                      .Hash();
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleRegionsOfTheSameMatch,The following statement contains a magic number: modelService.Insert(new TrackInfo("123"' "Bohemian Rhapsody"' "Queen")' new Hashes(hashes' withJitter.Length / 5512f));
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleRegionsOfTheSameMatch,The following statement contains a magic number: var result = await QueryCommandBuilder.Instance                  .BuildQueryCommand()                  .From(new AudioSamples(match' "cnn"' 5512))                  .WithQueryConfig(config =>                  {                      config.AllowMultipleMatchesOfTheSameTrackInQuery = true;                      return config;                  })                  .UsingServices(modelService' audioService)                  .Query();
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleRegionsOfTheSameMatch,The following statement contains a magic number: Assert.AreEqual(2' entries.Count);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleRegionsOfTheSameMatch,The following statement contains a magic number: Assert.AreEqual(15d' entries[0].TrackMatchStartsAt' 1f);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,ShouldIdentifyMultipleRegionsOfTheSameMatch,The following statement contains a magic number: Assert.AreEqual(35d' entries[1].TrackMatchStartsAt' 1f);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,AddJitter,The following statement contains a magic number: float[] before = TestUtilities.GenerateRandomFloatArray(15 * 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,AddJitter,The following statement contains a magic number: float[] before = TestUtilities.GenerateRandomFloatArray(15 * 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,AddJitter,The following statement contains a magic number: float[] between = TestUtilities.GenerateRandomFloatArray(10 * 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,AddJitter,The following statement contains a magic number: float[] between = TestUtilities.GenerateRandomFloatArray(10 * 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,AddJitter,The following statement contains a magic number: float[] after = TestUtilities.GenerateRandomFloatArray(15 * 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,AddJitter,The following statement contains a magic number: float[] after = TestUtilities.GenerateRandomFloatArray(15 * 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,AddJitter,The following statement contains a magic number: float[] total = new float[before.Length + between.Length + after.Length + match.Length * 2];
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryCommandTest.cs,AddJitter,The following statement contains a magic number: Buffer.BlockCopy(after' 0' total' sizeof(float) * (before.Length + 2 * match.Length + between.Length)'sizeof(float) * after.Length);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches0,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 3' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches0,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 3' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches0,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 3' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches0,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 3' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches0,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 3' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches0,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 3' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches0,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 3' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches0,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 3' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches0,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 3' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches1,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 4' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches1,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 4' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches1,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 4' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches1,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 4' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches1,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 4' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches1,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 4' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches1,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 4' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches1,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 4' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,QueryMathTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\QueryMathTest.cs,ShouldFilterExactMatches1,The following statement contains a magic number: bool result = QueryMath.IsCandidatePassingThresholdVotes(new[] { 1' 2' 3' 4' 5 }' new[] { 1' 2' 4' 7' 8 }' 3);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryShouldMatchOnlySelectedClusters,The following statement contains a magic number: int count = 10' foundWithClusters = 0' foundWithWrongClusters = 0' testWaitTime = 3000;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryShouldMatchOnlySelectedClusters,The following statement contains a magic number: int count = 10' foundWithClusters = 0' foundWithWrongClusters = 0' testWaitTime = 3000;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryShouldMatchOnlySelectedClusters,The following statement contains a magic number: var wrong = QueryCommandBuilder.Instance.BuildRealtimeQueryCommand()                                                .From(SimulateRealtimeQueryData(data' false' TimeSpan.FromMilliseconds))                                                .WithRealtimeQueryConfig(config =>                                                {                                                      config.ResultEntryFilter = new QueryMatchLengthFilter(15d);                                                      config.SuccessCallback = entry => Interlocked.Increment(ref foundWithWrongClusters);                                                      config.Clusters = new HashSet<string>(new[] {"CANADA"});                                                      return config;                                                })                                                .UsingServices(modelService)                                                .Query(cancellationTokenSource.Token);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryShouldMatchOnlySelectedClusters,The following statement contains a magic number: var right = QueryCommandBuilder.Instance.BuildRealtimeQueryCommand()                                  .From(SimulateRealtimeQueryData(data' false' TimeSpan.FromMilliseconds))                                  .WithRealtimeQueryConfig(config =>                                  {                                      config.ResultEntryFilter = new QueryMatchLengthFilter(15d);                                      config.SuccessCallback = entry => Interlocked.Increment(ref foundWithClusters);                                      config.Clusters = new HashSet<string>(new[] {"USA"});                                      return config;                                  })                                  .UsingServices(modelService)                                  .Query(cancellationTokenSource.Token);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryStrideShouldBeUsed,The following statement contains a magic number: int minSize = 8192 + 2048;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryStrideShouldBeUsed,The following statement contains a magic number: int minSize = 8192 + 2048;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryStrideShouldBeUsed,The following statement contains a magic number: int staticStride = 1024;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryStrideShouldBeUsed,The following statement contains a magic number: double permittedGap = (double) minSize / 5512;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryStrideShouldBeUsed,The following statement contains a magic number: int count = 10' found = 0' didNotPassThreshold = 0' fingerprintsCount = 0;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryStrideShouldBeUsed,The following statement contains a magic number: int testWaitTime = 3000;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryStrideShouldBeUsed,The following statement contains a magic number: Assert.AreEqual((double)count * minSize / 5512' duration' 0.00001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,RealtimeQueryStrideShouldBeUsed,The following statement contains a magic number: Assert.AreEqual((double)count * minSize / 5512' duration' 0.00001);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: int count = 10' found = 0' didNotPassThreshold = 0' thresholdVotes = 4' testWaitTime = 5000' fingerprintsCount = 0;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: int count = 10' found = 0' didNotPassThreshold = 0' thresholdVotes = 4' testWaitTime = 5000' fingerprintsCount = 0;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: int count = 10' found = 0' didNotPassThreshold = 0' thresholdVotes = 4' testWaitTime = 5000' fingerprintsCount = 0;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: var realtimeConfig = new RealtimeQueryConfiguration(thresholdVotes' new QueryMatchLengthFilter(10)'                   entry =>                  {                      Console.WriteLine($"Found Match Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.QueryLength:0.000} Track Starts At {entry.TrackStartsAt:0.000}");                      Interlocked.Increment(ref found);                  }'                  entry =>                  {                      Console.WriteLine($"Entry didn't pass filter' Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.CoverageLength:0.000}");                      Interlocked.Increment(ref didNotPassThreshold);                  }'                  fingerprints => Interlocked.Add(ref fingerprintsCount' fingerprints.HashedFingerprints.Count)'                  (error' _) => throw error'                  () => throw new Exception("Downtime callback called")'                  Enumerable.Empty<TimedHashes>()'                   new IncrementalRandomStride(256' 512)'                   1.48d'                  0d'                  (int)(10240d/5512) * 1000'                  new HashSet<string>());
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: var realtimeConfig = new RealtimeQueryConfiguration(thresholdVotes' new QueryMatchLengthFilter(10)'                   entry =>                  {                      Console.WriteLine($"Found Match Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.QueryLength:0.000} Track Starts At {entry.TrackStartsAt:0.000}");                      Interlocked.Increment(ref found);                  }'                  entry =>                  {                      Console.WriteLine($"Entry didn't pass filter' Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.CoverageLength:0.000}");                      Interlocked.Increment(ref didNotPassThreshold);                  }'                  fingerprints => Interlocked.Add(ref fingerprintsCount' fingerprints.HashedFingerprints.Count)'                  (error' _) => throw error'                  () => throw new Exception("Downtime callback called")'                  Enumerable.Empty<TimedHashes>()'                   new IncrementalRandomStride(256' 512)'                   1.48d'                  0d'                  (int)(10240d/5512) * 1000'                  new HashSet<string>());
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: var realtimeConfig = new RealtimeQueryConfiguration(thresholdVotes' new QueryMatchLengthFilter(10)'                   entry =>                  {                      Console.WriteLine($"Found Match Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.QueryLength:0.000} Track Starts At {entry.TrackStartsAt:0.000}");                      Interlocked.Increment(ref found);                  }'                  entry =>                  {                      Console.WriteLine($"Entry didn't pass filter' Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.CoverageLength:0.000}");                      Interlocked.Increment(ref didNotPassThreshold);                  }'                  fingerprints => Interlocked.Add(ref fingerprintsCount' fingerprints.HashedFingerprints.Count)'                  (error' _) => throw error'                  () => throw new Exception("Downtime callback called")'                  Enumerable.Empty<TimedHashes>()'                   new IncrementalRandomStride(256' 512)'                   1.48d'                  0d'                  (int)(10240d/5512) * 1000'                  new HashSet<string>());
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: var realtimeConfig = new RealtimeQueryConfiguration(thresholdVotes' new QueryMatchLengthFilter(10)'                   entry =>                  {                      Console.WriteLine($"Found Match Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.QueryLength:0.000} Track Starts At {entry.TrackStartsAt:0.000}");                      Interlocked.Increment(ref found);                  }'                  entry =>                  {                      Console.WriteLine($"Entry didn't pass filter' Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.CoverageLength:0.000}");                      Interlocked.Increment(ref didNotPassThreshold);                  }'                  fingerprints => Interlocked.Add(ref fingerprintsCount' fingerprints.HashedFingerprints.Count)'                  (error' _) => throw error'                  () => throw new Exception("Downtime callback called")'                  Enumerable.Empty<TimedHashes>()'                   new IncrementalRandomStride(256' 512)'                   1.48d'                  0d'                  (int)(10240d/5512) * 1000'                  new HashSet<string>());
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: var realtimeConfig = new RealtimeQueryConfiguration(thresholdVotes' new QueryMatchLengthFilter(10)'                   entry =>                  {                      Console.WriteLine($"Found Match Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.QueryLength:0.000} Track Starts At {entry.TrackStartsAt:0.000}");                      Interlocked.Increment(ref found);                  }'                  entry =>                  {                      Console.WriteLine($"Entry didn't pass filter' Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.CoverageLength:0.000}");                      Interlocked.Increment(ref didNotPassThreshold);                  }'                  fingerprints => Interlocked.Add(ref fingerprintsCount' fingerprints.HashedFingerprints.Count)'                  (error' _) => throw error'                  () => throw new Exception("Downtime callback called")'                  Enumerable.Empty<TimedHashes>()'                   new IncrementalRandomStride(256' 512)'                   1.48d'                  0d'                  (int)(10240d/5512) * 1000'                  new HashSet<string>());
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: var realtimeConfig = new RealtimeQueryConfiguration(thresholdVotes' new QueryMatchLengthFilter(10)'                   entry =>                  {                      Console.WriteLine($"Found Match Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.QueryLength:0.000} Track Starts At {entry.TrackStartsAt:0.000}");                      Interlocked.Increment(ref found);                  }'                  entry =>                  {                      Console.WriteLine($"Entry didn't pass filter' Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.CoverageLength:0.000}");                      Interlocked.Increment(ref didNotPassThreshold);                  }'                  fingerprints => Interlocked.Add(ref fingerprintsCount' fingerprints.HashedFingerprints.Count)'                  (error' _) => throw error'                  () => throw new Exception("Downtime callback called")'                  Enumerable.Empty<TimedHashes>()'                   new IncrementalRandomStride(256' 512)'                   1.48d'                  0d'                  (int)(10240d/5512) * 1000'                  new HashSet<string>());
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: var realtimeConfig = new RealtimeQueryConfiguration(thresholdVotes' new QueryMatchLengthFilter(10)'                   entry =>                  {                      Console.WriteLine($"Found Match Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.QueryLength:0.000} Track Starts At {entry.TrackStartsAt:0.000}");                      Interlocked.Increment(ref found);                  }'                  entry =>                  {                      Console.WriteLine($"Entry didn't pass filter' Starts At {entry.TrackMatchStartsAt:0.000}' Match Length {entry.CoverageLength:0.000}' Query Length {entry.CoverageLength:0.000}");                      Interlocked.Increment(ref didNotPassThreshold);                  }'                  fingerprints => Interlocked.Add(ref fingerprintsCount' fingerprints.HashedFingerprints.Count)'                  (error' _) => throw error'                  () => throw new Exception("Downtime callback called")'                  Enumerable.Empty<TimedHashes>()'                   new IncrementalRandomStride(256' 512)'                   1.48d'                  0d'                  (int)(10240d/5512) * 1000'                  new HashSet<string>());
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: Assert.AreEqual((count + 10) * 10240 / 5512d' processed' 0.2);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: Assert.AreEqual((count + 10) * 10240 / 5512d' processed' 0.2);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: Assert.AreEqual((count + 10) * 10240 / 5512d' processed' 0.2);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldQueryInRealtime,The following statement contains a magic number: Assert.AreEqual((count + 10) * 10240 / 5512d' processed' 0.2);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: int count = 10' found = 0' didNotPassThreshold = 0' thresholdVotes = 4' testWaitTime = 40000' fingerprintsCount = 0' errored = 0;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: int count = 10' found = 0' didNotPassThreshold = 0' thresholdVotes = 4' testWaitTime = 40000' fingerprintsCount = 0' errored = 0;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: int count = 10' found = 0' didNotPassThreshold = 0' thresholdVotes = 4' testWaitTime = 40000' fingerprintsCount = 0' errored = 0;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: double processed = await new RealtimeQueryCommand(FingerprintCommandBuilder.Instance' new FaultyQueryService(count' QueryFingerprintService.Instance))                   .From(collection)                   .WithRealtimeQueryConfig(config =>                   {                       config.SuccessCallback = entry =>                       {                           Interlocked.Increment(ref found);                           resultEntries.Add(entry);                       };                         config.QueryFingerprintsCallback = fingerprints => Interlocked.Increment(ref fingerprintsCount);                       config.DidNotPassFilterCallback = entry => Interlocked.Increment(ref didNotPassThreshold);                       config.ErrorCallback = (exception' timedHashes) =>                       {                           Interlocked.Increment(ref errored);                           offlineStorage.Save(timedHashes);                       };                                              config.ResultEntryFilter = new QueryMatchLengthFilter(10);                       config.RestoredAfterErrorCallback = () => restoreCalled[0] = true;                       config.PermittedGap = 1.48d;                       config.ThresholdVotes = thresholdVotes;                       config.DowntimeHashes = offlineStorage;                       config.DowntimeCapturePeriod = 3d;                       return config;                   })                   .UsingServices(modelService)                   .Query(cancellationTokenSource.Token);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: double processed = await new RealtimeQueryCommand(FingerprintCommandBuilder.Instance' new FaultyQueryService(count' QueryFingerprintService.Instance))                   .From(collection)                   .WithRealtimeQueryConfig(config =>                   {                       config.SuccessCallback = entry =>                       {                           Interlocked.Increment(ref found);                           resultEntries.Add(entry);                       };                         config.QueryFingerprintsCallback = fingerprints => Interlocked.Increment(ref fingerprintsCount);                       config.DidNotPassFilterCallback = entry => Interlocked.Increment(ref didNotPassThreshold);                       config.ErrorCallback = (exception' timedHashes) =>                       {                           Interlocked.Increment(ref errored);                           offlineStorage.Save(timedHashes);                       };                                              config.ResultEntryFilter = new QueryMatchLengthFilter(10);                       config.RestoredAfterErrorCallback = () => restoreCalled[0] = true;                       config.PermittedGap = 1.48d;                       config.ThresholdVotes = thresholdVotes;                       config.DowntimeHashes = offlineStorage;                       config.DowntimeCapturePeriod = 3d;                       return config;                   })                   .UsingServices(modelService)                   .Query(cancellationTokenSource.Token);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: double processed = await new RealtimeQueryCommand(FingerprintCommandBuilder.Instance' new FaultyQueryService(count' QueryFingerprintService.Instance))                   .From(collection)                   .WithRealtimeQueryConfig(config =>                   {                       config.SuccessCallback = entry =>                       {                           Interlocked.Increment(ref found);                           resultEntries.Add(entry);                       };                         config.QueryFingerprintsCallback = fingerprints => Interlocked.Increment(ref fingerprintsCount);                       config.DidNotPassFilterCallback = entry => Interlocked.Increment(ref didNotPassThreshold);                       config.ErrorCallback = (exception' timedHashes) =>                       {                           Interlocked.Increment(ref errored);                           offlineStorage.Save(timedHashes);                       };                                              config.ResultEntryFilter = new QueryMatchLengthFilter(10);                       config.RestoredAfterErrorCallback = () => restoreCalled[0] = true;                       config.PermittedGap = 1.48d;                       config.ThresholdVotes = thresholdVotes;                       config.DowntimeHashes = offlineStorage;                       config.DowntimeCapturePeriod = 3d;                       return config;                   })                   .UsingServices(modelService)                   .Query(cancellationTokenSource.Token);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: Assert.AreEqual(20' fingerprintsCount);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: double jitterLength = 5 * 10240 / 5512d;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: double jitterLength = 5 * 10240 / 5512d;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: double jitterLength = 5 * 10240 / 5512d;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: Assert.AreEqual(0d' started.AddSeconds(jitterLength + resultEntry.TrackMatchStartsAt).Subtract(resultEntry.MatchedAt).TotalSeconds' 2d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: Assert.AreEqual((count + 10) * 10240 / 5512d' processed' 0.2);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: Assert.AreEqual((count + 10) * 10240 / 5512d' processed' 0.2);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: Assert.AreEqual((count + 10) * 10240 / 5512d' processed' 0.2);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,ShouldNotLoseAudioSamplesInCaseIfExceptionIsThrown,The following statement contains a magic number: Assert.AreEqual((count + 10) * 10240 / 5512d' processed' 0.2);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,HashesShouldMatchExactlyWhenAggregated,The following statement contains a magic number: int count = 20' testWaitTime = 40000;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,HashesShouldMatchExactlyWhenAggregated,The following statement contains a magic number: int count = 20' testWaitTime = 40000;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,HashesShouldMatchExactlyWhenAggregated,The following statement contains a magic number: var hashes = await FingerprintCommandBuilder.Instance                  .BuildFingerprintCommand()                  .From(concatenated)                  .WithFingerprintConfig(config =>                  {                      config.Stride = new IncrementalStaticStride(512);                      return config;                  })                  .UsingServices(audioService)                  .Hash();
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,HashesShouldMatchExactlyWhenAggregated,The following statement contains a magic number: await QueryCommandBuilder.Instance.BuildRealtimeQueryCommand()                  .From(collection)                  .WithRealtimeQueryConfig(config =>                  {                      config.QueryFingerprintsCallback += timedHashes => list.Add(timedHashes);                      config.Stride = new IncrementalStaticStride(512);                      return config;                  })                  .UsingServices(modelService)                  .Query(cancellationTokenSource.Token);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,HashesShouldMatchExactlyWhenAggregated,The following statement contains a magic number: var merged = TimedHashes.Aggregate(list' 20d).ToList();
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,HashesShouldMatchExactlyWhenAggregated,The following statement contains a magic number: Assert.AreEqual(2' merged.Count);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,HashesShouldMatchExactlyWhenAggregated,The following statement contains a magic number: Assert.AreEqual(zipped.a.StartsAt' zipped.b.StartsAt' 0.5d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,QueryingWithAggregatedHashesShouldResultInTheSameMatches,The following statement contains a magic number: int count = 20' testWaitTime = 5000;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,QueryingWithAggregatedHashesShouldResultInTheSameMatches,The following statement contains a magic number: int count = 20' testWaitTime = 5000;
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,QueryingWithAggregatedHashesShouldResultInTheSameMatches,The following statement contains a magic number: await QueryCommandBuilder.Instance.BuildRealtimeQueryCommand()                  .From(collection)                  .WithRealtimeQueryConfig(config =>                  {                      config.QueryFingerprintsCallback += timedHashes => fingerprints.Add(timedHashes);                      config.SuccessCallback = entry => entries.Add(entry);                      config.ResultEntryFilter = new CoverageLengthEntryFilter(0.8d);                      return config;                  })                  .UsingServices(modelService)                  .Query(cancellationTokenSource.Token);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,QueryingWithAggregatedHashesShouldResultInTheSameMatches,The following statement contains a magic number: var aggregated = TimedHashes.Aggregate(fingerprints' 60d).ToList();
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,Concatenate,The following statement contains a magic number: return new AudioSamples(concatenated' "Queen"' 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,Jitter,The following statement contains a magic number: i < 5
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,GetMinSizeOfAudioSamples,The following statement contains a magic number: var samples = TestUtilities.GenerateRandomFloatArray(10240' seed);
Magic Number,SoundFingerprinting.Tests.Unit.Query,RealtimeQueryCommandTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\RealtimeQueryCommandTest.cs,GetMinSizeOfAudioSamples,The following statement contains a magic number: return new AudioSamples(samples' "cnn"' 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var a = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(1))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var a = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(1))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var a = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(1))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var a = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(1))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var a = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(1))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var a = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(1))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var a = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(1))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var a = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(1))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var b = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(2))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var b = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(2))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var b = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(2))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var b = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(2))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var b = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(2))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var b = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(2))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var b = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(2))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var b = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(2))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldNotMergeAsTracksDoNotMatch,The following statement contains a magic number: var b = new ResultEntry(new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(2))' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var data = new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(1));
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 7' 7' 13d' -13d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 7' 7' 13d' -13d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 7' 7' 13d' -13d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 7' 7' 13d' -13d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 7' 7' 13d' -13d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 7' 7' 13d' -13d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 7' 7' 13d' -13d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: Assert.AreEqual(15' merged.CoverageLength);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: Assert.AreEqual(15' merged.DiscreteCoverageLength);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: Assert.AreEqual(18' merged.QueryLength);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: Assert.AreEqual(5d' merged.TrackMatchStartsAt);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly1,The following statement contains a magic number: Assert.AreEqual(-5d' merged.TrackStartsAt);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var data = new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(1));
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 10' 5d' -5d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 10' 30d' -30d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 10' 30d' -30d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 10' 30d' -30d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 10' 30d' -30d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 10' 30d' -30d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 10' 30d' -30d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 10' 30d' -30d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: Assert.AreEqual(20' merged.CoverageLength);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: Assert.AreEqual(20' merged.DiscreteCoverageLength);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: Assert.AreEqual(30' merged.QueryLength);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: Assert.AreEqual(5d' merged.TrackMatchStartsAt);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly2,The following statement contains a magic number: Assert.AreEqual(-5d' merged.TrackStartsAt);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var data = new TrackData("123"' "artist"' "title"' "album"' 0' 120d' new ModelReference<int>(1));
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 15' 15d' -15d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 15' 15d' -15d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 15' 15d' -15d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 15' 15d' -15d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 15' 15d' -15d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 15' 15d' -15d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var a = new ResultEntry(data' 0d' 10' 15' 15d' -15d' 0.9d' 120' 15d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 5' 20d' -20d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 5' 20d' -20d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 5' 20d' -20d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 5' 20d' -20d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 5' 20d' -20d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 5' 20d' -20d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: var b = new ResultEntry(data' 0d' 10' 5' 20d' -20d' 0.9d' 120' 10d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: Assert.AreEqual(15' merged.CoverageLength);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: Assert.AreEqual(15' merged.DiscreteCoverageLength);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: Assert.AreEqual(15' merged.QueryLength);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: Assert.AreEqual(15d' merged.TrackMatchStartsAt);
Magic Number,SoundFingerprinting.Tests.Unit.Query,ResultEntryExtensionsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\ResultEntryExtensionsTest.cs,ShouldMergeCorrectly3,The following statement contains a magic number: Assert.AreEqual(-15d' merged.TrackStartsAt);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldNotFailWithNullObjectPass,The following statement contains a magic number: var aggregator = new StatefulRealtimeResultEntryAggregator(new QueryMatchLengthFilter(5d)' 2d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldNotFailWithNullObjectPass,The following statement contains a magic number: var aggregator = new StatefulRealtimeResultEntryAggregator(new QueryMatchLengthFilter(5d)' 2d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: var aggregator = new StatefulRealtimeResultEntryAggregator(new QueryMatchLengthFilter(10d)' 2d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: var aggregator = new StatefulRealtimeResultEntryAggregator(new QueryMatchLengthFilter(10d)' 2d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: var first = aggregator.Consume(new[] { new ResultEntry(GetTrack()' 0d' 2d' 2d' 10d' -10d' .95d' 120' 5d' DateTime.Now) }' 5d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: var first = aggregator.Consume(new[] { new ResultEntry(GetTrack()' 0d' 2d' 2d' 10d' -10d' .95d' 120' 5d' DateTime.Now) }' 5d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: var first = aggregator.Consume(new[] { new ResultEntry(GetTrack()' 0d' 2d' 2d' 10d' -10d' .95d' 120' 5d' DateTime.Now) }' 5d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: var first = aggregator.Consume(new[] { new ResultEntry(GetTrack()' 0d' 2d' 2d' 10d' -10d' .95d' 120' 5d' DateTime.Now) }' 5d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: var first = aggregator.Consume(new[] { new ResultEntry(GetTrack()' 0d' 2d' 2d' 10d' -10d' .95d' 120' 5d' DateTime.Now) }' 5d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: var first = aggregator.Consume(new[] { new ResultEntry(GetTrack()' 0d' 2d' 2d' 10d' -10d' .95d' 120' 5d' DateTime.Now) }' 5d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: var first = aggregator.Consume(new[] { new ResultEntry(GetTrack()' 0d' 2d' 2d' 10d' -10d' .95d' 120' 5d' DateTime.Now) }' 5d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: var first = aggregator.Consume(new[] { new ResultEntry(GetTrack()' 0d' 2d' 2d' 10d' -10d' .95d' 120' 5d' DateTime.Now) }' 5d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: var second = aggregator.Consume(new ResultEntry[0]' 0.2d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: i < 10
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldWaitAsGapPermits,The following statement contains a magic number: var third = aggregator.Consume(new ResultEntry[0]' 0.2d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: var aggregator = new StatefulRealtimeResultEntryAggregator(new QueryMatchLengthFilter(5d)' 1.48d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: var aggregator = new StatefulRealtimeResultEntryAggregator(new QueryMatchLengthFilter(5d)' 1.48d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: var entry = new ResultEntry(GetTrack()' 0d' 1.48d' 1.48d' 10d + i*1.48d' -10d -i*1.48d' 0.01233' 0' 1.48d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: var entry = new ResultEntry(GetTrack()' 0d' 1.48d' 1.48d' 10d + i*1.48d' -10d -i*1.48d' 0.01233' 0' 1.48d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: var entry = new ResultEntry(GetTrack()' 0d' 1.48d' 1.48d' 10d + i*1.48d' -10d -i*1.48d' 0.01233' 0' 1.48d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: var entry = new ResultEntry(GetTrack()' 0d' 1.48d' 1.48d' 10d + i*1.48d' -10d -i*1.48d' 0.01233' 0' 1.48d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: var entry = new ResultEntry(GetTrack()' 0d' 1.48d' 1.48d' 10d + i*1.48d' -10d -i*1.48d' 0.01233' 0' 1.48d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: var entry = new ResultEntry(GetTrack()' 0d' 1.48d' 1.48d' 10d + i*1.48d' -10d -i*1.48d' 0.01233' 0' 1.48d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: var entry = new ResultEntry(GetTrack()' 0d' 1.48d' 1.48d' 10d + i*1.48d' -10d -i*1.48d' 0.01233' 0' 1.48d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: var entry = new ResultEntry(GetTrack()' 0d' 1.48d' 1.48d' 10d + i*1.48d' -10d -i*1.48d' 0.01233' 0' 1.48d' DateTime.Now);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: var aggregated = aggregator.Consume(new[] { entry }' 1.48d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: i < 10
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: Assert.AreEqual(2' success.Count);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: Assert.IsTrue(success[0].CoverageLength > 5d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: Assert.IsTrue(success[1].CoverageLength > 5d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,ShouldMergeResults,The following statement contains a magic number: Assert.IsTrue(filtered[0].CoverageLength < 5d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,SimulateEmptyResults,The following statement contains a magic number: var aggregated = aggregator.Consume(new ResultEntry[0]' 1.48d);
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,SimulateEmptyResults,The following statement contains a magic number: i < 10
Magic Number,SoundFingerprinting.Tests.Unit.Query,StatefulRealtimeResultEntryAggregatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Query\StatefulRealtimeResultEntryAggregatorTest.cs,GetTrack,The following statement contains a magic number: return new TrackData("1234"' "Queen"' "Bohemian Rhapsody"' string.Empty' 0' 120d' new ModelReference<int>(1));
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: float[] expected = { -13' -8' 7' 5' 2' -1' -0.5f' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: float[] expected = { -13' -8' 7' 5' 2' -1' -0.5f' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: float[] expected = { -13' -8' 7' 5' 2' -1' -0.5f' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: float[] expected = { -13' -8' 7' 5' 2' -1' -0.5f' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: float[] expected = { -13' -8' 7' 5' 2' -1' -0.5f' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: float[] expected = { -13' -8' 7' 5' 2' -1' -0.5f' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: int[] expectedIndexes = { 7' 4' 5' 6' 2' 1' 3' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: int[] expectedIndexes = { 7' 4' 5' 6' 2' 1' 3' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: int[] expectedIndexes = { 7' 4' 5' 6' 2' 1' 3' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: int[] expectedIndexes = { 7' 4' 5' 6' 2' 1' 3' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: int[] expectedIndexes = { 7' 4' 5' 6' 2' 1' 3' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: int[] expectedIndexes = { 7' 4' 5' 6' 2' 1' 3' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: float[] arrayToSort = { 0' -1' 2' -0.5f' -8' 7' 5' -13 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: float[] arrayToSort = { 0' -1' 2' -0.5f' -8' 7' 5' -13 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: float[] arrayToSort = { 0' -1' 2' -0.5f' -8' 7' 5' -13 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: float[] arrayToSort = { 0' -1' 2' -0.5f' -8' 7' 5' -13 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: float[] arrayToSort = { 0' -1' 2' -0.5f' -8' 7' 5' -13 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: float[] arrayToSort = { 0' -1' 2' -0.5f' -8' 7' 5' -13 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,AbsComparatorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\AbsComparatorTest.cs,ArraysIsSortedCorrectlyDescending,The following statement contains a magic number: int[] indexes = Enumerable.Range(0' 8).ToArray();
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: float[][] array = { new float[] { 1' 2' 3 }' new float[] { 4' 5' 6 }' new float[] { 7' 8' 9 } };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: float[][] array = { new float[] { 1' 2' 3 }' new float[] { 4' 5' 6 }' new float[] { 7' 8' 9 } };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: float[][] array = { new float[] { 1' 2' 3 }' new float[] { 4' 5' 6 }' new float[] { 7' 8' 9 } };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: float[][] array = { new float[] { 1' 2' 3 }' new float[] { 4' 5' 6 }' new float[] { 7' 8' 9 } };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: float[][] array = { new float[] { 1' 2' 3 }' new float[] { 4' 5' 6 }' new float[] { 7' 8' 9 } };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: float[][] array = { new float[] { 1' 2' 3 }' new float[] { 4' 5' 6 }' new float[] { 7' 8' 9 } };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: float[][] array = { new float[] { 1' 2' 3 }' new float[] { 4' 5' 6 }' new float[] { 7' 8' 9 } };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: float[][] array = { new float[] { 1' 2' 3 }' new float[] { 4' 5' 6 }' new float[] { 7' 8' 9 } };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: AssertArraysAreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' concatenated);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: AssertArraysAreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' concatenated);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: AssertArraysAreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' concatenated);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: AssertArraysAreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' concatenated);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: AssertArraysAreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' concatenated);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: AssertArraysAreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' concatenated);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: AssertArraysAreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' concatenated);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,TestArrayIsConcatenatedCorrectly,The following statement contains a magic number: AssertArraysAreEqual(new float[] { 1' 2' 3' 4' 5' 6' 7' 8' 9 }' concatenated);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,ConcatenateDoubleDimensionalArray,The following statement contains a magic number: Buffer.BlockCopy(array[row]' 0' concatenated' row * array[row].Length * 4' array[row].Length * 4);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,ArrayUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\ArrayUtilsTest.cs,ConcatenateDoubleDimensionalArray,The following statement contains a magic number: Buffer.BlockCopy(array[row]' 0' concatenated' row * array[row].Length * 4' array[row].Length * 4);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FastFingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FastFingerprintDescriptorTest.cs,ShouldCreateExactlyTheSameFingerprints,The following statement contains a magic number: int runs = 5;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FastFingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FastFingerprintDescriptorTest.cs,ShouldRunCorrectlyForSpecificUseCase,The following statement contains a magic number: int sequenceNumber = 334;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FastFingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FastFingerprintDescriptorTest.cs,ShouldRunCorrectlyForSpecificUseCase,The following statement contains a magic number: int start = sequenceNumber * 1536;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FastFingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FastFingerprintDescriptorTest.cs,ShouldRunCorrectlyForSpecificUseCase,The following statement contains a magic number: float[] troubledPart = new float[8192 + 2048];
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FastFingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FastFingerprintDescriptorTest.cs,ShouldRunCorrectlyForSpecificUseCase,The following statement contains a magic number: float[] troubledPart = new float[8192 + 2048];
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FastFingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FastFingerprintDescriptorTest.cs,ShouldRunCorrectlyForSpecificUseCase,The following statement contains a magic number: Array.Copy(samples' start' troubledPart' 0' 8192 + 2048);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FastFingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FastFingerprintDescriptorTest.cs,ShouldRunCorrectlyForSpecificUseCase,The following statement contains a magic number: Array.Copy(samples' start' troubledPart' 0' 8192 + 2048);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FastFingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FastFingerprintDescriptorTest.cs,ShouldRunCorrectlyForSpecificUseCase,The following statement contains a magic number: var audioSamples = new AudioSamples(troubledPart' "test"' 5512);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FastFingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FastFingerprintDescriptorTest.cs,ShouldRunCorrectlyForSpecificUseCase,The following statement contains a magic number: int runs = 10;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorBenchmark.cs,ShouldFindTopWaveletsFaster,The following statement contains a magic number: RunTest(GetPoolOfFingerprints(1000' 128' 32)' fingerprintDescriptor);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorBenchmark.cs,ShouldFindTopWaveletsFaster,The following statement contains a magic number: RunTest(GetPoolOfFingerprints(1000' 128' 32)' fingerprintDescriptor);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorBenchmark.cs,ShouldFindTopWaveletsFaster,The following statement contains a magic number: RunTest(GetPoolOfFingerprints(1000' 128' 32)' fingerprintDescriptor);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorBenchmark.cs,ShouldFindTopWaveletsFaster,The following statement contains a magic number: long a = BenchMark(10000' fingerprintDescriptor);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorBenchmark.cs,ShouldFindTopWaveletsFaster,The following statement contains a magic number: RunTest(GetPoolOfFingerprints(1000' 128' 32)' fastFingerprintDescriptor);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorBenchmark.cs,ShouldFindTopWaveletsFaster,The following statement contains a magic number: RunTest(GetPoolOfFingerprints(1000' 128' 32)' fastFingerprintDescriptor);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorBenchmark.cs,ShouldFindTopWaveletsFaster,The following statement contains a magic number: RunTest(GetPoolOfFingerprints(1000' 128' 32)' fastFingerprintDescriptor);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorBenchmark.cs,ShouldFindTopWaveletsFaster,The following statement contains a magic number: long b = BenchMark(10000' fastFingerprintDescriptor);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorBenchmark.cs,BenchMark,The following statement contains a magic number: var pool = GetPoolOfFingerprints(runs' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorBenchmark.cs,BenchMark,The following statement contains a magic number: var pool = GetPoolOfFingerprints(runs' 128' 32);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorBenchmark,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorBenchmark.cs,RunTest,The following statement contains a magic number: const int topWavelets = 200;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletsText,The following statement contains a magic number: float[] frames = TestUtilities.GenerateRandomFloatArray(128 * 32);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletsText,The following statement contains a magic number: float[] frames = TestUtilities.GenerateRandomFloatArray(128 * 32);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletsText,The following statement contains a magic number: bool[] actual = fingerprintDescriptor.ExtractTopWavelets(frames' TopWavelets' RangeUtils.GetRange(128 * 32)).ToBools();
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletsText,The following statement contains a magic number: bool[] actual = fingerprintDescriptor.ExtractTopWavelets(frames' TopWavelets' RangeUtils.GetRange(128 * 32)).ToBools();
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: float[] frames = { 5' 6' 1' 8' 9' 2' 0' -4' 6' -10' 7' 3' 1' 0' 2' 5' -11' 0' 5' 13' 7' 6' 3' 2 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletWorksCorrectly,The following statement contains a magic number: bool[] encodedFingerprint = fingerprintDescriptor.ExtractTopWavelets(frames' 5' RangeUtils.GetRange(frames.Length)).ToBools();
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,EncodeFingerprintWorksAsExpected,The following statement contains a magic number: float[] framesSpectrumPowers = { 2' 4' 8' 9' 1' 3' 5 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,EncodeFingerprintWorksAsExpected,The following statement contains a magic number: float[] framesSpectrumPowers = { 2' 4' 8' 9' 1' 3' 5 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,EncodeFingerprintWorksAsExpected,The following statement contains a magic number: float[] framesSpectrumPowers = { 2' 4' 8' 9' 1' 3' 5 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,EncodeFingerprintWorksAsExpected,The following statement contains a magic number: float[] framesSpectrumPowers = { 2' 4' 8' 9' 1' 3' 5 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,EncodeFingerprintWorksAsExpected,The following statement contains a magic number: float[] framesSpectrumPowers = { 2' 4' 8' 9' 1' 3' 5 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,EncodeFingerprintWorksAsExpected,The following statement contains a magic number: float[] framesSpectrumPowers = { 2' 4' 8' 9' 1' 3' 5 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,EncodeFingerprintWorksAsExpected,The following statement contains a magic number: ushort[] indexes = { 3' 2' 6' 1' 5' 0' 4 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,EncodeFingerprintWorksAsExpected,The following statement contains a magic number: ushort[] indexes = { 3' 2' 6' 1' 5' 0' 4 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,EncodeFingerprintWorksAsExpected,The following statement contains a magic number: ushort[] indexes = { 3' 2' 6' 1' 5' 0' 4 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,EncodeFingerprintWorksAsExpected,The following statement contains a magic number: ushort[] indexes = { 3' 2' 6' 1' 5' 0' 4 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,EncodeFingerprintWorksAsExpected,The following statement contains a magic number: ushort[] indexes = { 3' 2' 6' 1' 5' 0' 4 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,EncodeFingerprintWorksAsExpected,The following statement contains a magic number: bool[] encodedFingerprint = fingerprintEncoder.EncodeFingerprint(framesSpectrumPowers' indexes' 2).ToBools();
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletsTested,The following statement contains a magic number: bool[] result = new bool[frames.Length * 2];
Magic Number,SoundFingerprinting.Tests.Unit.Utils,FingerprintDescriptorTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\FingerprintDescriptorTest.cs,ExtractTopWaveletsTested,The following statement contains a magic number: result[key * 2] = true;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldProperlyTestAccuracy,The following statement contains a magic number: float b = a + 0.0000001f;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldGenerateSameSignatureDuringMultipleRuns,The following statement contains a magic number: const int count = 4096;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldGenerateSameSignatureDuringMultipleRuns,The following statement contains a magic number: const int topWavelets = 200;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldGenerateSameSignatureDuringMultipleRuns,The following statement contains a magic number: run < 10000
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldFindTop200Element,The following statement contains a magic number: const int count = 4096;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldFindTop200Element,The following statement contains a magic number: const int topWavelets = 200;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldFindTop200Element,The following statement contains a magic number: run < 10
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldProperlySelectCorrectKthOrderStatistic,The following statement contains a magic number: float[] values = { 3' 4' 5' 1' 6' 7' 8' 9' 2' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldProperlySelectCorrectKthOrderStatistic,The following statement contains a magic number: float[] values = { 3' 4' 5' 1' 6' 7' 8' 9' 2' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldProperlySelectCorrectKthOrderStatistic,The following statement contains a magic number: float[] values = { 3' 4' 5' 1' 6' 7' 8' 9' 2' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldProperlySelectCorrectKthOrderStatistic,The following statement contains a magic number: float[] values = { 3' 4' 5' 1' 6' 7' 8' 9' 2' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldProperlySelectCorrectKthOrderStatistic,The following statement contains a magic number: float[] values = { 3' 4' 5' 1' 6' 7' 8' 9' 2' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldProperlySelectCorrectKthOrderStatistic,The following statement contains a magic number: float[] values = { 3' 4' 5' 1' 6' 7' 8' 9' 2' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldProperlySelectCorrectKthOrderStatistic,The following statement contains a magic number: float[] values = { 3' 4' 5' 1' 6' 7' 8' 9' 2' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldProperlySelectCorrectKthOrderStatistic,The following statement contains a magic number: float[] values = { 3' 4' 5' 1' 6' 7' 8' 9' 2' 0 };
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldProperlySelectCorrectKthOrderStatistic,The following statement contains a magic number: int value = algorithm.Find(i' values' Enumerable.Range(0' 10).Select(k => (ushort)k).ToArray()' 0' values.Length - 1);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,ShouldProperlySelectCorrectKthOrderStatistic,The following statement contains a magic number: i < 10
Magic Number,SoundFingerprinting.Tests.Unit.Utils,QuickSelectAlgorithmTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\QuickSelectAlgorithmTest.cs,GenerateRandomArray,The following statement contains a magic number: rand[i] *= random.NextDouble() > 0.5 ? -1 : 1;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,SubFingerprintGroupingCounterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\SubFingerprintGroupingCounterTest.cs,ShouldGroupAndCountCorrectly,The following statement contains a magic number: var tablesCount = 25;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,SubFingerprintGroupingCounterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\SubFingerprintGroupingCounterTest.cs,ShouldGroupAndCountCorrectly,The following statement contains a magic number: var count = 100;
Magic Number,SoundFingerprinting.Tests.Unit.Utils,SubFingerprintGroupingCounterTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\SubFingerprintGroupingCounterTest.cs,ShouldGroupAndCountCorrectly,The following statement contains a magic number: var groupingResult = SubFingerprintGroupingCounter.GroupByAndCount(lists' 5).ToList();
Magic Number,SoundFingerprinting.Tests.Unit.Utils,TestRunnerUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\TestRunnerUtilsTest.cs,ShouldParseInts,The following statement contains a magic number: CollectionAssert.AreEqual(new List<int> { 1' 2' 3' 4' 5 }' result);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,TestRunnerUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\TestRunnerUtilsTest.cs,ShouldParseInts,The following statement contains a magic number: CollectionAssert.AreEqual(new List<int> { 1' 2' 3' 4' 5 }' result);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,TestRunnerUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\TestRunnerUtilsTest.cs,ShouldParseInts,The following statement contains a magic number: CollectionAssert.AreEqual(new List<int> { 1' 2' 3' 4' 5 }' result);
Magic Number,SoundFingerprinting.Tests.Unit.Utils,TestRunnerUtilsTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Utils\TestRunnerUtilsTest.cs,ShouldParseInts,The following statement contains a magic number: CollectionAssert.AreEqual(new List<int> { 1' 2' 3' 4' 5 }' result);
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,StandardDecompositionTest,The following statement contains a magic number: const int rows = 128;
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,StandardDecompositionTest,The following statement contains a magic number: const int cols = 32;
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,ShouldDecomposeAsExpected,The following statement contains a magic number: var floats = new[] {8f' 4' 1' 3};
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,ShouldDecomposeAsExpected,The following statement contains a magic number: var floats = new[] {8f' 4' 1' 3};
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,ShouldDecomposeAsExpected,The following statement contains a magic number: var floats = new[] {8f' 4' 1' 3};
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,ShouldDecomposeAsExpected,The following statement contains a magic number: wd.DecomposeImageInPlace(floats' 1' 4' 2d);
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,ShouldDecomposeAsExpected,The following statement contains a magic number: wd.DecomposeImageInPlace(floats' 1' 4' 2d);
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,ShouldDecomposeAsExpected,The following statement contains a magic number: CollectionAssert.AreEqual(new[] {4' 2' 2' -1}' floats);
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,ShouldDecomposeAsExpected,The following statement contains a magic number: CollectionAssert.AreEqual(new[] {4' 2' 2' -1}' floats);
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,ShouldDecomposeAsExpected,The following statement contains a magic number: CollectionAssert.AreEqual(new[] {4' 2' 2' -1}' floats);
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,AssertAreSame,The following statement contains a magic number: Assert.AreEqual(frames[i][j]' concatenated[(i * cols) + j]' 0.5);
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,DecomposeArray,The following statement contains a magic number: h /= 2;
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,DecomposeArray,The following statement contains a magic number: temp[i] = array[2 * i] + array[(2 * i) + 1];
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,DecomposeArray,The following statement contains a magic number: temp[i] = array[2 * i] + array[(2 * i) + 1];
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,DecomposeArray,The following statement contains a magic number: temp[h + i] = array[2 * i] - array[(2 * i) + 1];
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,DecomposeArray,The following statement contains a magic number: temp[h + i] = array[2 * i] - array[(2 * i) + 1];
Magic Number,SoundFingerprinting.Tests.Unit.Wavelets,StandardHaarWaveletDecompositionTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Wavelets\StandardHaarWaveletDecompositionTest.cs,DecomposeArray,The following statement contains a magic number: Buffer.BlockCopy(temp' 0' array' 0' sizeof(float) * (h * 2));
Magic Number,SoundFingerprinting.Tests.Unit.Windows,HanningWindowTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Windows\HanningWindowTest.cs,WindowInPlaceTest,The following statement contains a magic number: const int length = 128 * 64;
Magic Number,SoundFingerprinting.Tests.Unit.Windows,HanningWindowTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Windows\HanningWindowTest.cs,WindowInPlaceTest,The following statement contains a magic number: const int length = 128 * 64;
Magic Number,SoundFingerprinting.Tests.Unit.Windows,HanningWindowTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Windows\HanningWindowTest.cs,WindowInPlaceTest,The following statement contains a magic number: Assert.AreEqual(true' (outerSpace[i] - outerSpaceCopy[i]) < 0.00001);
Magic Number,SoundFingerprinting.Tests.Unit.Windows,HanningWindowTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Windows\HanningWindowTest.cs,WeightByHanningWindow,The following statement contains a magic number: outerSpace[i] *= (float)(0.5 * (1 - System.Math.Cos(System.Math.PI * 2 * i / (outerSpace.Length - 1))));
Magic Number,SoundFingerprinting.Tests.Unit.Windows,HanningWindowTest,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Tests\Unit\Windows\HanningWindowTest.cs,WeightByHanningWindow,The following statement contains a magic number: outerSpace[i] *= (float)(0.5 * (1 - System.Math.Cos(System.Math.PI * 2 * i / (outerSpace.Length - 1))));
